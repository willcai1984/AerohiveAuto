<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify that Arbitrator AP selection by AMRP</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		Configure many ap with idp profile in one Hive

		Test Procedure:

		1. Configure an IDP profile with default settings.
		2. Bind it to interface wifi0 on all aps
		3. Save configuration the reboot all aps, check the Arbitrator info on ap and
		HM
	</description>
	<numofap>2</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="1.1">
			<desc>
				Configure an IDP profile with default settings: ap1
			</desc>
			<telnet target="ap1">
				-v "capwap client enable"
				-v "capwap client server name ${pub.hm2.ip}"
				-v "security-object idp"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object idp"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "hive ${hive.name} wlan-idp mitigation-mode automatic"
				-v "hive ${hive.name} wlan-idp in-net-ap"
				-v "interface eth0 manage telnet"
				-v "interface eth0 manage snmp"
				-v "interface wifi0 radio channel 1"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				Configure an IDP profile with default settings: ap1
			</desc>
			<telnet target="ap1">
				-v "security wlan-idp profile rogue"
				-v "security wlan-idp profile rogue ap-policy"
				-v "security wlan-idp profile rogue ap-policy ssid"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name}"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name} encryption"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name} encryption wep"
				-v "security wlan-idp profile rogue ap-detection connected"
				-v "interface wifi0 wlan-idp profile rogue"
				-v "interface wifi1 wlan-idp profile rogue"
				-v "user-profile 1 qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "_debug dcd idp"
				-v "_debug dcd idp_da"
				-v "_debug dcd idp_detect"
				-v "clear log all"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				Configure an IDP profile with default settings: ap2
			</desc>
			<telnet target="ap2">
				-v "capwap client enable"
				-v "capwap client server name ${pub.hm2.ip}"
				-v "security-object idp"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object idp"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "hive ${hive.name} wlan-idp mitigation-mode automatic"
				-v "hive ${hive.name} wlan-idp in-net-ap"
				-v "interface eth0 manage telnet"
				-v "interface eth0 manage snmp"
				-v "interface wifi0 radio channel 2"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="1.4">
			<desc>
				Configure an IDP profile with default settings: ap2
			</desc>
			<telnet target="ap2">
				-v "security wlan-idp profile rogue"
				-v "security wlan-idp profile rogue ap-policy"
				-v "security wlan-idp profile rogue ap-policy ssid"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name}"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name} encryption"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name} encryption wep"
				-v "security wlan-idp profile rogue ap-detection connected"
				-v "interface wifi0 wlan-idp profile rogue"
				-v "interface wifi1 wlan-idp profile rogue"
				-v "user-profile 1 qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "_debug dcd idp"
				-v "_debug dcd idp_da"
				-v "_debug dcd idp_detect"
				-v "clear log all"
			</telnet>
		</step>

		<step no="2" delay="30">
			<desc>
				check the detected ap is arbitrator ap
			</desc>
			<log-file>ap1_idp.log</log-file>
			<console target="ap1">
				-v "show wlan-idp mitigate"
			</console>
		</step>

		<step no="2">
			<desc>
				check the detected ap is arbitrator ap
			</desc>
			<log-file>ap2_idp.log</log-file>
			<console target="ap2">
				-v "show wlan-idp mitigate"
			</console>
		</step>

		<step no="3">
			<desc>
				check the detected ap is arbitrator ap
			</desc>
			<console target="ap1">
				-v "reboot"
			</console>
		</step>

		<step no="3.1" delay="30">
			<desc>
				check the detected ap is arbitrator ap
			</desc>
			<console target="ap2">
				-v "reboot"
			</console>
		</step>

		<step no="3.2" type="loop-check" loop-max-times="3" loop-interval="20">
			<desc>
				check the detected ap is arbitrator ap
			</desc>
			<log-file>step3.2_get_Arbitrator_AP_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show wlan-idp mitigate"
			</console>
			<log-match>-c -i "${ap1.mgt0.ip}(myself)"</log-match>
		</step>

		<step no="3.3" type="loop-check" loop-max-times="3" loop-interval="20">
			<desc>
				check the detected ap is arbitrator ap
			</desc>
			<log-file>step3.3_get_Arbitrator_AP_${loop_check.idx}.log</log-file>
			<console target="ap2">
				-v "show wlan-idp mitigate"
			</console>
			<log-match>-c -i "${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="3.4">
			<desc>
				check DA
			</desc>
			<log-file>step3.4_check_DA.log</log-file>
			<console target="ap1">
				-v "show amrp interface eth0"
			</console>
			<log-match>-c -i "state *: DA"</log-match>
		</step>

		<step no="3.5">
			<desc>
				check BDA
			</desc>
			<log-file>step3.5_check_BDA.log</log-file>
			<console target="ap2">
				-v "show amrp interface eth0"
			</console>
			<log-match>-c -i "state *: BDA"</log-match>
		</step>
	</stage>
</testcase>