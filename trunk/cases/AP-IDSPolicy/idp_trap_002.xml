<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify start/stop message from HM</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		Configure many ap with idp profile in one Hive and HM

		Test Procedure:

		1. Configure an IDP profile with default settings
		2. Bind it to interface wifi0 on all aps, and using semi/manual mode
		3. Put one rogue ap which can be detected and meet the condition
		4. HM choose one detector to do mitigation, result 1
		5. HM stops the mitigation, result 2
	</description>
	<numofap>3</numofap>
	<numofsta>1</numofsta>
	<tbtype>windows</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />

	<stage>
		<if>"${ap1.wifi1.existed}"=="true"</if>
		<include prefix="start_selenium_server" file="subs/start_selenium_server.xml" args="${sta1.mif.ip}, ${job_selenium_dir}, ${job_selenium_jar}, ${job_selenium_workload}" />

		<step no="1">
			<desc>
				Configure many ap with idp profile in one Hive and HM
			</desc>
			<telnet target="ap1">
				-v "capwap client enable"
				-v "capwap client server name ${pub.hm1.ip}"
				-v "security-object 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object 1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "hive ${hive.name} wlan-idp mitigation-mode manual"
				-v "interface eth0 manage telnet"
				-v "interface eth0 manage snmp"
				-v "interface wifi0 radio channel 1"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				Configure many ap with idp profile in one Hive and HM
			</desc>
			<telnet target="ap1">
				-v "security wlan-idp profile rogue"
				-v "security wlan-idp profile rogue ap-policy"
				-v "security wlan-idp profile rogue ap-policy ssid"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name}"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name} encryption"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name} encryption wep"
				-v "security wlan-idp profile rogue ap-detection connected"
				-v "interface wifi0 wlan-idp profile rogue"
				-v "interface wifi1 wlan-idp profile rogue"
				-v "user-profile 1 qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "_debug capwap idp"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				get ap name
			</desc>
			<log-file>get_ap1_name.log</log-file>
			<console target="ap1">
				-v "show interface"
			</console>
		</step>

		<step no="1.3">
			<desc>
				get ap name
			</desc>
			<setvar name="ap1name">
				getbyrexp.py -f ${log.dir}/get_ap1_name.log -p "(.*?)#show" -t str
			</setvar>
		</step>

		<step no="1.4">
			<desc>
				Configure many ap with idp profile in one Hive and HM
			</desc>
			<telnet target="ap2">
				-v "capwap client enable"
				-v "capwap client server name ${pub.hm1.ip}"
				-v "security-object 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object 1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "hive ${hive.name} wlan-idp mitigation-mode manual"
				-v "interface eth0 manage telnet"
				-v "interface eth0 manage snmp"
				-v "interface wifi0 radio channel 1"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="1.5">
			<desc>
				Configure many ap with idp profile in one Hive and HM
			</desc>
			<telnet target="ap2">
				-v "security wlan-idp profile rogue"
				-v "security wlan-idp profile rogue ap-policy"
				-v "security wlan-idp profile rogue ap-policy ssid"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name}"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name} encryption"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name} encryption wep"
				-v "security wlan-idp profile rogue ap-detection connected"
				-v "interface wifi0 wlan-idp profile rogue"
				-v "interface wifi1 wlan-idp profile rogue"
				-v "user-profile 1 qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "_debug capwap idp"
			</telnet>
		</step>

		<step no="1.6">
			<desc>
				get ap name
			</desc>
			<log-file>get_ap2_name.log</log-file>
			<console target="ap2">
				-v "show interface"
			</console>
		</step>

		<step no="1.7">
			<desc>
				get ap name
			</desc>
			<setvar name="ap2name">
				getbyrexp.py -f ${log.dir}/get_ap2_name.log -p "(.*?)#show" -t str
			</setvar>
		</step>


		<step no="2">
			<desc>
				3. Put one rogue ap which can be detected and meet the condition, result 1
			</desc>
			<telnet target="ap3">
				-v "ssid ${ssid.name}_rogue"
				-v "interface eth0 manage telnet"
				-v "interface wifi0 ssid ${ssid.name}_rogue"
				-v "interface wifi0 radio channel 1"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				show interface
			</desc>
			<log-file>show_ap3wifi0mac.log</log-file>
			<telnet target="ap3">
				-v "show interface"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				get ap3 wifi0 mac address
			</desc>
			<setvar name="ap3wifi0mac">
				getbyrexp.py -f ${log.dir}/show_ap3wifi0mac.log -p "Wifi0\s+(.*?:.*?:.*?)\s+access" -t str
			</setvar>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="3" delay="150">
			<desc>
				4. HM chooses one report ap to do mitigation, result 2
			</desc>
			<log-file>one_ap_do_mitigate.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/hm/mitigation.py -r http://${sta1.mif.ip}:4444/wd/hub -t ff -f ${log.dir}/${log.file} -l debug --parameters ap.ssid=${ssid.name}_rogue ap.mac=${ap3wifi0mac} ap.reporting_hostname=${ap1name}
			</script>
		</step>

		<include prefix="save_ap_log1" file="subs/save_ap_log.xml" args="show logging buffered, ap2, show_logging_mitigate.log" />

		<step no="4">
			<desc>
				get ap1 bssid
			</desc>
			<setvar name="ap3wifi0mac3">
				echo "${ap3wifi0mac}" | sed 's/://g'
			</setvar>
		</step>

		<step no="4.1">
			<desc>
				log-match mitigate
			</desc>
			<log-file>show_logging_mitigate.log</log-file>
			<log-match>-c -i "exec wlan-idp mitigate rogue-ap ${ap3wifi0mac3}"</log-match>
		</step>

		<step no="4.2">
			<desc>
				clear log
			</desc>
			<telnet target="ap1">
				-v "clear log"
			</telnet>
		</step>

		<step no="5">
			<desc>
				5. HM chooses one detector ap to do stop mitigation, result 3
			</desc>
			<log-file>one_ap_stop_mitigate.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/hm/stop_mitigation.py -r http://${sta1.mif.ip}:4444/wd/hub -t ff -f ${log.dir}/${log.file} -l debug --parameters ap.ssid=${ssid.name}_rogue ap.mac=${ap3wifi0mac} ap.reporting_hostname=${ap1name}
			</script>
		</step>

		<include prefix="save_ap_log2" file="subs/save_ap_log.xml" args="show logging buffered, ap2, show_logging_mitigate1.log" />

		<step no="6">
			<desc>
				log-match mitigate
			</desc>
			<log-file>show_logging_mitigate1.log</log-file>
			<log-match>-c -i "no exec wlan-idp mitigate rogue-ap ${ap3wifi0mac3}"</log-match>
		</step>
	</stage>

	<post-process>
		<stage>
			<include prefix="stop_selenium_server" file="subs/stop_selenium_server.xml" args="${sta1.mif.ip}, ${job_selenium_workload}" />
		</stage>
		<include file="include/default_post_process.xml" />

	</post-process>
</testcase>