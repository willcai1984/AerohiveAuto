<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify detector ap's selection about Channel</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Configure many ap with idp profile in one Hive

		Test Procedure:
		1. Configure an IDP profile with default settings.
		2. Bind it to interface wifi0 on all aps
		3. Put one rogue ap which can be detected and meet the auto mitigation
		condition
		4. Only one detector ap is the same channel as the rogue ap's, result 1
	</description>
	<numofap>3</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.ssid" value="${ssid.name}_rogue" />

	<stage>
		<step no="1.1">
			<desc>
				Configure an IDP profile with default settings: ap1
			</desc>
			<telnet target="ap1">
				-v "capwap client enable"
				-v "capwap client server name ${pub.hm2.ip}"
				-v "security-object idp"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object idp"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "hive ${hive.name} wlan-idp mitigation-mode automatic"
				-v "hive ${hive.name} wlan-idp in-net-ap"
				-v "interface eth0 manage telnet"
				-v "interface eth0 manage snmp"
				-v "interface wifi0 radio channel 1"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				Configure an IDP profile with default settings: ap1
			</desc>
			<telnet target="ap1">
				-v "security wlan-idp profile rogue"
				-v "security wlan-idp profile rogue ap-policy"
				-v "security wlan-idp profile rogue ap-policy ssid"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name}"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name} encryption"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name} encryption wep"
				-v "security wlan-idp profile rogue ap-detection connected"
				-v "interface wifi0 wlan-idp profile rogue"
				-v "interface wifi1 wlan-idp profile rogue"
				-v "user-profile 1 qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "_debug dcd idp"
				-v "_debug dcd idp_da"
				-v "_debug dcd idp_detect"
				-v "clear log all"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				Configure an IDP profile with default settings: ap2
			</desc>
			<telnet target="ap2">
				-v "capwap client enable"
				-v "capwap client server name ${pub.hm2.ip}"
				-v "security-object idp"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object idp"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "hive ${hive.name} wlan-idp mitigation-mode automatic"
				-v "hive ${hive.name} wlan-idp in-net-ap"
				-v "interface eth0 manage telnet"
				-v "interface eth0 manage snmp"
				-v "interface wifi0 radio channel 2"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="1.4">
			<desc>
				Configure an IDP profile with default settings: ap2
			</desc>
			<telnet target="ap2">
				-v "security wlan-idp profile rogue"
				-v "security wlan-idp profile rogue ap-policy"
				-v "security wlan-idp profile rogue ap-policy ssid"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name}"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name} encryption"
				-v "security wlan-idp profile rogue ap-policy ssid entry ${ssid.name} encryption wep"
				-v "security wlan-idp profile rogue ap-detection connected"
				-v "interface wifi0 wlan-idp profile rogue"
				-v "interface wifi1 wlan-idp profile rogue"
				-v "user-profile 1 qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "_debug dcd idp"
				-v "_debug dcd idp_da"
				-v "_debug dcd idp_detect"
				-v "clear log all"
			</telnet>
		</step>

		<step no="1.5">
			<desc>
				Configure many ap with idp profile in one Hive: ap3-rogue ap
			</desc>
			<telnet target="ap3">
				-v "ssid ${ssid.name}_rogue"
				-v "interface wifi0 radio channel 1"
				-v "interface wifi0 ssid ${ssid.name}_rogue"
				-v "clear log all"
			</telnet>
		</step>

		<step no="2.1">
			<desc>show wifi0's ip of ap3</desc>
			<log-file>ap3_info.log</log-file>
			<telnet target="ap3" timeout="80">
				-v "show interface wifi0.1"
			</telnet>
		</step>

		<step no="2.2">
			<desc>Get ap3's mac</desc>
			<setvar name="ap3.wifi0.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap3_info.log -i wifi0.1 -o aero -m -width
			</setvar>
		</step>

		<step no="3">
			<desc>
				check the detected ap is arbitrator ap
			</desc>
			<log-file>step3_get_Arbitrator_AP.log</log-file>
			<telnet target="ap1">
				-v "show wlan-idp mitigate"
			</telnet>
		</step>

		<step no="4.1">
			<desc>Get arbitrator ap's ip</desc>
			<setvar name="arbi.ip">
				${bin.dir}/getbyrexp.py -p "Arbitrator AP:\s+(\d+.\d+.\d+.\d+)" -f ${log.dir}/step3_get_Arbitrator_AP.log -t str
			</setvar>
		</step>

		<step no="4.2">
			<desc>Get arbitrator ap's ip</desc>
			<setvar name="arbi.ap">
				if [ "${arbi.ip}" = "${ap1.mgt0.ip}" ]
				then
				echo "ap1"
				elif [ "${arbi.ip}" = "${ap2.mgt0.ip}" ]
				then
				echo "ap2"
				else
				exit 1
				fi
			</setvar>
		</step>

		<step no="5">
			<desc>
				-show wlan-idp mitigate status on detected ap
			</desc>
			<log-file>step5_check_Arbitrator_AP.log</log-file>
			<telnet target="${arbi.ap}">
				-v "show wlan-idp mitigate"
			</telnet>
			<log-match>-i "Arbitrator AP: *${arbi.ip}(myself)"</log-match>
			<log-match>-i "${ap3.wifi0.mac}"</log-match>
		</step>

		<step no="6" delay="30" type="loop-check" loop-max-times="20" loop-interval="20">
			<desc>
				-Show the selected rogue ap status
			</desc>
			<log-file>step6_check_rogue_ap_${loop_check.idx}.log</log-file>
			<telnet target="${arbi.ap}">
				-v "show wlan-idp mitigate ${ap3.wifi0.mac}"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "wifi0\s*\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
			<log-match>-i "In-net: *Yes"</log-match>
		</step>

		<include prefix="7.1" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="7.2">
			<desc>
				config the laptop to apply the ssid profile,then start to associate
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}_rogue\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<step no="7.3" delay="10" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>check if the client was associated successfully</desc>
			<log-file>step7_same.vlan.ap.ping.0.4_wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-i "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="8.1" delay="10">
			<desc>ifconfig to show the ip add</desc>
			<log-file>step8_ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="8.2">
			<desc>Get laptop1's mac</desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step8_ifconfig.log -i ${sta1.tif.name} -m -width
			</setvar>
		</step>

		<step no="9" delay="60">
			<desc>
				-The detector ap1 which has the same channel with rogue ap will do the mitigation.
			</desc>
			<log-file>step9_show_mitigation_info.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "select AP ${ap1.mgt0.ip} radio wifi0 as mitigator to rogue AP ${ap3.wifi0.mac}"</log-match>
			<log-match>-c -i "\[dcd_idp_detector\]: start mitigating rogue AP ${ap3.wifi0.mac} on interface wifi0"</log-match>
			<log-match>-c -i "\[dcd_idp_detector\]: recv action for rogue AP ${ap3.wifi0.mac} on radio wifi0 from arbitrator AP ${ap1.mgt0.ip}"</log-match>
			<log-match>-c -i "\[dcd_idp\]: IDP AP innet update: ${ap3.wifi0.mac} in-net"</log-match>
		</step>

		<step no="10">
			<desc>
				-Show the selected rogue ap status
			</desc>
			<log-file>step10_check_rogue_ap.log</log-file>
			<telnet target="ap1">
				-v "show wlan-idp mitigate ${ap3.wifi0.mac}"
			</telnet>
			<log-match>-i "In-net: *Yes"</log-match>
		</step>
	</stage>
</testcase>