<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify the basic behavior of background scan when all the conditions are met.</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		1. One ssid is configured and bound to interface wifi0
		2. Disable console timeout.
		3. All other settings are kept as default.

		Test Procedure:
		1. Login to the AP thru serial port or SSH.
		2. Enable background scan debug of interface wifi0.1
		#_kdebug wifi-driver wifi0.1 scan
		3. Show debug messages on console
		#debug console
		4. Make sure there is no client associated to the ssid.
		5. Check the bgscan debug info (console output) to verify:
		a. Every full scan begins with ch1 (also check the current channel, if it
		happens to be ch1, change the channel and repeat the test)
		b. After a full scan begins, it scans every second.
		c. It scans every channel only for a while (10ms?)
		d. It scans all the available channel one by one till the last channel (also
		check the current channel, if it happens to be the last available
		channel, change the channel and repeat the test)
		e. The interval of 2 set of full scan is the same as that configured in the
		radio profile, 10 min by default.
		6. Use wifi0 in
		backhaul mode and wifi1 in access mode then repeat the
		test.
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="1">
			<desc>
				1. One ssid is configured and bound to interface wifi0
			</desc>
			<telnet target="ap1">
				-v "capwap client enable"
				-v "radio profile xxx"
				-v "radio profile xxx phymode 11ng"
				-v "radio profile xxx scan access interval 1"
				-v "interface wifi0 radio profile xxx"
				-v "radio profile yyy"
				-v "radio profile yyy phymode 11na"
				-v "radio profile yyy scan access interval 1"
				-v "interface wifi1 radio profile yyy"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="2">
			<desc>
				#_kdebug wifi-driver wifi0.1 scan on ap1
			</desc>
			<telnet target="ap1">
				-v "clear log all"
				-v "_kdebug wifi-driver wifi0.1 scan"
			</telnet>
		</step>

		<step no="3" delay="120">
			<desc>
				Make sure there is no client associated to the ssid
			</desc>
			<log-file>step3_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-e "station count: 0"</log-match>
		</step>

		<include prefix="4" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step4_show_logging_buffered.log" />

		<step no="5">
			<log-file>step4_show_logging_buffered.log</log-file>
			<log-match loop-values="1,2,3,4,5,7,8,9,10,11">-e "scan:Tx Self-CTS (next foreign channel ${loop.v}, dur:28000)"</log-match>
		</step>

		<step no="6">
			<desc>
				Use wifi0 in backhaul mode and wifi1 in access mode then repeat the test
			</desc>
			<telnet target="ap1">
				-v "no interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 mode backhaul"
				-v "interface wifi1 mode access"
				-v "interface wifi1 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="7">
			<desc>
				#_kdebug wifi-driver wifi1.1 scan on ap1
			</desc>
			<telnet target="ap1">
				-v "clear log all"
				-v "no _kdebug wifi-driver wifi0.1 scan"
				-v "_kdebug wifi-driver wifi1.1 scan"
			</telnet>
		</step>

		<step no="8" delay="120">
			<desc>
				Make sure there is no client associated to the ssid
			</desc>
			<log-file>step8_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-e "station count: 0"</log-match>
		</step>

		<include prefix="9" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step9_show_logging_buffered.log" />

		<step no="10">
			<log-file>step9_show_logging_buffered.log</log-file>
			<log-match loop-values="36,40,44,48,149,153,157,161,165">-e "scan:Tx Self-CTS (next foreign channel ${loop.v}, dur:28000)"</log-match>
		</step>
	</stage>
</testcase>