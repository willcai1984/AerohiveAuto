<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Auth is required after Link-down occurs Platform Dependence SR2024</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Auth is host based and multiple domain, 802.1X enabled in the port,
		security-object &lt;security-object name&gt;
		security-object &lt;security-object name&gt; security aaa radius-
		server primary &lt;ip address of radius server&gt; shared-secret
		&lt;share-key&gt;
		security-object &lt;security-object name&gt; security aaa radius-
		server accounting primary &lt;ip address of radius server&gt;
		shared-secret &lt;share-key&gt;
		security-object &lt;security-object name&gt; security protocol-
		suite 802.1x
		security-object &lt;security-object name&gt; security auth-mode
		host-based multiple-domain
		interface &lt;ethx/y&gt; switchport mode trunk
		interface &lt;ethx/y&gt; security-object &lt;security-object name&gt;
		vlan 10
		vlan 20
		vlan 30
		vlan 40
		vlan 50
		Port configured VLAN 10,
		Radius server response user1 return VLAN 20, user2 return VLAN 30, phone_user1
		return VLAN40, phone_user2 return VLAN50
		Radius users configure(free radius)
		a. Return vlan id directly
		user1 User-Password := &lt;password&gt;
		Tunnel-Type = 13,
		Tunnel-Medium-Type = 6,
		Tunnel-Private-Group-ID = 20
		user2 User-Password := &lt;password&gt;
		Tunnel-Type = 13,
		Tunnel-Medium-Type = 6,
		Tunnel-Private-Group-ID = 30
		phone_user1 User-Password := &lt;password&gt;
		Tunnel-Type = 13,
		Tunnel-Medium-Type = 6,
		Tunnel-Private-Group-ID = 40,
		Cisco-AVPair = "device-traffic-class=voice"

		phone_user2 User-Password := &lt;password&gt;
		Tunnel-Type = 13,
		Tunnel-Medium-Type = 6,
		Tunnel-Private-Group-ID = 50,
		Cisco-AVPair = "device-traffic-class=voice"

		b. Return upid
		user1 User-Password := &lt;password&gt;
		Tunnel-Type = 10,
		Tunnel-Medium-Type = 1,
		Tunnel-Private-Group-ID = 20
		user2 User-Password := &lt;password&gt;
		Tunnel-Type = 10,
		Tunnel-Medium-Type = 1,
		Tunnel-Private-Group-ID = 30
		phone_user1 User-Password := &lt;password&gt;
		Tunnel-Type = 10,
		Tunnel-Medium-Type = 1,
		Tunnel-Private-Group-ID = 40,
		Cisco-AVPair = "device-traffic-class=voice"

		phone_user2 User-Password := &lt;password&gt;
		Tunnel-Type = 10,
		Tunnel-Medium-Type = 1,
		Tunnel-Private-Group-ID = 50,
		Cisco-AVPair = "device-traffic-class=voice"
		In this case, we need configure user profile in switch, the clis is:
		user-profile upid20 qos-policy def-user-qos vlan-id 20
		attribute 20
		user-profile upid30 qos-policy def-user-qos vlan-id 30
		attribute 30
		user-profile upid40 qos-policy def-user-qos vlan-id 40
		attribute 40
		user-profile upid50 qos-policy def-user-qos vlan-id 50
		attribute 50
		IP Phone and PC1 have authenticated and have access

		Test Procedure:
		1. Plug out and then plug in the cable between switch and ip phone, check port access, result1
		2. PC1 and IP phone do auth, check port access, result2
		3. Admin down and up the port, check port access, result3
		4. PC1 and IP phone do auth check port access, result 4
	</description>
	<numofcvg>0</numofcvg>
	<numofbr>1</numofbr>
	<tbtype>linux</tbtype>

	<property name="br.route.netmask" value="255.255.255.0" />
	<property name="acct1.vlan" value="${br1.vpc1.vlan}" />
	<property name="incorrect_attribute_value" value="100" />

	<stage>
		<include prefix="add.account1" file="subs/ldap_add.xml" args="${job.sid}-aerohive, aerohive" obj-args="acct1" />

		<step no="pre_step">
			<desc>configure mgt0.1 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "vlan ${br1.vpc1.vlan}"
				-v "interface vlan ${br1.vpc1.vlan}"
				-v "interface vlan${br1.vpc1.vlan} ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options netmask ${br.route.netmask}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server enable"
			</telnet>
		</step>

		<step no="1">
			<desc>
				1. Set one security-object with radius-server
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "security-object lan1"
				-v "security-object lan1 security protocol-suite 802.1x"
				-v "security-object lan1 security aaa radius primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
			</telnet>
		</step>

		<step no="2">
			<desc>
				2. Set one user-profile and define the attribute x,
				3. Set the eth1 mode as bridge-access and bind the attribute to it
				4. Bind the security-object to the eth1.
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface ${br1.br.lan.int1} switchport user-profile-attribute ${incorrect_attribute_value}"
				-v "interface ${br1.br.lan.int1} security-object lan1"
				-v "_debug auth all"
				-v "clear log all"
			</telnet>
		</step>

		<step no="3">
			<desc>
				-ifconfig to show the mac info
			</desc>
			<log-file>step3_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="60">
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
		</step>

		<step no="3.1a">
			<desc>get raw mac of vpc1</desc>
			<setvar name="br1.vpc1.tif.mac1">
				echo $(${bin.dir}/getbyrexp.py -p "HWaddr ([\da-fA-F:]+)" -f ${log.dir}/step3_ifconfig_vpc1_.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="3.1b">
			<desc>get mac of br1.vpc1</desc>
			<setvar name="br1.vpc1.tif.mac">
				echo $(echo $(echo ${br1.vpc1.tif.mac1} | cut -d : -f1)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f2,3)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f4,5)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f6))
			</setvar>
		</step>

		<step no="3.2">
			<desc>
				vpc1 ping mgt0.1
			</desc>
			<log-file>step3.2_ping_log.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${br1.br.mgt0.1.ip} -c 4"
			</ssh>
			<log-match>-n -c -i "from ${br1.br.mgt0.1.ip}: " -i "ttl="</log-match>
		</step>

		<step no="3.3">
			<desc>
				-kill process
			</desc>
			<ssh target="br1.vpc1" timeout="200">
				-v "killall -9 wpa_supplicant -q"
				-v "killall dhclient -q"
			</ssh>
		</step>

		<step no="3.3a">
			<desc>
				-prepare config file with correct username and wrong password
			</desc>
			<log-file>step3.3a_auth_log.log</log-file>
			<ssh target="br1.vpc1" timeout="200">
				-v "echo -e \&quot; ctrl_interface=DIR=/var/run/wpa_supplicant \\n ap_scan=0 \\n network={ \\n key_mgmt=IEEE8021X \\n eap=MD5 \\n identity=\\x22${job.sid}-aerohive\\x22 \\n password=\\x22aerohive\\x22 \\n eapol_flags=0 \\n } \&quot; &gt; /tmp/wpa_supplicant.conf"
			</ssh>
		</step>

		<step no="3.3b">
			<desc>
				-Laptop auth
			</desc>
			<log-file>step3.3b_auth_log.log</log-file>
			<ssh target="br1.vpc1">
				-v "ifconfig ${br1.vpc1.tif.name} down"
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "wpa_supplicant -B -i ${br1.vpc1.tif.name} -c /tmp/wpa_supplicant.conf -D wired"
			</ssh>
		</step>

		<step no="3.3d" delay="15" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				-check connect status
			</desc>
			<log-file>step3.3d_check_connection.log</log-file>
			<ssh target="br1.vpc1" prompt=">|.*#" timeout="200">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-c -i "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="3.4" delay="15">
			<desc>
				get ip address
			</desc>
			<log-file>step3.4_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name} -r"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="3.4b">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<!-- <step no="3.5" type="loop-check" loop-max-times="6" loop-interval="10"> <desc> show 802.1x-mac-table </desc> <log-file>step3.5_show_8021x_mac_${loop_check.idx}.log</log-file> <telnet target="${br1.br.wan.ip}"> -v "show 802.1x-mac-table" </telnet> <log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.vpc1.tif.mac}[\t ]+${br1.vpc2.vlan}[\t ]+${br1.br.lan.int1}[\t ]+CLOSE[\t ]+N/A" -f ${log.dir}/${log.file}</log-match> </step> -->

		<step no="3.5" type="loop-check" loop-max-times="6" loop-interval="10">
			<desc>
				show 802.1x-mac-table, connect to radius server and auth successfully, get vlan ${acct1.vlan} from radius server
			</desc>
			<log-file>step3.5_show_8021x_mac.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show mac-address-table all"
			</telnet>
			<log-match>-c -i "${acct1.vlan}" -i "${br1.vpc1.tif.mac}" -i "${br1.br.lan.int1}"</log-match>
		</step>

		<step no="3.5a" type="loop-check" loop-max-times="6" loop-interval="10">
			<desc>
				check auth
			</desc>
			<log-file>step3.5a_check_auth_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show auth interface ${br1.br.lan.int1}"
			</telnet>
			<log-match>-c -i "${br1.vpc1.tif.mac}" -i "done" -i "${job.sid}-aerohive"</log-match>
		</step>

		<step no="3.6" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				vpc1 ping pub dns
			</desc>
			<log-file>step3.6_ping_log_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>

		<step no="3.7">
			<desc>
				show logging buffered
			</desc>
			<log-file>step3.7_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "IEEE 802.1X: ${br1.vpc1.tif.mac} BE_AUTH entering state SUCCESS"</log-match>
			<log-match>-c -i "STA(${br1.vpc1.tif.mac}) login to SSID(${br1.br.lan.kport1}) by user_name=${job.sid}-aerohive"</log-match>
			<log-match>-c -i "Station is authenticated: SPA=${br1.vpc1.tif.mac}" </log-match>
			<log-match>-c -i "VLAN-ID=${acct1.vlan}/${acct1.vlan}" -i "ssid=lan1"</log-match>
		</step>

		<step no="3.8">
			<desc>
				-clear log all
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear log all"
			</telnet>
		</step>

		<step no="4">
			<desc>
				-shutdown interface ${br1.br.lan.int1} to cause de-auth
			</desc>
			<console target="br1.br">
				-v "interface ${br1.br.lan.int1} shutdown"
			</console>
		</step>

		<!-- <step no="4.1" type="loop-check" loop-max-times="25" loop-interval="30"> <desc> show 802.1x-mac-table </desc> <log-file>step4.1_show_8021x_mac_${loop_check.idx}.log</log-file> <console target="br1.br"> -v "show 802.1x-mac-table" </console> <log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.vpc1.tif.mac}[\t ]+${br1.vpc2.vlan}[\t ]+${br1.br.lan.int1}[\t ]+CLOSE[\t ]+N/A" -c 0 -f ${log.dir}/${log.file}</log-match> </step> -->

		<step no="4.1" type="loop-check" loop-max-times="6" loop-interval="10">
			<desc>
				show 802.1x-mac-table, connect to radius server and auth successfully, get vlan ${acct1.vlan} from radius server
			</desc>
			<log-file>step4.1_show_8021x_mac.log</log-file>
			<console target="br1.br">
				-v "show mac-address-table all"
			</console>
			<log-match>-c -i "${acct1.vlan}" -i "${br1.vpc1.tif.mac}" -i "${br1.br.lan.int1}" -n</log-match>
		</step>


		<step no="4.2" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				vpc1 ping pub dns
			</desc>
			<log-file>step4.2_ping_log_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 4"
			</ssh>
			<log-match>-n -c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>

		<step no="4.3">
			<desc>
				show logging buffered
			</desc>
			<log-file>step4.3_show_logging_buffered.log</log-file>
			<console target="br1.br" timeout="500">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-c -i "Station ${br1.vpc1.tif.mac}" -i "de-authenticated" -i "SSID lan1"</log-match>
		</step>

		<step no="4.4">
			<desc>
				-clear log all
			</desc>
			<console target="br1.br">
				-v "clear log all"
			</console>
		</step>

		<step no="4.5">
			<desc>
				-no shutdown interface ${br1.br.lan.int1}
			</desc>
			<console target="br1.br">
				-v "no interface ${br1.br.lan.int1} shutdown"
			</console>
		</step>

		<step no="5">
			<desc>
				-kill process
			</desc>
			<ssh target="br1.vpc1" timeout="200">
				-v "killall -9 wpa_supplicant -q"
				-v "killall dhclient -q"
			</ssh>
		</step>

		<step no="5.1">
			<desc>
				-prepare config file with correct username and wrong password
			</desc>
			<log-file>step5.1_auth_log.log</log-file>
			<ssh target="br1.vpc1" timeout="200">
				-v "echo -e \&quot; ctrl_interface=DIR=/var/run/wpa_supplicant \\n ap_scan=0 \\n network={ \\n key_mgmt=IEEE8021X \\n eap=MD5 \\n identity=\\x22${job.sid}-aerohive\\x22 \\n password=\\x22aerohive\\x22 \\n eapol_flags=0 \\n } \&quot; &gt; /tmp/wpa_supplicant.conf"
			</ssh>
		</step>

		<step no="5.2">
			<desc>
				-Laptop auth
			</desc>
			<log-file>step5.2_auth_log.log</log-file>
			<ssh target="br1.vpc1">
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "wpa_supplicant -B -i ${br1.vpc1.tif.name} -c /tmp/wpa_supplicant.conf -D wired"
			</ssh>
		</step>

		<step no="5.3" delay="15" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				-check connect status
			</desc>
			<log-file>step5.3_check_connection.log</log-file>
			<ssh target="br1.vpc1" prompt=">|.*#" timeout="200">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-c -i "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="5.4" delay="15">
			<desc>
				get ip address
			</desc>
			<log-file>step5.4_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="5.4a">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip.second">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<!-- <step no="6.1" type="loop-check" loop-max-times="25" loop-interval="30"> <desc> show 802.1x-mac-table </desc> <log-file>step6.1_show_8021x_mac_${loop_check.idx}.log</log-file> <telnet target="${br1.br.wan.ip}"> -v "show 802.1x-mac-table" </telnet> <log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.vpc1.tif.mac}[\t ]+${br1.vpc2.vlan}[\t ]+${br1.br.lan.int1}[\t ]+CLOSE[\t ]+N/A" -f ${log.dir}/${log.file}</log-match> </step> -->

		<step no="6.1" type="loop-check" loop-max-times="6" loop-interval="10">
			<desc>
				show 802.1x-mac-table, connect to radius server and auth successfully, get vlan ${acct1.vlan} from radius server
			</desc>
			<log-file>step6.1_show_8021x_mac.log</log-file>
			<console target="br1.br">
				-v "show mac-address-table all"
			</console>
			<log-match>-c -i "${acct1.vlan}" -i "${br1.vpc1.tif.mac}" -i "${br1.br.lan.int1}"</log-match>
		</step>

		<step no="6.1a" type="loop-check" loop-max-times="6" loop-interval="10">
			<desc>
				check auth
			</desc>
			<log-file>step6.1a_check_auth_${loop_check.idx}.log</log-file>
			<console target="br1.br">
				-v "show auth interface ${br1.br.lan.int1}"
			</console>
			<log-match>-c -i "${br1.vpc1.tif.mac}" -i "done" -i "${job.sid}-aerohive"</log-match>
		</step>

		<step no="6.2" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				vpc1 ping pub dns
			</desc>
			<log-file>step6.2_ping_log_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>

		<step no="6.3">
			<desc>
				show logging buffered
			</desc>
			<log-file>step6.3_show_logging_buffered.log</log-file>
			<console target="br1.br">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-c -i "IEEE 802.1X: ${br1.vpc1.tif.mac} BE_AUTH entering state SUCCESS"</log-match>
			<log-match>-c -i "STA(${br1.vpc1.tif.mac}) login to SSID(${br1.br.lan.kport1})" -i "user_name=${job.sid}-aerohive"</log-match>
			<log-match>-c -i "Station is authenticated: SPA=${br1.vpc1.tif.mac}" </log-match>
			<log-match>-c -i "VLAN-ID=${acct1.vlan}/${acct1.vlan}" -i "ssid=lan1"</log-match>
		</step>
	</stage>

	<post-process>
		<stage>

			<include prefix="del.account1" file="subs/ldap_delete.xml" args="${job.sid}-aerohive" />

		</stage>

		<include file="include/br_default_post_process.xml" />
	</post-process>
</testcase>
