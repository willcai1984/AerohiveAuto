<?xml version="1.0" encoding="UTF-8"?>
<testcase>
    <brief>[no] usbmodem modem-id &lt;string&gt;</brief>
    <priority>Middle</priority>
    <automated>yes</automated>
    <description>        
		Pre-Condition:
		Test Procedure:
			1. define a modem id which does not exist in either pre-supported or provision-based modem id list, result 1
			2. save config and reboot device
			3. after device boot up, check the defined modem id, result 2
			4. delete the modem id, result 3
			5. repeat Step 2
			6. after device boot up, check config of modem id, result 4
		Expect Result:
			1. define modem id successfully
			2. there is modem id defined in Step 1
			3. delete mode id successfully
			4. there is no the modem id any more
    </description>
    <numofbr>1</numofbr>
    <numofsta>0</numofsta>
    <tbtype>winlin</tbtype>
    
    <property name="modem.id" value="modem_test" />
  
    <stage>
     	
    	<step no="1.1">
            <desc>
            	define modem id
            </desc>
            <log-file>step1.1_DefineModemID.log</log-file>
            <console target="br1.br">
				-v "usbmodem modem-id ${modem.id}"
			</console>
        </step>
        
        <step no="1.2">
            <desc>
            	check defined modem id
            </desc>
            <log-file>step1.2_CheckModemID.log</log-file>
            <console target="br1.br">
				-v "show usbmodem modem-id ${modem.id}"
			</console>
            <log-match>-e "Modem Id: *${modem.id}"</log-match>
        </step>
        
        <step no="1.3">
            <desc>
            	check modem id in running config
            </desc>
            <log-file>step1.3_ModemIDinRunningConfig.log</log-file>
            <console target="br1.br">
				-v "sh ru | i usb"
			</console>
            <log-match>-e "usbmodem modem-id ${modem.id}"</log-match>
        </step>
        
        <step no="2">
			<desc>
				save config and reboot DUT
			</desc>
			<console target="br1.br">
				-v "save config"
				-v "reboot"
            </console>
		</step>
		
        <step no="3.1">
            <desc>
            	check defined modem id
            </desc>
            <log-file>step3.1_CheckModemID.log</log-file>
            <console target="br1.br">
				-v "show usbmodem modem-id ${modem.id}"
			</console>
            <log-match>-e "Modem Id: *${modem.id}"</log-match>
        </step>
        
        <step no="3.2">
            <desc>
            	check modem id in running config
            </desc>
            <log-file>step3.2_ModemIDinRunningConfig.log</log-file>
            <console target="br1.br">
				-v "sh ru | i usb"
			</console>
            <log-match>-e "usbmodem modem-id ${modem.id}"</log-match>
        </step>
		
		<step no="4.1">
			<desc>
				delete defined modem id
			</desc>
			<console target="br1.br">
				-v "no usbmodem modem-id ${modem.id}"
			</console>
		</step>
		
        <step no="4.2">
            <desc>
            	check defined modem id
            </desc>
            <log-file>step4.2_CheckModemID.log</log-file>
            <console target="br1.br">
				-v "show usbmodem modem-id ${modem.id}"
			</console>
            <log-match>-e "Error: No entry for modem id \[${modem.id}\]" -re</log-match>
            <no-error-check />
        </step>
        
        <step no="4.3">
            <desc>
            	check modem id in running config
            </desc>
            <log-file>step4.3_ModemIDinRunningConfig.log</log-file>
            <console target="br1.br">
				-v "sh ru | i usb"
			</console>
            <log-match>-n -e "usbmodem modem-id ${modem.id}"</log-match>
        </step>
        
        <step no="5">
			<desc>
				save config and reboot DUT
			</desc>
			<console target="br1.br">
				-v "save config"
				-v "reboot"
            </console>
		</step>
		
        <step no="6.1">
            <desc>
            	check defined modem id
            </desc>
            <log-file>step6.1_CheckModemID.log</log-file>
            <console target="br1.br">
				-v "show usbmodem modem-id ${modem.id}"
			</console>
            <log-match>-e "Error: No entry for modem id \[${modem.id}\]" -re</log-match>
            <no-error-check />
        </step>
        
        <step no="6.2">
            <desc>
            	check modem id in running config
            </desc>
            <log-file>step6.2_ModemIDinRunningConfig.log</log-file>
            <console target="br1.br">
				-v "sh ru | i usb"
			</console>
            <log-match>-n -e "usbmodem modem-id ${modem.id}"</log-match>
        </step>      

    </stage>

</testcase>