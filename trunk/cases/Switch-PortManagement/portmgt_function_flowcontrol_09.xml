<testcase>
	<brief>(IxPort: CaF=1+1) Verify Flow Control Rx is enabled on SFP port on switch;</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<numofsw>1</numofsw>
	<tbtype>winlin</tbtype>
	<description>
		Verify Flow Control Rx is enabled on SFP port on switch;(baseX flow-control auto-negotiation result is in flow-control11, this is only function test)
	</description>
	<comment>
		sw1.port1=eth1/21;
		sw1.port1.phytype=copper;
		sw1.port5=eth1/25;
		sw1.port1.ixia_port=1/2/1;
		sw1.port1.ixia_port.phytype=copper;
		sw1.terminal.port=2016;
		sw1.conserver.ip=localhost
		ap1.cons_name=tb1-SR2024-2
		pub.chassis1.ip=10.155.33.216;
		pub.tclserver1.ip=10.155.30.164;
		pub.tclclient1.ip=10.155.40.10;
		sw1.tclclient.ip=10.155.32.228;
		sw1.mgmtport=eth1/1;
		sw1.mgmtvlan=121;
		sw1.conserver.ip=10.155.32.228;
		sw1.conserver.user=root;
		sw1.conserver.passwd=aerohive;
		sw1.cons_name=tb1-SR2024-2;
		sw1.user=admin;
		sw1.passwd=aerohive;
		sw1.prompt="AH-[a-z0-9A-Z_]*#";
	</comment>
	<property name="sw1.user" value="admin" />
	<property name="sw1.passwd" value="aerohive" />
	<property name="correct_vlan" value="101" />
	<property name="incorrect_vlan" value="102" />
	<property name="tcl_script_server.ip" value="10.155.32.129" />
	<property name="tcl_script_server.user" value="root" />
	<property name="tcl_script_server.passwd" value="aerohive" />
	<property name="tcl_script_server.path" value="/home/python/tcl/v1" />
	<property name="tx_port1" value="${sw1.port2.ixia_port}" />
	<property name="tx_port1.mode" value="${sw1.port2.ixia_port.phytype}" />
	<property name="rx_port1" value="${sw1.port5.ixia_port}" />
	<property name="rx_port1.mode" value="${sw1.port5.ixia_port.phytype}" />

	<stage loop-values="1..5" var-name="LoopVar" loop-passed-break="true">
		<step no="1.0.1">
			<desc>
				Show interface mgt0 to get ip address
			</desc>
			<log-file>step1.0.1_${LoopVar}_mgt0_ip_info.log</log-file>
			<console target="sw1">
				-v 'show interface mgt0'
			</console>
		</step>

		<step no="1.0.2">
			<desc>
				Get mgt0's ip address
			</desc>
			<setvar name="sw1.ip">
				python ${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -f ${log.dir}/step1.0.1_${LoopVar}_mgt0_ip_info.log -t str
			</setvar>
		</step>

		<step no="1.1.1">
			<desc>
				mode:fiber, sw copper auto/auto/enable to fiber auto/auto/enable
			</desc>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'vlan ${correct_vlan}'
				-v 'no interface ${sw1.port1} shutdown'
				-v 'interface ${sw1.port5} speed auto'
				-v 'interface ${sw1.port5} flow-control enable'
				-v 'interface ${sw1.port5} switchport mode access'
				-v 'interface ${sw1.port5} switchport access vlan ${correct_vlan}'
				-v 'no interface ${sw1.port2} shutdown'
				-v 'interface ${sw1.port2} speed auto'
				-v 'interface ${sw1.port2} flow-control enable'
				-v 'interface ${sw1.port2} switchport mode access'
				-v 'interface ${sw1.port2} switchport access vlan ${correct_vlan}'
			</ssh>
		</step>

		<step no="1.1.2">
			<desc>
				mode:fiber, show run to confirm
			</desc>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show running-config'
			</ssh>
		</step>

		<step no="1.2">
			<desc>
				mode:fiber, IXIA auto/auto/enable copper to auto/auto/enable fiber(should be equal due to flow control enable)
				pause frames are from fiber to copper to confirm the fiber's rx func works well
			</desc>
			<log-file>step1.2_${LoopVar}_ixia_enable_flow_control.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180" session-new="${job.user}-${job.sid}-${LoopVar}-1">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${rx_port1} -phyList ${tx_port1.mode},${rx_port1.mode} -tclServerIP ${pub.tclserver1.ip}"
				-v ""
				-v "ah_port_config -onePort ${tx_port1}
				-autonegotiate true
				-phyMode ${tx_port1.mode}
				-advertiseAbilities portAdvertiseSendAndReceive
				-flowControl true"
				-v ""
				-v "ah_port_config -onePort ${rx_port1}
				-autonegotiate true
				-phyMode ${rx_port1.mode}
				-advertiseAbilities portAdvertiseSendAndReceive
				-flowControl true"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-frame_length 100
				-rate_pps 150000"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0016
				-mac_src 0000.0000.0015
				-frame_length 100
				-rate_pps 150000"
				-v ""
				<br />
				-v "stream_pause_control_set -portList ${rx_port1} -streamId 1 -pauseTime 255"
				-v ""
			</ssh>
		</step>
		
		<step no="1.2.1">
			<desc>
				check state of interface on switch
			</desc>
			<log-file>step1.2.1_${LoopVar}_InterfaceState.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show in ${sw1.port2}'
			</ssh>
			<log-match>-c -e "Port Name: *${sw1.port2}; *Port Type: *10\/100\/1000BASE-T" -re</log-match>
			<log-match>-c -e "Link status: *up"</log-match>
		</step>
		
		<step no="1.2.2">
			<desc>
				check state of interface on switch
			</desc>
			<log-file>step1.2.2_${LoopVar}_InterfaceState.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show in ${sw1.port5}'
			</ssh>
			<log-match>-c -e "Port Name: *${sw1.port5}; *Port Type: *SFP"</log-match>
			<log-match>-c -e "Link status: *up"</log-match>
		</step>			
		
		<step no="1.2.3">
			<desc>
				mode:fiber, IXIA auto/auto/enable copper to auto/auto/enable fiber(should be equal due to flow control enable)
				pause frames are from fiber to copper to confirm the fiber's rx func works well
			</desc>
			<log-file>step1.2.3_${LoopVar}_ixia_enable_flow_control.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180" session-get="${job.user}-${job.sid}-${LoopVar}-1">
				-v ""
				-v "stop_transmit -portList ${tx_port1},${rx_port1}"
				-v ""
				-v "wait_time -second 5"
				-v ""
				-v
				"clear_statistic -portList ${tx_port1},${rx_port1}"
				-v ""
				-v "start_transmit -portList ${tx_port1},${rx_port1}"
				-v ""
				-v "wait_time -second 5"
				-v ""
				-v "stop_transmit -portList ${tx_port1},${rx_port1}"
				-v ""
				-v "get_statistic -txPortList ${tx_port1} -rxPortList ${rx_port1}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort ${tx_port1} -oneRxPort ${rx_port1}"
				-v ""
				-v "ctrl-c"
			</ssh>
			<log-match>-e "checkEqualTxWithRX ${tx_port1} ${rx_port1} framesSent userDefinedStat2 result is equal"</log-match>
		</step>		

		<step no="1.3">
			<desc>
				mode:fiber, Get tx1 send pkts
			</desc>
			<setvar name="enable.tx1.send.pkts">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.2.3_${LoopVar}_ixia_enable_flow_control.log -t ${tx_port1}
			</setvar>
		</step>

		<step no="2.1.1">
			<desc>
				mode:fiber, sw auto/auto/disable to auto/auto/disable(receive pkts should be more than flowcontrol enable due to follow control may reduce pkts sending)
			</desc>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'vlan ${correct_vlan}'
				-v 'no interface ${sw1.port5} shutdown'
				-v 'interface ${sw1.port5} speed auto'
				-v 'interface ${sw1.port5} flow-control disable'
				-v 'interface ${sw1.port5} switchport mode access'
				-v 'interface ${sw1.port5} switchport access vlan ${correct_vlan}'
				-v 'no interface ${sw1.port2} shutdown'
				-v 'interface ${sw1.port2} speed auto'
				-v 'interface ${sw1.port2} flow-control disable'
				-v 'interface ${sw1.port2} switchport mode access'
				-v 'interface ${sw1.port2} switchport access vlan ${correct_vlan}'
			</ssh>
		</step>

		<step no="2.1.2">
			<desc>
				mode:fiber, show run to confirm
			</desc>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show running-config '
			</ssh>
		</step>


		<step no="2.2">
			<desc>
				mode:fiber, IXIA auto/auto/enable copper to auto/auto/enable fiber(should be equal due to flow control disable)(the receive pkts should be more than flowcontrol enable)
			</desc>
			<log-file>step2.2_${LoopVar}_ixia_disable_flow_control.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180" session-new="${job.user}-${job.sid}-${LoopVar}-2">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${rx_port1} -phyList ${tx_port1.mode},${rx_port1.mode} -tclServerIP ${pub.tclserver1.ip}"
				-v ""
				-v "ah_port_config -onePort ${tx_port1}
				-autonegotiate true
				-phyMode ${tx_port1.mode}
				-advertiseAbilities portAdvertiseSendAndReceive
				-flowControl true"
				-v ""
				-v "ah_port_config -onePort ${rx_port1}
				-autonegotiate true
				-phyMode ${rx_port1.mode}
				-advertiseAbilities portAdvertiseSendAndReceive
				-flowControl true"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-frame_length 100
				-rate_pps 150000"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0016
				-mac_src 0000.0000.0015
				-frame_length 100
				-rate_pps 150000"
				-v ""
				<br />
				-v "stream_pause_control_set -portList ${rx_port1} -streamId 1 -pauseTime 255"
				-v ""
			</ssh>
		</step>
		
		<step no="2.2.1">
			<desc>
				check state of interface on switch
			</desc>
			<log-file>step2.2.1_${LoopVar}_InterfaceState.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show in ${sw1.port2}'
			</ssh>
			<log-match>-c -e "Port Name: *${sw1.port2}; *Port Type: *10\/100\/1000BASE-T" -re</log-match>
			<log-match>-c -e "Link status: *up"</log-match>
		</step>
		
		<step no="2.2.2">
			<desc>
				check state of interface on switch
			</desc>
			<log-file>step2.2.2_${LoopVar}_InterfaceState.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show in ${sw1.port5}'
			</ssh>
			<log-match>-c -e "Port Name: *${sw1.port5}; *Port Type: *SFP"</log-match>
			<log-match>-c -e "Link status: *up"</log-match>
		</step>			
		
		<step no="2.2.3">
			<desc>
				mode:fiber, IXIA auto/auto/enable copper to auto/auto/enable fiber(should be equal due to flow control disable)(the receive pkts should be more than flowcontrol enable)
			</desc>
			<log-file>step2.2.3_${LoopVar}_ixia_disable_flow_control.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180" session-get="${job.user}-${job.sid}-${LoopVar}-2">
				-v ""
				-v "stop_transmit -portList ${tx_port1},${rx_port1}"
				-v ""
				-v "wait_time -second 5"
				-v ""
				-v
				"clear_statistic -portList ${tx_port1},${rx_port1}"
				-v ""
				-v "start_transmit -portList ${tx_port1},${rx_port1}"
				-v ""
				-v "wait_time -second 5"
				-v ""
				-v "stop_transmit -portList ${tx_port1},${rx_port1}"
				-v ""
				-v "get_statistic -txPortList ${tx_port1} -rxPortList ${rx_port1}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort ${tx_port1} -oneRxPort ${rx_port1}"
				-v ""
				-v "ctrl-c"
			</ssh>
			<log-match>-e "checkEqualTxWithRX ${tx_port1} ${rx_port1} framesSent userDefinedStat2 result is equal"</log-match>
		</step>

		<step no="2.3">
			<desc>
				mode:fiber, Get tx1 send pkts
			</desc>
			<setvar name="disable.tx1.send.pkts">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step2.2.3_${LoopVar}_ixia_disable_flow_control.log -t ${tx_port1}
			</setvar>
		</step>

		<step no="3">
			<desc>
				mode:fiber, check if enable.tx1.send is less than disable.tx1.send(flow control may influnce the pkts sending)
			</desc>
			<log-file>step3_${LoopVar}_check_ixia_send.log</log-file>
			<script>
				python ${bin.dir}/check_sum.py -s ${enable.tx1.send.pkts} -c ${disable.tx1.send.pkts} > ${log.dir}/${log.file}
			</script>
			<log-match>-e "Standard list's sum is less than compare list's"</log-match>
		</step>
	</stage>

</testcase>