<testcase>
	<brief>(IxPort: CaF=1+1) Verify Flow Control Tx is enabled on BASE-T port on switch;</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<numofsw>1</numofsw>
	<tbtype>winlin</tbtype>

	<description>
		Verify Flow Control Tx is enabled on BASE-T port on switch;(baseT flow-control auto-negotiation result is in flow-control10, this is only function test)
	</description>
	<comment>
		sw1.port1=eth1/21;
		sw1.port1.phytype=copper;
		sw1.port5=eth1/25;
		sw1.port1.ixia_port=1/2/1;
		sw1.port1.ixia_port.phytype=copper;
		sw1.terminal.port=2016;
		sw1.conserver.ip=localhost
		ap1.cons_name=tb1-SR2024-2
		pub.chassis1.ip=10.155.33.216;
		pub.tclserver1.ip=10.155.30.164;
		pub.tclclient1.ip=10.155.40.10;
		sw1.tclclient.ip=10.155.32.228;
		sw1.mgmtport=eth1/1;
		sw1.mgmtvlan=121;
		sw1.conserver.ip=10.155.32.228;
		sw1.conserver.user=root;
		sw1.conserver.passwd=aerohive;
		sw1.cons_name=tb1-SR2024-2;
		sw1.user=admin;
		sw1.passwd=aerohive;
		sw1.prompt="AH-[a-z0-9A-Z_]*#";
	</comment>
	<property name="correct_vlan" value="101" />
	<property name="incorrect_vlan" value="102" />
	<property name="tcl_script_server.ip" value="10.155.32.129" />
	<property name="tcl_script_server.user" value="root" />
	<property name="tcl_script_server.passwd" value="aerohive" />
	<property name="tcl_script_server.path" value="/home/python/tcl/v1" />
	<property name="tx_port1" value="${sw1.port1.ixia_port}" />
	<property name="tx_port1.mode" value="${sw1.port1.ixia_port.phytype}" />
	<property name="rx_port1" value="${sw1.port2.ixia_port}" />
	<property name="rx_port1.mode" value="${sw1.port2.ixia_port.phytype}" />
	<stage>
		<step no="1.1">
			<desc>
				mode:copper, sw port1 enable/auto/auto/enable(1000) to port2 enable/auto/auto/enable(100)
			</desc>
			<telnet target="sw1">
				-v 'vlan ${correct_vlan}'
				-v 'no interface ${sw1.port1} shutdown'
				-v 'interface ${sw1.port1} speed auto'
				-v 'interface ${sw1.port1} flow-control enable'
				-v 'interface ${sw1.port1} switchport mode access'
				-v 'interface ${sw1.port1} switchport access vlan ${correct_vlan}'
				-v 'no interface ${sw1.port2} shutdown'
				-v 'interface ${sw1.port2} speed auto'
				-v 'interface ${sw1.port2} flow-control enable'
				-v 'interface ${sw1.port2} switchport mode access'
				-v 'interface ${sw1.port2} switchport access vlan ${correct_vlan}'
				-v 'show running-config'
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				mode:copper, IXIA auto/auto/enable(1000) to 100/full/enable(100); send rate more than 100Mbps(should be equal due to flow control enable)
			</desc>
			<log-file>step1.2_ixia_enable_flow_control.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${rx_port1} -phyList ${tx_port1.mode},${rx_port1.mode} -tclServerIP ${pub.tclserver1.ip}"
				-v ""
				-v "ah_port_config -onePort ${tx_port1}
				-autonegotiate true
				-advertiseAbilities portAdvertiseSendAndReceive
				-flowControl true"
				-v ""
				-v "ah_port_config -onePort ${rx_port1}
				-autonegotiate true
				-1000fullIn false
				-100fullIn true
				-100halfIn false
				-10fullIn false
				-10halfIn false
				-advertiseAbilities portAdvertiseSendAndReceive
				-flowControl true"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-frame_length 100
				-rate_pps 150000"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0016
				-mac_src 0000.0000.0015"
				-v ""
				-v "start_trans_getstats -txPortList ${tx_port1} -rxPortList ${rx_port1}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort
				${tx_port1} -oneRxPort ${rx_port1}"
				-v ""
				-v "exit"
			</ssh>
			<log-match>-e "checkEqualTxWithRX ${tx_port1} ${rx_port1} framesSent userDefinedStat2 result is equal"</log-match>
		</step>

		<step no="2.1">
			<desc>
				mode:copper, sw port1 enable/auto/auto/disable(1000) to port2 enable/auto/auto/disable(100)
			</desc>
			<telnet target="sw1">
				-v 'vlan ${correct_vlan}'
				-v 'no interface ${sw1.port1} shutdown'
				-v 'interface ${sw1.port1} speed auto'
				-v 'interface ${sw1.port1} flow-control disable'
				-v 'interface ${sw1.port1} switchport mode access'
				-v 'interface ${sw1.port1} switchport access vlan ${correct_vlan}'
				-v 'no interface ${sw1.port2} shutdown'
				-v 'interface ${sw1.port2} speed auto'
				-v 'interface ${sw1.port2} flow-control disable'
				-v 'interface ${sw1.port2} switchport mode access'
				-v 'interface ${sw1.port2} switchport access vlan ${correct_vlan}'
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				mode:copper, IXIA auto/auto/enable(1000) to 100/full/enable(100); send rate more than 100Mbps(should be not equal due to flow control disable on switch)
			</desc>
			<log-file>step2.1_ixia_disable_flow_control.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${rx_port1} -phyList ${tx_port1.mode},${rx_port1.mode} -tclServerIP ${pub.tclserver1.ip}"
				-v ""
				-v "ah_port_config -onePort ${tx_port1}
				-autonegotiate true
				-advertiseAbilities portAdvertiseSendAndReceive
				-flowControl true"
				-v ""
				-v "ah_port_config -onePort ${rx_port1}
				-autonegotiate true
				-1000fullIn false
				-100fullIn true
				-100halfIn false
				-10fullIn false
				-10halfIn false
				-advertiseAbilities portAdvertiseSendAndReceive
				-flowControl true"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-frame_length 100
				-rate_pps 150000"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0016
				-mac_src 0000.0000.0015"
				-v ""
				-v "start_trans_getstats -txPortList ${tx_port1} -rxPortList ${rx_port1}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort
				${tx_port1} -oneRxPort ${rx_port1}"
				-v ""
				-v "exit"
			</ssh>
			<log-match>-e "checkEqualTxWithRX ${tx_port1} ${rx_port1} framesSent userDefinedStat2 result is not equal"</log-match>
		</step>
	</stage>

</testcase>