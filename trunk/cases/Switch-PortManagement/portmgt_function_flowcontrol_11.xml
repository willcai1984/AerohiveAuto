<testcase>
	<brief>(IxPort: F=1)Verify the flow-control configuration can be enable/disable;</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<numofsw>1</numofsw>
	<tbtype>winlin</tbtype>

	<description>
		IXIA enable_tx_rx; Switch auto_auto_enable/disable, fiber(sfp not support flow control auto)
	</description>
	<comment>
		sw1.port1=eth1/21;
		sw1.port1.phytype=copper;
		sw1.port5=eth1/25;
		sw1.port1.ixia_port=1/2/1;
		sw1.port1.ixia_port.phytype=copper;
		sw1.terminal.port=2016;
		sw1.conserver.ip=localhost
		ap1.cons_name=tb1-SR2024-2
		pub.chassis1.ip=10.155.33.216;
		pub.tclserver1.ip=10.155.30.164;
		pub.tclclient1.ip=10.155.40.10;
		sw1.tclclient.ip=10.155.32.228;
		sw1.mgmtport=eth1/1;
		sw1.mgmtvlan=121;
		sw1.conserver.ip=10.155.32.228;
		sw1.conserver.user=root;
		sw1.conserver.passwd=aerohive;
		sw1.cons_name=tb1-SR2024-2;
		sw1.user=admin;
		sw1.passwd=aerohive;
		sw1.prompt="AH-[a-z0-9A-Z_]*#";
	</comment>
	<property name="sw1.user" value="admin" />
	<property name="sw1.passwd" value="aerohive" />
	<property name="correct_vlan" value="101" />
	<property name="incorrect_vlan" value="102" />
	<property name="tcl_script_server.ip" value="10.155.32.129" />
	<property name="tcl_script_server.user" value="root" />
	<property name="tcl_script_server.passwd" value="aerohive" />
	<property name="tcl_script_server.path" value="/home/python/tcl/v1" />
	<stage>
		<step no="1.0.1">
			<desc>
				Show interface mgt0 to get ip address
			</desc>
			<log-file>step1.0.1_mgt0_ip_info.log</log-file>
			<console target="sw1">
				-v 'show interface mgt0'
			</console>
		</step>

		<step no="1.0.2">
			<desc>
				Get mgt0's ip address
			</desc>
			<setvar name="sw1.ip">
				python ${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -f ${log.dir}/step1.0.1_mgt0_ip_info.log -t str
			</setvar>
		</step>

		<step no="1.1">
			<desc>
				mode:fiber, IXIA enable_tx_rx; Switch auto_auto_enable(sfp not support flow control auto)
			</desc>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'no interface ${sw1.port5} shutdown'
				-v 'interface ${sw1.port5} speed auto'
				-v 'interface ${sw1.port5} duplex auto'
				-v 'interface ${sw1.port5} flow-control enable'
			</ssh>
		</step>

		<step no="1.2">
			<desc>
				mode:fiber, IXIA enable_tx_rx; Switch auto_auto_enable
			</desc>
			<log-file>step1.2_ixia_enable_flow_control.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -portList ${sw1.port5.ixia_port} -phyList ${sw1.port5.ixia_port.phytype} -tclServerIP ${pub.tclserver1.ip}"
				-v ""
				-v "ah_port_config -onePort ${sw1.port5.ixia_port} -phyMode ${sw1.port5.ixia_port.phytype}
				-autonegotiate true
				-advertiseAbilities portAdvertiseSendAndReceive"
				-v ""
				-v "exit"
			</ssh>
		</step>

		<step no="1.3">
			<desc>
				mode:fiber, IXIA enable_tx_rx; Switch auto_auto_enable; after neg, sw tx/rx enable
			</desc>
			<log-file>step1.3_fiber_show_interface_flowcontrol.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show interface ${sw1.port5} flowcontrol'
				-v 'show interface ${sw1.port5}'
			</ssh>
			<log-match>-e "${sw1.port5} *on *on *on *on"</log-match>
			<log-match>-e "Flow Control Rx: on; Flow Control Tx: on;"</log-match>
		</step>

		<step no="2.1">
			<desc>
				mode:fiber, IXIA enable_tx_rx; Switch auto_auto_disable
			</desc>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'no interface ${sw1.port5} shutdown'
				-v 'interface ${sw1.port5} speed auto'
				-v 'interface ${sw1.port5} duplex auto'
				-v 'interface ${sw1.port5} flow-control disable'
			</ssh>
		</step>


		<step no="2.2">
			<desc>
				mode:fiber, IXIA enable_tx_rx; Switch auto_auto_disable; after neg, sw tx/rx disable
			</desc>
			<log-file>step2.2_fiber_show_interface_flowcontrol.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show interface ${sw1.port5} flowcontrol'
				-v 'show interface ${sw1.port5}'
			</ssh>
			<log-match>-e "${sw1.port5} *off *off *off *off"</log-match>
			<log-match>-e "Flow Control Rx: off; Flow Control Tx: off;"</log-match>
		</step>


		<step no="3.1">
			<desc>
				mode:fiber, IXIA disable_tx_rx; Switch auto_auto_enable(sfp not support flow control auto)
			</desc>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'no interface ${sw1.port5} shutdown'
				-v 'interface ${sw1.port5} speed auto'
				-v 'interface ${sw1.port5} duplex auto'
				-v 'interface ${sw1.port5} flow-control enable'
			</ssh>
		</step>

		<step no="3.2">
			<desc>
				mode:fiber, IXIA disable_tx_rx; Switch auto_auto_enable
			</desc>
			<log-file>step3.2_ixia_enable_flow_control.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="380">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -portList ${sw1.port5.ixia_port} -phyList ${sw1.port5.ixia_port.phytype} -tclServerIP ${pub.tclserver1.ip}"
				-v ""
				-v "ah_port_config -onePort ${sw1.port5.ixia_port} -phyMode ${sw1.port5.ixia_port.phytype}
				-autonegotiate true
				-advertiseAbilities portAdvertiseNone"
				-v ""
				-v "exit"
			</ssh>
		</step>

		<step no="3.3">
			<desc>
				mode:fiber, IXIA disable_tx_rx; Switch auto_auto_enable; after neg, sw tx/rx enable
			</desc>
			<log-file>step3.3_fiber_show_interface_flowcontrol.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show interface ${sw1.port5} flowcontrol'
				-v 'show interface ${sw1.port5}'
			</ssh>
			<log-match>-e "${sw1.port5} *on *on *on *on"</log-match>
			<log-match>-e "Flow Control Rx: on; Flow Control Tx: on;"</log-match>
		</step>

		<step no="4.1">
			<desc>
				mode:fiber, IXIA disable_tx_rx; Switch auto_auto_disable
			</desc>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'no interface ${sw1.port5} shutdown'
				-v 'interface ${sw1.port5} speed auto'
				-v 'interface ${sw1.port5} duplex auto'
				-v 'interface ${sw1.port5} flow-control disable'
			</ssh>
		</step>


		<step no="4.2">
			<desc>
				mode:fiber, IXIA disable_tx_rx; Switch auto_auto_disable; after neg, sw tx/rx disable
			</desc>
			<log-file>step4.2_fiber_show_interface_flowcontrol.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show interface ${sw1.port5} flowcontrol'
				-v 'show interface ${sw1.port5}'
			</ssh>
			<log-match>-e "${sw1.port5} *off *off *off *off"</log-match>
			<log-match>-e "Flow Control Rx: off; Flow Control Tx: off;"</log-match>
		</step>

		<step no="5.1">
			<desc>
				mode:fiber, check fiber cannot support flow control auto
			</desc>
			<log-file>step5.1_fiber_show_interface_flowcontrol.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'interface ${sw1.port5} flow-control auto'
			</ssh>
			<!-- need no error check -->
			<no-error-check />
			<log-match>-e "Not support on sfp"</log-match>
		</step>

		<step no="5.2.1">
			<desc>
				mode:fiber, enable flowcontrol
			</desc>
			<log-file>step5.2.1_enable_flow.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'interface ${sw1.port5} flow-control enable'
			</ssh>
		</step>

		<step no="5.2.2">
			<desc>
				mode:fiber, enable flowcontrol
			</desc>
			<log-file>step5.2.2_enable_flow.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show running-config'
			</ssh>
			<log-match>-e "interface ${sw1.port5} flow-control enable"</log-match>
			<log-match>-e "interface ${sw1.port5} flow-control disable" -n</log-match>
			<log-match>-e "interface ${sw1.port5} flow-control auto" -n</log-match>
		</step>

		<step no="5.3.1">
			<desc>
				mode:fiber, disable flowcontrol
			</desc>
			<log-file>step5.3.1_disable_flow.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'interface ${sw1.port5} flow-control disable'
			</ssh>
		</step>

		<step no="5.3.2">
			<desc>
				mode:fiber, disable flowcontrol(default is disable, cannot be shown in running configure)
			</desc>
			<log-file>step5.3.2_disable_flow.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show running-config'
			</ssh>
			<log-match>-e "interface ${sw1.port5} flow-control enable" -n</log-match>
			<log-match>-e "interface ${sw1.port5} flow-control disable" -n</log-match>
			<log-match>-e "interface ${sw1.port5} flow-control auto" -n</log-match>
		</step>

	</stage>
	<failed-process/>

</testcase>