<testcase>
	<brief>(IxPort: F=1) Verify Octets/UcastPkts/McastPkts/BacstPkts stats on SFP port.</brief>
	<priority>Middle</priority>
	<automated>yes</automated>
	<numofsw>1</numofsw>
	<tbtype>winlin</tbtype>

	<description>
		Verify Octets/UcastPkts/McastPkts/BacstPkts stats on SFP port.
	</description>
	<comment>
		sw1.port1=eth1/21;
		sw1.port1.phytype=copper;
		sw1.port5=eth1/25;
		sw1.port1.ixia_port=1/2/1;
		sw1.port1.ixia_port.phytype=copper;
		sw1.terminal.port=2016;
		sw1.conserver.ip=localhost
		ap1.cons_name=tb1-SR2024-2
		pub.chassis1.ip=10.155.33.216;
		pub.tclserver1.ip=10.155.30.164;
		pub.tclclient1.ip=10.155.40.10;
		sw1.tclclient.ip=10.155.32.228;
		sw1.mgmtport=eth1/1;
		sw1.mgmtvlan=121;
		sw1.conserver.ip=10.155.32.228;
		sw1.conserver.user=root;
		sw1.conserver.passwd=aerohive;
		sw1.cons_name=tb1-SR2024-2;
		sw1.user=admin;
		sw1.passwd=aerohive;
		sw1.prompt="AH-[a-z0-9A-Z_]*#";
	</comment>
	<property name="sw1.user" value="admin" />
	<property name="sw1.passwd" value="aerohive" />
	<property name="correct_vlan" value="101" />
	<property name="incorrect_vlan" value="102" />
	<property name="tcl_script_server.ip" value="10.155.32.129" />
	<property name="tcl_script_server.user" value="root" />
	<property name="tcl_script_server.passwd" value="aerohive" />
	<property name="tcl_script_server.path" value="/home/python/tcl/v1" />
	<property name="tx_port1" value="${sw1.port5.ixia_port}" />
	<property name="pkt_size" value="128" />
	<stage>
		<step no="1.0.1">
			<desc>
				Show interface mgt0 to get ip address
			</desc>
			<log-file>step1.0.1_mgt0_ip_info.log</log-file>
			<console target="sw1">
				-v 'show interface mgt0'
			</console>
		</step>

		<step no="1.0.2">
			<desc>
				Get mgt0's ip address
			</desc>
			<setvar name="sw1.ip">
				python ${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -f ${log.dir}/step1.0.1_mgt0_ip_info.log -t str
			</setvar>
		</step>

		<step no="1.1">
			<desc>
				mode:fiber, set port5 to default and clear counters
			</desc>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'vlan ${correct_vlan}'
				-v 'vlan ${incorrect_vlan}'
				-v 'no interface ${sw1.port5} shutdown'
				-v 'interface ${sw1.port5} switchport mode access'
				-v 'interface ${sw1.port5} switchport access vlan ${correct_vlan}'
				-v 'interface ${sw1.port5} speed auto'
				-v 'interface ${sw1.port5} duplex auto'
				-v 'clear interface ${sw1.port5} counters'
			</ssh>
		</step>

		<step no="1.2">
			<desc>
				mode:fiber unicast, show port5 counters
			</desc>
			<log-file>step1.2_default_counters.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show interface ${sw1.port5} counters'
			</ssh>
		</step>

		<step no="2.1">
			<desc>
				mode:fiber unicast, port5 and send UnicastPkts pkts
			</desc>
			<log-file>step2.1_unicastPkts.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="900">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1} -phyList ${sw1.port5.ixia_port.phytype} -tclServerIP ${pub.tclserver1.ip}"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-frame_length ${pkt_size}"
				-v ""
				<br />
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v "clear_statistic -portList ${tx_port1}"
				-v ""
				-v "start_transmit -portList ${tx_port1}"
				-v ""
				-v "wait_time -second 5"
				-v ""
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v "get_statistic -txPortList ${tx_port1} -rxPortList ${tx_port1}"
				-v ""
				-v "exit"
			</ssh>
		</step>

		<step no="2.2">
			<desc>
				mode:fiber unicast, show port5 counters
			</desc>
			<log-file>step2.2_unicast_counters.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show interface ${sw1.port5} counters'
			</ssh>
		</step>


		<step no="2.3.1">
			<desc>
				mode:fiber unicast, Get tx1 send pkts
			</desc>
			<setvar name="tx1.send.unicast.pkts">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step2.1_unicastPkts.log -t ${tx_port1}
			</setvar>
		</step>

		<step no="2.3.2">
			<desc>
				mode:fiber unicast, Get tx1 send octets
			</desc>
			<setvar name="tx1.send.unicast.octets">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step2.1_unicastPkts.log -t ${tx_port1} -m 'octets' -s ${pkt_size}
			</setvar>
		</step>

		<step no="2.4.1">
			<desc>
				mode:fiber unicast, Get port5 receive unicast pkts
			</desc>
			<setvar name="port5.receive.unicast.pkts">
				python ${bin.dir}/get_sw_stats.py -f ${log.dir}/step2.2_unicast_counters.log -p ${sw1.port5} -s iu
			</setvar>
		</step>

		<step no="2.4.2">
			<desc>
				mode:fiber unicast, Get port5 receive octets
			</desc>
			<setvar name="port5.receive.unicast.octets">
				python ${bin.dir}/get_sw_stats.py -f ${log.dir}/step2.2_unicast_counters.log -p ${sw1.port5} -s io
			</setvar>
		</step>
		<step no="2.5">
			<desc>
				mode:fiber unicast, check if tx1.send = port5.receive
			</desc>
			<log-file>step2.5_check.log</log-file>
			<script>
				python ${bin.dir}/check_sum.py -s ${tx1.send.unicast.pkts} -s ${tx1.send.unicast.octets} -c ${port5.receive.unicast.pkts} -c ${port5.receive.unicast.octets} > ${log.dir}/${log.file}
			</script>
			<log-match>-e "The two lists' sum are the same"</log-match>
		</step>

		<step no="3.1">
			<desc>
				mode:fiber, clear counters
			</desc>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'clear interface ${sw1.port5} counters'
			</ssh>
		</step>

		<step no="3.2">
			<desc>
				mode:fiber multicast, port5 and send multicastPkts pkts
			</desc>
			<log-file>step3.2_multicastPkts.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="900">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1} -phyList ${sw1.port5.ixia_port.phytype} -tclServerIP ${pub.tclserver1.ip}"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0100.0000.0015
				-mac_src 0000.0000.0016
				-frame_length ${pkt_size}"
				-v ""
				<br />
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v "clear_statistic -portList ${tx_port1}"
				-v ""
				-v "start_transmit -portList ${tx_port1}"
				-v ""
				-v "wait_time -second 5"
				-v ""
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v "get_statistic -txPortList ${tx_port1} -rxPortList ${tx_port1}"
				-v ""
				-v "exit"
			</ssh>
		</step>

		<step no="3.3">
			<desc>
				mode:fiber multicast, show port5 counters
			</desc>
			<log-file>step3.3_multicast_counters.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show interface ${sw1.port5} counters'
			</ssh>
		</step>


		<step no="3.4.1">
			<desc>
				mode:fiber multicast, Get tx1 send pkts
			</desc>
			<setvar name="tx1.send.multicast.pkts">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step3.2_multicastPkts.log -t ${tx_port1}
			</setvar>
		</step>

		<step no="3.4.2">
			<desc>
				mode:fiber multicast, Get tx1 send octets
			</desc>
			<setvar name="tx1.send.multicast.octets">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step3.2_multicastPkts.log -t ${tx_port1} -m 'octets' -s ${pkt_size}
			</setvar>
		</step>

		<step no="3.5.1">
			<desc>
				mode:fiber multicast, Get port5 receive multicast pkts
			</desc>
			<setvar name="port5.receive.multicast.pkts">
				python ${bin.dir}/get_sw_stats.py -f ${log.dir}/step3.3_multicast_counters.log -p ${sw1.port5} -s im
			</setvar>
		</step>

		<step no="3.5.2">
			<desc>
				mode:fiber multicast, Get port5 receive octets
			</desc>
			<setvar name="port5.receive.multicast.octets">
				python ${bin.dir}/get_sw_stats.py -f ${log.dir}/step3.3_multicast_counters.log -p ${sw1.port5} -s io
			</setvar>
		</step>

		<step no="3.6">
			<desc>
				mode:fiber multicast, check if tx1.send = port5.receive
			</desc>
			<log-file>step3.6_check.log</log-file>
			<script>
				python ${bin.dir}/check_sum.py -s ${tx1.send.multicast.pkts} -s ${tx1.send.multicast.octets} -c ${port5.receive.multicast.pkts} -c ${port5.receive.multicast.octets} > ${log.dir}/${log.file}
			</script>
			<log-match>-e "The two lists' sum are the same"</log-match>
		</step>

		<step no="4.1">
			<desc>
				mode:fiber, clear counters
			</desc>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'clear interface ${sw1.port5} counters'
			</ssh>
		</step>


		<step no="4.2">
			<desc>
				mode:fiber broadcast, port5 and send broadcastPkts pkts
			</desc>
			<log-file>step4.2_broadcastPkts.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="900">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1} -phyList ${sw1.port5.ixia_port.phytype} -tclServerIP ${pub.tclserver1.ip}"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst ffff.ffff.ffff
				-mac_src 0000.0000.0016
				-frame_length ${pkt_size}"
				-v ""
				<br />
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v "clear_statistic -portList ${tx_port1}"
				-v ""
				-v "start_transmit -portList ${tx_port1}"
				-v ""
				-v "wait_time -second 5"
				-v ""
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v "get_statistic -txPortList ${tx_port1} -rxPortList ${tx_port1}"
				-v ""
				-v "exit"
			</ssh>
		</step>

		<step no="4.3">
			<desc>
				mode:fiber broadcast, show port5 counters
			</desc>
			<log-file>step4.3_broadcast_counters.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show interface ${sw1.port5} counters'
			</ssh>
		</step>


		<step no="4.4.1">
			<desc>
				mode:fiber broadcast, Get tx1 send pkts
			</desc>
			<setvar name="tx1.send.broadcast.pkts">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step4.2_broadcastPkts.log -t ${tx_port1}
			</setvar>
		</step>

		<step no="4.4.2">
			<desc>
				mode:fiber broadcast, Get tx1 send octets
			</desc>
			<setvar name="tx1.send.broadcast.octets">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step4.2_broadcastPkts.log -t ${tx_port1} -m 'octets' -s ${pkt_size}
			</setvar>
		</step>

		<step no="4.5.1">
			<desc>
				mode:fiber broadcast, Get port5 receive broadcast pkts
			</desc>
			<setvar name="port5.receive.broadcast.pkts">
				python ${bin.dir}/get_sw_stats.py -f ${log.dir}/step4.3_broadcast_counters.log -p ${sw1.port5} -s ib
			</setvar>
		</step>

		<step no="4.5.2">
			<desc>
				mode:fiber broadcast, Get port5 receive octets
			</desc>
			<setvar name="port5.receive.broadcast.octets">
				python ${bin.dir}/get_sw_stats.py -f ${log.dir}/step4.3_broadcast_counters.log -p ${sw1.port5} -s io
			</setvar>
		</step>

		<step no="4.6">
			<desc>
				mode:fiber broadcast, check if tx1.send = port5.receive
			</desc>
			<log-file>step4.6_check.log</log-file>
			<script>
				python ${bin.dir}/check_sum.py -s ${tx1.send.broadcast.pkts} -s ${tx1.send.broadcast.octets} -c ${port5.receive.broadcast.pkts} -c ${port5.receive.broadcast.octets} > ${log.dir}/${log.file}
			</script>
			<log-match>-e "The two lists' sum are the same"</log-match>
		</step>

	</stage>
</testcase>