<testcase>
	<brief>(IxPort: F=0) Verify the different SFP ports are aggregated into one port channel;</brief>
	<priority>Low</priority>
	<automated>yes</automated>
	<numofsw>1</numofsw>
	<tbtype>winlin</tbtype>

	<description>
		Verify the different BASE-X ports are aggregated into one port channel;
	</description>
	<comment>
		sw1.port1=eth1/21;
		sw1.port1.phytype=copper;
		sw1.port5=eth1/25;
		sw1.port1.ixia_port=1/2/1;
		sw1.port1.ixia_port.phytype=copper;
		sw1.terminal.port=2016;
		sw1.conserver.ip=localhost
		ap1.cons_name=tb1-SR2024-2
		pub.chassis1.ip=10.155.33.216;
		pub.tclserver1.ip=10.155.30.164;
		pub.tclclient1.ip=10.155.40.10;
		sw1.tclclient.ip=10.155.32.228;
		sw1.mgmtport=eth1/1;
		sw1.mgmtvlan=121;
		sw1.conserver.ip=10.155.32.228;
		sw1.conserver.user=root;
		sw1.conserver.passwd=aerohive;
		sw1.cons_name=tb1-SR2024-2;
		sw1.user=admin;
		sw1.passwd=aerohive;
		sw1.prompt="AH-[a-z0-9A-Z_]*#";
	</comment>
	<property name="correct_vlan" value="101" />
	<property name="incorrect_vlan" value="102" />
	<property name="tcl_script_server.ip" value="10.155.32.129" />
	<property name="tcl_script_server.user" value="root" />
	<property name="tcl_script_server.passwd" value="aerohive" />
	<property name="tcl_script_server.path" value="/home/python/tcl/v1" />
	<property name="agg_id" value="1" />
	<property name="agg_speed" value="1000" />
	<property name="incorrect_speed" value="10" />
	<stage>
		<step no="1.0.1">
			<desc>
				Show interface mgt0 to get ip address
			</desc>
			<log-file>step1.0.1_mgt0_ip_info.log</log-file>
			<console target="sw1">
				-v 'show interface mgt0'
				-v "console timeout 0"
				-v "console page 0"
			</console>
		</step>

		<step no="1.0.2">
			<desc>
				Get mgt0's ip address
			</desc>
			<setvar name="sw1.ip">
				python ${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -f ${log.dir}/step1.0.1_mgt0_ip_info.log -t str
			</setvar>
		</step>

		<step no="1.1">
			<desc>
				mode:fibber,set 2 ports to different configuration, auto/1000
			</desc>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'interface ${sw1.port5} shutdown'
				-v 'interface ${sw1.port5} speed auto'
				-v 'interface ${sw1.port6} shutdown'
				-v 'interface ${sw1.port6} speed 1000'
			</ssh>
		</step>

		<step no="1.2">
			<desc>
				mode:fibber,show run to confirm; member interfaces are different from the others before add them to agg
			</desc>
			<log-file>step1.2_show_run.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show running-config'
			</ssh>
			<log-match>-e "interface ${sw1.port5} speed auto" -n</log-match>
			<log-match>-e "interface ${sw1.port5} duplex auto" -n</log-match>
			<log-match>-e "interface ${sw1.port6} speed 1000"</log-match>
			<log-match>-e "interface ${sw1.port6} duplex full"</log-match>
		</step>

		<step no="1.3">
			<desc>
				mode:fibber,show interface to confirm; member interfaces are different from the others before add them to agg
			</desc>
			<log-file>step1.3_show_interface.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show interface'
			</ssh>
			<log-match>-i "${sw1.port5}" -p 5 -i "auto" -p 6 -i "auto"</log-match>
			<log-match>-i "${sw1.port6}" -i "1G" -i "full"</log-match>
		</step>

		<step no="2.1">
			<desc>
				mode:fibber,set agg 1 1000/full/enable and configure 2 interfaces to the agg
			</desc>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'agg ${agg_id}'
				-v 'interface agg${agg_id} shutdown'
				-v 'interface agg${agg_id} speed 1000'
				-v 'interface agg${agg_id} flow-control enable'
				-v 'interface ${sw1.port5} agg ${agg_id}'
				-v 'interface ${sw1.port6} agg ${agg_id}'
			</ssh>
		</step>

		<step no="2.2">
			<desc>
				mode:fibber,show run to confirm; member interfaces are the same as agg(cover the config itself)
			</desc>
			<log-file>step2.2_show_run.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show running-config'
			</ssh>
			<log-match>-e "interface ${sw1.port5} speed auto" -n</log-match>
			<log-match>-e "interface ${sw1.port5} duplex auto" -n</log-match>
			<log-match>-e "interface ${sw1.port6} speed 1000" -n</log-match>
			<log-match>-e "interface ${sw1.port6} duplex full" -n</log-match>
		</step>

		<step no="2.3">
			<desc>
				mode:fibber,show inter to confirm(speed/duplex/flowcotrol); member interfaces are the same as agg
			</desc>
			<log-file>step2.3_show_inter.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show interface'
			</ssh>
			<log-match>-i "${sw1.port5}" -i "1G" -i "full" -p 7 -i "enable"</log-match>
			<log-match>-i "${sw1.port6}" -i "1G" -i "full" -p 7 -i "enable"</log-match>
			<log-match>-i "agg${agg_id}" -i "1G" -i "full" -p 7 -i "enable"</log-match>
		</step>

		<step no="3.1">
			<desc>
				mode:fibber,reconfigure port1; should show error info
			</desc>
			<log-file>step3.1_reconfigure.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'interface ${sw1.port5} duplex half'
			</ssh>
			<!-- need no error check -->
			<no-error-check />
			<log-match>-e "Error: This port is in agg ${agg_id}"</log-match>
		</step>

		<step no="4.1">
			<desc>
				mode:fibber,no agg 1
			</desc>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'no agg ${agg_id}'
			</ssh>
		</step>

		<step no="4.2">
			<desc>
				mode:fibber,no agg 1, show run to confirm; member interfaces are the same as agg(cover the config itself)
			</desc>
			<log-file>step4.2_show_run.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show running-config'
			</ssh>
			<log-match>-e "interface ${sw1.port5} speed 1000"</log-match>
			<log-match>-e "interface ${sw1.port5} duplex full"</log-match>
			<log-match>-e "interface ${sw1.port6} speed 1000"</log-match>
			<log-match>-e "interface ${sw1.port6} duplex full"</log-match>
		</step>

		<step no="4.3">
			<desc>
				mode:fibber, no agg 1, show inter to confirm(speed/duplex/flowcontrol); member interfaces are the same as agg
			</desc>
			<log-file>step4.3_show_inter.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show interface'
			</ssh>
			<log-match>-i "${sw1.port5}" -i "1G" -i "full" -p 7 -i "enable"</log-match>
			<log-match>-i "${sw1.port6}" -i "1G" -i "full" -p 7 -i "enable"</log-match>
		</step>

	</stage>
</testcase>