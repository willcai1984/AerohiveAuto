<testcase>
	<brief>Whenever IDP detects an AP in its neighborhood, it will report rogue APs to HM </brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	<description>
		Description:
		Whenever IDP detects an AP in its neighborhood, it will report rogue APs to HM
		Pre-condition:
		AP connect to HM
		AP config of IDP
		Test procedure:
		1.Open _debug capwap trap and debug console to check if trap be generated and sent out
		2.Check rogue AP by CLI “show interface wifi0 wlan-idp ap-info”, check if rogue AP be reported to HM(Rogue APs)
		Expect result:
		Rogue APs be reported to HM
	</description>
	<stage>

		<step no="1">
			<desc>Set config to AP1 </desc>
			<ssh target="ap1">
				-v "capwap client enable"
				-v "capwap client server name ${pub.hm1.ip}"
			</ssh>
		</step>

		<step no="2" delay="180">
			<desc>Show capwap client by CLI</desc>
			<log-file>step2_capwap_state.log</log-file>
			<ssh target="ap1">
				-v "show capwap client"
			</ssh>
			<log-match>-e "RUN state: Connected securely to the CAPWAP server" -c</log-match>
		</step>

		<step no="3">
			<desc>Clear log all</desc>
			<ssh target="ap1">
				-v "clear log all"
			</ssh>
		</step>

		<step no="4">
			<desc>Set IDP config to AP1</desc>
			<ssh target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "security wlan-idp profile ${ssid.name}"
				-v "security wlan-idp profile ${ssid.name} ap-policy"
				-v "security wlan-idp profile ${ssid.name} ap-policy ap-oui"
				-v "security wlan-idp profile ${ssid.name} ap-policy ap-oui entry 00:19:77"
				-v "security wlan-idp profile ${ssid.name} ap-policy ssid"
				-v "security wlan-idp profile ${ssid.name} ap-policy ssid entry ${ssid.name}"
				-v "security wlan-idp profile ${ssid.name} ap-policy short-preamble"
				-v "security wlan-idp profile ${ssid.name} ap-policy short-beacon"
				-v "no security wlan-idp profile ${ssid.name} ap-detection connected"
				-v "interface wifi0 wlan-idp profile ${ssid.name}"
				-v "save config"
			</ssh>
		</step>

		<step no="5">
			<desc>show interface to check some rogue AP be detected</desc>
			<log-file>rouge_ap.log</log-file>
			<ssh target="ap1">
				-v "show interface wifi0 wlan-idp ap-info"
			</ssh>
			<log-match>-n -e "Total count : 0" -c</log-match>
		</step>

		<step no="6">
			<desc>Show log buffered to check if rogue AP be detected</desc>
			<log-file>rogue_ap_info.log</log-file>
			<ssh target="ap1">
				-v "show logging buffered | in notice"
			</ssh>
			<log-match>-i "IDP: AP" -e "detected" -c</log-match>
			<no-error-check />
		</step>

	</stage>

</testcase>