<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>When client connect to AP and obtain ip address, trap will be sent to SNMP server Precondition Enable trap over SNMP by snmp trapinfo oversnmp in AP Disable trap over Capwap by no trapinfo overcapwap in AP Set trap host by snmp traphost v2c a.b.c.d with default community (a.b.c.d is PC's ip address) in AP Create a SSID and bind it to interface wifi0 makes an association and its IP address, hostname, and User name is obtained." ::= { ahTrapModule 6}  </brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		Test Procedure:

		1. Use Wireshark or Ethereal to capture packet , then use a laptop
		connect to SSID, after laptop obtain ip address, check if trap be
		sent to SNMP server, check trap format
		2. Change community and do the same operation, check if trap be
		sent to SNMP server, check trap format
		3. Change version to v1 with default community, use a laptop
		connect to SSID, after laptop obtain ip address, check if trap
		can be sent to SNMP server, check trap format
		4. Change community, do the same operation as above, check if
		trap can be sent to SNMP server, check trap format
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="checkfile" value="/tmp/checkfile" />

	<stage>
		<step no="0">
			<desc>rm checkfile</desc>
			<ssh host="${tb.server1}">
				-v "rm -f ${checkfile}"
			</ssh>
		</step>

		<step no="0.1">
			<desc>
				Enable trap over SNMP by snmp trapinfo oversnmp in AP
				Disable trap over Capwap by no trapinfo overcapwap in AP
				Set trap host by snmp traphost v2c a.b.c.d with default community (a.b.c.d is PCâ€™s ip address) in AP
			</desc>
			<telnet target="ap1">
				-v "snmp trap-host v2c ${tb.server1}"
				-v "snmp trap-info over-snmp"
				-v "no snmp trap-info over-capwap"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="0.2">
			<desc>ifconfig to show the ip add</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name} up"
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="0.3">
			<desc>Get laptop1's mac</desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -m -width
			</setvar>
		</step>

		<step no="0.4">
			<desc>show mgt0's ip of ap1</desc>
			<log-file>ap1_info.log</log-file>
			<console target="ap1" timeout="80">
				-v "show interface"
			</console>
		</step>

		<step no="0.5">
			<desc>Get ap1's mac</desc>
			<setvar name="ap1.mgt0.mac">
				getbyrexp.py -f ${log.dir}/ap1_info.log -p "Mgt0\s+(.*?)\s+" -t str
			</setvar>
		</step>

		<include prefix="1.1" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn1, sta1, ap1" />

		<step no="1.2">
			<desc>check log file</desc>
			<log-file>check_log_file1.log</log-file>
			<ssh host="${tb.server1}">
				-v "cat ${checkfile}"
				-v "rm -f ${checkfile}"
			</ssh>
		</step>

		<step no="2">
			<desc>
				2. Change community and do the same operation, check if trap be
				sent to SNMP server, check trap format
			</desc>
			<console target="ap1">
				-v "no snmp trap-host v2c ${tb.server1}"
				-v "snmp trap-host v2c ${tb.server1} community aerohive"
			</console>
		</step>

		<include prefix="2.1" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn1, sta1, ap1" />

		<step no="2.2">
			<desc>check log file</desc>
			<log-file>check_log_file2.log</log-file>
			<ssh host="${tb.server1}">
				-v "cat ${checkfile}"
				-v "rm -f ${checkfile}"
			</ssh>

		</step>

		<step no="3">
			<desc>
				3. Change version to v1 with default community, use a laptop
				connect to SSID, after laptop obtain ip address, check if trap
				can be sent to SNMP server, check trap format
			</desc>
			<telnet target="ap1">
				-v "no snmp trap-host v2c ${tb.server1}"
				-v "snmp trap-host v1 ${tb.server1}"
			</telnet>
		</step>

		<include prefix="3.1" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn1, sta1, ap1" />

		<step no="3.2">
			<desc>check log file</desc>
			<log-file>check_log_file3.log</log-file>
			<ssh host="${tb.server1}">
				-v "cat ${checkfile}"
				-v "rm -f ${checkfile}"
			</ssh>

		</step>

		<step no="4">
			<desc>
				4. Change community, do the same operation as above, check if
				trap can be sent to SNMP server, check trap format
			</desc>
			<telnet target="ap1">
				-v "no snmp trap-host v1 ${tb.server1}"
				-v "snmp trap-host v1 ${tb.server1} community aerohive"
			</telnet>
		</step>

		<include prefix="4.1" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn1, sta1, ap1" />

		<step no="4.2">
			<desc>check log file</desc>
			<log-file>check_log_file4.log</log-file>
			<ssh host="${tb.server1}">
				-v "cat ${checkfile}"
				-v "rm -f ${checkfile}"
			</ssh>

		</step>
	</stage>
</testcase>