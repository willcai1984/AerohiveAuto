<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>whenever a HiveAP (802.11n product line) boots up or changes power levels, trap will be sent to SNMP server(only support AP300) Precondition Enable trap over SNMP by snmp trapinfo oversnmp in AP Disable trap over Capwap by no trapinfo overcapwap in AP Set trap host by snmp traphost v2c a.b.c.d with default community (a.b.c.d is PC's ip address) in AP Create a SSID and bind it to interface wifi0 AP connect to Switch via POE Save config product line) boots up or changes power levels." ::= { ahTrapModule 7} 6.1.2.8. Ft_SNMP_TrapoverSNMP_8</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		Test Procedure:

		1. Use Wireshark or Ethereal to capture packet, change power of
		AP, check if trap be sent to SNMP server, check trap format
		2. Change community and repeat the above operation, check if
		trap be sent to SNMP server, check trap format
		3. Change version to v1 with default community ,then change
		power, check if trap can be sent to SNMP server, check trap
		format
		4. Change community, do the same operation, check if trap can be
		sent to SNMP server, check trap format
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<property name="checkfile" value="/tmp/checkfile" />

	<stage>
		<step no="0.1">
			<desc>rm checkfile</desc>
			<ssh host="${tb.server1}">
				-v "rm -f ${checkfile}"
			</ssh>
		</step>

		<step no="0.2">
			<desc>
				open tshark on mpc background
			</desc>
			<log-file>start_tshark.log</log-file>
			<ssh host="${tb.server1}">
				-v "nohup tshark -i ${tb.server1.tif.name} -w /tmp/tshark_log.pcap &gt; yyy.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="0.3">
			<desc>
				get process id
			</desc>
			<setvar name="process_id1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/start_tshark.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="1">
			<desc>
				Enable trap over SNMP by snmp trapinfo oversnmp in AP
				Disable trap over Capwap by no trapinfo overcapwap in AP
				Set trap host by snmp traphost v2c a.b.c.d with default community (a.b.c.d is PCâ€™s ip address) in AP
			</desc>
			<telnet target="ap1">
				-v "boot-param poe-max-power low"
				-v "snmp trap-host v2c ${tb.server1}"
				-v "snmp trap-info over-snmp"
				-v "no snmp trap-info over-capwap"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				1. Use Wireshark or Ethereal to capture packet, change power of
				AP, check if trap be sent to SNMP server, check trap format
			</desc>
			<telnet target="ap1">
				-v "boot-param poe-max-power high"
			</telnet>
		</step>

		<step no="1.2" delay="30">
			<desc>check log file</desc>
			<log-file>check_log_file1.log</log-file>
			<ssh host="${tb.server1}">
				-v "cat ${checkfile}"
				-v "rm -f ${checkfile}"
			</ssh>
			<log-match>-c -i "${tb.server1}" -i "${ap1.mgt0.ip}"</log-match>
			<log-match>-c -i "DISMAN-EVENT-MIB::sysUpTimeInstance" -i "SNMPv2-MIB::snmpTrapOID.0 = AH-TRAP-MIB::ahPoEEvent, AH-TRAP-MIB::ahAPId" -i "AH-TRAP-MIB::ahAPName" -i "AH-TRAP-MIB::ahTrapDesc = System power status: generate a PoE trap,PoE0 power 35000(mw), PoE1 power 0(mw), AH-TRAP-MIB::ahCode = 6, AH-TRAP-MIB::ahObjectName = system power status, AH-TRAP-MIB::ahPowerSrc = adaptor, AH-TRAP-MIB::ahPoEEth0On = 0, AH-TRAP-MIB::ahPoEEth0Pwr = 0, AH-TRAP-MIB::ahPoEEth1On = 0, AH-TRAP-MIB::ahPoEEth1Pwr = 0, AH-TRAP-MIB::ahPoEEth0MaxSpeed = eth1000, AH-TRAP-MIB::ahPoEEth1MaxSpeed = eth1000, AH-TRAP-MIB::ahPoEWifi0Setting = tx2rx3, AH-TRAP-MIB::ahPoEWifi1Setting = tx2rx3, AH-TRAP-MIB::ahPoEWifi2Setting = invalid"</log-match>
		</step>

		<step no="1.2">
			<desc>check log file</desc>
			<log-file>check_tshark1.log</log-file>
			<ssh host="${tb.server1}">
				-v "tshark -r /tmp/tshark_log.pcap -V -R snmp"
			</ssh>
			<log-match>-c -i "version: v2c"</log-match>
			<no-error-check />
		</step>

		<step no="1.3">
			<desc>
				kill tshark
			</desc>
			<ssh host="${tb.server1}">
				-v "kill ${process_id1}"
			</ssh>
		</step>

		<step no="1.4">
			<desc>
				remove tmpfile
			</desc>
			<ssh host="${tb.server1}">
				-v "rm -f /tmp/tshark_log.pcap"
			</ssh>
		</step>

		<step no="1.5">
			<desc>
				open tshark on mpc background
			</desc>
			<log-file>start_tshark.log</log-file>
			<ssh host="${tb.server1}">
				-v "nohup tshark -i ${tb.server1.tif.name} -w /tmp/tshark_log.pcap &gt; yyy.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="1.6">
			<desc>
				get process id
			</desc>
			<setvar name="process_id2">
				${bin.dir}/getbyrexp.py -f ${log.dir}/start_tshark.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="2">
			<desc>
				2. Change community and repeat the above operation, check if
				trap be sent to SNMP server, check trap format
			</desc>
			<console target="ap1">
				-v "no snmp trap-host v2c ${tb.server1}"
				-v "snmp trap-host v2c ${tb.server1} community aerohive"
			</console>
		</step>

		<step no="2.1">
			<desc>
				boot-param poe-max-power low
			</desc>
			<telnet target="ap1">
				-v "boot-param poe-max-power low"
			</telnet>
		</step>

		<step no="2.2" delay="30">
			<desc>check log file</desc>
			<log-file>check_log_file2.log</log-file>
			<ssh host="${tb.server1}">
				-v "cat ${checkfile}"
				-v "rm -f ${checkfile}"
			</ssh>
			<log-match>-c -i "${tb.server1}" -i "${ap1.mgt0.ip}"</log-match>
			<log-match>-c -i "DISMAN-EVENT-MIB::sysUpTimeInstance" -i "SNMPv2-MIB::snmpTrapOID.0 = AH-TRAP-MIB::ahPoEEvent, AH-TRAP-MIB::ahAPId" -i "AH-TRAP-MIB::ahAPName" -i "AH-TRAP-MIB::ahTrapDesc = System power status: generate a PoE trap,PoE0 power 35000(mw), PoE1 power 0(mw), AH-TRAP-MIB::ahCode = 6, AH-TRAP-MIB::ahObjectName = system power status, AH-TRAP-MIB::ahPowerSrc = adaptor, AH-TRAP-MIB::ahPoEEth0On = 0, AH-TRAP-MIB::ahPoEEth0Pwr = 0, AH-TRAP-MIB::ahPoEEth1On = 0, AH-TRAP-MIB::ahPoEEth1Pwr = 0, AH-TRAP-MIB::ahPoEEth0MaxSpeed = eth100, AH-TRAP-MIB::ahPoEEth1MaxSpeed = linkdown, AH-TRAP-MIB::ahPoEWifi0Setting = tx2rx3, AH-TRAP-MIB::ahPoEWifi1Setting = tx2rx3, AH-TRAP-MIB::ahPoEWifi2Setting = invalid"</log-match>
		</step>

		<step no="2.3">
			<desc>check log file</desc>
			<log-file>check_tshark2.log</log-file>
			<ssh host="${tb.server1}">
				-v "tshark -r /tmp/tshark_log.pcap -V -R snmp"
			</ssh>
			<log-match>-c -i "version: v2c"</log-match>
			<no-error-check />
		</step>

		<step no="2.4">
			<desc>
				kill tshark
			</desc>
			<ssh host="${tb.server1}">
				-v "kill ${process_id2}"
			</ssh>
		</step>

		<step no="2.5">
			<desc>
				remove tmpfile
			</desc>
			<ssh host="${tb.server1}">
				-v "rm -f /tmp/tshark_log.pcap"
			</ssh>
		</step>

		<step no="2.6">
			<desc>
				open tshark on mpc background
			</desc>
			<log-file>start_tshark.log</log-file>
			<ssh host="${tb.server1}">
				-v "nohup tshark -i ${tb.server1.tif.name} -w /tmp/tshark_log.pcap &gt; yyy.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="2.7">
			<desc>
				get process id
			</desc>
			<setvar name="process_id3">
				${bin.dir}/getbyrexp.py -f ${log.dir}/start_tshark.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="3">
			<desc>
				3. Change version to v1 with default community ,then change
				power, check if trap can be sent to SNMP server, check trap
				format
			</desc>
			<telnet target="ap1">
				-v "no snmp trap-host v2c ${tb.server1}"
				-v "snmp trap-host v1 ${tb.server1}"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				boot-param poe-max-power high
			</desc>
			<telnet target="ap1">
				-v "boot-param poe-max-power high"
			</telnet>
		</step>

		<step no="3.2" delay="30">
			<desc>check log file</desc>
			<log-file>check_log_file3.log</log-file>
			<ssh host="${tb.server1}">
				-v "cat ${checkfile}"
				-v "rm -f ${checkfile}"
			</ssh>
			<log-match>-c -i "${tb.server1}" -i "${ap1.mgt0.ip}"</log-match>
			<log-match>-c -i "DISMAN-EVENT-MIB::sysUpTimeInstance" -i "SNMPv2-MIB::snmpTrapOID.0 = AH-TRAP-MIB::ahTrapModule.0.7, AH-TRAP-MIB::ahAPId" -i "AH-TRAP-MIB::ahAPName" -i "AH-TRAP-MIB::ahTrapDesc = System power status: generate a PoE trap,PoE0 power 35000(mw), PoE1 power 0(mw), AH-TRAP-MIB::ahCode = 6, AH-TRAP-MIB::ahObjectName = system power status, AH-TRAP-MIB::ahPowerSrc = adaptor, AH-TRAP-MIB::ahPoEEth0On = 0, AH-TRAP-MIB::ahPoEEth0Pwr = 0, AH-TRAP-MIB::ahPoEEth1On = 0, AH-TRAP-MIB::ahPoEEth1Pwr = 0, AH-TRAP-MIB::ahPoEEth0MaxSpeed = eth1000, AH-TRAP-MIB::ahPoEEth1MaxSpeed = eth1000, AH-TRAP-MIB::ahPoEWifi0Setting = tx2rx3, AH-TRAP-MIB::ahPoEWifi1Setting = tx2rx3, AH-TRAP-MIB::ahPoEWifi2Setting = invalid, SNMP-COMMUNITY-MIB::snmpTrapAddress.0 = 192.168.151.155, SNMP-COMMUNITY-MIB::snmpTrapCommunity.0 = \\\&quot;hivecommunity\\\&quot;, SNMPv2-MIB::snmpTrapEnterprise.0 = AH-TRAP-MIB::ahTrapModule"</log-match>
		</step>

		<step no="3.3">
			<desc>check log file</desc>
			<log-file>check_tshark3.log</log-file>
			<ssh host="${tb.server1}">
				-v "tshark -r /tmp/tshark_log.pcap -V -R snmp"
			</ssh>
			<log-match>-c -i "version: version-1"</log-match>
			<no-error-check />
		</step>

		<step no="3.4">
			<desc>
				kill tshark
			</desc>
			<ssh host="${tb.server1}">
				-v "kill ${process_id3}"
			</ssh>
		</step>

		<step no="3.5">
			<desc>
				remove tmpfile
			</desc>
			<ssh host="${tb.server1}">
				-v "rm -f /tmp/tshark_log.pcap"
			</ssh>
		</step>

		<step no="3.6">
			<desc>
				open tshark on mpc background
			</desc>
			<log-file>start_tshark.log</log-file>
			<ssh host="${tb.server1}">
				-v "nohup tshark -i ${tb.server1.tif.name} -w /tmp/tshark_log.pcap &gt; yyy.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="3.7">
			<desc>
				get process id
			</desc>
			<setvar name="process_id4">
				${bin.dir}/getbyrexp.py -f ${log.dir}/start_tshark.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="4">
			<desc>
				4. Change community, do the same operation, check if trap can be
				sent to SNMP server, check trap format
			</desc>
			<telnet target="ap1">
				-v "no snmp trap-host v1 ${tb.server1}"
				-v "snmp trap-host v1 ${tb.server1} community aerohive"
			</telnet>
		</step>

		<step no="4.1">
			<desc>
				boot-param poe-max-power low
			</desc>
			<telnet target="ap1">
				-v "boot-param poe-max-power low"
			</telnet>
		</step>

		<step no="4.2" delay="30">
			<desc>check log file</desc>
			<log-file>check_log_file4.log</log-file>
			<ssh host="${tb.server1}">
				-v "cat ${checkfile}"
				-v "rm -f ${checkfile}"
			</ssh>
			<log-match>-c -i "${tb.server1}" -i "${ap1.mgt0.ip}"</log-match>
			<log-match>-c -i "DISMAN-EVENT-MIB::sysUpTimeInstance" -i "SNMPv2-MIB::snmpTrapOID.0 = AH-TRAP-MIB::ahTrapModule.0.7, AH-TRAP-MIB::ahAPId" -i "AH-TRAP-MIB::ahAPName" -i "AH-TRAP-MIB::ahTrapDesc = System power status: generate a PoE trap,PoE0 power 35000(mw), PoE1 power 0(mw), AH-TRAP-MIB::ahCode = 6, AH-TRAP-MIB::ahObjectName = system power status, AH-TRAP-MIB::ahPowerSrc = adaptor, AH-TRAP-MIB::ahPoEEth0On = 0, AH-TRAP-MIB::ahPoEEth0Pwr = 0, AH-TRAP-MIB::ahPoEEth1On = 0, AH-TRAP-MIB::ahPoEEth1Pwr = 0, AH-TRAP-MIB::ahPoEEth0MaxSpeed = eth100, AH-TRAP-MIB::ahPoEEth1MaxSpeed = linkdown, AH-TRAP-MIB::ahPoEWifi0Setting = tx2rx3, AH-TRAP-MIB::ahPoEWifi1Setting = tx2rx3, AH-TRAP-MIB::ahPoEWifi2Setting = invalid, SNMP-COMMUNITY-MIB::snmpTrapAddress.0 = 192.168.151.155, SNMP-COMMUNITY-MIB::snmpTrapCommunity.0 = \\\&quot;aerohive\\\&quot;, SNMPv2-MIB::snmpTrapEnterprise.0 = AH-TRAP-MIB::ahTrapModule"</log-match>
		</step>

		<step no="4.3">
			<desc>check log file</desc>
			<log-file>check_tshark4.log</log-file>
			<ssh host="${tb.server1}">
				-v "tshark -r /tmp/tshark_log.pcap -V -R snmp"
			</ssh>
			<log-match>-c -i "version: version-1"</log-match>
			<no-error-check />
		</step>

		<step no="4.4">
			<desc>
				kill tshark
			</desc>
			<log-file>start_tshark.log</log-file>
			<ssh host="${tb.server1}">
				-v "kill ${process_id4}"
			</ssh>
		</step>

		<step no="4.5">
			<desc>
				remove tmpfile
			</desc>
			<ssh host="${tb.server1}">
				-v "rm -f /tmp/tshark_log.pcap"
			</ssh>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					remove tmpfile
				</desc>
				<ssh host="${tb.server1}">
					-v "rm -f /tmp/tshark_log.pcap"
				</ssh>
			</step>

			<step no="1">
				<desc>
					kill tshark
				</desc>
				<ssh host="${tb.server1}">
					-v "kill ${process_id1}"
				</ssh>
			</step>

			<step no="2">
				<desc>
					kill tshark
				</desc>
				<ssh host="${tb.server1}">
					-v "kill ${process_id2}"
				</ssh>
			</step>

			<step no="3">
				<desc>
					kill tshark
				</desc>
				<ssh host="${tb.server1}">
					-v "kill ${process_id3}"
				</ssh>
			</step>

			<step no="4">
				<desc>
					kill tshark
				</desc>
				<ssh host="${tb.server1}">
					-v "kill ${process_id4}"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>