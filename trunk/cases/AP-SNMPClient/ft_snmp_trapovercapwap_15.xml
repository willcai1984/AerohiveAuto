<testcase>
	<brief>Whenever interface state change occurs, trap will be sent to HM </brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>linux</tbtype>
	<description>
		Description:
		Whenever interface state change occurs, trap will be sent to HM
		Pre-condition:
		AP connect to HM
		Create a hive and bind it to interface mgt0
		Test procedure:
		1.Open _debug capwap trap and debug console to check if trap be generated and sent out
		2.Up interface wifi0, check if corresponding trap be sent to HM
		3.Shutdown interface wifi0, check if corresponding trap be sent to HM
		4.Shutdown interface wifi1, check if corresponding trap be sent to HM
		5.Up interface wifi1, check if corresponding trap be sent to HM
		6.Shutdown interface eth0, check if corresponding trap be sent to HM
		7.Up interface eth0, check if corresponding trap be sent to HM
		Expect result:
		Trap be sent to HM
	</description>
	<stage>

		<step no="1">
			<desc>Set config to AP1 </desc>
			<ssh target="ap1">
				-v "capwap client enable"
				-v "capwap client server name ${pub.hm1.ip}"
			</ssh>
		</step>

		<step no="2" delay="180">
			<desc>Show capwap client by CLI</desc>
			<log-file>step2_capwap_state.log</log-file>
			<ssh target="ap1">
				-v "show capwap client"
			</ssh>
			<log-match>-e "RUN state: Connected securely to the CAPWAP server" -c</log-match>
		</step>

		<step no="3">
			<desc>Open _debug capwap trap to check trap</desc>
			<ssh target="ap1">
				-v "clear log all"
				-v "_debug capwap trap"
			</ssh>
		</step>

		<step no="4">
			<desc>Set SSID and bind it to interface wifi0 on AP</desc>
			<ssh target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "save config"
			</ssh>
		</step>

		<step no="5">
			<desc>Show log buffered to check interface wifi0.1 state change trap be generated and be sent to HM in AP1</desc>
			<log-file>step5_show_buff.log</log-file>
			<ssh target="ap1">
				-v "show logging buffered | in debug"
			</ssh>
			<log-match>-e "CAPWAP receive state change trap!" -c</log-match>
			<log-match>-e "trap object name:wifi0.1" -c</log-match>
			<log-match>-e "trap description:access interface wifi0.1 is up now" -c</log-match>
			<log-match>-e "Send capwap trap" -c</log-match>
			<no-error-check />
		</step>

		<step no="6">
			<desc>Clear log all and open debug capwap trap</desc>
			<ssh target="ap1">
				-v "clear log all"
				-v "_debug capwap trap"
			</ssh>
		</step>

		<step no="7">
			<desc>Unbind SSID from interface wifi0 on AP</desc>
			<ssh target="ap1">
				-v "no interface wifi0 ssid ${ssid.name}"
				-v "save config"
			</ssh>
		</step>

		<step no="8">
			<desc>Show log buffered to check interface wifi0.1 state change trap be generated and be sent to HM in AP1</desc>
			<log-file>step8_show_buff.log</log-file>
			<ssh target="ap1">
				-v "show logging buffered | in debug"
			</ssh>
			<log-match>-e "CAPWAP receive state change trap!" -c</log-match>
			<log-match>-e "trap object name:wifi0.1" -c</log-match>
			<log-match>-e "trap description:access interface wifi0.1 is down now" -c</log-match>
			<log-match>-e "Send capwap trap" -c</log-match>
			<no-error-check />
		</step>

		<step no="9">
			<desc>Create a hive profile and bind it to interface mgt0 on AP</desc>
			<ssh target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "save config"
			</ssh>
		</step>

		<step no="10">
			<desc>Clear log all and open debug capwap trap on AP</desc>
			<ssh target="ap1">
				-v "clear log all"
				-v "_debug capwap trap"
			</ssh>
		</step>

		<step no="11">
			<desc>Shutdown interface wifi1 on AP</desc>
			<ssh target="ap1">
				-v "interface wifi1 hive ${hive.name} shutdown"
			</ssh>
		</step>

		<step no="12">
			<desc>Show log buffered to check interface wifi1.1 state change trap be generated and be sent to HM in AP1</desc>
			<log-file>step12_show_buff.log</log-file>
			<ssh target="ap1">
				-v "show logging buffered | in debug"
			</ssh>
			<log-match>-e "CAPWAP receive state change trap!" -c</log-match>
			<log-match>-e "trap object name:wifi1.1" -c</log-match>
			<log-match>-e "trap description:backhaul interface wifi1.1 is down now" -c</log-match>
			<log-match>-e "Send capwap trap" -c</log-match>
			<no-error-check />
		</step>

		<step no="13">
			<desc>Clear log all and open debug capwap trap</desc>
			<ssh target="ap1">
				-v "clear log all"
				-v "_debug capwap trap"
			</ssh>
		</step>

		<step no="14">
			<desc>Up interface wifi1 on AP</desc>
			<ssh target="ap1">
				-v "no interface wifi1 hive ${hive.name} shutdown"
			</ssh>
		</step>

		<step no="15">
			<desc>Show log buffered to check interface wifi1.1 state change trap be generated and be sent to HM in AP1</desc>
			<log-file>step15_show_buff.log</log-file>
			<ssh target="ap1">
				-v "show logging buffered | in debug"
			</ssh>
			<log-match>-e "CAPWAP receive state change trap!" -c</log-match>
			<log-match>-e "trap object name:wifi1.1" -c</log-match>
			<log-match>-e "trap description:backhaul interface wifi1.1 is up now" -c</log-match>
			<log-match>-e "Send capwap trap" -c</log-match>
			<no-error-check />
		</step>

		<step no="16">
			<desc>Clear log all and open debug capwap trap</desc>
			<ssh target="ap1">
				-v "clear log all"
				-v "_debug capwap trap"
			</ssh>
		</step>

		<step no="17">
			<desc>Shutdown interface eth0 by CLI on AP</desc>
			<console target="ap1">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<step no="18">
			<desc>Show log buffered to check interface eth0 state change trap be generated and be sent to HM in AP1</desc>
			<log-file>step18_show_buff.log</log-file>
			<console target="ap1">
				-v "show logging buffered | in debug"
			</console>
			<log-match>-e "CAPWAP receive state change trap!" -c</log-match>
			<log-match>-e "trap object name:eth0" -c</log-match>
			<log-match>-e "trap description:backhaul interface eth0 is down now" -c</log-match>
			<log-match>-e "Send capwap trap" -c</log-match>
			<no-error-check />
		</step>

		<step no="19">
			<desc>Clear log all and open debug capwap trap</desc>
			<console target="ap1">
				-v "clear log all"
				-v "_debug capwap trap"
			</console>
		</step>

		<step no="20">
			<desc>Up interface eth0 by CLI on AP</desc>
			<console target="ap1">
				-v "no interface eth0 shutdown"
				-v "save config"
			</console>
		</step>

		<step no="21">
			<desc>Show log buffered to check interface eth0 state change trap be generated and be sent to HM in AP1</desc>
			<log-file>step21_show_buff.log</log-file>
			<console target="ap1">
				-v "show logging buffered | in debug"
			</console>
			<log-match>-e "CAPWAP receive state change trap!" -c</log-match>
			<log-match>-e "trap object name:eth0" -c</log-match>
			<log-match>-e "trap description:backhaul interface eth0 is up now" -c</log-match>
			<log-match>-e "Send capwap trap" -c</log-match>
			<no-error-check />
		</step>

	</stage>
</testcase>