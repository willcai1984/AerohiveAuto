<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>AP3 is DA , AP1 scheduled run,check if the function can work.</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		interface wifi0 and wifi1 is access mode.

		Test Procedure:
		1.Creat a radio profile named ‘na‘,set its phymode to 11na,bind it to wifi1.
		"radio profile na"
		"radio profile na phymode 11na"
		"interface wifi1 radio profile na"
		"interface wifi1 mode access"
		"ssid test-na"
		"interface wifi1 ssid test-na"
		2.Base on the current time, set schedule run time.
		"radio profile na acsp access channel-auto-select time-range XX:XX XX:XX"
		3.show wifi1's channel,save in channel list {ch1}
		"show interface wifi1 channel"
		4. Open acsp debug mode "_debug dcd chnl" "debug con"; Check if ACSP schedule run work.and all wifi1's channel in {ch1} be scaned.
		"_debug dcd chnl"
		"debug console"
		5.Creat a radio profile named 'ng',set its phymode to 11ng,bind it to wifi0.
		"radio profile ng
		"radio profile ng phymode 11ng"
		"interface wifi0 radio profile ng"
		"ssid test-ng"
		"interface wifi0 ssid test-ng"
		6.Base on the current time, set schedule run time.
		"radio profile ng acsp access
		channel-auto-select time-range XX:XX
		XX:XX"
		7.show wifi0‘s channel,save in channel list {ch2}
		"show interface wifi0 channel"
		8. Open acsp debug mode "_debug dcd chnl" "debug con"; Check if ACSP schedule run work. and all wifi0‘s channel in {ch2} be scaned.
		"_debug dcd chnl"
		"debug console"
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="1">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				1.Creat a radio profile named 'na',set its phymode to 11na,bind it to wifi1 .
				"radio profile na"
				"radio profile na phymode 11na"
				"interface wifi1 radio profile na"
				"interface wifi1 mode access"
				"ssid test_na"
				"interface wifi1 ssid test_na"
			</desc>
			<telnet target="ap1">
				-v "interface wifi1 mode access"
				-v "interface wifi0 mode access"
				-v "radio profile na"
				-v "radio profile na phymode 11na"
				-v "interface wifi1 radio profile na"
				-v "ssid ${ssid.name}1"
				-v "interface wifi1 ssid ${ssid.name}1"
			</telnet>
		</step>

		<step no="2">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				show clock for wifi1.
			</desc>
			<log-file>show_wifi1_clock_info.log</log-file>
			<telnet target="ap1">
				-v "show clock"
			</telnet>
		</step>

		<step no="3">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				get schedule start time(format:%H:%M).
			</desc>
			<setvar name="wifi1.schedule.starttime">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_wifi1_clock_info.log -p "(\d+:\d+):\d+" --script "(datetime.strptime(m.group(1),'%H:%M')+timedelta(minutes=5)).strftime('%H:%M')"
			</setvar>
		</step>

		<step no="3.1">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				get schedule end time(format:%H:%M).
			</desc>
			<setvar name="wifi1.schedule.endtime">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_wifi1_clock_info.log -p "(\d+:\d+):\d+" --script "(datetime.strptime(m.group(1),'%H:%M')+timedelta(minutes=8)).strftime('%H:%M')"
			</setvar>
		</step>

		<step no="3.2">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				get schedule begin check time(format:%Y-%M-%D %H:%M).
			</desc>
			<setvar name="wifi1.schedule.begin.checktime">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_wifi1_clock_info.log -p "(\d.*\d+):\d+\s*\S+" --script "(datetime.strptime(m.group(1),'%Y-%m-%d %H:%M')+timedelta(minutes=5)).strftime('%Y-%m-%d %H:%M')"
			</setvar>
		</step>

		<step no="3.3">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				get schedule end check time((format:%Y-%M-%D %H:%M).
			</desc>
			<setvar name="wifi1.schedule.end.checktime">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_wifi1_clock_info.log -p "(\d.*\d+):\d+\s*\S+" --script "(datetime.strptime(m.group(1),'%Y-%m-%d %H:%M')+timedelta(minutes=8)).strftime('%Y-%m-%d %H:%M')"
			</setvar>
		</step>

		<step no="4">
			<desc>
				2. Open acsp debug mode "_debug dcd chnl" "debug con";
			</desc>
			<telnet target="ap1">
				-v "_debug dcd chnl"
			</telnet>
		</step>

		<step no="4.1">
			<desc>
				clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<step no="4.2">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				3.Base on the current time, set schedule run time.
				"radio profile na acsp access channel-auto-select time-range XX:XX XX:XX"
			</desc>
			<telnet target="ap1">
				-v "radio profile na acsp access channel-auto-select time-range ${wifi1.schedule.starttime} ${wifi1.schedule.endtime}"
			</telnet>
		</step>

		<step no="5">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				show interface wifi1 channel info.
			</desc>
			<log-file>show_wifi1_channel_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1 channel"
			</telnet>
		</step>

		<step no="6">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				get all channels of wifi1 .
			</desc>
			<setvar name="wifi1.channel">
				perl ${case.dir}/bin/get_wifi_all_channel.pl ${log.dir}/show_wifi1_channel_info.log
			</setvar>
		</step>

		<step no="7" delay="120">
			<desc>
				show logging buffered.
			</desc>
			<log-file>step7_show_wifi1_acsp_schedule_${loop_check.idx}.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
		</step>

		<step no="7.1" type="loop-check" loop-max-times="30" loop-interval="5">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				"show logging buffered | in received sched response pass msg"
			</desc>
			<log-file>step7.1_show_wifi1_acsp_schedule_work_${loop_check.idx}.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-e "wifi1" -i "received sched response pass msg"</log-match>
		</step>

		<step no="7.2" delay="240">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				Check if ACSP schedule run work.
			</desc>
			<log-file>step7.2_show_wifi1_acsp_schedule.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match loop-values="${wifi1.channel}" bin="${bin.dir}/searchbyrexp.py">-b "${wifi1.schedule.end.checktime}" -p "collecting raw data for channel\(${loop.v}\)" -e "${wifi1.schedule.begin.checktime}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="8">
			<desc>
				4.Creat a radio profile named 'ng',set its phymode to 11ng,bind it to wifi0.
				"radio profile ng"
				"radio profile ng phymode 11ng"
				"interface wifi0 radio profile ng"
			</desc>
			<telnet target="ap1">
				-v "radio profile ng"
				-v "radio profile ng phymode 11ng"
				-v "interface wifi0 radio profile ng"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="9">
			<desc>
				show clock for wifi0.
			</desc>
			<log-file>show_wifi0_clock_info.log</log-file>
			<telnet target="ap1">
				-v "show clock"
			</telnet>
		</step>

		<step no="10">
			<desc>
				get schedule start time(format:%H:%M).
			</desc>
			<setvar name="wifi0.schedule.starttime">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_wifi0_clock_info.log -p "(\d+:\d+):\d+" --script "(datetime.strptime(m.group(1),'%H:%M')+timedelta(minutes=5)).strftime('%H:%M')"
			</setvar>
		</step>

		<step no="10.1">
			<desc>
				get schedule end time(format:%H:%M).
			</desc>
			<setvar name="wifi0.schedule.endtime">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_wifi0_clock_info.log -p "(\d+:\d+):\d+" --script "(datetime.strptime(m.group(1),'%H:%M')+timedelta(minutes=8)).strftime('%H:%M')"
			</setvar>
		</step>

		<step no="10.2">
			<desc>
				get schedule begin check time(format:%Y-%M-%D %H:%M).
			</desc>
			<setvar name="wifi0.schedule.begin.checktime">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_wifi0_clock_info.log -p "(\d.*\d+):\d+\s*\S+" --script "(datetime.strptime(m.group(1),'%Y-%m-%d %H:%M')+timedelta(minutes=5)).strftime('%Y-%m-%d %H:%M')"
			</setvar>
		</step>

		<step no="10.3">
			<desc>
				get schedule end check time((format:%Y-%M-%D %H:%M).
			</desc>
			<setvar name="wifi0.schedule.end.checktime">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_wifi0_clock_info.log -p "(\d.*\d+):\d+\s*\S+" --script "(datetime.strptime(m.group(1),'%Y-%m-%d %H:%M')+timedelta(minutes=8)).strftime('%Y-%m-%d %H:%M')"
			</setvar>
		</step>

		<step no="11">
			<desc>
				Open acsp debug mode "_debug dcd chnl" "debug con";
			</desc>
			<telnet target="ap1">
				-v "_debug dcd chnl"
			</telnet>
		</step>

		<step no="11.1">
			<desc>
				clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<step no="11.2">
			<desc>
				5.Base on the current time, set schedule run time.
				"radio profile ng acsp access channel-auto-select time-range XX:XX XX:XX"
			</desc>
			<telnet target="ap1">
				-v "radio profile ng acsp access channel-auto-select time-range ${wifi0.schedule.starttime} ${wifi0.schedule.endtime}"
			</telnet>
		</step>

		<step no="12">
			<desc>
				show interface wifi0 channel info.
			</desc>
			<log-file>show_wifi0_channel_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0 channel"
			</telnet>
		</step>

		<step no="13">
			<desc>
				get schedule run time for wifi0.
			</desc>
			<setvar name="wifi0.channel">
				perl ${case.dir}/bin/get_wifi_all_channel.pl ${log.dir}/show_wifi0_channel_info.log
			</setvar>
		</step>

		<step no="14" delay="120">
			<desc>
				show logging buffered.
			</desc>
			<log-file>step14_show_wifi0_acsp_schedule.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
		</step>

		<step no="14.1" type="loop-check" loop-max-times="30" loop-interval="5">
			<desc>
				"show logging buffered | in received sched response pass msg"
			</desc>
			<log-file>step14.1_show_wifi0_acsp_schedule_work_${loop_check.idx}.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-e "wifi0" -i "received sched response pass msg"</log-match>
		</step>

		<step no="14.2" delay="350">
			<desc>
				Check if ACSP schedule run work.
			</desc>
			<log-file>step14.2_show_wifi0_acsp_schedule.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match loop-values="${wifi0.channel}" bin="${bin.dir}/searchbyrexp.py">-b "${wifi0.schedule.end.checktime}" -p "collecting raw data for channel\(${loop.v}\)" -e "${wifi0.schedule.begin.checktime}" -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>
</testcase>