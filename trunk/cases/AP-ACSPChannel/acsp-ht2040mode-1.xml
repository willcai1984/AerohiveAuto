<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Country region set to fcc,under 11ng/11na mode,channel-width change from 20 to 40-above,40-above to 40-below, 40-below back to 20, enable/disable dfs , check if the acsp procedure be triggered: the corresponding channel should be scaned, unconcerned channel should not be scaned, and the lowest-cost channel should be selected.</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		Test Procedure:
		1.Set Country region to fcc and reboot,then creat a radio profile named 'na',set its
		phymode to 11na,bind it to wifi1 and enable dfs. creat a radio profile named
		'ng',set its phymode to 11ng,bind it to wifi0.
		"boot-param region fcc"
		"reboot"
		"radio profile na"
		"radio profile na phymode 11na"
		"radio profile na dfs"
		"interface wifi1 radio profile na"
		"radio profile ng"
		"radio profile ng phymode 11ng"
		"interface wifi0 radio profile ng"
		2. the default channel-width in fcc is 20,change it to 40-above,and check if the
		acsp procedure be triggered: the corresponding channel (include dfs channel)
		should be scaned, unconcerned channel should not be scaned.
		"_debug dcd chnl"
		"debug console"
		"radio profile na channel-width 40-above"
		"radio profile ng channel-width 40-above"
		3. check if the lowest-cost channel be selected by show acsp channel-info.
		"show acsp channel-info"
		4. change the channel-width from 40-above to 40-below,and check if the acsp
		procedure be triggered: the
		corresponding channel (include dfs channel) should be
		scaned, unconcerned channel should not be scaned.
		"_debug dcd chnl"
		"debug console"
		"radio profile na channel-width 40-below"
		"radio profile ng channel-width 40-below"
		5. check if the lowest-cost channel be selected by show acsp channel-info.
		"show acsp channel-info"
		6. change the channel-width from 40-below back to 20,and check if the acsp
		procedure be triggered: the corresponding channel (include dfs channel) should be
		scaned, unconcerned channel should not be scaned.
		"_debug dcd chnl"
		"debug console"
		"radio profile na channel-width 20"
		"radio profile ng channel-width 20"
		7. check if the lowest-cost channel be selected by show acsp channel-info.
		"show acsp channel-info"
		8.disable dfs.
		"no radio profile na dfs"
		9. change the channel-width from 20 to 40-above,and check if the acsp procedure
		be triggered: the corresponding channel (exclude dfs channel) should be scaned,
		unconcerned channel should not be scaned.
		"_debug dcd chnl"
		"debug console"
		"radio
		profile na channel-width 40-below"
		10. check if the lowest-cost channel be selected by show acsp channel-info.
		"show acsp channel-info"
		11. change the channel-width from 40-above to 40-below,and check if the acsp
		procedure be triggered: the corresponding channel (exclude dfs channel) should be
		scaned, unconcerned channel should not be scaned.
		"_debug dcd chnl"
		"debug console"
		"radio profile na channel-width 40-below"
		12. check if the lowest-cost channel be selected by show acsp channel-info.
		"show acsp channel-info"
		13. change the channel-width from 40-below back to 20,and check if the acsp
		procedure be triggered: the corresponding channel (exclude dfs channel) should be
		scaned, unconcerned channel should not be scaned.
		"_debug dcd chnl"
		"debug console"
		"radio profile na channel-width 20
		14. check if the lowest-cost channel be selected by show acsp channel-info.
		"show acsp channel-info"
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<if>"${img.prodtype}" == "AP340"</if>
		<step no="0">
			<desc>
				Check the default region code.
				"show boot-param"
			</desc>
			<log-file>step1_show_boot_param.log</log-file>
			<telnet target="ap1">
				-v "show boot-param"
			</telnet>
		</step>

		<step no="0.1">
			<desc>
				Get region code
			</desc>
			<setvar name="region">
				${bin.dir}/getbyrexp.py -p "Region\s+Code:\s+(\w+)" -f ${log.dir}/step1_show_boot_param.log -t str
			</setvar>
		</step>

		<step no="0.2">
			<desc>
				Compare the default region code.
				"boot-param region fcc"
				"reboot"
			</desc>
			<if>"${region}" != "FCC"</if>
			<console target="ap1">
				-v "boot-param region fcc"
				-v "reboot"
			</console>
			<failed>next</failed>
		</step>

		<step no="1">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				1.Set Country region to fcc and reboot,then creat a radio profile named 'na',set its
				phymode to 11na,bind it to wifi1 and enable dfs. creat a radio profile named
				'ng',set its phymode to 11ng,bind it to wifi0.
				"boot-param region fcc"
				"reboot"
				"radio profile na"
				"radio profile na phymode 11na"
				"radio profile na dfs"
				"interface wifi1 radio profile na"
				"radio profile ng"
				"radio profile ng phymode 11ng"
				"interface wifi0 radio profile ng"
			</desc>
			<telnet target="ap1">
				-v "radio profile na"
				-v "radio profile na phymode 11na"
				-v "radio profile na dfs"
				-v "interface wifi1 radio profile na"
				-v "radio profile ng"
				-v "radio profile ng phymode 11ng"
				-v "interface wifi0 radio profile ng"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="2">
			<desc>
				2. the default channel-width in fcc is 20,change it to 40-above,and check if the
				acsp procedure be triggered: the corresponding channel (include dfs channel)
				should be scaned, unconcerned channel should not be scaned.
				"radio profile na channel-width 40-above"
				"radio profile ng channel-width 40-above"
			</desc>
			<telnet target="ap1">
				-v "radio profile na channel-width 40-above"
				-v "radio profile ng channel-width 40-above"
			</telnet>
		</step>

		<step no="2.1" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				Wait until show acsp channel-info.
			</desc>
			<log-file>show_ascp_40above_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show acsp"
			</telnet>
			<log-match>-e "Enable" -i "Wifi0" -p 2</log-match>
			<log-match if="${ap1.wifi1.existed}">-e "Enable" -i "Wifi1" -p 2</log-match>
		</step>

		<step no="2.2">
			<desc>
				Show acsp channel-info.
			</desc>
			<log-file>show_acsp_channel_info_40above.log</log-file>
			<telnet target="ap1">
				-v "show acsp channel-info"
			</telnet>
		</step>

		<step no="2.3">
			<desc>
				Show interface wifi0 channel.
			</desc>
			<log-file>show_interface_channel_w0_40above.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0 channel"
			</telnet>
		</step>

		<step no="2.4">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				Show interface wifi1 channel.
			</desc>
			<log-file>show_interface_channel_w1_40above.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1 channel"
			</telnet>
			<log-match>-e "DFS"</log-match>
			<log-match>-e " 40U "</log-match>
		</step>

		<step no="2.5">
			<desc>
				check the scaned channels at wifi0
			</desc>
			<log-file>step2.5_check_scaned_channels_wifi0.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckChannel.pl ${log.dir}/show_interface_channel_w0_40above.log 40U ${log.dir}/show_acsp_channel_info_40above.log wifi0 > ${log.dir}/step2.5_check_scaned_channels_wifi0.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="2.6">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				check the scaned channels at wifi1
			</desc>
			<log-file>step2.6_check_scaned_channels_wifi1.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckChannel.pl ${log.dir}/show_interface_channel_w1_40above.log 40U ${log.dir}/show_acsp_channel_info_40above.log wifi1 > ${log.dir}/step2.6_check_scaned_channels_wifi1.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="3">
			<desc>
				check if the lowest-cost channel be selected by show acsp channel-info at wifi0.
			</desc>
			<log-file>step3_check_lowest_cost_wifi0.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckWifiChannelCost.pl ${log.dir}/show_acsp_channel_info_40above.log wifi0 > ${log.dir}/step3_check_lowest_cost_wifi0.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="3.1">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				check if the lowest-cost channel be selected by show acsp channel-info at wifi1.
			</desc>
			<log-file>step3.1_check_lowest_cost_wifi1.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckWifiChannelCost.pl ${log.dir}/show_acsp_channel_info_40above.log wifi1 > ${log.dir}/step3.1_check_lowest_cost_wifi1.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="4">
			<desc>
				4. change the channel-width from 40-above to 40-below,and check if the acsp
				procedure be triggered: the corresponding channel (include dfs channel) should be
				scaned, unconcerned channel should not be scaned.
				"_debug dcd chnl"
				"debug console"
				"radio profile na channel-width 40-below"
				"radio profile ng channel-width 40-below"
			</desc>
			<telnet target="ap1">
				-v "radio profile na channel-width 40-below"
				-v "radio profile ng channel-width 40-below"
			</telnet>
		</step>

		<step no="4.1" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				Wait until show acsp channel-info.
			</desc>
			<log-file>show_ascp_40below_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show acsp"
			</telnet>
			<log-match>-e "Enable" -i "Wifi0" -p 2</log-match>
			<log-match if="${ap1.wifi1.existed}">-e "Enable" -i "Wifi1" -p 2</log-match>
		</step>

		<step no="4.2">
			<desc>
				Show acsp channel-info.
			</desc>
			<log-file>show_acsp_channel_info_40below.log</log-file>
			<telnet target="ap1">
				-v "show acsp channel-info"
			</telnet>
		</step>

		<step no="4.3">
			<desc>
				Show interface wifi0 channel.
			</desc>
			<log-file>show_interface_channel_w0_40below.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0 channel"
			</telnet>
		</step>

		<step no="4.4">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				Show interface wifi1 channel.
			</desc>
			<log-file>show_interface_channel_w1_40below.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1 channel"
			</telnet>
			<log-match>-e "DFS"</log-match>
			<log-match>-e " 40L "</log-match>
		</step>

		<step no="4.5">
			<desc>
				check the scaned channels at wifi0
			</desc>
			<log-file>step4.5_check_scaned_channels_wifi0.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckChannel.pl ${log.dir}/show_interface_channel_w0_40below.log 40L ${log.dir}/show_acsp_channel_info_40below.log wifi0 > ${log.dir}/step4.5_check_scaned_channels_wifi0.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="4.6">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				check the scaned channels at wifi1
			</desc>
			<log-file>step4.6_check_scaned_channels_wifi1.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckChannel.pl ${log.dir}/show_interface_channel_w1_40below.log 40L ${log.dir}/show_acsp_channel_info_40below.log wifi1 > ${log.dir}/step4.6_check_scaned_channels_wifi1.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="5">
			<desc>
				check if the lowest-cost channel be selected by show acsp channel-info at wifi0.
			</desc>
			<log-file>step5_check_lowest_cost_wifi0.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckWifiChannelCost.pl ${log.dir}/show_acsp_channel_info_40below.log wifi0 > ${log.dir}/step5_check_lowest_cost_wifi0.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="5.1">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				check if the lowest-cost channel be selected by show acsp channel-info at wifi1.
			</desc>
			<log-file>step5.1_check_lowest_cost_wifi1.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckWifiChannelCost.pl ${log.dir}/show_acsp_channel_info_40below.log wifi1 > ${log.dir}/step5.1_check_lowest_cost_wifi1.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="6">
			<desc>
				6. change the channel-width from 40-below back to 20,and check if the acsp
				procedure be triggered: the corresponding channel (include dfs channel) should be
				scaned, unconcerned channel should not be scaned.
				"_debug dcd chnl"
				"debug console"
				"radio profile na channel-width 20"
				"radio profile ng channel-width 20"
			</desc>
			<telnet target="ap1">
				-v "radio profile na channel-width 20"
				-v "radio profile ng channel-width 20"
			</telnet>
		</step>

		<step no="6.1" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				Wait until show acsp channel-info.
			</desc>
			<log-file>show_ascp_20_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show acsp"
			</telnet>
			<log-match>-e "Enable" -i "Wifi0" -p 2</log-match>
			<log-match if="${ap1.wifi1.existed}">-e "Enable" -i "Wifi1" -p 2</log-match>
		</step>

		<step no="6.2">
			<desc>
				Show acsp channel-info.
			</desc>
			<log-file>show_acsp_channel_info_20width.log</log-file>
			<telnet target="ap1">
				-v "show acsp channel-info"
			</telnet>
		</step>

		<step no="6.3">
			<desc>
				Show interface wifi0 channel.
			</desc>
			<log-file>show_interface_channel_w0_20width.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0 channel"
			</telnet>
		</step>

		<step no="6.4">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				Show interface wifi1 channel.
			</desc>
			<log-file>show_interface_channel_w1_20width.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1 channel"
			</telnet>
			<log-match>-e "DFS"</log-match>
			<log-match>-e " 20 "</log-match>
		</step>

		<step no="6.5">
			<desc>
				check the scaned channels at wifi0
			</desc>
			<log-file>step6.5_check_scaned_channels_wifi0.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckChannel.pl ${log.dir}/show_interface_channel_w0_20width.log 20 ${log.dir}/show_acsp_channel_info_20width.log wifi0 > ${log.dir}/step6.5_check_scaned_channels_wifi0.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="6.6">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				check the scaned channels at wifi1
			</desc>
			<log-file>step6.6_check_scaned_channels_wifi1.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckChannel.pl ${log.dir}/show_interface_channel_w1_20width.log 20 ${log.dir}/show_acsp_channel_info_20width.log wifi1 > ${log.dir}/step6.6_check_scaned_channels_wifi1.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="7">
			<desc>
				check if the lowest-cost channel be selected by show acsp channel-info at wifi0.
			</desc>
			<log-file>step7_check_lowest_cost_wifi0.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckWifiChannelCost.pl ${log.dir}/show_acsp_channel_info_20width.log wifi0 > ${log.dir}/step7_check_lowest_cost_wifi0.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="7.1">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				check if the lowest-cost channel be selected by show acsp channel-info at wifi1.
			</desc>
			<log-file>step7.1_check_lowest_cost_wifi1.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckWifiChannelCost.pl ${log.dir}/show_acsp_channel_info_20width.log wifi1 > ${log.dir}/step7.1_check_lowest_cost_wifi1.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="8">
			<desc>
				8.disable dfs.
				"no radio profile na dfs"
			</desc>
			<telnet target="ap1">
				-v "no radio profile na dfs"
			</telnet>
		</step>

		<step no="9">
			<desc>
				9. change the channel-width from 20 to 40-above,and check if the acsp procedure
				be triggered: the corresponding channel (exclude dfs channel) should be scaned,
				unconcerned channel should not be scaned.
				"_debug dcd chnl"
				"debug console"
				"radio profile na channel-width 40-below"
			</desc>
			<telnet target="ap1">
				-v "radio profile na channel-width 40-above"
			</telnet>
		</step>

		<step no="9.1" type="loop-check" loop-max-times="50" loop-interval="5">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				show acsp channel-info
			</desc>
			<log-file>show_acsp_40above_na_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show acsp"
			</telnet>
			<log-match>-e "Enable" -i "Wifi1" -p 2</log-match>
		</step>

		<step no="9.2">
			<desc>
				Show acsp channel-info.
			</desc>
			<log-file>show_acsp_channel_info_na_40above.log</log-file>
			<telnet target="ap1">
				-v "show acsp channel-info"
			</telnet>
		</step>

		<step no="9.3">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				show wifi1 channel information
			</desc>
			<log-file>show_interface_channel_w1_na_40above.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1 channel"
			</telnet>
			<log-match>-n -e "DFS"</log-match>
			<log-match>-e " 40U "</log-match>
		</step>

		<step no="9.4">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				check the scaned channels at wifi1
			</desc>
			<log-file>step9.4_check_scaned_channels_wifi1.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckChannel.pl ${log.dir}/show_interface_channel_w1_na_40above.log 40U ${log.dir}/show_acsp_channel_info_na_40above.log wifi1 > ${log.dir}/step9.4_check_scaned_channels_wifi1.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="10">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				check if the lowest-cost channel be selected by show acsp channel-info at wifi1.
			</desc>
			<log-file>step10_check_lowest_cost_wifi1.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckWifiChannelCost.pl ${log.dir}/show_acsp_channel_info_na_40above.log wifi1 > ${log.dir}/step10_check_lowest_cost_wifi1.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="11">
			<desc>
				11. change the channel-width from 40-above to 40-below,and check if the acsp
				procedure be triggered: the corresponding channel (exclude dfs channel) should be
				scaned, unconcerned channel should not be scaned.
				"_debug dcd chnl"
				"debug console"
				"radio profile na channel-width 40-below"
			</desc>
			<telnet target="ap1">
				-v "radio profile na channel-width 40-below"
			</telnet>
		</step>

		<step no="11.1" type="loop-check" loop-max-times="50" loop-interval="5">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				show acsp channel-info
			</desc>
			<log-file>show_acsp_40below_na_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show acsp"
			</telnet>
			<log-match>-e "Enable" -i "Wifi1" -p 2</log-match>
		</step>

		<step no="11.2">
			<desc>
				Show acsp channel-info.
			</desc>
			<log-file>show_acsp_channel_info_na_40below.log</log-file>
			<telnet target="ap1">
				-v "show acsp channel-info"
			</telnet>
		</step>

		<step no="11.3">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				show wifi1 channel information
			</desc>
			<log-file>show_interface_channel_w1_na_40below.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1 channel"
			</telnet>
			<log-match>-n -e "DFS"</log-match>
			<log-match>-e " 40L "</log-match>
		</step>

		<step no="11.4">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				check the scaned channels at wifi1
			</desc>
			<log-file>step11.4_check_scaned_channels_wifi1.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckChannel.pl ${log.dir}/show_interface_channel_w1_na_40below.log 40L ${log.dir}/show_acsp_channel_info_na_40below.log wifi1 > ${log.dir}/step11.4_check_scaned_channels_wifi1.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="12">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				check if the lowest-cost channel be selected by show acsp channel-info at wifi1.
			</desc>
			<log-file>step12_check_lowest_cost_wifi1.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckWifiChannelCost.pl ${log.dir}/show_acsp_channel_info_na_40below.log wifi1 > ${log.dir}/step12_check_lowest_cost_wifi1.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="13">
			<desc>
				13. change the channel-width from 40-below back to 20,and check if the acsp
				procedure be triggered: the corresponding channel (exclude dfs channel) should be
				scaned, unconcerned channel should not be scaned.
				"_debug dcd chnl"
				"debug console"
				"radio profile na channel-width 20
			</desc>
			<telnet target="ap1">
				-v "radio profile na channel-width 20"
			</telnet>
		</step>

		<step no="13.1" type="loop-check" loop-max-times="50" loop-interval="5">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				show acsp channel-info
			</desc>
			<log-file>show_acsp_20_na_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show acsp"
			</telnet>
			<log-match>-e "Enable" -i "Wifi1" -p 2</log-match>
		</step>

		<step no="13.2">
			<desc>
				Show acsp channel-info.
			</desc>
			<log-file>show_acsp_channel_info_na_20width.log</log-file>
			<telnet target="ap1">
				-v "show acsp channel-info"
			</telnet>
		</step>

		<step no="13.3">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				show wifi1 channel information
			</desc>
			<log-file>show_interface_channel_w1_na_20width.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1 channel"
			</telnet>
			<log-match>-n -e "DFS"</log-match>
			<log-match>-e " 20 "</log-match>
		</step>

		<step no="13.4">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				check the scaned channels at wifi1
			</desc>
			<log-file>step13.4_check_scaned_channels_wifi1.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckChannel.pl ${log.dir}/show_interface_channel_w1_na_20width.log 20 ${log.dir}/show_acsp_channel_info_na_20width.log wifi1 > ${log.dir}/step13.4_check_scaned_channels_wifi1.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>

		<step no="14">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				check if the lowest-cost channel be selected by show acsp channel-info at wifi1.
			</desc>
			<log-file>step14_check_lowest_cost_wifi1.log</log-file>
			<script>
				perl ${case.dir}/bin/CheckWifiChannelCost.pl ${log.dir}/show_acsp_channel_info_na_20width.log wifi1 > ${log.dir}/step14_check_lowest_cost_wifi1.log
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>
	</stage>
	
</testcase>
