<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify that remove and add the SSIDs bound with schedule, which still take effect</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Create a SSID and bind it to interface wifi0
		Create a schedule s1 which make current time within the schedule

		Test Procedure:
		1. Check SSID status by show ssid-schedule and check interface
		wifi0 state by show interface
		2. Unbind SSID from interface wifi0 , check SSID status, check
		interface state
		3. Bind SSID to interface wifi0 again, check SSID status and
		interface state
		4. Modify schedule s1 and make current time without the duration,
		check SSID status and interface state
		5. Unbind SSID from interface wifi0, check SSID status and
		interface state
		6. Bind SSID to interface wifi0 again, check SSID status and
		interface state
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<property name="schedule_id_1" value="time-1" />

	<stage>
		<step no="0">
			<desc>
				Create SSID and bind it to interface wifi0
			</desc>
			<log-file>step0_int_wifi0_ssid.log</log-file>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="1">
			<desc>
				check system time
				"show clock"
			</desc>
			<log-file>step1_show_clock.log</log-file>
			<telnet target="ap1">
				-v "show clock"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				get time to create a recurrent schedule
			</desc>
			<setvar name="data_time_1">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1_show_clock.log -10
			</setvar>
		</step>

		<step no="1.2">
			<desc>
				get time to create a recurrent schedule
			</desc>
			<setvar name="data_time_2">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1_show_clock.log -5
			</setvar>
		</step>

		<step no="1.3">
			<desc>
				get time to create a recurrent schedule
			</desc>
			<setvar name="data_time_3">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1_show_clock.log 20
			</setvar>
		</step>

		<step no="1.4">
			<desc>
				Create a recurrent schedule s1
			</desc>
			<log-file>step1.4_create_schedule.log</log-file>
			<telnet target="ap1">
				-v "schedule ${schedule_id_1} recurrent time-range ${data_time_1} to ${data_time_3}"
			</telnet>
		</step>

		<step no="1.5">
			<desc>
				Bind this schedules to SSID
			</desc>
			<log-file>step1.5_bing_schedule_to_ssid.log</log-file>
			<telnet target="ap1">
				-v "ssid ${ssid.name} schedule ${schedule_id_1}"
			</telnet>
		</step>

		<step no="1.6" type="loop-check" loop-max-times="40" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step1.6_show_ssid_schedule_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Active\s+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="1.7" type="loop-check" loop-max-times="40" loop-interval="5">
			<desc>
				Check interface wifi0.1 state by show interface
			</desc>
			<log-file>step1.7_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-p 4 -i "U" -i "Wifi0.1 " -c</log-match>
		</step>

		<step no="2">
			<desc>
				Unbind SSID from interface wifi0
			</desc>
			<log-file>step2_Unbind_SSID_from_wifi0.log</log-file>
			<telnet target="ap1">
				-v "no interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="2.1" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step2.1_show_ssid_schedule_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Active\s+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2.2" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Check interface wifi0.1 state by show interface
			</desc>
			<log-file>step2.2_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-p 4 -i "D" -i "Wifi0.1 " -c</log-match>
		</step>

		<step no="3">
			<desc>
				Bind SSID to interface wifi0 again
			</desc>
			<log-file>step3_Unbind_SSID_from_wifi0.log</log-file>
			<telnet target="ap1">
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="3.1" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step3.1_show_ssid_schedule_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Active\s+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.2" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Check interface wifi0.1 state by show interface
			</desc>
			<log-file>step3.2_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-p 4 -i "U" -i "Wifi0.1 " -c</log-match>
		</step>

		<step no="4">
			<desc>
				Modify schedule s1 and make current time without the duration
			</desc>
			<log-file>step4_create_schedule.log</log-file>
			<telnet target="ap1">
				-v "schedule ${schedule_id_1} recurrent time-range ${data_time_1} to ${data_time_2}"
			</telnet>
		</step>

		<step no="4.1" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step4.1_show_ssid_schedule_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Inactive\s+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.2" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Check interface wifi0.1 state by show interface
			</desc>
			<log-file>step4.2_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-p 4 -i "D" -i "Wifi0.1 " -c</log-match>
		</step>

		<step no="5">
			<desc>
				Unbind SSID from interface wifi0
			</desc>
			<log-file>step5_Unbind_SSID_from_wifi0.log</log-file>
			<telnet target="ap1">
				-v "no interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="5.1" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step5.1_show_ssid_schedule_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Inactive\s+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.2" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Check interface wifi0.1 state by show interface
			</desc>
			<log-file>step5.2_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-p 4 -i "D" -i "Wifi0.1 " -c</log-match>
		</step>

		<step no="6">
			<desc>
				Bind SSID to interface wifi0 again
			</desc>
			<log-file>step6_Unbind_SSID_from_wifi0.log</log-file>
			<telnet target="ap1">
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="6.1" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step6.1_show_ssid_schedule_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Inactive\s+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6.2" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Check interface wifi0.1 state by show interface
			</desc>
			<log-file>step6.2_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-p 4 -i "D" -i "Wifi0.1 " -c</log-match>
		</step>
	</stage>
</testcase>