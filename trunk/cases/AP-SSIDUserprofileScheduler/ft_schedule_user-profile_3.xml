<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify that "once" and "recurrent" schedule can take effect on user-profiles to associated computer and associating computer</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Create a SSID and bind it to interface wifi0
		Create a user-profile and assign it to SSID
		Create a once (or recurrent) schedule s1 which make current time
		without the duration
		Bind schedule s1 to user-profile

		Test Procedure:
		1. Check user-profile status
		2. Use a laptop to connect to SSID, verify is can connect successful
		3. Create a recurrent (or once) schedule s2 which make current time
		within the duration, bind s2 to user-profile, check user-profile
		status
		4. Use a laptop to connect to SSID , verify if can connect successful
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>winlin</tbtype>

	<property name="conn1.auth_negative_test" value="true" />
	<property name="conn2.auth_negative_test" value="yes" />
	<property name="sta1.ssid" value="${ssid.name}" />
	<property name="user_profile" value="FWtest" />
	<property name="schedule_id_1" value="time-1" />
	<property name="schedule_id_2" value="time-2" />

	<stage>
		<step no="0">
			<desc>
				Create a SSID and bind it to interface wifi0
				Create a user-profile and assign it to SSID
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "security-object ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "user-profile ${user_profile}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "user-profile ${user_profile} qos-policy def-user-qos attribute 1"
			</telnet>
		</step>

		<step no="1">
			<desc>
				check system time
				"show clock"
			</desc>
			<log-file>step1_show_clock.log</log-file>
			<telnet target="ap1">
				-v "show clock"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				get time to create a recurrent schedule
			</desc>
			<setvar name="data_time_1">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1_show_clock.log -10
			</setvar>
		</step>

		<step no="1.2">
			<desc>
				get time to create a recurrent schedule
			</desc>
			<setvar name="data_time_2">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1_show_clock.log -5
			</setvar>
		</step>

		<step no="1.3">
			<desc>
				get time to create a recurrent schedule
			</desc>
			<setvar name="data_time_3">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1_show_clock.log 20
			</setvar>
		</step>

		<step no="1.4">
			<desc>
				Create a once (or recurrent) schedule s1 which make
				current time without the duration
			</desc>
			<log-file>step1.4_create_schedule.log</log-file>
			<telnet target="ap1">
				-v "schedule ${schedule_id_1} recurrent time-range ${data_time_1} to ${data_time_2}"
			</telnet>
		</step>

		<step no="1.5">
			<desc>
				Bind schedule s1 to user-profile
			</desc>
			<log-file>step1.5_bind_schedule_to_uesr_profile.log</log-file>
			<telnet target="ap1">
				-v "user-profile ${user_profile} schedule ${schedule_id_1}"
			</telnet>
		</step>

		<step no="1.6" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				Check user-profile status by show user-profile-schedule
			</desc>
			<log-file>step1.6_check_user_profile.log</log-file>
			<telnet target="ap1">
				-v "show user-profile-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${user_profile}\s+Yes\s+Inactive\s+" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn1, sta1, ap1" />

		<step no="3">
			<desc>
				Create a recurrent (or once) schedule s2
				which make current time within the duration
			</desc>
			<log-file>step3_create_schedule.log</log-file>
			<telnet target="ap1">
				-v "schedule ${schedule_id_2} recurrent time-range ${data_time_1} to ${data_time_3}"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				Bind schedule s2 to user-profile
			</desc>
			<log-file>step3.1_bind_schedule_to_uesr_profile.log</log-file>
			<telnet target="ap1">
				-v "user-profile ${user_profile} schedule ${schedule_id_2}"
			</telnet>
		</step>

		<step no="3.2" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				Check user-profile status by show user-profile-schedule
			</desc>
			<log-file>step3.2_check_user_profile.log</log-file>
			<telnet target="ap1">
				-v "show user-profile-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${user_profile}\s+Yes\s+Active\s+" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<include prefix="4" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn2, sta1, ap1" />

		<step no="4.1">
			<desc>
				check mgt0 ip
			</desc>
			<log-file>step4.1_show_interface.log</log-file>
			<telnet target="ap1">
				-v "show interface mgt0"
			</telnet>
		</step>

		<step no="4.2">
			<desc>
				Get mgt0 ip
			</desc>
			<setvar name="mgt0_ip_1">
				${bin.dir}/getbyrexp.py -p "(?i)IP addr=(\S+);" -f ${log.dir}/step4.1_show_interface.log -t str
			</setvar>
		</step>

		<step no="4.3">
			<desc>
				sta ping ap
			</desc>
			<log-file>step4.3_sta_ping_ap.log</log-file>
			<ssh target="sta1">
				-v "ping ${mgt0_ip_1} -c 5"
			</ssh>
			<log-match>-c -i " from ${mgt0_ip_1}" -i " ttl="</log-match>
		</step>
	</stage>
</testcase>