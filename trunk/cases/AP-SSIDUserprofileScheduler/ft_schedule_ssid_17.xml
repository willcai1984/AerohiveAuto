<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify that schedules should take effect at the same time when wifi1.x and wif0.x configuration the same SSIDs which are bound with same schedules</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Set interface wifi1 to access mode
		Create a SSID and bind it to interface wifi0 and wifi1
		Create a schedule s1 which make current time within the duration
		Bind schedule s1 to SSID

		Test Procedure:
		1. Check SSID status, check state of interface wifi0 and wifi1
		2. Use two laptop to connect to wifi0 and wifi1 separately, check
		traffic between AP laptop
		3. Modify schedule s1 and make current time without the duration,
		check SSID status, check station connection
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<property name="schedule_id_1" value="time-1" />

	<stage>
		<step no="0">
			<desc>
				Set interface wifi1 to access mode
				Create a SSID and bind it to interface wifi0 and wifi1
			</desc>
			<log-file>step0_int_wifi0_ssid.log</log-file>
			<telnet target="ap1">
				-v "interface wifi1 mode access"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi1 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="1">
			<desc>
				check system time
				"show clock"
			</desc>
			<log-file>step1_show_clock.log</log-file>
			<telnet target="ap1">
				-v "show clock"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				get time to create a recurrent schedule
			</desc>
			<setvar name="data_time_1">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1_show_clock.log -10
			</setvar>
		</step>

		<step no="1.2">
			<desc>
				get time to create a recurrent schedule
			</desc>
			<setvar name="data_time_2">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1_show_clock.log -5
			</setvar>
		</step>

		<step no="1.3">
			<desc>
				get time to create a recurrent schedule
			</desc>
			<setvar name="data_time_3">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1_show_clock.log 30
			</setvar>
		</step>

		<step no="1.4">
			<desc>
				Create a recurrent schedules
			</desc>
			<log-file>step1.4_create_schedule.log</log-file>
			<telnet target="ap1">
				-v "schedule ${schedule_id_1} recurrent time-range ${data_time_1} to ${data_time_3}"
			</telnet>
		</step>

		<step no="1.5">
			<desc>
				Bind this schedules to SSID
			</desc>
			<log-file>step1.5_bing_schedule_to_ssid.log</log-file>
			<telnet target="ap1">
				-v "ssid ${ssid.name} schedule ${schedule_id_1}"
			</telnet>
		</step>

		<step no="1.6" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step1.6_show_ssid_schedule_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Active\s+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="1.7" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				Check interface wifi0.1 and wifi1.1 status
			</desc>
			<log-file>step1.7_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-p 4 -i "U" -i "Wifi0.1 " -c</log-match>
			<log-match>-p 4 -i "U" -i "Wifi1.1 " -c</log-match>
		</step>

		<step no="2">
			<desc>
				shutdown interface wifi1
				Use a laptop to connect to wifi0
				check traffic between AP wifi0 laptop
			</desc>
			<log-file>step2_shutdown_wifi1.log</log-file>
			<telnet target="ap1">
				-v "interface wifi1 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="3.1">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=wifi0"
			</multi-setvar>
		</step>
		<include prefix="3.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />
		
		<!-- <include prefix="2.1" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="2.2">
			<desc>
				config the laptop to apply the ssid profile,then start to associate
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<step no="2.3" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				check if the client was associated successfully
			</desc>
			<log-file>step2.3_wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="2.4">
			<desc>
				dhclient wlan0
			</desc>
			<ssh target="sta1" timeout="100">
				-v "dhclient ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="2.5" delay="10">
			<desc>
				ifconfig to show the ip add
			</desc>
			<log-file>step2.5_ifconfig_wlan0.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
			<log-match>-e "inet addr:"</log-match>
		</step>-->

		<step no="4">
			<desc>
				check mgt0 ip
			</desc>
			<log-file>step2.6_show_interface.log</log-file>
			<telnet target="ap1">
				-v "show interface mgt0"
			</telnet>
		</step>

		<step no="5" delay="10">
			<desc>
				Get mgt0 ip
			</desc>
			<setvar name="mgt0_ip_1">
				${bin.dir}/getbyrexp.py -p "(?i)IP addr=(\S+);" -f ${log.dir}/step2.6_show_interface.log -t str
			</setvar>
		</step>

		<step no="6">
			<desc>
				sta ping ap
			</desc>
			<log-file>step2.8_sta_ping_ap.log</log-file>
			<ssh target="sta1">
				-v "ping ${mgt0_ip_1} -c 5"
			</ssh>
			<log-match>-e "from ${mgt0_ip_1}"</log-match>
			<log-match>-n -e "100% packet loss"</log-match>
		</step>

		<step no="7">
			<desc>
				Enable interface wifi1
			</desc>
			<telnet target="ap1">
				-v "no interface wifi1 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="8">
			<desc>
				Modify schedule s1 and make current time without the duration,
				check SSID status, check station connection
			</desc>
			<log-file>step2.10_modify_schedule.log</log-file>
			<telnet target="ap1">
				-v "schedule ${schedule_id_1} recurrent time-range ${data_time_1} to ${data_time_2}"
			</telnet>
		</step>

		<step no="9" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step2.11_show_ssid_schedule_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Inactive\s+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="10" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Check interface wifi0.1 and wifi1.1 state by show interface
			</desc>
			<log-file>step2.12_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-p 4 -i "D" -i "Wifi0.1 " -c</log-match>
			<log-match>-p 4 -i "D" -i "Wifi1.1 " -c</log-match>
		</step>

		<step no="11" delay="20" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				check the client state
			</desc>
			<log-file>step2.13_wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-n -e "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="12">
			<desc>
				Modify schedule s1 and make current time within the duration again
				shutdown interface wifi0,Use a laptop to connect to wifi1
				check traffic between AP laptop
			</desc>
			<log-file>step3_shutdown_wifi0.log</log-file>
			<telnet target="ap1">
				-v "schedule ${schedule_id_1} recurrent time-range ${data_time_1} to ${data_time_3}"
				-v "interface wifi1 radio channel 36"
			</telnet>
		</step>

		<step no="13.1" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step3.1_show_ssid_schedule_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Active\s+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="13.2" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				Check interface wifi0.1 and wifi1.1 status
			</desc>
			<log-file>step3.2_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-p 4 -i "U" -i "Wifi0.1 " -c</log-match>
			<log-match>-p 4 -i "U" -i "Wifi1.1 " -c</log-match>
		</step>

		<step no="13.3">
			<desc>
				shutdown interface wifi0
			</desc>
			<log-file>step3.3_shutdown_wifi0.log</log-file>
			<telnet target="ap1">
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="14.1">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=wifi1"
			</multi-setvar>
		</step>
		<include prefix="14.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta2, ap1" />
		
		<!--<include prefix="3.4" file="subs/wpa_supplicant_start.xml" args="sta2" />

		<step no="3.5" delay="20">
			<desc>
				config the laptop to apply the ssid profile,then start to associate
			</desc>
			<ssh target="sta2" prompt=">|.*#">
				-v "ifconfig ${sta1.tif.name} up"
				-v "iwconfig ${sta1.tif.name} channel 36"
				-v "iwconfig ${sta1.tif.name} commit"
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<step no="3.6" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				check if the client was associated successfully
			</desc>
			<log-file>step3.6_wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta2" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="3.7">
			<desc>
				dhclient wlan0
			</desc>
			<ssh target="sta2" timeout="100">
				-v "dhclient ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="3.8" delay="10">
			<desc>
				ifconfig to show the ip add
			</desc>
			<log-file>step3.8_ifconfig_wlan0.log</log-file>
			<ssh target="sta2" timeout="80">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
			<log-match>-e "inet addr:"</log-match>
		</step>-->

		<step no="15">
			<desc>
				sta ping ap
			</desc>
			<log-file>step3.9_sta_ping_ap.log</log-file>
			<ssh target="sta2">
				-v "ping ${mgt0_ip_1} -c 5"
			</ssh>
			<log-match>-e "from ${mgt0_ip_1}"</log-match>
			<log-match>-n -e "100% packet loss"</log-match>
		</step>

		<step no="16">
			<desc>
				Enable interface wifi0
			</desc>
			<telnet target="ap1">
				-v "no interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="17">
			<desc>
				Modify schedule s1 and make current time without the duration again,
				check SSID status, check station connection
			</desc>
			<log-file>step4_modify_schedule.log</log-file>
			<telnet target="ap1">
				-v "schedule ${schedule_id_1} recurrent time-range ${data_time_1} to ${data_time_2}"
			</telnet>
		</step>

		<step no="18" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step4.1_show_ssid_schedule_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Inactive\s+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="19" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Check interface wifi0.1 and wifi1.1 state by show interface
			</desc>
			<log-file>step4.2_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-p 4 -i "D" -i "Wifi0.1 " -c</log-match>
			<log-match>-p 4 -i "D" -i "Wifi1.1 " -c</log-match>
		</step>

		<step no="20" delay="20" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				check the client state
			</desc>
			<log-file>step4.3_wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta2" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-n -e "wpa_state=COMPLETED"</log-match>
		</step>
	</stage>
</testcase>