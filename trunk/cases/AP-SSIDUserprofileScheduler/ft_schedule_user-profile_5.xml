<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify all user-profiles can be bound with the same schedule</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Create some user-profile
		Create a once or recurrent schedule s1 which make current time
		within the schedule

		Test Procedure:
		1. Bind s1 to all user-profile, verify if can bind successful by show
		user-profile xx schedule
		2. Check all user-profile staus
		3. Modify schedule s1 and make current time without the duration,
		check all user-profile status
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<property name="user_profile_1" value="FWtest-1" />
	<property name="user_profile_2" value="FWtest_2" />
	<property name="user_profile_3" value="FWtest_3" />
	<property name="schedule_id_1" value="time-1" />

	<stage>
		<step no="0">
			<desc>
				Create some user-profile
			</desc>
			<telnet target="ap1">
				-v "user-profile ${user_profile_1}"
				-v "user-profile ${user_profile_2}"
				-v "user-profile ${user_profile_3}"
			</telnet>
		</step>

		<step no="1">
			<desc>
				check system time
				"show clock"
			</desc>
			<log-file>step1_show_clock.log</log-file>
			<telnet target="ap1">
				-v "show clock"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				get time to create a recurrent schedule
			</desc>
			<setvar name="data_time_1">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1_show_clock.log -10
			</setvar>
		</step>

		<step no="1.2">
			<desc>
				get time to create a recurrent schedule
			</desc>
			<setvar name="data_time_2">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1_show_clock.log -5
			</setvar>
		</step>

		<step no="1.3">
			<desc>
				get time to create a recurrent schedule
			</desc>
			<setvar name="data_time_3">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1_show_clock.log 30
			</setvar>
		</step>

		<step no="1.4">
			<desc>
				Create a schedule s1 which make current time within the duration
			</desc>
			<log-file>step1.4_create_schedule.log</log-file>
			<telnet target="ap1">
				-v "schedule ${schedule_id_1} recurrent time-range ${data_time_1} to ${data_time_3}"
			</telnet>
		</step>

		<step no="1.5">
			<desc>
				Bind s1 to all user-profile
			</desc>
			<log-file>step1.5_bind_schedule_to_user_profile.log</log-file>
			<telnet target="ap1">
				-v "user-profile ${user_profile_1} schedule ${schedule_id_1}"
				-v "user-profile ${user_profile_2} schedule ${schedule_id_1}"
				-v "user-profile ${user_profile_3} schedule ${schedule_id_1}"
			</telnet>
		</step>

		<step no="1.6">
			<desc>
				verify if can bind successful by show user-profile xx schedule
			</desc>
			<log-file>step1.6_check_user_profile.log</log-file>
			<telnet target="ap1">
				-v "show user-profile ${user_profile_1} schedule"
			</telnet>
			<log-match>-e "${schedule_id_1}"</log-match>
		</step>

		<step no="1.7">
			<desc>
				verify if can bind successful by show user-profile xx schedule
			</desc>
			<log-file>step1.7_check_user_profile.log</log-file>
			<telnet target="ap1">
				-v "show user-profile ${user_profile_2} schedule"
			</telnet>
			<log-match>-e "${schedule_id_1}"</log-match>
		</step>

		<step no="1.8">
			<desc>
				verify if can bind successful by show user-profile xx schedule
			</desc>
			<log-file>step1.8_check_user_profile.log</log-file>
			<telnet target="ap1">
				-v "show user-profile ${user_profile_3} schedule"
			</telnet>
			<log-match>-e "${schedule_id_1}"</log-match>
		</step>

		<step no="2" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				Check user-profile status by show user-profile-schedule
			</desc>
			<log-file>step2_check_user_profile_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show user-profile-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${user_profile_1}\s+Yes\s+Active\s+" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${user_profile_2}\s+Yes\s+Active\s+" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${user_profile_3}\s+Yes\s+Active\s+" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3">
			<desc>
				Modify schedule s1 and make current time without the duration
			</desc>
			<log-file>step3_modify_schedule.log</log-file>
			<telnet target="ap1">
				-v "schedule ${schedule_id_1} recurrent time-range ${data_time_1} to ${data_time_2}"
			</telnet>
		</step>

		<step no="3.1" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				Check user-profile status by show user-profile-schedule
			</desc>
			<log-file>step3.1_check_user_profile_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show user-profile-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${user_profile_1}\s+Yes\s+Inactive\s+" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${user_profile_2}\s+Yes\s+Inactive\s+" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${user_profile_3}\s+Yes\s+Inactive\s+" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>
</testcase>