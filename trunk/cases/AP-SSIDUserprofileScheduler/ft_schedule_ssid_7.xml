<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify if scheduled time is correct after change schedule( change the in-use time, add or remove the schedule).</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Create a SSID and bind it to interface wifi0
		Create once and recurrent schedules and bind them to SSID
		Current time within the duration

		Test Procedure:
		1.Change in-use schedule's time make current time without the
		duration, verify scheduled time is correct, check ssid status by
		show ssid-schedule, check interface, check log by show logging
		buffered | in schedule
		2.Add schedule and make current time within the duration, bind it
		to ssid, check ssid status by show ssid-schedule, check interface,
		check log by show logging buffered | in schedule
		3.Remove schedule from ssid make current time without the
		duration,
		check ssid status by show ssid-schedule or show interface, check
		log by show logging buffered | in schedule
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<property name="schedule_id_1" value="time-1" />
	<property name="schedule_id_2" value="time-2" />
	<property name="schedule_id_3" value="time-3" />

	<stage>
		<step no="0">
			<desc>
				Create SSID and bind it to interface wifi0
			</desc>
			<log-file>step0_int_wifi0_ssid.log</log-file>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="1">
			<desc>
				check system time
				"show clock"
			</desc>
			<log-file>step1_show_clock.log</log-file>
			<telnet target="ap1">
				-v "show clock"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				get time to create a once schedule
			</desc>
			<setvar name="data_time_1">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1_show_clock.log -10
			</setvar>
		</step>

		<step no="1.2">
			<desc>
				get time to create a once schedule
			</desc>
			<setvar name="data_time_2">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1_show_clock.log -5
			</setvar>
		</step>

		<step no="1.3">
			<desc>
				get time to create a recurrent schedule
			</desc>
			<setvar name="data_time_3">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1_show_clock.log -10
			</setvar>
		</step>

		<step no="1.4">
			<desc>
				get time to create a recurrent schedule
			</desc>
			<setvar name="data_time_4">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1_show_clock.log -5
			</setvar>
		</step>

		<step no="1.5">
			<desc>
				get time to create a recurrent schedule
			</desc>
			<setvar name="data_time_5">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1_show_clock.log 20
			</setvar>
		</step>

		<step no="1.6">
			<desc>
				Create a recurrent schedules
			</desc>
			<log-file>step1.6_create_schedule.log</log-file>
			<telnet target="ap1">
				-v "schedule ${schedule_id_1} once ${data_time_1} to ${data_time_2}"
				-v "schedule ${schedule_id_2} recurrent time-range ${data_time_3} to ${data_time_5}"
			</telnet>
		</step>

		<step no="1.7">
			<desc>
				Bind this schedules to SSID
			</desc>
			<log-file>step1.7_bing_schedule_to_ssid.log</log-file>
			<telnet target="ap1">
				-v "ssid ${ssid.name} schedule ${schedule_id_1}"
				-v "ssid ${ssid.name} schedule ${schedule_id_2}"
			</telnet>
		</step>

		<step no="1.8" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step1.8_show_ssid_schedule_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Active\s+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="1.9" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				Check interface wifi0.1 state
			</desc>
			<log-file>step1.9_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-p 4 -i "U" -i "Wifi0.1 " -c</log-match>
		</step>

		<step no="1.10">
			<desc>
				clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<step no="1.11">
			<desc>
				Change in-use scheduleâ€™s time make current time without the duration
			</desc>
			<log-file>step1.11_change_schedule.log</log-file>
			<telnet target="ap1">
				-v "schedule ${schedule_id_2} recurrent time-range ${data_time_3} to ${data_time_4}"
			</telnet>
		</step>

		<step no="1.12" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step1.12_show_ssid_schedule_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Inactive\s+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="1.13" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				Check interface wifi0.1 state
			</desc>
			<log-file>step1.13_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-p 4 -i "D" -i "Wifi0.1 " -c</log-match>
		</step>

		<step no="1.14" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				check log by show logging buffered
			</desc>
			<log-file>step1.14_show_logging_buffered_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "schedule\s+check,Interface\s+wifi0.1\s+is\s+DOWN\s+by\s+schedule\!" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="1.15">
			<desc>
				clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<step no="2">
			<desc>
				Add schedule and make current time within the duration, bind it to ssid
			</desc>
			<log-file>step2_add_schedule.log</log-file>
			<telnet target="ap1">
				-v "schedule ${schedule_id_3} recurrent time-range ${data_time_4} to ${data_time_5}"
				-v "ssid ${ssid.name} schedule ${schedule_id_3}"
			</telnet>
		</step>
		
		<step no="2.3" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				check log by show logging buffered
			</desc>
			<log-file>step2.3_show_logging_buffered_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "schedule\s+check,Interface\s+wifi0.1\s+is\s+UP\s+by\s+schedule\!" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="2.1" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step2.1_show_ssid_schedule_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Active\s+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2.2" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				Check interface wifi0.1 state
			</desc>
			<log-file>step2.2_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-p 4 -i "U" -i "Wifi0.1 " -c</log-match>
		</step>

	

		<step no="2.4">
			<desc>
				clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<step no="3">
			<desc>
				Remove schedule from ssid
			</desc>
			<log-file>step3_remove_schedule.log</log-file>
			<telnet target="ap1">
				-v "no ssid ${ssid.name} schedule ${schedule_id_3}"
			</telnet>
		</step>

		<step no="3.1" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step3.1_show_ssid_schedule_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Inactive\s+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.2" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				Check interface wifi0.1 state
			</desc>
			<log-file>step3.2_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-p 4 -i "D" -i "Wifi0.1 " -c</log-match>
		</step>

		<step no="3.3" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				check log by show logging buffered
			</desc>
			<log-file>step3.3_show_logging_buffered_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "schedule\s+check,Interface\s+is\s+DOWN\s+by\s+schedule\!" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
	</stage>
</testcase>