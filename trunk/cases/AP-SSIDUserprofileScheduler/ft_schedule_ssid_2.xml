<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify that "recurrent" schedule can take effect on SSID to associated computer and associating computer.</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Create a SSID and bind it to interface wifi0
		A laptop connect to SSID

		Test Procedure:
		1. Create one recurrent schedule (two state: current time within the
		duration; current time without the duration)
		2. Bind schedule to SSID
		3. Check SSID status by show ssid-schedule
		4. Check interface wifi0.1 state by show interface, check log by
		show logging buffered | in schedule
		5. Use a laptop to connect to SSID
		6. Check traffic between associated laptop and SSID
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>windows</tbtype>
	<property name="schedule_name" value="time-1" />

	<stage>
		<step no="1">
			<desc>
				Create a SSID and bind it to interface wifi0
			</desc>
			<log-file>step1_int_wifi0_ssid.log</log-file>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "security-object ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "security-object ${ssid.name} security protocol-suite wpa-auto-psk ascii-key aerohive"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				Set fixed time to AP
			</desc>
			<telnet target="ap1">
				-v "clock date-time 2012-02-07 10:00:00"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				check system time
				"show clock"
			</desc>
			<log-file>step1.1_show_clock.log</log-file>
			<telnet target="ap1">
				-v "show clock"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				get a time to create one recurrent schedule
			</desc>
			<setvar name="data_time_1">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1.1_show_clock.log -10
			</setvar>
		</step>

		<step no="1.4">
			<desc>
				get a time to create one recurrent schedule
			</desc>
			<setvar name="data_time_2">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1.1_show_clock.log -5
			</setvar>
		</step>

		<step no="1.5">
			<desc>
				get a time to create one recurrent schedule
			</desc>
			<setvar name="data_time_3">
				perl ${case.dir}/bin/get_time_hours_month_day.pl ${log.dir}/step1.1_show_clock.log 30
			</setvar>
		</step>

		<step no="2">
			<desc>
				Create one recurrent schedule
			</desc>
			<log-file>step2_create_schedule.log</log-file>
			<telnet target="ap1">
				-v "schedule ${schedule_name} recurrent time-range ${data_time_1} to ${data_time_3}"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				show schedule can check created schedule
			</desc>
			<log-file>step2.1_show_running.log</log-file>
			<telnet target="ap1">
				-v "show schedule"
			</telnet>
			<log-match>-e "${schedule_name}"</log-match>
		</step>

		<step no="3">
			<desc>
				Bind schedule to SSID
			</desc>
			<log-file>step3_bing_schedule_to_ssid.log</log-file>
			<telnet target="ap1">
				-v "ssid ${ssid.name} schedule ${schedule_name}"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				check schedule bind ssid
				show ssid ${ssid.name} schedule
			</desc>
			<log-file>step3.1_show_ssid_schedule.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} schedule"
			</telnet>
			<log-match>-e "${schedule_name}"</log-match>
		</step>

		<step no="4" type="loop-check" loop-max-times="40" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step4_show_ssid_schedule.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Active\s+" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5" type="loop-check" loop-max-times="40" loop-interval="5">
			<desc>
				Check interface wifi0.1 state by show interface
			</desc>
			<log-file>step5_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-e "Wifi0.1 " -i "U"</log-match>
		</step>

		<step no="5.1" type="loop-check" loop-max-times="40" loop-interval="5">
			<desc>
				check log by show logging buffered | in schedule
			</desc>
			<log-file>step5.1_show_logging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered | in schedule"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "schedule\s+check,Interface\s+wifi0.1\s+is\s+UP\s+by\s+schedule\!" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6">
			<desc>
				A laptop connect to SSID
				Generate wifi_aerohive_test profile for ssid ${ssid.name}
			</desc>
			<script>
				perl ${bin.dir}/winprof_gen.pl -f ${case.dir}/conf/winprof.xml -o step6_wifi_prof.xml -s "${ssid.name}" -l ${log.dir}
			</script>
		</step>

		<step no="6.1">
			<desc>
				Copy to target Windows host machine a wifi windows profile file containing WEP aerohive password
			</desc>
			<script>
				staf local fs copy file ${log.dir}/step6_wifi_prof.xml tofile "c:\\staf\\wifi_aerohive_test.xml" tomachine ${sta1.mif.ip}
			</script>
		</step>

		<step no="6.2">
			<desc>
				verify profile copied
			</desc>
			<log-file>step6.2_cat_profile_sta.log</log-file>
			<ssh target="sta1">
				-v "cat /cygdrive/c/staf/wifi_aerohive_test.xml | grep ${ssid.name}"
			</ssh>
			<log-match>-e "&lt;name&gt;${ssid.name}&lt;/name&gt;"</log-match>
		</step>

		<step no="6.3">
			<desc>
				Delete all current Wireless profile of host ${sta1.mif.ip}
				Bring down the client Wireless ${sta1.mif.ip}
				Bring up the client Wireless on host ${sta1.mif.ip}
				Add new profile for ssid ${ssid.name} to host ${sta1.mif.ip}
				Check profile for ssid ${ssid.name} on host ${sta1.mif.ip}
			</desc>
			<log-file>step6.3_wlan_conf_sta.log</log-file>
			<ssh target="sta1">
				-v "netsh wlan delete profile name=* interface=\"${sta1.tif.name}\""
				-v "netsh interface set interface name=\"${sta1.tif.name}\" admin=DISABLED"
				-v "netsh interface set interface name=\"${sta1.tif.name}\" admin=ENABLED"
				-v "netsh wlan add profile filename=\"c:\\staf\\wifi_aerohive_test.xml\" interface=\"${sta1.tif.name}\""
				-v "netsh wlan show profiles ${ssid.name}"
			</ssh>
			<log-match>-e "SSID name" -i "${ssid.name}"</log-match>
		</step>

		<step no="6.4" type="loop-check" loop-max-times="40" loop-interval="5">
			<desc>
				show wlan network on host ${sta1.mif.ip}
			</desc>
			<log-file>step6.4_wlan_chk_sta_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "netsh wlan show network | grep SSID"
			</ssh>
			<log-match>-e "SSID" -i "${ssid.name}"</log-match>
		</step>

		<step no="6.5">
			<desc>
				connect to ssid ${ssid.name} on host ${sta1.mif.ip}
			</desc>
			<log-file>step6.5_wlan_conn_sta.log</log-file>
			<ssh target="sta1">
				-v "netsh wlan connect ssid=${ssid.name} name=${ssid.name} interface=\"${sta1.tif.name}\""
			</ssh>
		</step>

		<step no="6.6" type="loop-check" loop-max-times="40" loop-interval="5">
			<desc>
				wait until ssid ${ssid.name} connected on host ${sta1.mif.ip}
			</desc>
			<log-file>step6.6_wlan_conn_chk_sta_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "netsh wlan show interfaces"
			</ssh>
			<log-match>-e "State" -i " connected"</log-match>
		</step>

		<step no="6.7" type="loop-check" loop-max-times="40" loop-interval="5">
			<desc>
				wait until ip assigned on host ${sta1.mif.ip}
			</desc>
			<log-file>step6.7_wlan_ip_chk_sta_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ipconfig /all"
			</ssh>
			<log-match>-e "IPv4 Address" -i "192.168.${tb.vlan1}."</log-match>
		</step>

		<step no="6.8">
			<desc>
				show mgt0's ip of ap1
			</desc>
			<log-file>step6.8_show_interface_mgt0.log</log-file>
			<telnet target="ap1">
				-v "show interface mgt0"
			</telnet>
		</step>

		<step no="6.9">
			<desc>
				Get ap1's ip
			</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step6.8_show_interface_mgt0.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="6.10">
			<desc>
				sta ping ap
			</desc>
			<log-file>step6.10_sta_ping_ap.log</log-file>
			<ssh target="sta1">
				-v "ping ${ap1.mgt0.ip} -c 5"
			</ssh>
			<log-match>-e "from ${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="7">
			<desc>
				system time outside in the schedule
			</desc>
			<telnet target="ap1">
				-v "schedule ${schedule_name} recurrent time-range ${data_time_1} to ${data_time_2}"
			</telnet>
		</step>

		<step no="7.1" type="loop-check" loop-max-times="40" loop-interval="5">
			<desc>
				Check SSID status by show ssid-schedule
			</desc>
			<log-file>step7.1_show_ssid_schedule.log</log-file>
			<telnet target="ap1">
				-v "show ssid-schedule"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid.name}\s+Yes\s+Inactive\s+" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7.2" type="loop-check" loop-max-times="40" loop-interval="5">
			<desc>
				interface wifi0.1 is “D” state
			</desc>
			<log-file>step7.2_show_interface_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
			<log-match>-e "Wifi0.1 " -i "D"</log-match>
		</step>

		<step no="7.3" type="loop-check" loop-max-times="40" loop-interval="5">
			<desc>
				check log by show logging buffered | in schedule
			</desc>
			<log-file>step7.3_show_logging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered | in schedule"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "schedule\s+check,Interface\s+wifi0.1\s+is\s+DOWN\s+by\s+schedule\!" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7.4" type="loop-check" loop-max-times="40" loop-interval="5">
			<desc>
				wait until ssid ${ssid.name} disconnected on host ${sta1.mif.ip}
			</desc>
			<log-file>step7.4_wlan_conn_chk_sta_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "netsh wlan show interfaces"
			</ssh>
			<log-match>-e "State" -i " disconnected"</log-match>
		</step>

		<step no="7.5">
			<desc>
				sta ping ap
			</desc>
			<log-file>step7.5_sta_ping_ap.log</log-file>
			<ssh target="sta1">
				-v "ping ${ap1.mgt0.ip} -c 5"
			</ssh>
			<log-match>-e "100.0% packet loss"</log-match>
		</step>
	</stage>
</testcase>