<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Amrp traffic vlan test</brief>
	<priority>Middle</priority>
	<automated>yes</automated>
	<description>
		Pre-condition	
			1.	two ap establish  amrp neighbor successfully
		Test procedure	
			1.	Configure mgt0 vlan id different with eth0 native vlan on ap1, mgt0 vlan id 2,native vlan is  57 
			2.	Check the mgt0 and eth0 interface,result 1
			3.	Check the amrp debug packets on ap1, set the fe filter, “_ff src-mac ap2_mac bidirection”, through debug CLI “_kdebug fe basic” “_kdebug eth vlan” on ap1, result 2
			4.	Configure mgt0 vlan and native vlan are the same on ap1, assume 57, repeat step 2, result 3
		Expect result	
			1.	The mgt0 vlan id is 2,the eth0 native vlan is 57
			2.	The amrp packet vlan info through eth0
				packet vlan: 2
				interface vlan :57
			3.	the amrp packet vlan info through eth0
				packet vlan: 2
				interface vlan :2
	</description>
	
	<numofap>2</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	
	<stage>
		<step no="pre_1">
			<desc>
				try to establish amrp neighbor
				config on ap1: hive and vlan
			</desc>
			<console target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan2}"
				-v "interface mgt0 native-vlan ${tb.vlan2}"
			</console>
		</step>

		<step no="pre_2">
			<desc>
				config on ap2: hive and vlan
			</desc>
			<console target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan2}"
				-v "interface mgt0 native-vlan ${tb.vlan2}"
			</console>
		</step>
		
		<step no="pre_3">
			<desc>
				show int m0 on ap2
			</desc>
			<log-file>show_interface_mgt0.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
			<no-error-check />
			<log-match>-e "VLAN id=${tb.vlan2};\ \ Native vlan id=${tb.vlan2}"</log-match>
		</step>

		<step no="pre_4">
			<desc>Get AP2's mac</desc>
			<setvar name="ap2.mgt0.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_mgt0.log -i mgt0 -o aero -m -width
			</setvar>
		</step>

		<step no="1">
			<desc>1.configure mgt0 vlan id different with eth0  native vlan on ap1, like mgt0 vlan ${tb.vlan2}, native vlan ${tb.vlan3}</desc>
			<console target="ap1">
				-v "interface mgt0 native-vlan ${tb.vlan3}"
				-v ""
			</console>
		</step>
		
		<step no ="2.1">
			<desc>2.check the mgt0 and eth0 interface</desc>
			<log-file>step2.1_show_mgt0.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
			<log-match>-e "VLAN id=${tb.vlan2};\ \ Native vlan id=${tb.vlan3}"</log-match>
		</step>

		<step no ="2.2">
			<desc>2.check the mgt0 and eth0 interface</desc>
			<log-file>step2.2_show_eth0.log</log-file>
			<console target="ap1">
				-v "show interface eth0"
			</console>
			<log-match>-e "Native-vlan=${tb.vlan3}"</log-match>
		</step>		

		<step no="3.1">
			<desc>
				3.	Check the amrp debug packets on ap1, set the fe filter, “_ff src-mac ap2_mac bidirection”, through debug CLI “_kdebug fe basic” “_kdebug eth vlan” on ap1
			</desc>
			<console target="ap1">
				-v "clear log all"
				-v "_ff src-mac ${ap2.mgt0.mac} bidirection"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_kdebug eth vlan"
				-v "_kdebug fe vlan"
			</console>
		</step>	

		<step no="3.2" delay="60">
			<desc>
				Check the eth debug packets on ap1
			</desc>
			<log-file>step3.2_log_buf.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered | include \"packet vlan\""
			</console>
			<no-error-check />
			<log-match>-e "packet vlan ${tb.vlan2}, interface vlan ${tb.vlan3}"</log-match>
		</step>

		<step no="4.1">
			<desc>
				4: Configure mgt0 vlan and native vlan are the same on ap1, assume 58,
				repeat step 2, result 3
			</desc>
			<console target="ap1">
				-v "clear log all"
				-v "interface mgt0 native-vlan ${tb.vlan2}"
				-v "no interface mgt0 dhcp client"
				-v ""
				-v ""
				-v ""
				-v "interface mgt0 dhcp client"
			</console>
		</step>	

			<step no="4.2" delay="60">
			<desc>
				Check the eth debug packets on ap1
			</desc>
			<log-file>step4.2_log_buf.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered | include \"packet vlan\""
			</console>
			<no-error-check />
			<log-match>-e "packet vlan ${tb.vlan2}, interface vlan ${tb.vlan2}"</log-match>
		</step>	
		
	</stage>
	
</testcase>