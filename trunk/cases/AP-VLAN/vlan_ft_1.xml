<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Mgt vlan test</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Client and ap are in the same subnet, mtg0 vlan and native are the same

		Test Procedure:
		1: Configure ssid and client links to ap with ssid
		2: Configure ap mgt0 vlan, assume 1, result 1
		3: AP ping client, result 2
		4: AP ping server, result 3
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="ap.log.file" value="show_logging_debug.log" />
	<property name="ap.log.file2" value="show_logging_debug2.log" />

	<stage>
		<step no="1">
			<desc>
				Client and ap are in the same subnet, mtg0 vlan and native are the same
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan 1"
				-v "interface mgt0 native-vlan 1"
			</console>
		</step>

		<step no="2">
			<desc>
				1: Configure ssid and client links to ap with ssid
			</desc>
			<console target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</console>
		</step>

		<step no="2.1">
			<desc>
				Configure sta connect parameters
			</desc>
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=wifi0"
			</multi-setvar>
		</step>

		<include prefix="2.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />		
		
		
<!--
		<step no="2.1">
			<desc>
				create config file of wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "echo \"ctrl_interface=/var/run/wpa_supplicant\" > /tmp/wpa_supplicant.cfg"
				-v "ifconfig ${sta1.tif.name} down"
				-v "ifconfig ${sta1.tif.name} up"
			</ssh>
		</step>

		<step no="2.2" delay="5">
			<desc>
				start wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "killall wpa_supplicant"
				-v "wpa_supplicant -i ${sta1.tif.name} ${sta1.wpa_flag} -c /tmp/wpa_supplicant.cfg -B"
			</ssh>
		</step>

		<step no="2.3">
			<desc>
				pc connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<step no="2.4" delay="10" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>check if the client was associated successfully</desc>
			<log-file>step2.1_wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="2.5">
			<desc>client gets IP by dhclient</desc>
			<ssh target="sta1">
				-v "dhclient ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="2.6" delay="10">
			<desc>ifconfig to show the ip adrr</desc>
			<log-file>step2.3_ifconfig.log</log-file>
			<ssh target="sta1">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
			<log-match> -e "inet addr"</log-match>
		</step>
-->
		<step no="3">
			<desc>
				2: Configure ap mgt0 vlan, assume 1, result 1
			</desc>
			<log-file>step2_show_interface_mgt0.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
			<log-match>-e "VLAN id=1;\ \ Native vlan id=1"</log-match>
		</step>

		<step no="4">
			<desc>
				3: AP ping client, result 2
			</desc>
			<log-file>step4_ap_ping_client.log</log-file>
			<console target="ap1">
				-v "clear log"
				-v "logging debug"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</console>
		</step>

		<step no="4.1" delay="10">
			<desc>show mgt0's ip of ap1</desc>
			<log-file>ap1_info.log</log-file>
			<console target="ap1" timeout="80">
				-v "show interface mgt0"
			</console>
			<no-error-check />
		</step>

		<step no="4.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap1_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="4.3" delay="10">
			<desc>ifconfig to show the ip add</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="4.4">
			<desc>Get laptop1's ip</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="4.5">
			<desc>set the fe filter</desc>
			<console target="ap1">
				-v "_ff  src-ip ${ap1.mgt0.ip} protocol 1 bidirection"
			</console>
		</step>

		<step no="4.6">
			<desc>set the fe filter</desc>
			<console target="ap1">
				-v "_kdebug wifi-driver wifi0.1 extend vlan"
				-v "clear log buffered"
			</console>
		</step>

		<step no="4.7" delay="30">
			<desc>ap ping sta</desc>
			<console target="ap1">
				-v "_debug show"
				-v "show _ff"
				-v "clear log all"
				-v "ping ${sta1.tif.ip} count 1"
			</console>
		</step>

		<step no="4.8">
			<desc>
				check logging debug
			</desc>
			<console target="ap1">
				-v "show logging buffered > tftp://${mpc.tif.ip}:${ap.log.file}"
			</console>
		</step>

		<step no="4.9">
			<desc>cp the file to current log dir</desc>
			<log-file>${ap.log.file}</log-file>
			<script>
				cd /tftpboot/; mv ${ap.log.file} ${log.dir}/
			</script>
			<log-match>-i "(o) wifi0.1" -i "${ap1.mgt0.ip}->${sta1.tif.ip }"</log-match>
			<log-match>-e "vlan 1, interface vlan 1, sta vlan 1"</log-match>
			<no-error-check/>
		</step>

		<step no="5">
			<desc>
				clean log,open debug eth
			</desc>
			<console target="ap1">
				-v "clear log"
				-v "_kdebug eth all"
			</console>
		</step>

		<step no="5.1">
			<desc>
				4: AP ping server, result 3
			</desc>
			<console target="ap1">
				-v "clear log buffered"
				-v "ping ${pub.tftp1.tip}"
			</console>
		</step>

		<step no="5.2">
			<desc>
				check logging debug
			</desc>
			<console target="ap1">
				-v "show logging buffered > tftp://${mpc.tif.ip}:${ap.log.file2}"
			</console>
		</step>

		<step no="5.2">
			<desc>cp the file to current log dir</desc>
			<log-file>${ap.log.file2}</log-file>
			<script>
				cd /tftpboot/; mv ${ap.log.file2} ${log.dir}/
			</script>
			<log-match>-i "(o) eth0" -i "${ap1.mgt0.ip}->${pub.tftp1.tip}"</log-match>
			<log-match>-e "packet vlan 1, interface vlan 1"</log-match>
			<no-error-check/>
		</step>
	</stage>
</testcase>
