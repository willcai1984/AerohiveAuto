<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>mgt0 native vlan and vlan id</brief>
	<priority>high</priority>
	<automated>yes</automated>
	<description>
		Pre-condition	
			1.	There are the dhcp server on vlan1~10
			2.	the dhcp server interface native vlan is 1 and allow all the vlans
			3.	AP is the default configuration
		Test procedure	
			1.	Enable dhcp client on mgt0 interface,check the dhcp packets ,result 1
			2.	Ap ping server,result 2
			3.	Modify the mgt0 native vlan is different with the mgt0 vlan id,for example 2
			4.	Check the mgt0 interface,result 3
			5.	Check the eth0 interface,result 4
			6.	Enable dhcp client on mgt0 interface,check the dhcp packets ,result 5
			7.	Ap ping server,result 6
			8.	Modify the mgt0 vlan id and native vlan are both 2
			9.	Modify the eth0 native vlan is different with the mgt0 native vlan,for example 57
			10.	Enable dhcp client on mgt0 interface,check the dhcp packets ,result 7
			11.	Ap ping server,result 8
			12.	Modify the mgt0 vlan id to 3
			13.	check the mgt0 vlan id is 3,native vlan is 2,eth0 native vlan is 57
			14.	Enable dhcp client on mgt0 interface,check the dhcp packets ,result 9
		Expect result	
			1.	the dhcp packet vlan info out eth0
				packet vlan: 1
				interface vlan :1
				and mgt0 get ip address from dhcp server vlan1
			2.	ap can ping to server and the icmp packet vlan info on eth0
				packet vlan: 1
				interface vlan :1
			3.	vlan id is 1 and native vlan 2
			4.	native vlan 2
			5.	the  vlan info on the dhcp packet
				packet vlan: 1
				interface vlan :2
				and mgt0 get ip address from dhcp server vlan1
			6.	ap can ping to server and the vlan info of the icmp packet
				packet vlan: 1
				interface vlan :2
			7.	the  vlan info on the dhcp packet
				packet vlan: 2
				interface vlan :57
				and mgt0 get ip address from dhcp server vlan2
			8.	ap can ping to server and the vlan info of the icmp packet
				packet vlan: 2
				interface vlan :57
			9.	the  vlan info on the dhcp packet
				packet vlan: 3
				interface vlan :57
				and mgt0 get ip address from dhcp server vlan3

	</description>
	
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	
	<stage>
	
		<step no="pre_1">
			<desc> show mgt0 interface</desc>
			<log-file>show_mgt0_mac.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>
		
		<step no="pre_2">
            <desc>get mac address of ap1</desc>
                <setvar name="ap1.mgt0.mac">
                    ${bin.dir}/getbyrexp.py -p "MAC addr=([\da-fA-F:]+)" -f ${log.dir}/show_mgt0_mac.log -t str
                </setvar>
        </step>
		
		<step no="pre_3">
			<desc>get prefix of vlan ${tb.vlan1}, ${tb.vlan2}, ${tb.vlan3}</desc>
			<multi-setvar>
				echo "vlan1_network_prefix=$(echo ${tb.vlan1.dhcp_start} | cut -d. -f1,2,3)"
				echo "vlan2_network_prefix=$(echo ${tb.vlan2.dhcp_start} | cut -d. -f1,2,3)"
				echo "vlan3_network_prefix=$(echo ${tb.vlan3.dhcp_start} | cut -d. -f1,2,3)"
			</multi-setvar>
		</step>		
		
		<step no="1.1">
			<desc>1.1 dhcp server interface native vlan is ${tb.vlan1} and allow all the vlans, change mgt0 interface vlan/native-vlan same as dhcp server as ${tb.vlan1}</desc>
			<log-file>step1.1_mgt0_vlan.log</log-file>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>
		
		<step no="1.2">
			<desc>1.2 enable dhcp client on mgt0 interface</desc>
			<log-file>step1.2_mgt0_dhcp.log</log-file>
			<console target="ap1">
				-v "no interface mgt0 dhcp client"
				-v ""
				-v ""
				-v "clear log buff"
				-v "_ff id 1 dhcp-client ${ap1.mgt0.mac}"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_kdebug fe vlan"
				-v "_kdebug eth vlan"
				-v ""
			</console>
		</step>
		
		<step no="1.3">
			<desc>1.3 enable dhcp client on mgt0 interface</desc>
			<log-file>step1.3_mgt0_dhcp.log</log-file>
			<console target="ap1">
				-v "interface mgt0 dhcp client"
			</console>
		</step>		
		
		<step no="1.4">
			<desc>check the dhcp packets</desc>
			<log-file>step1.4_mgt0_dhcp.log</log-file>
			<ssh target="ap1">
				-v "show log buf"
			</ssh>
			<no-error-check />
			<log-match>-i "eth0: parent eth0, ${ap1.mgt0.mac}->ffff:ffff:ffff" -i "packet vlan ${tb.vlan1}, interface vlan ${tb.vlan1}"</log-match>
		</step>
		
		<step no="1.5">
			<desc>
				1.5 show mgt0 ip address
			</desc>
			<log-file>step1.5_mgt0_ip.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>			
		</step>
		
		<step no="1.6">
            <desc>1.6 get ip address of ap1</desc>
                <setvar name="ap1.mgt0.ip.vlan1">
                    ${bin.dir}/getbyrexp.py -p "IP addr=([\d.]+)" -f ${log.dir}/step1.5_mgt0_ip.log -t str
                </setvar>
        </step>
		
		<step no="1.7">
			<desc>get prefix of mgt0 ip </desc>
			<multi-setvar>
				echo "ap1_mgt0_vlan1_ip_prefix=$(echo ${ap1.mgt0.ip.vlan1} | cut -d. -f1,2,3)"
			</multi-setvar>
		</step>
		
        <step no="1.8">
            <desc>
                check if ap1 mgt0 get ip address from vlan ${tb1.vlan1} successfully
            </desc>
            <script>
                if [ "${vlan1_network_prefix}" == "${ap1_mgt0_vlan1_ip_prefix}" ]; then exit 0; else exit 1; fi
            </script>
        </step>				
		
		
		<step no="2.1">
			<desc>change fe debug</desc>
			<log-file>step2.1_fe_debug.log</log-file>
			<console target="ap1">
				-v "clear log all"
				-v "no _ff id 1"
				-v "_ff id 1 dst-ip ${mpc.mif.ip} protocol 1 bidirectional"
			</console>
		</step>
		
		<step no="2.2">
			<desc>ap can ping server </desc>
			<log-file>step2.2_ping.log</log-file>
			<console target="ap1">
				-v "ping ${mpc.mif.ip} count 5"
			</console>
			<log-match>-c -i "from ${mpc.mif.ip}: icmp_seq" -i "ttl="</log-match>
		</step>
		
		<step no="2.3">
			<desc>check the icmp packets vlan info on eth0 when ap ping server </desc>
			<log-file>step2.3_icmp_pkts.log</log-file>
			<ssh target="ap1">
				-v "show log buff"
			</ssh>
			<no-error-check />
			<log-match>-i "eth0: parent eth0, ${ap1.mgt0.mac}->${tb.vlan1.gw.mac}" -i "packet vlan ${tb.vlan1}, interface vlan ${tb.vlan1}"</log-match>
		</step>
		
		<step no="3">
			<desc>modify the mgt0 native-vlan is different with mgt0 vlan id, like mgt0 vlan is ${tb.vlan2}, native-vlan is ${tb.vlan5}</desc>
			<log-file>step3_mgt0_vlan.log</log-file>
			<console target="ap1">
				-v "clear log buff"
				-v "interface mgt0 vlan ${tb.vlan2}"
				-v "interface mgt0 native-vlan ${tb.vlan5}"
			</console>
		</step>
		
		<step no="4">
			<desc>4.check mgt0 interface</desc>
			<log-file>step4_mgt0_int.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
			<log-match>-e "VLAN id=${tb.vlan2};\ \ Native vlan id=${tb.vlan5}"</log-match>
		</step>
		
		<step no="5">
			<desc>5. check eth0 interface</desc>
			<log-file>step5_eth0_vlan.log</log-file>
			<console target="ap1">
				-v "show interface eth0"
			</console>
			<log-match>-c -i "Native-vlan=${tb.vlan5};" </log-match>			
		</step>
		
		<step no="6.1">
			<desc>6.1 enable dhcp client on mgt0 interface</desc>
			<log-file>step6.1_mgt0_dhcp.log</log-file>
			<console target="ap1">
				-v "no interface mgt0 dhcp client"
				-v ""
				-v "no _ff id 1"
				-v "_ff id 1 dhcp-client ${ap1.mgt0.mac}"
				-v ""
				-v "interface mgt0 dhcp client"
			</console>
		</step>
		
		<step no="6.2">
			<desc>check the dhcp packets</desc>
			<log-file>step6.2_mgt0_dhcp.log</log-file>
			<console target="ap1">
				-v "console page 0"
				-v "show log buf"
			</console>
			<no-error-check />
			<log-match>-i "eth0: parent eth0, ${ap1.mgt0.mac}->ffff:ffff:ffff" -i "packet vlan ${tb.vlan2}, interface vlan ${tb.vlan5}"</log-match>
		</step>	
		
		<step no="6.3">
			<desc>
				6.3 show mgt0 ip address
			</desc>
			<log-file>step6.3_mgt0_ip.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>			
		</step>
		
		<step no="6.4">
            <desc>6.4 get ip address of ap1</desc>
                <setvar name="ap1.mgt0.ip.vlan2">
                    ${bin.dir}/getbyrexp.py -p "IP addr=([\d.]+)" -f ${log.dir}/step6.3_mgt0_ip.log -t str
                </setvar>
        </step>
		
		<step no="6.5">
			<desc>get prefix of mgt0 ip </desc>
			<multi-setvar>
				echo "ap1_mgt0_vlan2_ip_prefix=$(echo ${ap1.mgt0.ip.vlan2} | cut -d. -f1,2,3)"
			</multi-setvar>
		</step>
		
        <step no="6.6">
            <desc>
                check if ap1 mgt0 get ip address from vlan ${tb1.vlan2} successfully
            </desc>
            <script>
                if [ "${vlan2_network_prefix}" == "${ap1_mgt0_vlan2_ip_prefix}" ]; then exit 0; else exit 1; fi
            </script>
        </step>				

		<step no="7.1">
			<desc>change fe debug</desc>
			<log-file>step7.1_fe_debug.log</log-file>
			<console target="ap1">
				-v "clear log buff"
				-v "no _ff id 1"
				-v "_ff id 1 dst-ip ${mpc.mif.ip} protocol 1 bidirectional"
			</console>
		</step>
		
		<step no="7.2">
			<desc>ap can ping server </desc>
			<log-file>step7.2_ping.log</log-file>
			<console target="ap1">
				-v "ping ${mpc.mif.ip} count 5"
			</console>
			<log-match>-c -i "from ${mpc.mif.ip}: icmp_seq" -i "ttl="</log-match>
		</step>
		
		<step no="7.3">
			<desc>check the icmp packets vlan info on eth0 when ap ping server </desc>
			<log-file>step7.3_icmp_pkts.log</log-file>
			<console target="ap1">
				-v "console page 0"
				-v "show log buff"
			</console>
			<no-error-check />
			<log-match>-i "eth0: parent eth0, ${ap1.mgt0.mac}->${tb.vlan2.gw.mac}" -i "packet vlan ${tb.vlan2}, interface vlan ${tb.vlan5}"</log-match>
		</step>	
		
		<step no="8">
			<desc>modify the mgt0  vlan id and native vlan are both ${tb.vlan3}</desc>
			<log-file>step8_mgt0_vlan.log</log-file>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan3}"
				-v "interface mgt0 native-vlan ${tb.vlan3}"
			</console>
		</step>
		
		<step no="9">
			<desc>modify eth0 native vlan is different with the mgt0 native vlan, for example ${tb.vlan6}</desc>
			<log-file>step9_ech0_int.log</log-file>
			<console target="ap1">
				-v "interface eth0 native-vlan ${tb.vlan6}"
			</console>
		</step>
		
		<step no="10.1">
			<desc>10.1 enable dhcp client on mgt0 interface</desc>
			<log-file>step10.1_mgt0_dhcp.log</log-file>
			<console target="ap1">
				-v "no interface mgt0 dhcp client"
				-v ""
				-v "clear log buff"
				-v "no _ff id 1"
				-v "_ff id 1 dhcp-client ${ap1.mgt0.mac}"
				-v ""
				-v "interface mgt0 dhcp client"
			</console>
		</step>
		
		<step no="10.2">
			<desc>check the dhcp packets</desc>
			<log-file>step10.2_mgt0_dhcp.log</log-file>
			<console target="ap1">
				-v "show log buf"
			</console>
			<no-error-check />
			<log-match>-i "eth0: parent eth0, ${ap1.mgt0.mac}->ffff:ffff:ffff" -i "packet vlan ${tb.vlan3}, interface vlan ${tb.vlan6}"</log-match>
		</step>	
		
		<step no="10.3">
			<desc>
				10.3 show mgt0 ip address
			</desc>
			<log-file>step10.3_mgt0_ip.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>			
		</step>
		
		<step no="10.4">
            <desc>10.4 get ip address of ap1</desc>
                <setvar name="ap1.mgt0.ip.vlan3">
                    ${bin.dir}/getbyrexp.py -p "IP addr=([\d.]+)" -f ${log.dir}/step10.3_mgt0_ip.log -t str
                </setvar>
        </step>
		
		<step no="10.5">
			<desc>get prefix of mgt0 ip </desc>
			<multi-setvar>
				echo "ap1_mgt0_vlan3_ip_prefix=$(echo ${ap1.mgt0.ip.vlan3} | cut -d. -f1,2,3)"
			</multi-setvar>
		</step>
		
        <step no="10.6">
            <desc>
                check if ap1 mgt0 get ip address from vlan ${tb1.vlan3} successfully
            </desc>
            <script>
                if [ "${vlan3_network_prefix}" == "${ap1_mgt0_vlan3_ip_prefix}" ]; then exit 0; else exit 1; fi
            </script>
        </step>			
		
		<step no="11.1">
			<desc>change fe debug</desc>
			<log-file>step11.1_fe_debug.log</log-file>
			<console target="ap1">
				-v "clear log buff"
				-v "no _ff id 1"
				-v "_ff id 1 dst-ip ${mpc.mif.ip} protocol 1 bidirectional"
			</console>
		</step>
		
		<step no="11.2">
			<desc>ap can ping server </desc>
			<log-file>step11.2_ping.log</log-file>
			<console target="ap1">
				-v "ping ${mpc.mif.ip} count 5"
			</console>
			<log-match>-c -i "from ${mpc.mif.ip}: icmp_seq" -i "ttl="</log-match>
		</step>
		
		<step no="11.3">
			<desc>check the icmp packets vlan info on eth0 when ap ping server </desc>
			<log-file>step11.3_icmp_pkts.log</log-file>
			<console target="ap1">
				-v "show log buff"
			</console>
			<no-error-check />
			<log-match>-i "eth0: parent eth0, ${ap1.mgt0.mac}->${tb.vlan3.gw.mac}" -i "packet vlan ${tb.vlan3}, interface vlan ${tb.vlan6}"</log-match>
		</step>			
		
		<step no="12.1">
			<desc>modify the mgt0 vlan id to ${tb.vlan2}</desc>
			<log-file>step12.1_mgt0_vlan.log</log-file>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan2}"
			</console>
		</step>
		
		<step no="13.1">
			<desc>check mgt0 interface</desc>
			<log-file>step13.1_mgt0_int.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
				-v "clear log buff"
			</console>
			<log-match>-e "VLAN id=${tb.vlan2};\ \ Native vlan id=${tb.vlan3}"</log-match>
		</step>
		
		<step no="13.2">
			<desc>check eth0 interface</desc>
			<log-file>step13.2_eth0_vlan.log</log-file>
			<console target="ap1">
				-v "show interface eth0"
			</console>
			<log-match>-c -i "Native-vlan=${tb.vlan6};" </log-match>			
		</step>		
		
		<step no="14.1">
			<desc>14.1 enable dhcp client on mgt0 interface</desc>
			<log-file>step14.1_mgt0_dhcp.log</log-file>
			<console target="ap1">
				-v "no interface mgt0 dhcp client"
				-v ""
				-v "no _ff id 1"
				-v "_ff id 1 dhcp-client ${ap1.mgt0.mac}"
				-v ""
				-v "interface mgt0 dhcp client"
			</console>
		</step>
		
		<step no="14.2">
			<desc>check the dhcp packets</desc>
			<log-file>step14.2_mgt0_dhcp.log</log-file>
			<console target="ap1">
				-v "show log buf"
			</console>
			<no-error-check />
			<log-match>-i "eth0: parent eth0, ${ap1.mgt0.mac}->ffff:ffff:ffff" -i "packet vlan ${tb.vlan2}, interface vlan ${tb.vlan6}"</log-match>
		</step>			
		
		<step no="14.3">
			<desc>
				14.3 show mgt0 ip address
			</desc>
			<log-file>step14.3_mgt0_ip.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>			
		</step>
		
		<step no="14.4">
            <desc>14.4 get ip address of ap1</desc>
                <setvar name="ap1.mgt0.ip.vlan2">
                    ${bin.dir}/getbyrexp.py -p "IP addr=([\d.]+)" -f ${log.dir}/step14.3_mgt0_ip.log -t str
                </setvar>
        </step>
		
		<step no="14.5">
			<desc>get prefix of mgt0 ip </desc>
			<multi-setvar>
				echo "ap1_mgt0_vlan2_ip_prefix=$(echo ${ap1.mgt0.ip.vlan2} | cut -d. -f1,2,3)"
			</multi-setvar>
		</step>
		
        <step no="14.6">
            <desc>
                check if ap1 mgt0 get ip address from vlan ${tb1.vlan2} successfully
            </desc>
            <script>
                if [ "${vlan2_network_prefix}" == "${ap1_mgt0_vlan2_ip_prefix}" ]; then exit 0; else exit 1; fi
            </script>
        </step>			
		
	</stage>
	
</testcase>