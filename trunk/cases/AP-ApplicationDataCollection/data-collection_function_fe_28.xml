<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>In certain time ,will record byte counters and session counters by Telnet protocol with TCP port 23</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Enable data collection
		Data-collection collect interval 5 min
		Enable telnet on ssid
		Use Wireshark to capture telnet packet on Client
		Set filter on AP "_ff id 1 src-mac xxxx:yyyy:zzzz dst-port 23 bi"(xxxx:yyyy:zzzz
		is client's mac)
		Exec data-collection clear
		_kdebug fe basic
		_kdebug fe detail
		Clear log all

		Test Procedure:
		1. Telnet to AP from client, check byte counters by captured packet and debug
		message
		2. Show data-collection pro to check
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<numofbpc>1</numofbpc>
	<tbtype>winlin</tbtype>

	<property name="conn1.ssid" value="${job.sid}-1" />

	<stage>
		<if>"${tb.bridge_support}" == "true" &amp;&amp; "${ap1.eth1.existed}" =="true"</if>

		<include prefix="pre.0" file="subs/bpc_init.xml" obj-args="bpc1, ap1" args="none" />

		<step no="pre.1">
			<desc>
				-Config ap1
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="pre.2" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>pre.2_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="pre.3">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/pre.2_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="1">
			<desc>
				-config hive on ap2
			</desc>
			<telnet target="ap1">
				-v "ssid ${conn1.ssid}"
				-v "security-object ${conn1.ssid}"
				-v "security-object ${conn1.ssid} security protocol-suite open"
				-v "security-object ${conn1.ssid} default-user-profile-attr 2"
				-v "ssid ${conn1.ssid} security-object ${conn1.ssid}"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "interface eth1 mode bridge-access user-profile-attribute 2"
				-v "interface eth1 mac-learning enable"
				-v "user-profile ttt qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 2"
				-v "data-collection enable"
				-v "data-collection collect interval 10 minutes"
				-v "ssid ${conn1.ssid} manage Telnet"
			</telnet>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<include prefix="3" file="subs/bpc_wired_connect_${tb.os}.xml" obj-args="bpc1" />

		<step no="test.1">
			<desc>
				client ping pc
			</desc>
			<log-file>client_ping_pc.log</log-file>
			<ssh target="sta1">
				-v "ping ${bpc1.tif.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${bpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="4">
			<desc>enable fe debug on ap and clear log buffer</desc>
			<telnet target="ap1">
				-v "_ff id 1 src-mac ${sta1.tif.mac} dst-port 23 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "Exec data-collection clear"
				-v "clear log all"
				-v "clear auth roaming-cache "
			</telnet>
		</step>

		<step no="5">
			<desc>
				capture packet on client
			</desc>
			<log-file>step5_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "nohup tshark -i ${sta1.tif.name} -f \&quot;ip src ${ap1.mgt0.ip} and dst port 23\&quot; -z \&quot;io,phs\&quot; &gt; ${pub.ftp1.file_local_dir}/${job.id}packet.log &amp;"
			</ssh>
		</step>

		<step no="5.1">
			<desc>
				get tcpdump process
			</desc>
			<setvar name="process.id">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step5_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="6">
			<desc>
				telnet to AP1 from laptop1
			</desc>
			<log-file>step6_telnet_ap.log</log-file>
			<ssh target="sta1" prompt=".*#" timeout="150">
				-v "rm -rf /root/.ssh/known_hosts"
				-v 'echo "nohup clicfg.pl -i 23 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"${ap.def.prompt}\" -n -z ${job.id}.log -l /tmp/ -v \"show admin active\" &gt; null &amp;" > /tmp/tmp.sh'
				-v "sh /tmp/tmp.sh"
				-v ""
				-v ""
				-v ""
				-v "sleep 60"
				-v "tail /tmp/${job.id}.log"
				-v "rm -f /tmp/${job.id}.log"
			</ssh>
			<no-error-check />
		</step>

		<step no="7" delay="600">
			<desc>
				show logging buffered | in update
			</desc>
			<log-file>step7_show_logbuf_update.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="5">
			<desc>
				kill process
			</desc>
			<ssh target="sta1">
				-v "kill -9 ${process.id}"
			</ssh>
		</step>

		<step no="8">
			<desc>
				show forwarding-engine counters _d | in radius
			</desc>
			<log-file>step8_check_forwarding_engine_counters.log</log-file>
			<telnet target="ap1">
				-v "show forwarding-engine counters _d"
			</telnet>
		</step>

		<step no="8.1">
			<desc>
				Show data-collection pro to check data collection
			</desc>
			<log-file>step8.1_check_data_collection.log</log-file>
			<telnet target="ap1">
				-v "show data-collection pro"
			</telnet>
		</step>

		<step no="9">
			<desc>get from-access counters</desc>
			<setvar name="dc_udp_from_access">
				perl ${bin.dir}/getbyrexp.py -f ${log.dir}/step8.1_check_data_collection.log -p "telnet *: 0 *(\d+) *0 *\d+" -t int
			</setvar>
		</step>

		<step no="9.1">
			<desc>get to-access counters</desc>
			<setvar name="dc_udp_to_access">
				perl ${bin.dir}/getbyrexp.py -f ${log.dir}/step8.1_check_data_collection.log -p "telnet *: 0 *\d+ *0 *(\d+)" -t int
			</setvar>
		</step>

		<step no="9.2">
			<desc>get to-access sum</desc>
			<setvar name="to_access_sum">
				perl ${case.dir}/bin/get_access_counter.pl ${log.dir}/step8.1_check_data_collection.log ${log.dir}/step7_show_logbuf_update.log to-access 10
			</setvar>
		</step>

		<step no="9.3">
			<desc>get from-access sum</desc>
			<setvar name="from_access_sum">
				perl ${case.dir}/bin/get_access_counter.pl ${log.dir}/step8.1_check_data_collection.log ${log.dir}/step7_show_logbuf_update.log from-access 10
			</setvar>
		</step>

		<step no="9.4">
			<desc>compare dc_udp_to_access with to_access_sum</desc>
			<script>
				if [ "${dc_udp_to_access}" = "${to_access_sum}" ]
				then
				echo "the sum data of to-access from station is equal"
				else
				exit 1
				echo "Failed, Not equal"
				fi
			</script>
		</step>

		<step no="9.5">
			<desc>compare dc_udp_from_access with from_access_sum</desc>
			<script>
				if [ "${dc_udp_from_access}" = "${from_access_sum}" ]
				then
				echo "the sum data of from-access from station is equal"
				else
				exit 1
				echo "Failed, Not equal"
				fi
			</script>
		</step>

		<step no="10">
			<desc>
				check capture bootp packet on client
			</desc>
			<log-file>step10_check_capture_packet_result.log</log-file>
			<ssh target="sta1">
				-v "tail ${pub.ftp1.file_local_dir}/${job.id}packet.log"
			</ssh>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0.1">
				<desc>
					kill process
				</desc>
				<ssh target="sta1">
					-v "kill -9 ${process.id}"
					-v "rm -f ${pub.ftp1.file_local_dir}/${job.id}packet.log"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>