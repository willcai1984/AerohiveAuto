<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Distinguish PPSK authenticated sessions from shared PSK authenticated sessions</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		Create all PPSK auth SSIDs(wpa-aes-psk, wpa-auto-psk, wpa-tkip-psk, wpa2-aes-
		psk, wpa2-tkip-psk) and bind them to interface wifi0
		Create a user and a group
		Attach the user to group
		Bind user to SSID
		Enable data collection
		Open _debug dcm all
		Data-collection collect interval 5 min
		Config:
		user-group test
		user-group test password-generation-method manual
		user-group test cache-mode mandatory
		user-group test psk-format character-pattern digits
		user-group test psk-format character-pattern letters
		user-group test psk-format character-pattern special-characters
		user-group test psk-format combo-pattern or
		user-group test psk-generation-method password-only
		user-group test reauth-interval 1800
		user datatest
		user datatest password datatest
		user datatest group test
		security-object datatest7
		security-object datatest7 security protocol-suite wpa-aes-psk ascii-key ***
		security-object datatest7 security private-psk
		security-object datatest7 security private-psk default-psk-disabled
		ssid
		datatest7
		ssid datatest7 security-object datatest7
		ssid datatest7 user-group test
		interface wifi0 ssid datatest7

		Test Procedure:

		1. Use a client connect to SSID with wpa-aes-psk/PPSK, check PPSK sessions by
		"show data-collection auth"
		2. Disconnect client and connect to other SSID, check PPSK sessions by "show
		data-collection auth"
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn1.proto" value="wpa-aes-psk" />
	<property name="conn1.psk" value="aerohive" />

	<stage>
		<step no="0">
			<desc>
				Enable data collection
				Data-collection collect interval 5 min
			</desc>
			<telnet target="ap1">
				-v "data-collection enable"
				-v "_debug auth info"
				-v "_debug auth basic"
				-v "clear log all"
				-v "data-collection collect interval 5 min"
			</telnet>
		</step>

		<step no="1">
			<desc>
				Create all PPSK auth SSIDs(wpa-aes-psk, wpa-auto-psk, wpa-tkip-psk, wpa2-aes-
				psk, wpa2-tkip-psk) and bind them to interface wifi0
				Create a user and a group
				Attach the user to group
				Bind user to SSID
				Enable data collection
				Open _debug dcm all
				Data-collection collect interval 5 min
				Config:
				user-group test
				user-group test password-generation-method manual
				user-group test cache-mode mandatory
				user-group test psk-format character-pattern digits
				user-group test psk-format character-pattern letters
				user-group test psk-format character-pattern special-characters
				user-group test psk-format combo-pattern or
				user-group test psk-generation-method password-only
				user-group test reauth-interval 1800
				user datatest
				user datatest password datatest
				user datatest group test
				security-object datatest7
				security-object datatest7 security protocol-suite wpa-aes-psk ascii-key ***
				security-object datatest7 security private-psk
				security-object datatest7 security private-psk default-psk-disabled
				ssid datatest7
				ssid datatest7
				security-object datatest7
				ssid datatest7 user-group test
				interface wifi0 ssid datatest7
			</desc>
			<telnet target="ap1">
				-v "user-group test"
				-v "user-group test password-generation-method manual"
				-v "user-group test cache-mode mandatory"
				-v "user-group test psk-format character-pattern digits"
				-v "user-group test psk-format character-pattern letters"
				-v "user-group test psk-format character-pattern special-characters"
				-v "user-group test psk-format combo-pattern or"
				-v "user-group test psk-generation-method password-only"
				-v "user-group test reauth-interval 1800"
				-v "user datatest"
				-v "user datatest password ${conn1.psk}"
				-v "user datatest group test"
				-v "security-object datatest7"
				-v "security-object datatest7 security protocol-suite wpa-aes-psk ascii-key ${conn1.psk}"
				-v "security-object datatest7 security private-psk"
				-v "security-object datatest7 security private-psk default-psk-disabled"
				-v "security-object datatest7 security private-psk mac-binding-enable"
				-v "security-object datatest7 security private-psk ppsk-server ${ap1.mgt0.ip}"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name}
				security-object datatest7"
				-v "ssid ${ssid.name} user-group test"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<include prefix="1.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="1.3">
			<desc>
				show ssid station
			</desc>
			<log-file>step1.3_show_ssid_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-i "${sta1.tif.ip}" -i "wpa-psk *aes *ccmp"</log-match>
		</step>

		<step no="1.4" delay="300">
			<desc>
				check data-collection auth
			</desc>
			<log-file>step1.4_show_data_collection_auth.log</log-file>
			<telnet target="ap1">
				-v "show data-collection auth"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_OPEN \(Open\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_WEB \(Open\+CWP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_DEFAULT_PSK \(PSK\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_GROUP_PSK \(PPSK\)[\t: ]+[1-2]+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_EAP \(EAP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_OPEN \(Open\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_MANUAL_WEP \(Manual WEP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_DYNAMIC_WEP \(Dynamic WEP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_TKIP \(TKIP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_CCMP \(CCMP\)[\t: ]+[1-2]+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="1.5">
			<desc>
				show run
			</desc>
			<log-file>step1.5_show_log_buff.log</log-file>
			<telnet target="ap1">
				-v "show log buff"
				-v ""
				-v ""
				-v ""
				-v "clear log all"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[Auth\]STA\(${sta1.tif.mac}\) login to SSID\(wifi0.\d+\) by user_name=datatest" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[Auth\][\t: ]+receive driver notification.+IWEVREGISTERED] for Sta\[${sta1.tif.mac}\] at Hapd" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="2.1">
			<desc>
				Create all PPSK auth SSIDs wpa-tkip-psk
			</desc>
			<telnet target="ap1">
				-v "exec data-collection clear"
				-v ""
				-v ""
				-v "security-object datatest7 security protocol-suite wpa-tkip-psk ascii-key ${conn1.psk}"
			</telnet>
		</step>

		<step no="2.1b">
			<desc>get from-access counters</desc>
			<setvar name="conn1.proto">
				echo "wpa-tkip-psk"
			</setvar>
		</step>

		<step no="2.1c">
			<desc>
				show run
			</desc>
			<log-file>step2.1c_show_run.log</log-file>
			<telnet target="ap1">
				-v "show run | in datatest7"
			</telnet>
		</step>

		<include prefix="2.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="2.3">
			<desc>
				show ssid station
			</desc>
			<log-file>step2.3_show_ssid_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-i "${sta1.tif.ip}" -i "wpa-psk *tkip"</log-match>
		</step>

		<step no="2.4" delay="300">
			<desc>
				check data-collection auth
			</desc>
			<log-file>step2.4_show_data_collection_auth.log</log-file>
			<telnet target="ap1">
				-v "show data-collection auth"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_OPEN \(Open\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_WEB \(Open\+CWP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_DEFAULT_PSK \(PSK\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_GROUP_PSK \(PPSK\)[\t: ]+[1-2]+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_EAP \(EAP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_OPEN \(Open\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_MANUAL_WEP \(Manual WEP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_DYNAMIC_WEP \(Dynamic WEP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_TKIP \(TKIP\)[\t: ]+[1-2]+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_CCMP \(CCMP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2.5">
			<desc>
				show run
			</desc>
			<log-file>step2.5_show_log_buff.log</log-file>
			<telnet target="ap1">
				-v "show log buff"
				-v ""
				-v ""
				-v ""
				-v "clear log all"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[Auth\]STA\(${sta1.tif.mac}\) login to SSID\(wifi0.\d+\) by user_name=datatest" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[Auth\][\t: ]+receive driver notification.+IWEVREGISTERED] for Sta\[${sta1.tif.mac}\] at Hapd" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="3.1">
			<desc>
				Create all PPSK auth SSIDs wpa2-aes-psk and bind them to interface wifi0
			</desc>
			<telnet target="ap1">
				-v "exec data-collection clear"
				-v ""
				-v ""
				-v "security-object datatest7 security protocol-suite wpa2-aes-psk ascii-key ${conn1.psk}"
			</telnet>
		</step>

		<step no="3.1b">
			<desc>get from-access counters</desc>
			<setvar name="conn1.proto">
				echo "wpa2-aes-psk"
			</setvar>
		</step>

		<step no="3.1c">
			<desc>
				show run
			</desc>
			<log-file>step3.1c_show_run.log</log-file>
			<telnet target="ap1">
				-v "show run | in datatest7"
			</telnet>
		</step>

		<include prefix="3.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="3.3">
			<desc>
				show ssid station
			</desc>
			<log-file>step3.3_show_ssid_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-i "${sta1.tif.ip}" -i "wpa2-psk *aes *ccmp"</log-match>
		</step>

		<step no="3.4" delay="300">
			<desc>
				check data-collection auth
			</desc>
			<log-file>step3.4_show_data_collection_auth.log</log-file>
			<telnet target="ap1">
				-v "show data-collection auth"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_OPEN \(Open\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_WEB \(Open\+CWP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_DEFAULT_PSK \(PSK\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_GROUP_PSK \(PPSK\)[\t: ]+[1-2]+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_EAP \(EAP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_OPEN \(Open\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_MANUAL_WEP \(Manual WEP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_DYNAMIC_WEP \(Dynamic WEP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_TKIP \(TKIP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_CCMP \(CCMP\)[\t: ]+[1-2]+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.5">
			<desc>
				show run
			</desc>
			<log-file>step3.5_show_log_buff.log</log-file>
			<telnet target="ap1">
				-v "show log buff"
				-v ""
				-v ""
				-v ""
				-v "clear log all"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[Auth\]STA\(${sta1.tif.mac}\) login to SSID\(wifi0.\d+\) by user_name=datatest" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[Auth\][\t: ]+receive driver notification.+IWEVREGISTERED] for Sta\[${sta1.tif.mac}\] at Hapd" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="4.1">
			<desc>
				Create all PPSK auth SSIDs wpa2-tkip-psk and bind them to interface wifi0
			</desc>
			<telnet target="ap1">
				-v "exec data-collection clear"
				-v ""
				-v ""
				-v "security-object datatest7 security protocol-suite wpa2-tkip-psk ascii-key ${conn1.psk}"
			</telnet>
		</step>

		<step no="4.1b">
			<desc>get from-access counters</desc>
			<setvar name="conn1.proto">
				echo "wpa2-tkip-psk"
			</setvar>
		</step>

		<step no="4.1c">
			<desc>
				show run
			</desc>
			<log-file>step4.1c_show_run.log</log-file>
			<telnet target="ap1">
				-v "show run | in datatest7"
			</telnet>
		</step>

		<include prefix="4.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="4.3">
			<desc>
				show ssid station
			</desc>
			<log-file>step4.3_show_ssid_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-i "${sta1.tif.ip}" -i "wpa2-psk *tkip"</log-match>
		</step>

		<step no="4.4" delay="300">
			<desc>
				check data-collection auth
			</desc>
			<log-file>step4.4_show_data_collection_auth.log</log-file>
			<telnet target="ap1">
				-v "show data-collection auth"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_OPEN \(Open\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_WEB \(Open\+CWP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_DEFAULT_PSK \(PSK\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_GROUP_PSK \(PPSK\)[\t: ]+[1-3]+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_EAP \(EAP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_OPEN \(Open\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_MANUAL_WEP \(Manual WEP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_DYNAMIC_WEP \(Dynamic WEP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_TKIP \(TKIP\)[\t: ]+[1-3]+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_CCMP \(CCMP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.5">
			<desc>
				show run
			</desc>
			<log-file>step4.5_show_log_buff.log</log-file>
			<telnet target="ap1">
				-v "show log buff"
				-v ""
				-v ""
				-v ""
				-v "clear log all"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[Auth\]STA\(${sta1.tif.mac}\) login to SSID\(wifi0.\d+\) by user_name=datatest" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[Auth\][\t: ]+receive driver notification.+IWEVREGISTERED] for Sta\[${sta1.tif.mac}\] at Hapd" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="5.1">
			<desc>
				Create all PPSK auth SSIDs wpa-auto-psk and bind them to interface wifi0
			</desc>
			<telnet target="ap1">
				-v "exec data-collection clear"
				-v ""
				-v ""
				-v "security-object datatest7 security protocol-suite wpa-auto-psk ascii-key ${conn1.psk}"
			</telnet>
		</step>

		<step no="5.1b">
			<desc>get from-access counters</desc>
			<setvar name="conn1.proto">
				echo "wpa2-tkip-psk"
			</setvar>
		</step>

		<step no="5.1c">
			<desc>
				show run
			</desc>
			<log-file>step5.1c_show_run.log</log-file>
			<telnet target="ap1">
				-v "show run | in datatest7"
			</telnet>
		</step>

		<include prefix="5.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="5.3">
			<desc>
				show ssid station
			</desc>
			<log-file>step5.3_show_ssid_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-i "${sta1.tif.ip}" -i "wpa2-psk *tkip"</log-match>
		</step>

		<step no="5.4" delay="300">
			<desc>
				check data-collection auth
			</desc>
			<log-file>step5.4_show_data_collection_auth.log</log-file>
			<telnet target="ap1">
				-v "show data-collection auth"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_OPEN \(Open\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_WEB \(Open\+CWP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_DEFAULT_PSK \(PSK\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_GROUP_PSK \(PPSK\)[\t: ]+[1-2]+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_AUTH_METHOD_EAP \(EAP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_OPEN \(Open\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_MANUAL_WEP \(Manual WEP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_DYNAMIC_WEP \(Dynamic WEP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_TKIP \(TKIP\)[\t: ]+0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DC_ENCRYPT_CCMP \(CCMP\)[\t: ]+[1-2]+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.5">
			<desc>
				show run
			</desc>
			<log-file>step5.5_show_log_buff.log</log-file>
			<telnet target="ap1">
				-v "show log buff"
				-v ""
				-v ""
				-v ""
				-v "clear log all"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[Auth\]STA\(${sta1.tif.mac}\) login to SSID\(wifi0.\d+\) by user_name=datatest" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[Auth\][\t: ]+receive driver notification.+IWEVREGISTERED] for Sta\[${sta1.tif.mac}\] at Hapd" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
	</stage>

</testcase>