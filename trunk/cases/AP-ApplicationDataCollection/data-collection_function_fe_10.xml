<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>In certain time ,will record byte counters and session counters by FTP-data protocol with TCP port 20</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Enable data collection
		Data-collection collect interval 10 min
		Open _debug dcm all
		Start FTP server on PC
		Use Wireshark to capture tftp and tcp packet on Client
		Set filter on AP "_ff id 1 src-mac xxxx:yyyy:zzzz dst-port 10 bi"(xxxx:yyyy:zzzz
		is client's mac)
		_kdebug fe basic
		_kdebug fe detail
		Exec data-collection clear
		Clear log all

		Test Procedure:
		1. Use FTP transfer file from client to PC, check bytes counters by captured packet
		and debug message
		2. Show data-collection pro to check
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />

	<stage>
		<step no="1">
			<desc>
				Enable data collection
				Data-collection collect interval 10 min
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "alg ftp enable"
				-v "data-collection enable"
				-v "data-collection collect interval 10 minutes"
				-v "_debug dcm basic"
				-v "_debug dcm detail"
			</telnet>
		</step>

		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="3.2">
			<desc>
				Set filter on AP "_ff id 1 src-mac xxxx:yyyy:zzzz dst-port 20 bi"(xxxx:yyyy:zzzz
				is client's mac)
				_kdebug fe all
				Exec data-collection clear
				Clear log all
			</desc>
			<telnet target="ap1">
				-v "_ff id 1 src-mac ${sta1.tif.mac} dst-port 20 bidirectional"
				-v "_ff id 2 src-mac ${sta1.tif.mac} dst-port 21 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "exec data-collection clear"
				-v "clear log all"
			</telnet>
		</step>

		<step no="4">
			<desc>
				- get file from ftp
			</desc>
			<log-file>step4_get_file.log</log-file>
			<ssh target="sta1" timeout="240">
				-v "curl -u ${tb.ftp.user}:${tb.ftp.passwd} ftp://${tb.ftp}/${tb.ftp.file3_small} -P - -o ${ftp_test_file_local_dir}/${tb.ftp.file3_small} --connect-timeout 200"
			</ssh>
		</step>

		<step no="5" delay="600">
			<desc>show logging buffered | in update</desc>
			<log-file>show_logbuf_update.log</log-file>
			<telnet target="ap1" timeout="120">
				-v "show logging buffered | in update"
			</telnet>
			<no-error-check />
		</step>

		<step no="6.1">
			<desc>show data-collection protocol | in ftp-data</desc>
			<log-file>show_ftp_udp.log</log-file>
			<telnet target="ap1">
				-v "show data-collection protocol"
			</telnet>
		</step>

		<step no="6.2">
			<desc>get from-access counters</desc>
			<setvar name="ftp_udp_from_access">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_ftp_udp.log -p "ftp-data *: 0 *(\d+) *0 *\d+" -t int
			</setvar>
		</step>

		<step no="6.3">
			<desc>get to-access counters</desc>
			<setvar name="ftp_udp_to_access">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_ftp_udp.log -p "ftp-data *: 0 *\d+ *0 *(\d+)" -t int
			</setvar>
		</step>

		<step no="7.1">
			<desc>get to-access sum</desc>
			<setvar name="to_access_sum">
				perl ${case.dir}/bin/get_access_counter.pl ${log.dir}/show_ftp_udp.log ${log.dir}/show_logbuf_update.log to-access 10
			</setvar>
		</step>

		<step no="7.2">
			<desc>get from-access sum</desc>
			<setvar name="from_access_sum">
				perl ${case.dir}/bin/get_access_counter.pl ${log.dir}/show_ftp_udp.log ${log.dir}/show_logbuf_update.log from-access 10
			</setvar>
		</step>

		<step no="8.1">
			<desc>check if ftp_udp_from_access counter is recorded</desc>
			<script>
				if [ "${ftp_udp_from_access}" -gt "0" ]
				then
				echo "ftp_udp_from_access counter is recorded"
				else
				echo "Failed"
				exit 1
				fi
			</script>
		</step>

		<step no="8.1">
			<desc>check if ftp_udp_to_access counter is recorded</desc>
			<script>
				if [ "${ftp_udp_to_access}" -gt "0" ]
				then
				echo "ftp_udp_to_access counter is recorded"
				else
				echo "Failed"
				exit 1
				fi
			</script>
		</step>

		<step no="8.3">
			<desc>check if from_access_sum counter is recorded</desc>
			<script>
				if [ "${from_access_sum}" -gt "0" ]
				then
				echo "from_access_sum counter is recorded"
				else
				echo "Failed"
				exit 1
				fi
			</script>
		</step>

		<step no="8.4">
			<desc>check if to_access_sum counter is recorded</desc>
			<script>
				if [ "${to_access_sum}" -gt "0" ]
				then
				echo "to_access_sum counter is recorded"
				else
				echo "Failed"
				exit 1
				fi
			</script>
		</step>

	</stage>

	<post-process>
		<stage>
			<step no="9">
				<desc>
					kill capture bootp packet on client
				</desc>
				<ssh target="sta1">
					-v "kill ${ftp.packet.id}"
				</ssh>
			</step>

			<step no="10">
				<desc>
					delete tmp file on client
				</desc>
				<ssh target="sta1">
					-v "rm -f /tmp/${job.id}packet.log"
					-v "rm -f ${ftp_test_file_local_dir}/${tb.ftp.file3_small}"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>