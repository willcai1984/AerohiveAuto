<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>In certain time ,will record byte counters and session counters by HTTPS protocol with TCP port 443</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Enable data collection
		Data-collection collect interval 10 min
		Use Wireshark to capture packet on Client
		Set filter on AP "_ff id 1 src-mac xxxx:yyyy:zzzz dst-port 443 bi"(xxxx:yyyy:zzzz
		is client's mac)
		Exec data-collection clear
		_kdebug fe basic
		_kdebug fe detail
		Clear log all

		Test Procedure:
		1. Use https to open HM on client, check https byte counters by captured packet
		and debug message
		2. Check data-collection
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>windows</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />

	<stage>
		<include prefix="start_selenium_server" file="subs/start_selenium_server.xml" args="${sta1.mif.ip}, ${job_selenium_dir}, ${job_selenium_jar}, ${job_selenium_workload}" />

		<step no="0.1">
			<desc>
				To capture bootp packet on client
			</desc>
			<log-file>step0.1_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "nohup tshark -i ${sta1.tif.name} -f \&quot;ip src ${pub.http_server.ip} and dst port 443\&quot; -z \&quot;io,phs\&quot; &gt; ${pub.ftp1.file_local_dir}/${job.id}packet.log &amp;"
			</ssh>
		</step>

		<step no="0.2">
			<desc>
				get capture packet's id
			</desc>
			<setvar name="https.packet.id">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step0.1_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="1">
			<desc>
				bind ssid to wifi0
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="3.1">
			<desc>
				Enable data collection
				Data-collection collect interval 10 min
			</desc>
			<telnet target="ap1">
				-v "exec data-collection clear"
				-v "clear log all"
				-v "alg http enable"
				-v "data-collection enable"
				-v "data-collection collect interval 10 minutes"
			</telnet>
		</step>

		<step no="3.2">
			<desc>
				Set filter on AP "_ff id 1 src-mac xxxx:yyyy:zzzz dst-port 443 bi"(xxxx:yyyy:zzzz
				is client's mac)
				_kdebug fe all
				Exec data-collection clear
				Clear log all
			</desc>
			<telnet target="ap1">
				-v "_ff id 1 src-mac ${sta1.tif.mac} dst-port 443 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</telnet>
		</step>

		<step no="4" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				access public HM through CWP
			</desc>
			<log-file>access_hm.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/cwp/cwp_to_url.py -r http://${sta1.mif.ip}:4444/wd/hub -t ie -f ${log.dir}/${log.file} -l info
			</script>
			<log-match>-c -i "HiveManager"</log-match>
		</step>

		<step no="5" delay="600">
			<desc>
				kill capture bootp packet on https server
			</desc>
			<ssh target="sta1">
				-v "kill ${https.packet.id}"
			</ssh>
		</step>

		<step no="6.1">
			<desc>show data-collection protocol</desc>
			<log-file>show_https_udp.log</log-file>
			<telnet target="ap1">
				-v "show data-collection protocol"
			</telnet>
		</step>

		<step no="6.2">
			<desc>show logging buffered | in update</desc>
			<log-file>show_logbuf_update.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="6.3">
			<desc>get from-access counters</desc>
			<setvar name="https_udp_from_access">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_https_udp.log -p "https *: 0 *(\d+) *0 *\d+" -t int
			</setvar>
		</step>

		<step no="6.4">
			<desc>get to-access counters</desc>
			<setvar name="https_udp_to_access">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_https_udp.log -p "https *: 0 *\d+ *0 *(\d+)" -t int
			</setvar>
		</step>

		<step no="7.1">
			<desc>get to-access sum</desc>
			<setvar name="to_access_sum">
				perl ${case.dir}/bin/get_access_counter.pl ${log.dir}/show_https_udp.log ${log.dir}/show_logbuf_update.log to-access 10
			</setvar>
		</step>

		<step no="7.2">
			<desc>get from-access sum</desc>
			<setvar name="from_access_sum">
				perl ${case.dir}/bin/get_access_counter.pl ${log.dir}/show_https_udp.log ${log.dir}/show_logbuf_update.log from-access 10
			</setvar>
		</step>

		<step no="8">
			<desc>
				check capture bootp packet on client
			</desc>
			<log-file>step9_check_capture_packet_result.log</log-file>
			<ssh target="sta1">
				-v "tail /tmp/${job.id}packet.log"
			</ssh>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="9">
				<desc>
					kill capture bootp packet on https server
				</desc>
				<ssh target="sta1">
					-v "kill ${https.packet.id}"
				</ssh>
			</step>

			<step no="10">
				<desc>
					delete tmp file on client
				</desc>
				<ssh target="sta1">
					-v "rm -f /tmp/${job.id}packet.log"
				</ssh>
			</step>

			<include prefix="stop_selenium_server" file="subs/stop_selenium_server.xml" args="${sta1.mif.ip}, ${job_selenium_workload}" />
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>