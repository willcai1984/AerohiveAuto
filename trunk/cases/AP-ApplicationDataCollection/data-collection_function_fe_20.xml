<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>In certain time ,will record byte counters and session counters by RADIUS protocol with UDP port 1812</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Enable data collection
		Data-collection collect interval 5 min
		Use Wireshark to capture udp packet on Client
		Set filter on AP "_ff id 1 src-mac xxxx:yyyy:zzzz dst-port 1812
		bi"(xxxx:yyyy:zzzz is client's mac)
		Exec data-collection clear
		_kdebug fe basic
		_kdebug fe detail
		Clear log all

		Test Procedure:
		1. Use iperf to send packet from client to PC with UDP port 1812, check byte
		counters by captured packet and debug message
		2. Show data-collection pro to check data collection
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />

	<stage>
		<step no="1">
			<desc>
				Enable data collection
				Data-collection collect interval 10 min
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "data-collection enable"
				-v "data-collection collect interval 10 minutes"
				-v "exec data-collection clear"
				-v "clock time-zone 0"
				-v "clear log all"
			</telnet>
		</step>

		<step no="2.1">
			<desc>ifconfig to show the sta1's mac</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1">
				-v "ifconfig ${sta1.tif.name} up"
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="2.2">
			<desc>Get laptop1's mac</desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -m -width
			</setvar>
		</step>

		<step no="2.3">
			<desc>
				Set filter on AP "_ff id 1 src-mac xxxx:yyyy:zzzz dst-port 1812 bi"(xxxx:yyyy:zzzz
				is client's mac)
				_kdebug fe all
				Exec data-collection clear
				Clear log all
			</desc>
			<telnet target="ap1">
				-v "_ff id 1 src-mac ${sta1.tif.mac} dst-port 1812 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</telnet>
		</step>

		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="4.1">
			<desc> Use Wireshark to capture packet on Client </desc>
			<log-file>step4.1_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "nohup tshark -i ${sta1.tif.name} -f \&quot;ip src ${ap1.mgt0.ip} and dst port 1812\&quot; -z \&quot;io,phs\&quot; &gt; ${pub.ftp1.file_local_dir}/${job.id}packet.log &amp;"
			</ssh>
		</step>

		<step no="4.2">
			<desc> get capture packet's id </desc>
			<setvar name="imap.packet.id">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4.1_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="4.3">
			<desc>
				Set logging server
			</desc>
			<telnet target="ap1">
				-v "logging server ${tb.syslog_server} level debug"
			</telnet>
		</step>

		<step no="4.4">
			<desc>
				Backup file aerohive
				Clear file aerohive
			</desc>
			<ssh host="${tb.syslog_server}" prompt=">|.*#">
				-v "echo \&quot;\&quot; &gt; /var/log/aerohive"
			</ssh>
		</step>

		<step no="4.5">
			<desc>
				Use iperf to send packet from client to PC
			</desc>
			<log-file>step4.5_iperf_send_packet.log</log-file>
			<ssh target="sta1">
				-v "iperf -u -c ${mpc.tif.ip} -p 1812 -b"
			</ssh>
		</step>

		<step no="5" delay="600">
			<desc>
				kill capture bootp packet on client
			</desc>
			<ssh target="sta1">
				-v "kill ${imap.packet.id}"
			</ssh>
		</step>

		<step no="6.1">
			<desc>
				check log
			</desc>
			<log-file>show_logbuf_update.log</log-file>
			<ssh host="${tb.syslog_server}">
				-v "cat /var/log/aerohive"
			</ssh>
			<no-error-check />
		</step>

		<step no="6.2">
			<desc>show data-collection protocol</desc>
			<log-file>show_radius.log</log-file>
			<telnet target="ap1">
				-v "show data-collection protocol"
			</telnet>
		</step>

		<step no="6.3">
			<desc>get from-access counters</desc>
			<setvar name="imap_udp_from_access_1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_radius.log -p "radius *: (\d+) *\d+ *\d+ *\d+" -t int
			</setvar>
		</step>

		<step no="6.4">
			<desc>get from-access counters</desc>
			<setvar name="imap_udp_from_access_2">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_radius.log -p "radius *: \d+ *(\d+) *\d+ *\d+" -t int
			</setvar>
		</step>

		<step no="6.5">
			<desc>get from-access sum</desc>
			<setvar name="from_access_sum">
				perl ${case.dir}/bin/get_access_counter_cat_log.pl ${log.dir}/show_radius.log ${log.dir}/show_logbuf_update.log from-access 10
			</setvar>
		</step>

		<step no="6.6">
			<desc>get from-access value</desc>
			<setvar name="imap_udp_from_access">
				echo "${imap_udp_from_access_1}${imap_udp_from_access_2}"
			</setvar>
		</step>

		<step no="7">
			<desc>
				check capture bootp packet on client
			</desc>
			<log-file>step8_check_capture_packet_result.log</log-file>
			<ssh target="sta1">
				-v "tail ${pub.ftp1.file_local_dir}/${job.id}packet.log"
			</ssh>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0.1">
				<desc>
					kill capture bootp packet on client
				</desc>
				<ssh target="sta1">
					-v "kill ${imap.packet.id}"
				</ssh>
			</step>

			<step no="0.2">
				<desc>
					delete tmp file on client
				</desc>
				<ssh target="sta1">
					-v "rm -f /tmp/${job.id}packet.log"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>