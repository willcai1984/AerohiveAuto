<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Enable ConfigurationRollback, set trigger mode to capwap- disconnect, change config of AP and make it disconnect to HM, verify if AP will execute rollback</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		Enable ConfigurationRollback in two APs
		Set trigger mode to capwap-disconnect in two APs

		Test Procedure:

		1. Change wifi1 mode to access of AP2, disable capwap client then
		enable capwap client again, then check capwap status, verify if
		rollback will be executed
		2. Change ip address of AP1 and make it can't access HM, disable
		capwap client then enable capwap client, verify if rollback will
		be executed
	</description>
	<numofap>2</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="0">
			<desc>
				reset config
			</desc>
			<console target="ap1">
				-v "reset config bootstrap"
				-v "reset config"
			</console>
		</step>

		<step no="0.1">
			<desc>
				console page 100
			</desc>
			<console target="ap1">
				-v "console page 100"
				-v "save config"
			</console>
		</step>

		<step no="0.2">
			<desc>
				reset config bootstrap
			</desc>
			<console target="ap2">
				-v "reset config bootstrap"
				-v "reset config"
			</console>
		</step>

		<step no="0.3">
			<desc>
				console page 50
			</desc>
			<console target="ap2">
				-v "console page 50"
				-v "save config"
			</console>
		</step>

		<step no="0.4">
			<desc>
				config ap1
			</desc>
			<console target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "capwap client enable"
				-v "capwap client server name ${pub.hm1.ip}"
			</console>
		</step>

		<step no="0.5">
			<desc>
				config ap1
			</desc>
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<console target="ap1">
				-v "interface wifi1 radio channel 153"
			</console>
		</step>

		<step no="0.6">
			<desc>
				config ap2
			</desc>
			<console target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "capwap client enable"
				-v "capwap client server name ${pub.hm1.ip}"
				-v "interface eth0 shutdown"
			</console>
		</step>

		<step no="0.7">
			<desc>
				config ap1
			</desc>
			<if>"${ap2.wifi1.existed}" == "true"</if>
			<console target="ap2">
				-v "interface wifi1 radio channel 153"
			</console>
		</step>

		<step no="0.8">
			<desc>
				-if eth1 exist,shutdown eth1
			</desc>
			<if>"${ap2.eth1.existed}" == "true"</if>
			<console target="ap2">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="1">
			<desc>
				Enable ConfigurationRollback in two APs
				Set trigger mode to capwap-disconnect in two APs
			</desc>
			<console target="ap1">
				-v "config rollback enable"
				-v "config rollback capwap-disconnect"
				-v "save config"
			</console>
		</step>

		<step no="1.1">
			<desc>
				Enable ConfigurationRollback in two APs
				Set trigger mode to capwap-disconnect in ap2
			</desc>
			<console target="ap2">
				-v "config rollback enable"
				-v "config rollback capwap-disconnect"
				-v "save config"
			</console>
		</step>

		<step no="2" delay="200">
			<desc>
				1. Change wifi1 mode to access of AP2, disable capwap client then
				enable capwap client again, then check capwap status, verify if
				rollback will be executed
			</desc>
			<console target="ap2">
				-v "show config rollback _d"
				-v "interface mgt0 vlan 300"
			</console>
			<log-match>-c -i "console page 50"</log-match>
		</step>
		
		<step no="2.1">
			<desc>
				config ap1
			</desc>
			<if>"${ap2.wifi1.existed}" == "true"</if>
			<console target="ap2">
				-v "interface wifi1 mode access"
			</console>
		</step>

		<step no="2.2">
			<desc>
				capwap client enable
			</desc>
			<console target="ap2">
				-v "no capwap client enable"
				-v "capwap client enable"
				-v "ssid ${ssid.name}"
				-v "show capwap client"
				-v "interface mgt0 vlan ${tb.vlan1}"
			</console>
		</step>
		
		<step no="2.3">
			<desc>
				config ap1
			</desc>
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<console target="ap1">
				-v "interface wifi1 mode dual"
			</console>
		</step>

		<step no="3">
			<desc>
				2. Change ip address of AP1 and make it can't access HM, disable
				capwap client then enable capwap client, verify if rollback will
				be executed
			</desc>
			<console target="ap1">
				-v "show config rollback _d"
				-v "show config rollback"
				-v "interface eth0 shutdown"
				-v "interface mgt0 vlan 200"
			</console>
			<log-match>-c -i "console page 100"</log-match>
		</step>
		
		<step no="3.1">
			<desc>
				config ap1
			</desc>
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<console target="ap1">
				-v "interface wifi1 mode access"
			</console>
		</step>

		<step no="3.2">
			<desc>
				-if eth1 exist,shutdown eth1
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<console target="ap1">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="3.3">
			<desc>
				capwap client enable
			</desc>
			<console target="ap1">
				-v "show capwap client"
				-v "show config rollback _"
				-v "no capwap client enable"
				-v "capwap client enable"
				-v "ssid ${ssid.name}"
				-v "no interface eth0 shutdown"
				-v "interface mgt0 vlan ${tb.vlan1}"
			</console>
		</step>
		
		<step no="3.4">
			<desc>
				config ap1
			</desc>
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<console target="ap1">
				-v "interface wifi1 mode dual"
			</console>
		</step>

		<step no="4.1" delay="600">
			<desc>
				show running-config
			</desc>
			<log-file>show_running.log</log-file>
			<console target="ap2" timeout="100">
				-v "show running-config"
				-v "show config rollback"
			</console>
			<log-match>-c -i "console page 50"</log-match>
			<log-match>-n -c -i "ssid ${ssid.name}"</log-match>
		</step>

		<step no="4.2" delay="300">
			<desc>
				show running-config
			</desc>
			<log-file>show_running2.log</log-file>
			<console target="ap1" timeout="100">
				-v "show running-config"
				-v "show config rollback"
			</console>
			<log-match>-c -i "console page 100"</log-match>
			<log-match>-n -c -i "ssid ${ssid.name}"</log-match>
		</step>
	</stage>
</testcase>