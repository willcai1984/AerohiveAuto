<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Modify interval of track IP</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Configure AP1 IP_addr is IP1, AP2 IP_addr is IP2
		-Configure AP1
		"hive tracktest"
		"interface mgt0 hive tracktest"
		-Configure AP2
		"hive tracktest"
		"interface mgt0 hive tracktest"
		"track group1 default-gateway"
		"track group1 action start-mesh-failover"

		Test Procedure:
		1)Show ip track on AP2
		" show track group1"
		2)Show ip track config
		" show running config"
		3)Show ip track logs
		"_debug monitor all"
		"debug console"
		4)Modify the value of interval
		"track group1 interval 1"
		5)Repeat step 1-3
		6)Modify the value of interval
		"track group1 interval 180"
		7)Repeat step 1-3
		Expectant result
		1. Group Interval is 6
		2. Interval config isn't displayed in the running config (default)
		3. The interval of the track ip packet and the next is 6s is displayed in
		the logs
		5. Interval config can be displayed correctly and the interval of the
		track ip packet and the next is 1s is displayed in the logs
		7. Interval config can be displayed correctly and the interval of the
		track ip packet and the next is 180s is
		displayed in the logs
	</description>
	<numofap>2</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="1">
			<desc>
				-Configure AP1
				"hive tracktest"
				"interface mgt0 hive tracktest"
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="2">
			<desc>
				-Show ip track logs
				"_debug monitor all"
				-Configure AP2
				"hive tracktest"
				"interface mgt0 hive tracktest"
				"track group1 default-gateway"
				"track group1 action start-mesh-failover"
			</desc>
			<telnet target="ap2">
				-v "_debug monitor all"
				-v "clear log all"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "track group1 default-gateway"
				-v "track group1 action start-mesh-failover"
			</telnet>
		</step>

		<step no="3">
			<desc>
				-Show ip track on AP2
				" show track group1"
				-Group Interval is 6
			</desc>
			<log-file>step3_show_track_group1.log</log-file>
			<telnet target="ap2">
				-v "show track group1"
			</telnet>
			<log-match>-e "Group Interval: 6 seconds"</log-match>
		</step>

		<step no="4">
			<desc>
				-Interval config can't be displayed.
				" show running config"
			</desc>
			<log-file>step4_show_running_config.log</log-file>
			<telnet target="ap2">
				-v "show running-config"
			</telnet>
			<log-match>-n -e "track group1 interval 6"</log-match>
		</step>

		<step no="5.1" delay="20">
			<desc>
				-Show logging buffered
				"show logging buffered"
			</desc>
			<log-file>step5_show_logging_buffered.log</log-file>
			<telnet target="ap2">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match loop-values="1">-e "\[monitor_basic\]: detect group(group1) is ready for sending packet, number of times: ${loop.v}"</log-match>
		</step>

		<step no="5.2">
			<desc>Get the second number of times</desc>
			<setvar name="second.number.times1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step5_show_logging_buffered.log -p "(\S{4}-\S{2}-\S{2}\s*\d+:\d+:\d+).*group\(group1\) is ready for sending packet, number of times: 1" -t str -g-1
			</setvar>
		</step>

		<step no="5.3">
			<desc>Get the first number of times</desc>
			<setvar name="first.number.times1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step5_show_logging_buffered.log -p "(\S{4}-\S{2}-\S{2}\s*\d+:\d+:\d+).*group\(group1\) is ready for sending packet, number of times: 1" -t str -g-2
			</setvar>
		</step>

		<step no="5.4">
			<desc>
				check if the interval is 6s.
			</desc>
			<log-file>step5_4_check_result.log</log-file>
			<script>
				${bin.dir}/pyeval.py "(mktime(datetime.strptime('${second.number.times1}', '%Y-%m-%d %H:%M:%S').timetuple()) - mktime(datetime.strptime('${first.number.times1}', '%Y-%m-%d %H:%M:%S').timetuple())) == 6.0" &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -e "true"</log-match>
		</step>

		<step no="6.1">
			<desc>
				-clear log all
				-Modify the value of interval
				"track group1 interval 1"
			</desc>
			<telnet target="ap2">
				-v "clear log all"
				-v "track group1 interval 1"
			</telnet>
		</step>

		<step no="6.2">
			<desc>
				-Show ip track on AP2
				" show track group1"
				-Group Interval is 1s
			</desc>
			<log-file>step6_show_track_group1.log</log-file>
			<telnet target="ap2">
				-v "show track group1"
			</telnet>
			<log-match>-e "Group Interval: 1 seconds"</log-match>
		</step>

		<step no="7">
			<desc>
				-Interval config can be displayed correctly and the interval of the
				track ip packet and the next is 1s is displayed in the logs
				" show running config"
			</desc>
			<log-file>step7_show_running_config.log</log-file>
			<console target="ap2">
				-v "show track"
				-v "show running-config"
			</console>
			<log-match>-e "track group1 interval 1"</log-match>
		</step>

		<step no="8.1">
			<desc>
				-Show logging buffered
				"show logging buffered"
			</desc>
			<log-file>step8_show_logging_buffered.log</log-file>
			<telnet target="ap2">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match loop-values="1">-e "\[monitor_basic\]: detect group(group1) is ready for sending packet, number of times: ${loop.v}"</log-match>
		</step>

		<step no="8.2">
			<desc>Get the second number of times</desc>
			<setvar name="second.number.times1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step8_show_logging_buffered.log -p "(\S{4}-\S{2}-\S{2}\s*\d+:\d+:\d+).*group\(group1\) is ready for sending packet, number of times: 1" -t str -g-1
			</setvar>
		</step>

		<step no="8.3">
			<desc>Get the first number of times</desc>
			<setvar name="first.number.times1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step8_show_logging_buffered.log -p "(\S{4}-\S{2}-\S{2}\s*\d+:\d+:\d+).*group\(group1\) is ready for sending packet, number of times: 1" -t str -g-2
			</setvar>
		</step>

		<step no="8.4">
			<desc>
				check if the interval is 1s.
			</desc>
			<log-file>step8_4_check_result.log</log-file>
			<script>
				${bin.dir}/pyeval.py "(mktime(datetime.strptime('${second.number.times1}', '%Y-%m-%d %H:%M:%S').timetuple()) - mktime(datetime.strptime('${first.number.times1}', '%Y-%m-%d %H:%M:%S').timetuple())) == 1.0" &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -e "true"</log-match>
		</step>

		<step no="9.1">
			<desc>
				-clear log all
				-Modify the value of interval
				"track group1 interval 180"
			</desc>
			<telnet target="ap2">
				-v "clear log all"
				-v "track group1 interval 180"
			</telnet>
		</step>

		<step no="9.2">
			<desc>
				-Show ip track on AP2
				" show track group1"
				-Group Interval is 180
			</desc>
			<log-file>step9_show_track_group1.log</log-file>
			<telnet target="ap2">
				-v "show track group1"
			</telnet>
			<log-match>-e "Group Interval: 180 seconds"</log-match>
		</step>

		<step no="10.1">
			<desc>
				-Interval config can be displayed correctly and the interval of the
				track ip packet and the next is 180s is displayed in the logs
				" show running config"
			</desc>
			<log-file>step10_show_running_config.log</log-file>
			<telnet target="ap2">
				-v "show running-config"
			</telnet>
			<log-match>-e "track group1 interval 180"</log-match>
		</step>

		<step no="10.2" delay="359">
			<desc>
				-Show logging buffered
				"show logging buffered"
			</desc>
			<log-file>step10_show_logging_buffered.log</log-file>
			<telnet target="ap2">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match loop-values="1">-e "\[monitor_basic\]: detect group(group1) is ready for sending packet, number of times: ${loop.v}"</log-match>
		</step>

		<step no="10.3">
			<desc>Get the second number of times</desc>
			<setvar name="second.number.times1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step10_show_logging_buffered.log -p "(\S{4}-\S{2}-\S{2}\s*\d+:\d+:\d+).*group\(group1\) is ready for sending packet, number of times: 1" -t str -g-1
			</setvar>
		</step>

		<step no="10.4">
			<desc>Get the first number of times</desc>
			<setvar name="first.number.times1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step10_show_logging_buffered.log -p "(\S{4}-\S{2}-\S{2}\s*\d+:\d+:\d+).*group\(group1\) is ready for sending packet, number of times: 1" -t str -g-2
			</setvar>
		</step>

		<step no="10.5">
			<desc>
				check if the interval is 180s.
			</desc>
			<log-file>step10_5_check_result.log</log-file>
			<script>
				${bin.dir}/pyeval.py "(mktime(datetime.strptime('${second.number.times1}', '%Y-%m-%d %H:%M:%S').timetuple()) - mktime(datetime.strptime('${first.number.times1}', '%Y-%m-%d %H:%M:%S').timetuple())) == 180.0" &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -e "true"</log-match>
		</step>
	</stage>
</testcase>
