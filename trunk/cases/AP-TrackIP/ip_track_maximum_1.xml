<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Maximum of dst IP/gateway should be 4</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Configure AP1 IP_addr is IP1, AP2 IP_addr is IP2 (IP1 and IP2 is in
		the same subnet)
		-Connect 4 laptops to the AP1 ,and get IP3-6
		-Configure AP1
		"hive tracktest"
		"interface mgt0 hive tracktest"
		-Configure AP2
		"hive tracktest"
		"interface mgt0 hive tracktest"
		"track group1 ip IP3"
		"track group1 ip IP4"
		"track group1 ip IP5"
		"track group1 ip IP6"
		"track group1 action start-mesh-failover"

		Test Procedure:
		1)Show track information on AP2
		"show track group1"
		2)Test maximum limit on AP2
		"track group1 default-gateway"
		3)Remove the laptop of IP3
		4)Recover
		5)Remove all the laptop
		6)Recover
		7)Shutdown eth0 on AP2
		8)Recover
		9)Shutdown wifi1
		10)Recover
		Expectant result
		1. Information can be displayed correctly
		2. It will show error: Group group1 destinations reach max number
		3. Track all IFS is Inactive, Track ETH IFS is unreachable, Trigger
		failover action
		4. Track all IFS is Inactive, Track ETH IFS is reachable, action can be
		recovered
		5. The same as step 3
		6. The same as step 4
		7. The same as step 3
		8.
		The same as step 4
		9. Track all IFS is Inactive, Track ETH IFS is reachable, cannot trigger
		failover action
		10. Track all IFS is Inactive, Track ETH IFS is reachable
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<property name="pub.tftp1.name" value="eth1" />
	<property name="conn1.ssid" value="${ssid.name}" />


	<stage>
		<step no="0">
			<desc>
				shutdown eth1
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<telnet target="ap1">
				-v "interface eth1 shutdown"
			</telnet>
		</step>

		<step no="0.1">
			<desc>
				shutdown eth1
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<telnet target="ap2">
				-v "interface eth1 shutdown"
			</telnet>
		</step>

		<step no="1">
			<desc>
				config hive and ssid on ap1
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="3">
			<desc>
				-Configure AP2
				"hive tracktest"
				"interface mgt0 hive tracktest"
				"track group1 ip IP3"
				"track group1 ip IP4"
				"track group1 ip IP5"
				"track group1 ip IP6"
				"track group1 action start-mesh-failover"
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "track group1 ip ${ap2.mgt0.ip}"
				-v "track group1 ip ${ap1.mgt0.ip}"
				-v "track group1 ip ${tb.vlan1.gw}"
				-v "track group1 ip ${mpc.tif.ip}"
				-v "track group1 action start-mesh-failover"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				clear log all
			</desc>
			<telnet target="ap1">
				-v "_debug monitor all"
				-v "clear log all"
			</telnet>
		</step>

		<step no="4">
			<desc>
				1)Show track information on AP1
				"show track group1"
			</desc>
			<log-file>step4_show_track.log</log-file>
			<telnet target="ap1">
				-v "show track group1" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-i "Track Group Name: *group1"</log-match>
			<log-match>-i "Destination Address: ${ap2.mgt0.ip} ${ap1.mgt0.ip} ${tb.vlan1.gw} ${mpc.tif.ip}"</log-match>
		</step>

		<step no="5">
			<desc>
				2)Test maximum limit on AP1
				"track group1 default-gateway"
			</desc>
			<log-file>step5_maximun_limit.log</log-file>
			<telnet target="ap1">
				-v "track group1 default-gateway" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-i "Group group1 destinations reach max number"</log-match>
		</step>

		<step no="6">
			<desc>
				3)Remove the AP2 of ip
			</desc>
			<log-file>step6_ifconfig.log</log-file>
			<console target="ap2">
				-v "interface eth0 shutdown"

			</console>
		</step>

		<step no="7" type="loop-check" loop-max-times="12" loop-interval="5">
			<desc>
				show track
			</desc>
			<log-file>step7_show_track_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show track"
			</console>
			<log-match>-p 3 -i "Inactive" -i "group1"</log-match>
			<log-match>-p 4 -i "Unreachable" -i "group1"</log-match>
		</step>

		<step no="7.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step7.1_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="300">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match loop-values="2,3">-i "\[monitor_basic\]: detect group(group1) is ready for sending packet, number of times: 1(all_IFs)/${loop.v}"</log-match>
		</step>

		<step no="8" type="loop-check" loop-max-times="12" loop-interval="5">
			<desc>
				4)Recover
			</desc>
			<log-file>step8_ifconfig.log</log-file>
			<console target="ap2">
				-v " no interface eth0 shutdown"

				-v "interface mgt0 dhcp client"
				-v "show l3 interface"

			</console>
			<log-match>-i "${ap2.mgt0.ip}"</log-match>
		</step>
	</stage>
	<stage loop-values="1..8" var-name="country_code" loop-passed-break="true">
		<step no="8a" delay="5">
			<desc>
				ping for check
			</desc>
			<log-file>step8_ifconfig.log</log-file>
			<console target="ap2">
				-v "ping ${tb.vlan1.gw} "

				-v "ping ${ap1.mgt0.ip} "
			</console>
			<log-match>-i "from ${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="8b">
			<desc>
				ping for check
			</desc>
			<log-file>step8_ifconfig.log</log-file>
			<console target="ap1">

				-v "ping ${ap2.mgt0.ip} "
			</console>
			<log-match>-i "from ${ap2.mgt0.ip}"</log-match>
		</step>

	</stage>

	<stage>
		<step no="8.1" type="loop-check" loop-max-times="12" loop-interval="5">
			<desc>
				show track
			</desc>
			<log-file>step8.1_show_track_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show track"
			</console>
			<log-match>-p 3 -i "Inactive" -i "group1"</log-match>
			<log-match>-p 4 -i "Reachable" -i "group1"</log-match>
		</step>

		<step no="8.2">
			<desc>
				clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="8.3" delay="15">
			<desc>
				show logging buffered
			</desc>
			<log-file>step8.3_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="180">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-i "\[monitor_basic\]: detect group(group1) is ready for sending packet, number of times: 1(all_IFs)/1"</log-match>
			<log-match loop-values="2,3">-n -i "\[monitor_basic\]: detect group(group1) is ready for sending packet, number of times: 1(all_IFs)/${loop.v}"</log-match>
		</step>


		<step no="9.0">
			<desc>
				clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>


		<step no="9">
			<desc>
				7)Shutdown eth0 on AP2
			</desc>
			<console target="ap1">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<step no="10" type="loop-check" loop-max-times="12" loop-interval="5">
			<desc>
				show track
			</desc>
			<log-file>step10_show_track_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show track"
			</console>
			<log-match>-p 3 -i "Inactive" -i "group1"</log-match>
			<log-match>-p 4 -i "Unreachable" -i "group1"</log-match>
		</step>


		<step no="11" delay="15">
			<desc>
				show logging buffered
			</desc>
			<log-file>step11_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="180">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match loop-values="1,2,3">-i "\[monitor_basic\]: detect group(group1) is ready for sending packet, number of times: 1(all_IFs)/${loop.v}"</log-match>
		</step>

		<step no="12.0">
			<desc>
				clear log buf
			</desc>
			<console target="ap1">
				-v "clear log buf"
			</console>
		</step>

		<step no="12">
			<desc>
				8)Recover
			</desc>
			<console target="ap1">
				-v "no interface eth0 shutdown"
				-v "clear log buf"
			</console>
		</step>

		
		
		<step no="13" type="loop-check" loop-max-times="12" loop-interval="5">
			<desc>
				show track
			</desc>
			<log-file>step13_show_track_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show track"
			</console>
			<log-match>-p 3 -i "Inactive" -i "group1"</log-match>
			<log-match>-p 4 -i "Reachable" -i "group1"</log-match>
		</step>



		<step no="14" delay="15">
			<desc>
				show logging buffered
			</desc>
			<log-file>step14_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="180">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-i "\[monitor_basic\]: detect group(group1) is ready for sending packet, number of times: 1(all_IFs)/1"</log-match>
			<log-match loop-values="3">-n -i "\[monitor_basic\]: detect group(group1) is ready for sending packet, number of times: 1(all_IFs)/${loop.v}"</log-match>
		</step>

		<step no="15">
			<desc>
				8)Recover
			</desc>
			<console target="ap1">
				-v "interface wifi1 hive ${hive.name} shutdown"
			</console>
		</step>

		<step no="16" type="loop-check" loop-max-times="12" loop-interval="5">
			<desc>
				show track
			</desc>
			<log-file>step16_show_track_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show track"
			</console>
			<log-match>-p 3 -i "Inactive" -i "group1"</log-match>
			<log-match>-p 4 -i "Reachable" -i "group1"</log-match>
		</step>

		<step no="16.1">
			<desc>
				clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="17" delay="15">
			<desc>
				show logging buffered
			</desc>
			<log-file>step17_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="180">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-i "\[monitor_basic\]: detect group(group1) is ready for sending packet, number of times: 1(all_IFs)/1"</log-match>
			<log-match loop-values="2,3">-n -i "\[monitor_basic\]: detect group(group1) is ready for sending packet, number of times: 1(all_IFs)/${loop.v}"</log-match>
		</step>

		<step no="18">
			<desc>
				8)Recover
			</desc>
			<console target="ap1">
				-v "no interface wifi1 hive ${hive.name} shutdown"
			</console>
		</step>

		<step no="19" type="loop-check" loop-max-times="12" loop-interval="5">
			<desc>
				show track
			</desc>
			<log-file>step19_show_track_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show track"
			</console>
			<log-match>-p 3 -i "Inactive" -i "group1"</log-match>
			<log-match>-p 4 -i "Reachable" -i "group1"</log-match>
		</step>

		<step no="19.1" delay="6">
			<desc>
				clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="20" delay="15">
			<desc>
				show logging buffered
			</desc>
			<log-file>step20_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="180">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-i "\[monitor_basic\]: detect group(group1) is ready for sending packet, number of times: 1(all_IFs)/1"</log-match>
			<log-match loop-values="2,3">-n -i "\[monitor_basic\]: detect group(group1) is ready for sending packet, number of times: 1(all_IFs)/${loop.v}"</log-match>
		</step>
	</stage>
</testcase>