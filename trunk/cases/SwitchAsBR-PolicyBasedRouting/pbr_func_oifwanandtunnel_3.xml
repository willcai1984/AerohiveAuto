<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Forwarding and Routing traffic based on policy, all traffic via tunnel on wan exception the specified website or ip address Platform Dependence BR100,BR200,BR200-WP,BRAP330,BRAP350,BRAP121,BRAP141</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Create one l3 tunnel between BR wan interface(maybe eth0~4,usbnet0,wifi0
		and wifi1) and CVG eth0

		Test Procedure:
		1. Create routing policy
		2. Set an exception match-map to www.sina.com, and set the other match-
		map
		3. Set route-map, to exception website via wan, and other traffic via tunnel
		4. Bind one match-map to routing policy
		5. Laptop connect to the match-map
		6. Laptop connect to www.sina.com, check result1
		7. Laptop send traffic to other internet and vpn network, check result2
		8. tunnel down
		9. Laptop connect to www.sina.com, check result1
		10. Laptop send traffic to other internet and vpn network, check result3
		11. tunnel up
		12. Laptop connect to www.sina.com, check result1
		13. Laptop send traffic to other internet and vpn network, check result2
		14. Wan interface down
		15. Laptop connect to www.sina.com, check result3
		16. Laptop send traffic to other internet and vpn network, check result3
		17. Wan interface up and tunnel up on the wan interface
		18. Laptop connect to
		www.sina.com, check result1
		19. Laptop send traffic to other internet and vpn network, check result2
	</description>
	<numofbr>1</numofbr>
	<numofcvg>1</numofcvg>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>linux</tbtype>

	<stage>
		<include prefix="1" file="subs/vpn_setup_one_sw.xml" obj-args="cvg1, br1" />

		<step no="2">
			<desc>
				config mgt0.1 and mgt0.2 with dhcp service enable,dns service enable
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "vlan ${br1.vpc1.vlan}"
				-v "interface vlan ${br1.vpc1.vlan}"
				-v "interface vlan${br1.vpc1.vlan} ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options netmask 255.255.255.0"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options dns1 ${br1.br.mgt0.1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server enable"
				-v "interface vlan${br1.vpc1.vlan} dns-server enable"
			</telnet>
			<no-error-check />
		</step>

		<step no="2.1">
			<desc>
				Create user-profile bind eth1
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface ${br1.br.lan.int1} switchport mode access"
				-v "interface ${br1.br.lan.int1} switchport access vlan ${br1.vlan1} "
				-v "interface ${br1.br.lan.int1} switchport user-profile-attribute 1"
				-v "user-profile fw qos-policy def-user-qos vlan-id ${br1.vlan1} attribute 1"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				Create routing policy
				Set an exception match-map to www.sina.com, and set the other match-map
				Set route-map, to exception website via wan, and other traffic via tunnel
				Bind one match-map to routing policy
			</desc>
			<log-file>step2.4_Set_match_map.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "routing match-map ma user-profile fw to hostname ${pub.hm1.domain}"
				-v "routing match-map mb user-profile fw to any"
				-v "routing route-map ra via ${br1.br.wan.int1}"
				-v "routing route-map rb via encrypted"
				-v "routing policy pa id 1 match-map ma route-map ra"
				-v "routing policy pb id 2 match-map mb route-map rb"
			</telnet>
		</step>

		<step no="3">
			<desc>
				Laptop connect to the BR any access mode interface
			</desc>
			<log-file>step3_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ifconfig ${br1.vpc1.tif.name} down"
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "dhclient ${br1.vpc1.tif.name} -r"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
				-v "nslookup eth1"
			</ssh>
			<log-match>-i "inet addr"</log-match>
			<log-match>-i "Server:.*${br1.br.mgt0.1.ip}"</log-match>
		</step>

		<step no="3.1">
			<desc>get raw mac of vpc1</desc>
			<setvar name="br1.vpc1.tif.mac1">
				echo $(${bin.dir}/getbyrexp.py -p "HWaddr ([\da-fA-F:]+)" -f ${log.dir}/step3_ifconfig_vpc1_.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="3.2">
			<desc>get mac of br1.vpc1</desc>
			<setvar name="br1.vpc1.tif.mac">
				echo $(echo $(echo ${br1.vpc1.tif.mac1} | cut -d : -f1)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f2,3)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f4,5)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f6))
			</setvar>
		</step>

		<step no="3.3">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="4.1">
			<desc>
				show ip rule to confirm rule
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip rule"
			</telnet>
		</step>

		<step no="4.2">
			<desc>
				show ip policy-route to confirm policy route
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip policy-route"
			</telnet>
		</step>

		<step no="open.debug">
			<desc>
				open debug switch
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "_ff id 1 src-ip ${br1.vpc1.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
			</telnet>
		</step>
		
		<step no="5" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic hostname on pbr,ping is successful
			</desc>
			<log-file>step5_ping_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.hm1.domain} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.hm1.domain}.*${pub.hm1.ip}" -i "ttl="</log-match>
		</step>
		
		<step no="5.1" delay="20">
			<desc>
				show logging buffered on br,the ping traffic to hostname is forwarded on wan interface,match the routing policy pa
			</desc>
			<log-file>step5.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show vpn l3-tunnel-exception"
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) vlan${br1.vpc1.vlan} ${pub.hm1.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${pub.hm1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${pub.hm1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) mux0 ${br1.br.wan.ip}->${pub.hm1.ip}"</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${pub.hm1.ip}.*found route in table:PBR-Routing"</log-match>
			<no-error-check />
		</step>
		
		<step no="6" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to vpn network ,ping is successful
			</desc>
			<log-file>step6_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
		</step>

		<step no="6.1">
			<desc>
				show logging buffered on br,the ping traffic is forwarded tunnel,match the routing policy pb
			</desc>
			<log-file>step6.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show vpn l3-tunnel-exception"
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) vlan${br1.vpc1.vlan} ${cvg1.vpc1.tif.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) mux0 ${cvg1.vpc1.tif.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) tunnel0 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) .*icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${cvg1.vpc1.tif.ip}.*found route in table:Tunnel-All"</log-match>
			<no-error-check />
		</step>

		<step no="7" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to internet,ping is successful
			</desc>
			<log-file>step7_ping_ftp_server_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.ftp1.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.ftp1.ip}" -i "ttl="</log-match>
		</step>

		<step no="7.1">
			<desc>
				show logging buffered  on br,the ping traffic is forwarded tunnel,match the routing policy pb
			</desc>
			<log-file>step7.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) vlan${br1.vpc1.vlan} ${pub.ftp1.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) mux0 ${pub.ftp1.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) tunnel0 ${br1.vpc1.tif.ip}->${pub.ftp1.ip}\(\d+\) ttl\(\d+\) .*icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${pub.ftp1.ip}.*found route in table:Tunnel-All"</log-match>
			<no-error-check />
		</step>

		<step no="8">
			<desc>
				Tunnel down
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "no vpn tunnel-policy vpn_policy_01"
			</telnet>
		</step>
		
		<step no="8.1" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn tunnel is down on BR side
			</desc>
			<log-file>step7.1_chk_ike_sa_br${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn ike sa"
				-v "show ip rule"
			</telnet>
			<log-match>-n -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>
		</step>

		
		<step no="9" delay="120">
			<desc>
				Laptop send traffic to hostname,ping is successful
			</desc>
			<log-file>step9_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.hm1.domain} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.hm1.domain}.*${pub.hm1.ip}" -i "ttl="</log-match>
		</step>

		<step no="9.1">
			<desc>
				show logging buffered on br,the ping traffic to hostname is forwarded on wan interface,match the routing policy pa
			</desc>
			<log-file>step9.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) vlan${br1.vpc1.vlan} ${pub.hm1.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${pub.hm1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${pub.hm1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) mux0 ${br1.br.wan.ip}->${pub.hm1.ip}"</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${pub.hm1.ip}.*found route in table:PBR-Routing"</log-match>
			<no-error-check />
		</step>

		<step no="10" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to internet,ping is failed
			</desc>
			<log-file>step10_ping_dns_server_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.ftp1.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${pub.ftp1.ip}" -i "ttl="</log-match>
		</step>
		
		
		<step no="10.1">
			<desc>
				show logging buffered on br, ping traffic is dropped ,match the routing policy pb
			</desc>
			<log-file>step10.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)routing done, ${br1.vpc1.tif.ip} -> ${pub.ftp1.ip} ttl\(\d+\) proto\(\d+\) mark\s*\(\d+\).* \d+ bytes, no available route" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="11">
			<desc>
				Laptop send traffic to vpn network,ping is failed 
			</desc>
			<log-file>step11_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
		</step>

		<step no="11.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step11.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)routing done, ${br1.vpc1.tif.ip} -> ${cvg1.vpc1.tif.ip} ttl\(\d+\) proto\(\d+\) mark\(\d+\) \d+ bytes, no available route" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="12">
			<desc>
				Tunnel up
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "vpn tunnel-policy vpn_policy_01 client ipsec-tunnel ${br1.tunnel.name} primary"
			</telnet>
		</step>

		<step no="12.1" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on BR side
				destination to CVG public address
			</desc>
			<log-file>step12.1_chk_ike_sa_br${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>
		</step>

		<step no="12.2" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on CVG side
				destionation to BR public address
			</desc>
			<log-file>step12.2_chk_ike_sa_CVG_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "R" -i "${br1.br.nat.ip}"</log-match>
		</step>

		<step no="12.3">
			<desc>
				check gre tunnel on br side
				remote to CVG wan address, local mgt0 address ,gateway CVG public address
			</desc>
			<log-file>step12.3_chk_gre_tunnel_br.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "tunnel\d+[\t ]*gre/ipsec[\t ]*${cvg1.cvg.wan.ip}[\t ]*${br1.br.mgt0.ip}[\t ]*\d+[\t ]*${cvg1.cvg.tunnel.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="12.4">
			<desc>
				check gre tunnel on cvg side
				local to CVG wan address
			</desc>
			<log-file>step12.4_chk_gre_tunnel_CVG.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "tunnel\d+[\t ]*gre/ipsec[\t ]*any[\t ]*${cvg1.cvg.wan.ip}[\t ]*\d+[\t ]*anonymous" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="13" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to vpn network,ping is successful
			</desc>
			<log-file>step11_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
		</step>

		<step no="13.1">
			<desc>
				show logging buffered ob br,ping traffic is forwarded on tunnel ,match the routing policy pb
			</desc>
			<log-file>step13.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) vlan${br1.vpc1.vlan} ${cvg1.vpc1.tif.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) mux0 ${cvg1.vpc1.tif.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) tunnel0 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) .*icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${cvg1.vpc1.tif.ip}.*found route in table:Tunnel-All"</log-match>
			<no-error-check />
		</step>

		<step no="14" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to internet,ping is successful
			</desc>
			<log-file>step14_ping_ftp_server_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.ftp1.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.ftp1.ip}" -i "ttl="</log-match>
		</step>

		<step no="14.1">
			<desc>
				show logging buffered on br,the ping traffic is forwarded on tunnel base on the routing policy pb
			</desc>
			<log-file>step14.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) vlan${br1.vpc1.vlan} ${pub.ftp1.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) mux0 ${pub.ftp1.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) tunnel0 ${br1.vpc1.tif.ip}->${pub.ftp1.ip}\(\d+\) ttl\(\d+\) .*icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${pub.ftp1.ip}.*found route in table:Tunnel-All"</log-match>
			<no-error-check />
		</step>

		<step no="15">
			<desc>
				Eth0 down
			</desc>
			<console target="br1.br">
				-v "interface ${br1.br.wan.int1} shutdown"
			</console>
		</step>
		
		<step no="16" delay="20">
			<desc>
				Laptop send traffic to hostname,ping is failed
			</desc>
			<log-file>step16_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.hm1.domain} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${pub.hm1.domain}.*${pub.hm1.ip}" -i "ttl="</log-match>
		</step>

		<step no="16.1">
			<desc>
				show logging buffered on br,the ping traffic to hostname is dropped,match the routing policy pa
			</desc>
			<log-file>step16.1_show_logging_buffered.log</log-file>
			<console target="br1.br" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</console>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${pub.hm1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${pub.hm1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${pub.hm1.ip}.*no available route"</log-match>
			<no-error-check />
		</step>


		<step no="17" delay="120">
			<desc>
				Laptop send traffic to vpn network,ping is failed
			</desc>
			<log-file>step16_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
		</step>

		<step no="17.1">
			<desc>
				show logging buffered on br,the ping traffic is dropped,match the routing policy pb
			</desc>
			<log-file>step17.1_show_logging_buffered.log</log-file>
			<console target="br1.br" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -> ${cvg1.vpc1.tif.ip}" -i "no available route"</log-match>
			<no-error-check />
		</step>

		<step no="18">
			<desc>
				Laptop send traffic to internet,ping is failed
			</desc>
			<log-file>step17_ping_dns_server_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.ftp1.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${pub.ftp1.ip}" -i "ttl="</log-match>
		</step>

		<step no="18.1">
			<desc>
				show logging buffered on br,the ping traffic  is dropped,match the routing policy pb
			</desc>
			<log-file>step18.1_show_logging_buffered.log</log-file>
			<console target="br1.br" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -> ${pub.ftp1.ip}" -i "no available route"</log-match>
			<no-error-check />
		</step>

		<step no="19">
			<desc>
				Eth0 up
			</desc>
			<console target="br1.br">
				-v "no interface ${br1.br.wan.int1} shutdown"
			</console>
		</step>
		
		<step no="20" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic hostname on pbr,ping is successful
			</desc>
			<log-file>step20_ping_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.hm1.domain} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.hm1.domain}.*${pub.hm1.ip}" -i "ttl="</log-match>
		</step>
		
		<step no="20.1" delay="20">
			<desc>
				show logging buffered on br,the ping traffic to hostname is forwarded on wan interface,match the routing policy pa
			</desc>
			<log-file>step20.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show vpn l3-tunnel-exception"
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) vlan${br1.vpc1.vlan} ${pub.hm1.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${pub.hm1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${pub.hm1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) mux0 ${br1.br.wan.ip}->${pub.hm1.ip}"</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${pub.hm1.ip}.*found route in table:PBR-Routing"</log-match>
			<no-error-check />
		</step>
		
		<step no="21" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to vpn network ,ping is successful
			</desc>
			<log-file>step21_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
		</step>

		<step no="21.1">
			<desc>
				show logging buffered on br,the ping traffic is forwarded tunnel,match the routing policy pb
			</desc>
			<log-file>step21.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show vpn l3-tunnel-exception"
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) vlan${br1.vpc1.vlan} ${cvg1.vpc1.tif.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) mux0 ${cvg1.vpc1.tif.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) tunnel0 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) .*icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${cvg1.vpc1.tif.ip}.*found route in table:Tunnel-All"</log-match>
			<no-error-check />
		</step>

		<step no="22" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to internet,ping is successful
			</desc>
			<log-file>step22_ping_ftp_server_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.ftp1.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.ftp1.ip}" -i "ttl="</log-match>
		</step>

		<step no="22.1">
			<desc>
				show logging buffered  on br,the ping traffic is forwarded tunnel,match the routing policy pb
			</desc>
			<log-file>step22.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) vlan${br1.vpc1.vlan} ${pub.ftp1.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) mux0 ${pub.ftp1.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) tunnel0 ${br1.vpc1.tif.ip}->${pub.ftp1.ip}\(\d+\) ttl\(\d+\) .*icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${pub.ftp1.ip}.*found route in table:Tunnel-All"</log-match>
			<no-error-check />
		</step>

	</stage>
	
	<failed-process>
		<stage>
		<step no="1">
			<desc>
				 show log buffer on br if the case failed 
			</desc>
			<log-file>step1_show_gre_tunnel_br.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show log buffer"
				
			</telnet>
			<no-error-check />
		</step>
		</stage>
		<include file="include/br_default_failed_process.xml" />

	</failed-process>
</testcase>
