<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Forwarding and Routing traffic based on policy, oif is eth0 interface Platform Dependence BR100,BR200,BR200-WP,BRAP330,BRAP350,BRAP121,BRAP141</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Set interface eth0 mode wan

		Test Procedure:
		1. Set a match-map
		routing match-map mb user-profile 2 to any
		2. Set a route-map, the oif for all traffic is eth0 interface
		routing route-map rb via eth0
		3. Create one routing policy and bind the route-map and the match-map
		routing policy pa id 1 match-map mb route-map rb
		4. Laptop connect to the match-map
		5. Laptop send traffic to vpn network, check result1
		6. Laptop send traffic to internet, check result2
		7. Eth0 down
		8. Laptop send traffic to vpn network, check result3
		9. Laptop send traffic to internet, check result3
		10. Eth0 up
		11. Laptop send traffic to vpn network, check result1
		12. Laptop send traffic to internet, check result2
	</description>
	<numofbr>1</numofbr>
	<numofcvg>1</numofcvg>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>linux</tbtype>

	<stage>
		<include prefix="1" file="subs/vpn_setup_one_sw.xml" obj-args="cvg1, br1" />
		
		<step no="2">
			<desc>
				config mgt0.1 and mgt0.2 with dhcp service enable,dns service enable
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "vlan ${br1.vpc1.vlan}"
				-v "interface vlan ${br1.vpc1.vlan}"
				-v "interface vlan${br1.vpc1.vlan} ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options netmask 255.255.255.0"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server enable"
			</telnet>
			<no-error-check />
		</step>

		<step no="2.1">
			<desc>
				Create user-profile bind eth1
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface ${br1.br.lan.int1} switchport mode access"
				-v "interface ${br1.br.lan.int1} switchport access vlan ${br1.vlan1} "
				-v "interface ${br1.br.lan.int1} switchport user-profile-attribute 1"
				-v "user-profile fw qos-policy def-user-qos vlan-id ${br1.vlan1} attribute 1"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				Set a match-map user-profile fw to any
				Set a route-map, the oif for all traffic is eth0 interface
				Bind one match-map to routing policy
			</desc>
			<log-file>step2.2_Set_match_map.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "routing match-map ma user-profile fw to any"
				-v "routing route-map ra via ${br1.br.wan.int1}"
				-v "routing policy pa id 1 match-map ma route-map ra"
			</telnet>
		</step>

		<step no="3">
			<desc>
				Laptop connect to the BR any access mode interface
			</desc>
			<log-file>step3_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ifconfig ${br1.vpc1.tif.name} down"
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "dhclient ${br1.vpc1.tif.name} -r"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="3.1">
			<desc>get raw mac of vpc1</desc>
			<setvar name="br1.vpc1.tif.mac1">
				echo $(${bin.dir}/getbyrexp.py -p "HWaddr ([\da-fA-F:]+)" -f ${log.dir}/step3_ifconfig_vpc1_.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="3.2">
			<desc>get mac of br1.vpc1</desc>
			<setvar name="br1.vpc1.tif.mac">
				echo $(echo $(echo ${br1.vpc1.tif.mac1} | cut -d : -f1)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f2,3)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f4,5)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f6))
			</setvar>
		</step>

		<step no="3.3">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="4.1">
			<desc>
				show ip rule to confirm rule
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip rule"
			</telnet>
		</step>

		<step no="4.2">
			<desc>
				show ip policy-route to confirm policy route
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip policy-route"
			</telnet>
		</step>

		<step no="open.debug">
			<desc>
				open debug switch
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "_ff id 1 src-ip ${br1.vpc1.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="5" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to vpn network,ping is failed
			</desc>
			<log-file>step5_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
		</step>

		<step no="5.1">
			<desc>
				show logging buffered on br,ping traffic is forwarded on eth0,match the routing policy pa
			</desc>
			<log-file>step5.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${cvg1.vpc1.tif.ip}.*found route in table:PBR-Routing"</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) mux0 ${br1.br.wan.ip}->${cvg1.vpc1.tif.ip}"</log-match>
			<no-error-check />
		</step>

		<step no="6" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to internet,ping is successful
			</desc>
			<log-file>step6_ping_ftp_server_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.ftp1.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.ftp1.ip}" -i "ttl="</log-match>
		</step>

		<step no="6.1">
			<desc>
				show logging buffered on br ,ping traffic is forwarded on eth0 ,match the routing policy pa
			</desc>
			<log-file>step6.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) vlan${br1.vpc1.vlan} ${pub.ftp1.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) mux0 ${pub.ftp1.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(o) mux0 ${br1.br.wan.ip}->${pub.ftp1.ip}"</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${pub.ftp1.ip}.*found route in table:PBR-Routing"</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<no-error-check />
		</step>

		<step no="7">
			<desc>
				Shutdown eth0
			</desc>
			<console target="br1.br">
				-v "interface ${br1.br.wan.int1} shutdown"
			</console>
		</step>

		<step no="8" delay="10" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to vpn network,ping is failed
			</desc>
			<log-file>step8_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
		</step>

		<step no="8.1">
			<desc>
				show logging buffered on br,ping traffic is dropped,match the routing policy pa
			</desc>
			<log-file>step8.1_show_logging_buffered.log</log-file>
			<console target="br1.br" timeout="600">
				-v "show ip rule"
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)routing done, ${br1.vpc1.tif.ip} -> ${cvg1.vpc1.tif.ip} ttl\(\d+\) proto\(\d+\) mark\(\d+\) \d+ bytes, no available route" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)routing done, ${br1.vpc1.tif.ip} -> ${cvg1.vpc1.tif.ip} ttl\(\d+\) proto\(\d+\) mark\(\d+\) \d+ bytes, no available route" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="9" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to internet,ping  is failed
			</desc>
			<log-file>step9_ping_ftp_server_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.ftp1.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${pub.ftp1.ip}" -i "ttl="</log-match>
		</step>

		<step no="9.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step9.1_show_logging_buffered.log</log-file>
			<console target="br1.br" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)routing done, ${br1.vpc1.tif.ip} -> ${pub.ftp1.ip} ttl\(\d+\) proto\(\d+\) mark\s*\(\d+\) .*\d+ bytes, no available route" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		
		
		<step no="10">
			<desc>
				Enable eth0
			</desc>
			<console target="br1.br">
				-v "no interface ${br1.br.wan.int1} shutdown"
				-v "no interface ${br1.br.wan.int1} dhcp client"
				-v "interface ${br1.br.wan.int1} dhcp client"
				-v "show interface ${br1.br.wan.int1} dhcp client"
			</console>
		</step>

		<step no="10.1" delay="10" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				check the br1 wan ip 
			</desc>
			<log-file>step10.1_check_wan_ip </log-file>
			<console target="br1.br">
				-v "show interface ${br1.br.wan.int1} dhcp client"
				-v "show vpn ike sa"
				-v "show vpn layer-3-tunnel"
			</console>
			<log-match>-n -i "Get IP address 0.0.0.0"</log-match>
			<log-match>-p 3 -i "9" -p 4 -i "I" -p 9 -i "1" -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>
		</step>

		<step no="11" delay="10" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Laptop send traffic to vpn network,ping is failed
			</desc>
			<log-file>step11_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
		</step>

		<step no="11.1">
			<desc>
				show logging buffered on br,ping traffic is forwared on eth0,match the routing policy pa
			</desc>
			<log-file>step11.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "sho ip  rule"
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${cvg1.vpc1.tif.ip}.*found route in table:PBR-Routing"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<no-error-check />
		</step>

		<step no="12" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to internet,ping is successful
			</desc>
			<log-file>step12_ping_ftp_server_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.ftp1.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.ftp1.ip}" -i "ttl="</log-match>
		</step>

		<step no="12.1">
			<desc>
				show logging buffered,ping traffic is forwarded on eth0 ,match the routing policy pa
			</desc>
			<log-file>step12.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) vlan${br1.vpc1.vlan} ${pub.ftp1.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) mux0 ${pub.ftp1.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${pub.ftp1.ip}.*found route in table:PBR-Routing"</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) mux0 ${br1.br.wan.ip}->${pub.ftp1.ip}"</log-match>
			<no-error-check />
		</step>
		
		<step no="13">
			<desc>
				
				no the  routing policy
			</desc>
			<log-file>step13_Set_match_map.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				
				-v "no routing policy pa "
			</telnet>
		</step>
		
		<step no="14" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to vpn network,ping is failed
			</desc>
			<log-file>step14_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
		</step>

		<step no="14.1">
			<desc>
				show logging buffered on br,ping traffic is forwared on tunnel0 base on the main route table
			</desc>
			<log-file>step14.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "sho ip  rule"
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match>-c -i "(o) tunnel0 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}"</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${cvg1.vpc1.tif.ip}.*found route in table:Main(Split)"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<no-error-check />
		</step>

		<step no="15" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to internet,ping is successful
			</desc>
			<log-file>step12_ping_ftp_server_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.ftp1.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.ftp1.ip}" -i "ttl="</log-match>
		</step>

		<step no="15.1">
			<desc>
				show logging buffered,ping traffic is forwarded on eth0 base on the main route table
			</desc>
			<log-file>step12.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) vlan${br1.vpc1.vlan} ${pub.ftp1.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) mux0 ${pub.ftp1.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-i "routing done, ${br1.vpc1.tif.ip} -&gt; ${pub.ftp1.ip}.*found route in table:Main(Split)"</log-match>
			<log-match>-c -i "(u) vlan${br1.vpc1.vlan} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) mux0 ${br1.br.wan.ip}->${pub.ftp1.ip}"</log-match>
			<no-error-check />
		</step>
	</stage>
</testcase>
