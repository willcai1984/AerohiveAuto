<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>In auto mode, group's multicast packet will be converted when both rules satisfied, cu of wifix not exceed cu-threshold and member numbers of one group in VAP(ssid) is below or equal to member-threshold </brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		on portal:
		Active multicast stream is :238.1.1.1
		Switch connects to portal on eth0 inerface
		Laptop1 and Laptop2, all connect to portal's ssid A on wifi0.1 interface
		ssid A multicast conversion-to-unicast auto
		Multicast to unicast conversation cu-threshold is 60%
		Multicast to unicast conversion member-threshold is 3
		Portal enable remote capture: exec capture remote-sniffer
		Open debug

		Test Procedure:
		1. Laptop1 and Laptop2, report to join group 238.1.1.1
		make sure total channel utilization minus portal self's Tx utilization is less than cu-
		threshold 60%, check multicast packet forwarding on portal, and capture to check
		on laptop1 to laptop3
		2. make sure total channel utilization minus portal self's Tx utilization larger than cu-
		threshold 60%, check multicast packet forwarding on portal
		3. make sure total channel utilization minus portal self's Tx utilization less than cu-
		threshold 60%;
		Laptop3 report to join group 238.1.1.1, check multicast packet forwarding
	</description>
	<numofap>1</numofap>
	<numofsta>3</numofsta>
	<tbtype>linux</tbtype>

	<stage>
		<step no="0">
			<desc>
				shutdown interface eth1
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<telnet target="ap1">
				-v "interface eth1 shutdown"
			</telnet>
		</step>

		<step no="1">
			<desc>
				On portal:
				Laptop1 to laptop2 connect to portal on wifi0.1 interface, through ssid A
				ssid A multicast conversion-to-unicast auto
				ssid A multicast cu-threshold 60%(make sure total channel utilization minus portal self's Tx utilization is less than cu-
				threshold 60% )
				ssid A multicast member-threshold 3
				Active multicast stream is :238.1.1.1
				Open debug
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "ssid ${ssid.name} multicast conversion-to-unicast auto"
				-v "ssid ${ssid.name} multicast member-threshold 3"
				-v "ssid ${ssid.name} multicast cu-threshold 99"
				-v "exec capture remote-sniffer"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				open debug on ap1
			</desc>
			<telnet target="ap1">
				-v "_ff src-ip ${pub.mtcast1.ip}"
				-v "_kdebug wifi-driver wifi0.1 awemcast"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
			</telnet>
		</step>

		<include prefix="2" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="2.1">
			<desc>
				pc connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<include prefix="2.2" file="subs/chk_conn_in_sta.xml" args="sta1" />

		<step no="2.3">
			<desc>Get sta1's ip</desc>
			<setvar name="sta1.tif.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig_sta1.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.4">
			<desc>
				get sta1's mac with five delimiter style
			</desc>
			<setvar name="sta1.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m
			</setvar>
		</step>

		<include prefix="3" file="subs/wpa_supplicant_start.xml" args="sta2" />

		<step no="3.1">
			<desc>
				pc connect ap
			</desc>
			<ssh target="sta2" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<include prefix="3.2" file="subs/chk_conn_in_sta.xml" args="sta2" />

		<step no="3.3">
			<desc>Get sta2's ip</desc>
			<setvar name="sta2.tif.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig_sta2.log -i ${sta2.tif.name} -nomask
			</setvar>
		</step>

		<step no="3.4">
			<desc>
				get sta2's mac with five delimiter style
			</desc>
			<setvar name="sta2.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta2.mif.ip} -u ${sta2.user} -p ${sta2.passwd} -i ${sta2.tif.name} -m
			</setvar>
		</step>

		<include prefix="4" file="subs/wpa_supplicant_start.xml" args="sta3" />

		<step no="4.1">
			<desc>
				pc connect ap
			</desc>
			<ssh target="sta3" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<include prefix="4.2" file="subs/chk_conn_in_sta.xml" args="sta3" />

		<step no="4.3">
			<desc>Get sta3's ip</desc>
			<setvar name="sta3.tif.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig_sta3.log -i ${sta3.tif.name} -nomask
			</setvar>
		</step>

		<step no="4.4">
			<desc>
				get sta3's mac with five delimiter style
			</desc>
			<setvar name="sta3.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta3.mif.ip} -u ${sta3.user} -p ${sta3.passwd} -i ${sta3.tif.name} -m
			</setvar>
		</step>

		<step no="5">
			<desc>
				show interface wifi0
			</desc>
			<log-file>step5_show_interface_wifi0.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="5.1">
			<desc>
				touch a file and write group1's mac(for example :0100:5e01:010a) in it
			</desc>
			<log-file>step5.1_group1_mac.log</log-file>
			<script>
				echo "${pub.mtcast1.group1.mac}" &gt; ${log.dir}/${log.file}
			</script>
		</step>

		<step no="5.2">
			<desc>Get pub multicast group1's mac with 5 delimiter style</desc>
			<setvar name="pub.multicast.group1.mac">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step5.1_group1_mac.log -p "(\S{2})(\S{2}):(\S{2})(\S{2}):(\S{2})(\S{2})" --script "':'.join(m.groups())"
			</setvar>
		</step>

		<step no="6">
			<desc>
				Laptop1 report to join group 238.1.1.1,
			</desc>
			<log-file>step6_join_group.log</log-file>
			<ssh target="sta1">
				-v "nohup ./mrecv -d ${pub.mtcast1.group1.ip} &amp;"
			</ssh>
		</step>

		<step no="6.1">
			<desc>
				get pid of "mrecv" on sta1
			</desc>
			<setvar name="sta1.join.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step6_join_group.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="7">
			<desc>
				Laptop2 report to join group 238.1.1.1
			</desc>
			<log-file>step7_join_group.log</log-file>
			<ssh target="sta2">
				-v "nohup ./mrecv -d ${pub.mtcast1.group1.ip} &amp;"
			</ssh>
		</step>

		<step no="7.1">
			<desc>
				get pid of "mrecv" on sta2
			</desc>
			<setvar name="sta2.join.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step7_join_group.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="8">
			<desc>no capture interface wifi0</desc>
			<log-file>step8_show_filter.log</log-file>
			<telnet target="ap1">
				-v "no capture interface wifi0"
				-v "filter 1 l3 src-ip ${pub.mtcast1.ip}"
				-v "show filter"
			</telnet>
		</step>

		<step no="9">
			<desc>set filter</desc>
			<log-file>step9_set_default_capture_file.log</log-file>
			<telnet target="ap1">
				-v "capture save interface wifi0 step9_${job.id}_wifi0.dmp"
			</telnet>
		</step>

		<step no="10">
			<desc>Capture pkts from AP</desc>
			<telnet target="ap1">
				-v "capture interface wifi0"
			</telnet>
		</step>

		<step no="11" delay="60">
			<desc>Transmit pkts from AP to master</desc>
			<telnet target="ap1" timeout="180">
				-v "save capture local step9_${job.id}_wifi0.dmp tftp://${mpc.tif.ip}:/step9_${job.id}_wifi0.dmp"
			</telnet>
		</step>

		<step no="12">
			<desc>Use Tshark convert pcap file to packet tree</desc>
			<log-file>step12_check_wifi0_result.log</log-file>
			<script>
				sleep 10;tshark -r /tftpboot/step9_${job.id}_wifi0.dmp -V &gt; ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)Destination address:.*\(${sta1.tif.mac}\)" -p "Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -e "User Datagram Protocol" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)Destination address:.*\(${sta2.tif.mac}\)" -p "Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -e "User Datagram Protocol" -f ${log.dir}/${log.file}</log-match>
			<log-match>-n -e "Dst:" -i "(${pub.multicast.group1.mac})"</log-match>
		</step>

		<step no="13">
			<desc>
				On portal:
				ssid A multicast cu-threshold 60%(make sure total channel utilization minus portal self's Tx utilization is more than cu-
				threshold 60% )
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name} multicast cu-threshold 1"
			</telnet>
		</step>

		<step no="14">
			<desc>no capture interface wifi0</desc>
			<log-file>step14_show_filter.log</log-file>
			<telnet target="ap1">
				-v "no capture interface wifi0"
				-v "filter 1 l3 src-ip ${pub.mtcast1.ip}"
				-v "show filter"
			</telnet>
		</step>

		<step no="15">
			<desc>set filter</desc>
			<log-file>step15_set_default_capture_file.log</log-file>
			<telnet target="ap1">
				-v "capture save interface wifi0 step15_${job.id}_wifi0.dmp"
			</telnet>
		</step>

		<step no="16">
			<desc>Capture pkts from AP</desc>
			<telnet target="ap1">
				-v "capture interface wifi0"
			</telnet>
		</step>

		<step no="17" delay="60">
			<desc>Transmit pkts from AP to master</desc>
			<telnet target="ap1" timeout="180">
				-v "save capture local step15_${job.id}_wifi0.dmp tftp://${mpc.tif.ip}:/step15_${job.id}_wifi0.dmp"
			</telnet>
		</step>

		<step no="18">
			<desc>Use Tshark convert pcap file to packet tree</desc>
			<log-file>step18_check_wifi0_result.log</log-file>
			<script>
				sleep 10;tshark -r /tftpboot/step15_${job.id}_wifi0.dmp -V &gt; ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)Destination address:.*\(${pub.multicast.group1.mac}\)" -p "Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -e "User Datagram Protocol" -f ${log.dir}/${log.file}</log-match>
			<log-match>-n -e "Dst:" -i "(${sta1.tif.mac})"</log-match>
			<log-match>-n -e "Dst:" -i "(${sta2.tif.mac})"</log-match>
		</step>

		<step no="18.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step18.1_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-e "(o) wifi0.1 ${pub.mtcast1.ip}-&gt;${pub.mtcast1.group1.ip}" -i "UDP"</log-match>
			<log-match>-e "\[fe\]: wifi0.1 Tx" -i "${pub.mtcast1.group1.mac}"</log-match>
			<log-match>-e "flood the packet out wifi0.1"</log-match>
			<log-match>-e "wifi0.1" -i "don't convert to unicast"</log-match>
		</step>

		<step no="19">
			<desc>
				On portal:
				ssid A multicast cu-threshold 60%(make sure total channel utilization minus portal self's Tx utilization is less than cu-
				threshold 60% )
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name} multicast cu-threshold 99"
			</telnet>
		</step>

		<step no="20">
			<desc>
				Laptop3 report to join group 238.1.1.1
			</desc>
			<log-file>step20_join_group.log</log-file>
			<ssh target="sta3">
				-v "nohup ./mrecv -d ${pub.mtcast1.group1.ip} &amp;"
			</ssh>
		</step>

		<step no="20.1">
			<desc>
				get pid of "mrecv" on sta3
			</desc>
			<setvar name="sta3.join.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step20_join_group.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="21">
			<desc>no capture interface wifi0</desc>
			<log-file>step21_show_filter.log</log-file>
			<telnet target="ap1">
				-v "no capture interface wifi0"
				-v "filter 1 l3 src-ip ${pub.mtcast1.ip}"
				-v "show filter"
			</telnet>
		</step>

		<step no="22">
			<desc>set filter</desc>
			<log-file>step22_set_default_capture_file.log</log-file>
			<telnet target="ap1">
				-v "capture save interface wifi0 step22_${job.id}_wifi0.dmp"
			</telnet>
		</step>

		<step no="23">
			<desc>Capture pkts from AP</desc>
			<telnet target="ap1">
				-v "capture interface wifi0"
			</telnet>
		</step>

		<step no="24" delay="60">
			<desc>Transmit pkts from AP to master</desc>
			<telnet target="ap1" timeout="180">
				-v "save capture local step22_${job.id}_wifi0.dmp tftp://${mpc.tif.ip}:/step22_${job.id}_wifi0.dmp"
			</telnet>
		</step>

		<step no="25">
			<desc>Use Tshark convert pcap file to packet tree</desc>
			<log-file>step25_check_wifi0_result.log</log-file>
			<script>
				sleep 10;tshark -r /tftpboot/step22_${job.id}_wifi0.dmp -V &gt; ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)Destination address:.*\(${sta1.tif.mac}\)" -p "Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -e "User Datagram Protocol" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)Destination address:.*\(${sta2.tif.mac}\)" -p "Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -e "User Datagram Protocol" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)Destination address:.*\(${sta3.tif.mac}\)" -p "Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -e "User Datagram Protocol" -f ${log.dir}/${log.file}</log-match>
			<log-match>-n -e "Dst:" -i "(${pub.multicast.group1.mac})"</log-match>
		</step>
	</stage>

	<post-process>
		<include file="include/default_post_process.xml" />

		<stage>
			<step no="0">
				<desc>
					kill process which run in background.
				</desc>
				<ssh target="sta1">
					-v "kill ${sta1.join.pid}"
				</ssh>
			</step>

			<step no="0.1">
				<desc>
					kill process which run in background.
				</desc>
				<ssh target="sta2">
					-v "kill ${sta2.join.pid}"
				</ssh>
			</step>

			<step no="0.2">
				<desc>
					kill process which run in background.
				</desc>
				<ssh target="sta3">
					-v "kill ${sta3.join.pid}"
				</ssh>
			</step>

			<step no="1">
				<desc>
					delete local files on mpc
				</desc>
				<script>
					rm -f /tftpboot/step9_${job.id}_wifi0.dmp /tftpboot/step15_${job.id}_wifi0.dmp /tftpboot/step22_${job.id}_wifi0.dmp
				</script>
			</step>
		</stage>
	</post-process>
</testcase>