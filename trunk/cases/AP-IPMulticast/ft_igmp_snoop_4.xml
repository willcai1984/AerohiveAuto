<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>AP should remove group's membership table on wifi0 and add the group's membership on wifi1 when clients roamed between radios on one ap</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		On portal
		ssid A associated to wifi0.1, access interfae
		ssid A associated to wifi1.1, access interface
		Laptop connects to portal on wifi0.1, and be authenticated
		Active multicast source stream is 238.1.1.1

		Test Procedure:
		1. Laptop reports to join group 238.1.1.1, check multicast membership table and
		group's multicast packet forwarding
		2. Increasing power on wifi1, and decreasing power on wifi0, make laptop roaming
		to wifi1, check multicast forwarding and membership table on portal
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="sta1.capture.igmp.query.result" value="sta1.capture.igmp.query.result" />
	<property name="sta1.capture.multicast.packet.result" value="sta1.capture.multicast.packet.result" />
	<property name="sta1.afterroaming.capture.multicast.packet.result" value="sta1.afterroaming.capture.multicast.packet.result" />
	<property name="file.dir" value="/tmp" />

	<stage>
		<step no="1">
			<desc>
				On portal 1, ssid A associated to wifi0.1
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "ssid ${ssid.name} multicast conversion-to-unicast auto"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 1"
				-v "ssid ${ssid.name} security-object FWtest"
				-v "mobility-policy FWtest dnxp"
				-v "user-profile ttt qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy FWtest attribute 1"
			</console>
		</step>

		<step no="1.1">
			<desc>
				show interface wifi0 info
			</desc>
			<log-file>show_interface_wifi0_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				get wifi0's mac address (format:xx xx xx xx xx xx)
			</desc>
			<setvar name="ap1.wifi0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi0_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<include prefix="2" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="2.1">
			<desc>
				pc connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<include prefix="2.2" file="subs/chk_conn_in_sta.xml" args="sta1" />

		<step no="2.3">
			<desc>Get sta1's ip</desc>
			<setvar name="sta1.tif.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig_sta1.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.4">
			<desc>
				get sta1's mac with two delimiter style
			</desc>
			<setvar name="sta1.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m -width 2
			</setvar>
		</step>

		<step no="2.5">
			<desc>
				Confirm station state on AP1
			</desc>
			<log-file>show_station_info.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
		</step>

		<step no="3">
			<desc>
				On portal 1, ssid A associated to wifi1.1
			</desc>
			<telnet target="ap1">
				-v "interface wifi1 mode access"
				-v "interface wifi1 radio channel 36"
				-v "interface wifi1 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				clear log all on ap1 and open debug mode.
			</desc>
			<telnet target="ap1">
				-v "clear log all"
				-v "_ff dst-ip ${pub.mtcast1.group1.ip} bidirectional"
				-v "_kdebug fe detail"
				-v "_kdebug fe basic"
				-v "exec capture remote-sniffer"
			</telnet>
		</step>

		<step no="3.2" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				Show roaming cache
			</desc>
			<log-file>step3.2_show_roaming_cache_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -e "${sta1.tif.mac} *${ap1.wifi0.mac}"</log-match>
		</step>

		<step no="3.3">
			<desc>
				capture packet on sta1
			</desc>
			<ssh target="sta1">
				-v "rm -f ${file.dir}/${sta1.capture.multicast.packet.result}"
				-v "rm -f ${file.dir}/${sta1.afterroaming.capture.multicast.packet.result}"
				-v "rm -f ${file.dir}/${sta1.capture.igmp.query.result}"
			</ssh>
		</step>

		<step no="3.4">
			<desc>
				capture packet on sta1
			</desc>
			<log-file>step3.4_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "nohup tshark -i ${sta1.tif.name} dst port ${pub.mtcast1.group1.port} -V &gt; ${file.dir}/${sta1.capture.multicast.packet.result} &amp;"
			</ssh>
		</step>

		<step no="3.5">
			<desc>
				get pid of "tshark" on sta1
			</desc>
			<setvar name="sta1.multicast.tshark.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step3.4_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="4">
			<desc>
				Laptop1 report to join group 238.1.1.1,
			</desc>
			<log-file>step4_join_group.log</log-file>
			<ssh target="sta1">
				-v "nohup ./mrecv -d ${pub.mtcast1.group1.ip} &amp;"
			</ssh>
		</step>

		<step no="4.1" delay="5">
			<desc>
				"show interface wifi0 multicast"
			</desc>
			<log-file>step4.1_show_interface_wifi0_multicast.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0 multicast"
			</telnet>
		</step>

		<step no="4.1.1" delay="15">
			<desc>
				"show log buffered"
			</desc>
			<log-file>step4.1.1_show_log_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-e "flood the packet out wifi0.1"</log-match>
		</step>

		<step no="4.2">
			<desc>
				get the number of transmitted Multicast packet(s) number,
			</desc>
			<setvar name="wifi0.transmit.multicast.number">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4.1_show_interface_wifi0_multicast.log -p "Transmitted Multicast packet\(s\) number:\s*(\d+)" -t str
			</setvar>
		</step>

		<step no="4.2.1">
			<desc>
				get the number of transmitted Multicast packet(s) number,
			</desc>
			<setvar name="wifi0.transmit.unicast.number">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4.1_show_interface_wifi0_multicast.log -p "Multicast conversion to unicast packet\(s\) number: \s*(\d+)" -t str
			</setvar>
		</step>

		<step no="4.3">
			<desc>
				get pid of "mrecv" on sta1
			</desc>
			<setvar name="sta1.join.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4_join_group.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="4.4" delay="60">
			<desc>
				"show interface wifi0 multicast" to check multicast groupâ€™s membership table on portal
			</desc>
			<log-file>step4.4_check_group_membership.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0 multicast"
			</telnet>
			<log-match>-e "Group IP address : ${pub.mtcast1.group1.ip}"</log-match>
			<log-match>-e "Group MAC address : ${pub.mtcast1.group1.mac}"</log-match>
			<log-match>-c -e "MAC Address : ${sta1.tif.mac} *IP Address : ${sta1.tif.ip}"</log-match>
		</step>

		<step no="4.5">
			<desc>
				get the number of transmitted Multicast packet(s) number,
			</desc>
			<setvar name="wifi0.transmit.multicast.number.second">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4.4_check_group_membership.log -p "Transmitted Multicast packet\(s\) number:\s*(\d+)" -t str
			</setvar>
		</step>

		<step no="4.6">
			<desc>
				get the number of transmitted Multicast packet(s) number,
			</desc>
			<setvar name="wifi0.transmit.unicast.number.second">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4.4_check_group_membership.log -p "Multicast conversion to unicast packet\(s\) number: \s*(\d+)" -t str
			</setvar>
		</step>

		<step no="4.7">
			<desc>
				check transmit number.
			</desc>
			<log-file>step4.7_check_transmit_number.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4.4_check_group_membership.log -p "Multicast conversion to unicast packet\(s\) number: \s*(\d+)" --script "int(m.group(1))+${wifi0.transmit.multicast.number.second}-${wifi0.transmit.unicast.number}-${wifi0.transmit.multicast.number} &gt; 500" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "True"</log-match>
		</step>

		<step no="4.8">
			<desc>
				kill tshark process.
			</desc>
			<ssh target="sta1">
				-v "kill ${sta1.multicast.tshark.pid}"
			</ssh>
		</step>

		<step no="4.9">
			<desc>
				cat files
			</desc>
			<log-file>step4.9_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat ${file.dir}/${sta1.capture.multicast.packet.result}"
			</ssh>
			<log-match bin="${bin.dir}/searchblocks.py">-b "Internet Protocol, Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -ps p1 "(?i)Protocol: ${pub.mtcast1.protocol}" -e "User Datagram Protocol.*Dst Port:.*${pub.mtcast1.group1.port}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5">
			<desc>
				capture packet on sta1
			</desc>
			<log-file>step5_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "nohup tshark -i ${sta1.tif.name} igmp &gt; ${file.dir}/${sta1.capture.igmp.query.result} &amp;"
			</ssh>
		</step>

		<step no="5.1">
			<desc>
				get pid of "tshark" on sta1
			</desc>
			<setvar name="sta1.tshark.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step5_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="6">
			<desc>
				use shutdown interface wifi0 instead of (increase the wifi1's power and Reduce the wifi0's power)
			</desc>
			<telnet target="ap1">
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="7" delay="10" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show station on ap1
			</desc>
			<log-file>step7_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "Ifname=wifi0.1" -p "(?i)${sta1.tif.mac}\s*${sta1.tif.ip}" -e "Ifname=wifi1.1" -c 0 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "Ifname=wifi1.1" -p "(?i)${sta1.tif.mac}\s*${sta1.tif.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7.2" delay="20">
			<desc>
				kill tshark process.
			</desc>
			<ssh target="sta1">
				-v "kill ${sta1.tshark.pid}"
			</ssh>
		</step>

		<step no="7.3">
			<desc>
				cat files
			</desc>
			<log-file>step7.3_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat ${file.dir}/${sta1.capture.igmp.query.result}"
			</ssh>
			<log-match>-e "${ap1.mgt0.ip} -&gt; 224.0.0.1 *IGMP V2 Membership Query, general"</log-match>
			<log-match>-e "${sta1.tif.ip} -&gt; ${pub.mtcast1.group1.ip} *IGMP V2 Membership Report / Join group ${pub.mtcast1.group1.ip}"</log-match>
		</step>

		<step no="8">
			<desc>
				"show interface wifi0 multicast" to check multicast groupâ€™s membership table on portal1
			</desc>
			<log-file>step8_check_group_membership.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0 multicast"
			</telnet>
			<log-match>-n -e "Group IP address :"</log-match>
			<log-match>-n -e "Group MAC address :"</log-match>
			<log-match>-n -c -e "MAC Address : ${sta1.tif.mac} *IP Address : ${sta1.tif.ip}"</log-match>
		</step>

		<step no="8.1">
			<desc>
				capture packet on sta1
			</desc>
			<log-file>step8.1_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "nohup tshark -i ${sta1.tif.name} dst port ${pub.mtcast1.group1.port} -V &gt; ${file.dir}/${sta1.afterroaming.capture.multicast.packet.result} &amp;"
			</ssh>
		</step>

		<step no="8.2">
			<desc>
				get pid of "tshark" on sta1
			</desc>
			<setvar name="sta1.multicast.tshark.pid1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step8.1_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="9" delay="60">
			<desc>
				"show interface wifi1 multicast" to check multicast groupâ€™s membership table on portal1
			</desc>
			<log-file>step9_check_group_membership.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1 multicast"
			</telnet>
			<log-match>-e "Group IP address : ${pub.mtcast1.group1.ip}"</log-match>
			<log-match>-e "Group MAC address : ${pub.mtcast1.group1.mac}"</log-match>
			<log-match>-c -e "MAC Address : ${sta1.tif.mac} *IP Address : ${sta1.tif.ip}"</log-match>
		</step>

		<step no="9.1">
			<desc>
				get the number of transmitted Multicast packet(s) number,
			</desc>
			<setvar name="wifi1.transmit.multicast.number">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step9_check_group_membership.log -p "Transmitted Multicast packet\(s\) number:\s*(\d+)" -t str
			</setvar>
		</step>

		<step no="9.2">
			<desc>
				check transmit number.
			</desc>
			<log-file>step9.2_check_transmit_number.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -f ${log.dir}/step9_check_group_membership.log -p "Multicast conversion to unicast packet\(s\) number: \s*(\d+)" --script "int(m.group(1))+${wifi1.transmit.multicast.number}-${wifi0.transmit.multicast.number}-${wifi0.transmit.unicast.number} &gt; 500" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "True"</log-match>
		</step>

		<step no="9.3">
			<desc>
				kill tshark process.
			</desc>
			<ssh target="sta1">
				-v "kill ${sta1.multicast.tshark.pid1}"
			</ssh>
		</step>

		<step no="9.4">
			<desc>
				cat files
			</desc>
			<log-file>step9.4_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat ${file.dir}/${sta1.afterroaming.capture.multicast.packet.result}"
			</ssh>
			<log-match bin="${bin.dir}/searchblocks.py">-b "Internet Protocol, Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -ps p1 "Protocol: UDP" -e "User Datagram Protocol.*Dst Port:.*${pub.mtcast1.group1.port}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="10">
			<desc>
				"show logging buffered" on portal1
			</desc>
			<log-file>step10_show_logging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-e "flood the packet out wifi1.1"</log-match>
		</step>
	</stage>

	<post-process>
		<include file="include/default_post_process.xml" />

		<stage>
			<step no="0">
				<desc>
					kill process which run in background.
				</desc>
				<ssh target="sta1">
					-v "kill ${sta1.join.pid}"
					-v "kill ${sta1.multicast.tshark.pid}"
					-v "kill ${sta1.multicast.tshark.pid1}"
					-v "rm -f ${file.dir}/${sta1.capture.igmp.query.result}"
					-v "rm -f ${file.dir}/${sta1.capture.multicast.packet.result}"
					-v "rm -f ${file.dir}/${sta1.afterroaming.capture.multicast.packet.result}"
				</ssh>
			</step>
		</stage>
	</post-process>
</testcase>