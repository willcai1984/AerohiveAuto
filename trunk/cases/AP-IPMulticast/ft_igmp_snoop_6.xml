<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>AP should remove group's membership table in GRE Terminator and create membership in GRE Initiator when clients L3 roamed through dynamic tunnel</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		On portal1
		mgt0 ip: 10.10.1.1/24
		user-profile vlan 10, attribute 77,binding mobility-policy sj
		security-object sj default-user-profile-attr 77
		ssid A security-object sj
		mobility-policy sj dnxp
		interface wifi0 ssid A
		exec capture remote-sniffer
		On portal2
		mgt0 ip: 20.20.1.1/24
		user-profile vlan 10, attribute 77,binding mobility-policy sj
		ssid A security-object sj
		mobility-policy sj dnxp
		interface wifi0 ssid A
		exec capture remote-sniffer
		Laptop connects to portal1 on ssid A, and be authenticated
		Laptop obtain ip 10.10.1.2/24 , with same subnet of portal1
		Active multicast source stream is 238.1.1.1 , in vlan 10

		Test Procedure:
		1. Laptop reports to join group 238.1.1.1, check multicast forwarding and
		membership table on portal1, portal2
		2. Shutdown wifi0 interface of ssidA on portal1, make laptop roaming to portal2,
		check multicast forwarding and membership table on portal1, portal2
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="sta1.capture.igmp.query.result" value="sta1.capture.igmp.query.result" />
	<property name="sta1.capture.multicast.packet.result" value="sta1.capture.multicast.packet.result" />
	<property name="sta1.afterroaming.capture.multicast.packet.result" value="sta1.afterroaming.capture.multicast.packet.result" />
	<property name="file.dir" value="/tmp" />

	<stage>
		<step no="1">
			<desc>
				On portal1
				mgt0 ip: 10.10.1.1/24
				user-profile vlan 10, attribute 77,binding mobility-policy sj
				security-object sj default-user-profile-attr 77
				ssid A security-object sj
				mobility-policy sj dnxp
				interface wifi0 ssid A
				exec capture remote-sniffer
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "ssid ${ssid.name} multicast conversion-to-unicast auto"
				-v "ssid ${ssid.name} multicast member-threshold 1"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 77"
				-v "ssid ${ssid.name} security-object FWtest"
				-v "mobility-policy FWtest dnxp"
				-v "user-profile ttt qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy FWtest attribute 77"
				-v "exec capture remote-sniffer"
			</console>
		</step>

		<step no="1.1">
			<desc>
				show interface wifi0 info
			</desc>
			<log-file>show_interface_wifi0_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				get wifi0's mac address (format:xx xx xx xx xx xx)
			</desc>
			<setvar name="ap1.wifi0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi0_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<include prefix="2" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="2.1">
			<desc>
				pc connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<include prefix="2.2" file="subs/chk_conn_in_sta.xml" args="sta1" />

		<step no="2.3">
			<desc>Get sta1's ip</desc>
			<setvar name="sta1.tif.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig_sta1.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.4">
			<desc>
				get sta1's mac with two delimiter style
			</desc>
			<setvar name="sta1.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m -width 2
			</setvar>
		</step>

		<step no="3">
			<desc>
				On portal2
				mgt0 ip: 20.20.1.1/24
				user-profile vlan 10, attribute 77,binding mobility-policy sj
				ssid A security-object sj
				mobility-policy sj dnxp
				interface wifi0 ssid A
				exec capture remote-sniffer
			</desc>
			<console target="ap2">
				-v "interface mgt0 vlan ${tb.vlan2}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "ssid ${ssid.name} multicast conversion-to-unicast auto"
				-v "ssid ${ssid.name} multicast member-threshold 1"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 77"
				-v "ssid ${ssid.name} security-object FWtest"
				-v "mobility-policy FWtest dnxp"
				-v "user-profile ttt qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy FWtest attribute 77"
				-v "exec capture remote-sniffer"
			</console>
		</step>

		<step no="3.1">
			<desc>
				close dhcp client
			</desc>
			<console target="ap2">
				-v "no interface mgt0 dhcp client"
			</console>
		</step>

		<step no="3.2">
			<desc>
				open dhcp client
			</desc>
			<console target="ap2">
				-v "interface mgt0 dhcp client"
			</console>
		</step>

		<step no="3.3">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step3.3_show_interface_mgt0_info.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="3.4">
			<desc>Get ap2's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step3.3_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="3.5">
			<desc>
				get mgt0's mac address (format:xx xx xx xx xx xx)
			</desc>
			<setvar name="ap2.mgt0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step3.3_show_interface_mgt0_info.log -i mgt0 -o aero -m -width
			</setvar>
		</step>

		<step no="4" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				Show roaming cache
			</desc>
			<log-file>step4_show_roaming_cache_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -e "${sta1.tif.mac} *${ap1.wifi0.mac}"</log-match>
		</step>

		<step no="4.1" delay="10" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show amrp dnxp neighbor
			</desc>
			<log-file>show_amrp_dnxp_neighbor_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show amrp dnxp neighbor"
			</console>
			<log-match>-c -e "${ap2.mgt0.mac} *${ap2.mgt0.ip}"</log-match>
		</step>

		<step no="4.2">
			<desc>
				delete local files
			</desc>
			<ssh target="sta1">
				-v "rm -f ${file.dir}/${sta1.capture.multicast.packet.result}"
				-v "rm -f ${file.dir}/${sta1.capture.igmp.query.result}"
				-v "rm -f ${file.dir}/${sta1.afterroaming.capture.multicast.packet.result}"
			</ssh>
		</step>

		<step no="5">
			<desc>
				capture packet on sta1
			</desc>
			<log-file>step5_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "nohup tshark -i ${sta1.tif.name} dst port ${pub.mtcast1.group1.port} -V &gt; ${file.dir}/${sta1.capture.multicast.packet.result} &amp;"
			</ssh>
		</step>

		<step no="5.1">
			<desc>
				get pid of "tshark" on sta1
			</desc>
			<setvar name="sta1.multicast.tshark.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step5_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="6">
			<desc>
				Laptop1 report to join group 238.1.1.1,
			</desc>
			<log-file>step6_join_group.log</log-file>
			<ssh target="sta1">
				-v "nohup ./mrecv -d ${pub.mtcast1.group1.ip} &amp;"
			</ssh>
		</step>

		<step no="6.1">
			<desc>
				get pid of "mrecv" on sta1
			</desc>
			<setvar name="sta1.join.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step6_join_group.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="6.2">
			<desc>
				"show interface wifi0 multicast" to check multicast group’s membership table on portal
			</desc>
			<log-file>step6.2_check_group_membership.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0 multicast"
			</telnet>
			<log-match>-e "Group IP address : ${pub.mtcast1.group1.ip}"</log-match>
			<log-match>-e "Group MAC address : ${pub.mtcast1.group1.mac}"</log-match>
			<log-match>-c -e "MAC Address : ${sta1.tif.mac} *IP Address : ${sta1.tif.ip}"</log-match>
		</step>

		<step no="6.3" delay="60">
			<desc>
				kill tshark process.
			</desc>
			<ssh target="sta1">
				-v "kill ${sta1.multicast.tshark.pid}"
			</ssh>
		</step>

		<step no="6.4">
			<desc>
				cat files
			</desc>
			<log-file>step6.4_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat ${file.dir}/${sta1.capture.multicast.packet.result}"
			</ssh>
			<log-match bin="${bin.dir}/searchblocks.py">-b "Internet Protocol, Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -ps p1 "(?i)Protocol: ${pub.mtcast1.protocol}" -e "User Datagram Protocol.*Dst Port:.*${pub.mtcast1.group1.port}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7">
			<desc>
				capture packet on sta1
			</desc>
			<log-file>step7_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "nohup tshark -i ${sta1.tif.name} igmp &gt; ${file.dir}/${sta1.capture.igmp.query.result} &amp;"
			</ssh>
		</step>

		<step no="7.1">
			<desc>
				get pid of "tshark" on sta1
			</desc>
			<setvar name="sta1.tshark.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step7_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="8">
			<desc>
				Shutdown wifi0 interface of ssidA on portal1
			</desc>
			<telnet target="ap1">
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="9" delay="10" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show route on ap1
			</desc>
			<log-file>step9_show_route_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-e "mgt0" -i "LTO"</log-match>
		</step>

		<step no="9.1" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show route on ap2
			</desc>
			<log-file>step9.1_show_route_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show route"
			</telnet>
			<log-match>-e "wifi0.1" -i "LTO"</log-match>
		</step>

		<step no="10" delay="10" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show station on ap2
			</desc>
			<log-file>step10_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show station"
			</telnet>
			<log-match>-c -e "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="10.1" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show station on ap1
			</desc>
			<log-file>step10.1_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-n -c -e "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="11" delay="60">
			<desc>
				kill tshark process.
			</desc>
			<ssh target="sta1">
				-v "kill ${sta1.tshark.pid}"
			</ssh>
		</step>

		<step no="11.1">
			<desc>
				cat files
			</desc>
			<log-file>step11.1_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat ${file.dir}/${sta1.capture.igmp.query.result}"
			</ssh>
			<log-match>-e "${tb.vlan1.gw} -&gt; 224.0.0.1 *IGMP V2 Membership Query, general"</log-match>
			<log-match>-e "${sta1.tif.ip} -&gt; ${pub.mtcast1.group1.ip} *IGMP V2 Membership Report / Join group ${pub.mtcast1.group1.ip}"</log-match>
		</step>

		<step no="12">
			<desc>
				"show interface wifi0 multicast" to check multicast group’s membership table on portal1
			</desc>
			<log-file>step12_check_group_membership.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0 multicast"
			</telnet>
			<log-match>-n -e "Group IP address :"</log-match>
			<log-match>-n -e "Group MAC address :"</log-match>
			<log-match>-n -c -e "MAC Address : ${sta1.tif.mac} *IP Address : ${sta1.tif.ip}"</log-match>
		</step>

		<step no="12.1">
			<desc>
				"show interface wifi0 multicast" to check multicast group’s membership table on portal2
			</desc>
			<log-file>step12.1_check_group_membership.log</log-file>
			<telnet target="ap2">
				-v "show interface wifi0 multicast"
			</telnet>
			<log-match>-e "Group IP address : ${pub.mtcast1.group1.ip}"</log-match>
			<log-match>-e "Group MAC address : ${pub.mtcast1.group1.mac}"</log-match>
			<log-match>-c -e "MAC Address : ${sta1.tif.mac} *IP Address : ${sta1.tif.ip}"</log-match>
		</step>

		<step no="12.2">
			<desc>
				capture packet on sta1
			</desc>
			<log-file>step12.2_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "nohup tshark -i ${sta1.tif.name} dst port ${pub.mtcast1.group1.port} -V &gt; ${file.dir}/${sta1.afterroaming.capture.multicast.packet.result} &amp;"
			</ssh>
		</step>

		<step no="12.3">
			<desc>
				get pid of "tshark" on sta1
			</desc>
			<setvar name="sta1.multicast.tshark.pid1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step12.2_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="13" delay="60">
			<desc>
				kill tshark process.
			</desc>
			<ssh target="sta1">
				-v "kill ${sta1.multicast.tshark.pid1}"
			</ssh>
		</step>

		<step no="13.1">
			<desc>
				cat files
			</desc>
			<log-file>step13.1_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat ${file.dir}/${sta1.afterroaming.capture.multicast.packet.result}"
			</ssh>
			<log-match bin="${bin.dir}/searchblocks.py">-b "Internet Protocol, Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -ps p1 "(?i)Protocol: ${pub.mtcast1.protocol}" -e "User Datagram Protocol.*Dst Port:.*${pub.mtcast1.group1.port}" -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>

	<post-process>
		<include file="include/default_post_process.xml" />

		<stage>
			<step no="0">
				<desc>
					kill process which run in background.
				</desc>
				<ssh target="sta1">
					-v "kill ${sta1.join.pid}"
					-v "kill ${sta1.multicast.tshark.pid}"
					-v "kill ${sta1.multicast.tshark.pid1}"
					-v "rm -f ${file.dir}/${sta1.capture.igmp.query.result}"
					-v "rm -f ${file.dir}/${sta1.capture.multicast.packet.result}"
					-v "rm -f ${file.dir}/${sta1.afterroaming.capture.multicast.packet.result}"
				</ssh>
			</step>
		</stage>
	</post-process>
</testcase>