<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>AP should remove group's membership table on old AP and add the group's membership on new AP when clients L2 roaming as detecting more power signal</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		There are 2 nodes portal1, portal2
		On portal 1, ssid A associated to wifi0.1
		On portal 2, ssid A associated to wifi0.1
		Laptop connects to portal1 on wifi0.1, and be authenticated
		Active multicast source stream is 238.1.1.1

		Test Procedure:
		1. Laptop reports to join group 238.1.1.1, check multicast membership table and
		group's multicast packet forwarding
		2. Reduce the portal1's power and increase the portal2's power, make laptop
		roaming to portal 2, check multicast forwarding and membership table on portal 1,
		portal 2
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="sta1.capture.igmp.query.result" value="sta1.capture.igmp.query.result" />
	<property name="sta1.capture.multicast.packet.result" value="sta1.capture.multicast.packet.result" />
	<property name="sta1.afterroaming.capture.multicast.packet.result" value="sta1.afterroaming.capture.multicast.packet.result" />
	<property name="file.dir" value="/tmp" />

	<stage>
		<step no="1">
			<desc>
				On portal 1, ssid A associated to wifi0.1
			</desc>
			<console target="ap1">
				-v "hive ${hive.name}123"
				-v "interface mgt0 hive ${hive.name}123"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "ssid ${ssid.name} multicast conversion-to-unicast auto"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 1"
				-v "ssid ${ssid.name} security-object FWtest"
				-v "mobility-policy FWtest dnxp"
				-v "user-profile ttt qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy FWtest attribute 1"
			</console>
		</step>

		<step no="1.1">
			<desc>
				show interface wifi0 info
			</desc>
			<log-file>show_interface_wifi0_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				get wifi0's mac address (format:xx xx xx xx xx xx)
			</desc>
			<setvar name="ap1.wifi0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi0_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<include prefix="2" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="2.1">
			<desc>
				pc connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<include prefix="2.2" file="subs/chk_conn_in_sta.xml" args="sta1" />

		<step no="2.3">
			<desc>Get sta1's ip</desc>
			<setvar name="sta1.tif.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig_sta1.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.4">
			<desc>
				get sta1's mac with two delimiter style
			</desc>
			<setvar name="sta1.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m -width 2
			</setvar>
		</step>

		<step no="2.5">
			<desc>
				Confirm station state on AP1
			</desc>
			<log-file>show_station_info.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
		</step>

		<step no="3">
			<desc>
				On portal 2, ssid A associated to wifi0.1
			</desc>
			<console target="ap2">
				-v "hive ${hive.name}123"
				-v "interface mgt0 hive ${hive.name}123"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "ssid ${ssid.name} multicast conversion-to-unicast auto"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 1"
				-v "ssid ${ssid.name} security-object FWtest"
				-v "mobility-policy FWtest dnxp"
				-v "user-profile ttt qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy FWtest attribute 1"
			</console>
		</step>

		<step no="3.1">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step3.1_show_interface_mgt0_info.log</log-file>
			<telnet target="ap2">
				-v "show interface mgt0"
			</telnet>
		</step>

		<step no="3.2">
			<desc>
				get mgt0's mac address (format:xx xx xx xx xx xx)
			</desc>
			<setvar name="ap2.mgt0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step3.1_show_interface_mgt0_info.log -i mgt0 -o aero -m -width
			</setvar>
		</step>

		<step no="3.3">
			<desc>
				open debug mode.
			</desc>
			<telnet target="ap1">
				-v "_ff dst-ip ${pub.mtcast1.group1.ip} bidirectional"
				-v "_kdebug fe detail"
				-v "_kdebug fe basic"
				-v "exec capture remote-sniffer"
			</telnet>
		</step>

		<step no="3.3.1">
			<desc>
				clear log all on ap1
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<step no="3.4">
			<desc>
				open debug mode.
			</desc>
			<telnet target="ap2">
				-v "_ff dst-ip ${pub.mtcast1.group1.ip} bidirectional"
				-v "_kdebug fe detail"
				-v "_kdebug fe basic"
				-v "exec capture remote-sniffer"
			</telnet>
		</step>

		<step no="3.4.1">
			<desc>
				clear log all on ap2
			</desc>
			<telnet target="ap2">
				-v "clear log all"
			</telnet>
		</step>

		<step no="3.5" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				Show roaming cache
			</desc>
			<log-file>step3.5_show_roaming_cache_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -e "${sta1.tif.mac} *${ap1.wifi0.mac}"</log-match>
		</step>

		<step no="3.6" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show amrp dnxp neighbor
			</desc>
			<log-file>show_amrp_dnxp_neighbor_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match>-c -e "${ap2.mgt0.mac} *${ap2.mgt0.ip}"</log-match>
		</step>

		<step no="3.7">
			<desc>
				delete local files
			</desc>
			<ssh target="sta1">
				-v "rm -f ${file.dir}/${sta1.capture.multicast.packet.result}"
				-v "rm -f ${file.dir}/${sta1.afterroaming.capture.multicast.packet.result}"
				-v "rm -f ${file.dir}/${sta1.capture.igmp.query.result}"
			</ssh>
		</step>

		<step no="3.8">
			<desc>
				capture packet on sta1
			</desc>
			<log-file>step3.8_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "nohup tshark -i ${sta1.tif.name} dst port ${pub.mtcast1.group1.port} -V &gt; ${file.dir}/${sta1.capture.multicast.packet.result} &amp;"
			</ssh>
		</step>

		<step no="3.9">
			<desc>
				get pid of "tshark" on sta1
			</desc>
			<setvar name="sta1.multicast.tshark.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step3.8_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="4">
			<desc>
				Laptop1 report to join group 238.1.1.1,
			</desc>
			<log-file>step4_join_group.log</log-file>
			<ssh target="sta1">
				-v "nohup ./mrecv -d ${pub.mtcast1.group1.ip} &amp;"
			</ssh>
		</step>

		<step no="4.1">
			<desc>
				get pid of "mrecv" on sta1
			</desc>
			<setvar name="sta1.join.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4_join_group.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="4.2">
			<desc>
				"show interface wifi0 multicast"
			</desc>
			<log-file>step4.2_show_interface_wifi0_multicast.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0 multicast"
			</telnet>
		</step>

		<step no="4.3" delay="60">
			<desc>
				kill tshark process.
			</desc>
			<ssh target="sta1">
				-v "kill ${sta1.multicast.tshark.pid}"
			</ssh>
		</step>

		<step no="4.4">
			<desc>
				cat files
			</desc>
			<log-file>step4.4_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat ${file.dir}/${sta1.capture.multicast.packet.result}"
			</ssh>
			<log-match bin="${bin.dir}/searchblocks.py">-b "Internet Protocol, Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -ps p1 "(?i)Protocol: ${pub.mtcast1.protocol}" -e "User Datagram Protocol.*Dst Port:.*${pub.mtcast1.group1.port}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.5">
			<desc>
				"show log buffered"
			</desc>
			<log-file>step4.5_show_log_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-e "flood the packet out wifi0.1"</log-match>
		</step>

		<step no="5">
			<desc>
				capture packet on sta1
			</desc>
			<log-file>step5_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "nohup tshark -i ${sta1.tif.name} igmp &gt; ${file.dir}/${sta1.capture.igmp.query.result} &amp;"
			</ssh>
		</step>

		<step no="5.1">
			<desc>
				get pid of "tshark" on sta1
			</desc>
			<setvar name="sta1.tshark.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step5_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="6">
			<desc>
				shutdown interface wifi0 (instead of Reduce the portal1's power )
			</desc>
			<telnet target="ap1">
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="7" delay="10" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show station on ap2
			</desc>
			<log-file>step7_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show station"
			</telnet>
			<log-match>-c -e "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="7.1" delay="10" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show station on ap1
			</desc>
			<log-file>step7.1_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-n -c -e "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="7.2" delay="20">
			<desc>
				kill tshark process.
			</desc>
			<ssh target="sta1">
				-v "kill ${sta1.tshark.pid}"
			</ssh>
		</step>

		<step no="7.3">
			<desc>
				cat files
			</desc>
			<log-file>step7.3_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat ${file.dir}/${sta1.capture.igmp.query.result}"
			</ssh>
			<log-match>-e "${ap2.mgt0.ip} -&gt; 224.0.0.1 *IGMP V2 Membership Query, general"</log-match>
			<log-match>-e "${sta1.tif.ip} -&gt; ${pub.mtcast1.group1.ip} *IGMP V2 Membership Report / Join group ${pub.mtcast1.group1.ip}"</log-match>
		</step>

		<step no="8">
			<desc>
				"show interface wifi0 multicast" to check multicast group’s membership table on portal1
			</desc>
			<log-file>step8_check_group_membership.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0 multicast"
			</telnet>
			<log-match>-n -e "Group IP address :"</log-match>
			<log-match>-n -e "Group MAC address :"</log-match>
			<log-match>-n -c -e "MAC Address : ${sta1.tif.mac} *IP Address : ${sta1.tif.ip}"</log-match>
		</step>

		<step no="8.1">
			<desc>
				capture packet on sta1
			</desc>
			<log-file>step8.1_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "nohup tshark -i ${sta1.tif.name} dst port ${pub.mtcast1.group1.port} -V &gt; ${file.dir}/${sta1.afterroaming.capture.multicast.packet.result} &amp;"
			</ssh>
		</step>

		<step no="8.2">
			<desc>
				get pid of "tshark" on sta1
			</desc>
			<setvar name="sta1.multicast.tshark.pid1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step8.1_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="9" delay="60">
			<desc>
				kill tshark process.
			</desc>
			<ssh target="sta1">
				-v "kill ${sta1.multicast.tshark.pid1}"
			</ssh>
		</step>

		<step no="9.1">
			<desc>
				cat files
			</desc>
			<log-file>step9.1_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat ${file.dir}/${sta1.afterroaming.capture.multicast.packet.result}"
			</ssh>
			<log-match bin="${bin.dir}/searchblocks.py">-b "Internet Protocol, Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -ps p1 "(?i)Protocol: ${pub.mtcast1.protocol}" -e "User Datagram Protocol.*Dst Port:.*${pub.mtcast1.group1.port}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="10">
			<desc>
				"show logging buffered" on portal2
			</desc>
			<log-file>step10_show_logging_buffered.log</log-file>
			<telnet target="ap2" timeout="500">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-e "flood the packet out wifi0.1"</log-match>
		</step>
	</stage>

	<post-process>
		<include file="include/default_post_process.xml" />

		<stage>
			<step no="0">
				<desc>
					kill process which run in background.
				</desc>
				<ssh target="sta1">
					-v "kill ${sta1.join.pid}"
					-v "kill ${sta1.multicast.tshark.pid}"
					-v "kill ${sta1.multicast.tshark.pid1}"
					-v "rm -f ${file.dir}/${sta1.capture.igmp.query.result}"
					-v "rm -f ${file.dir}/${sta1.capture.multicast.packet.result}"
					-v "rm -f ${file.dir}/${sta1.afterroaming.capture.multicast.packet.result}"
				</ssh>
			</step>
		</stage>
	</post-process>
</testcase>