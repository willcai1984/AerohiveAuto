<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Group's ip multicast packet will be converted to unicast packet forever in always mode</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		On portal:
		Laptop1 connects to portal's ssid A on wifi0.1 interface, and authenticated
		Laptop2 connects to portal's ssid A on wifi1.1 interface, and authenticated
		ssid A multicast conversion-to-unicast always
		Active multicast stream group is 238.1.1.1, 238.1.1.2
		Portal enable remote capture: exec capture remote-sniffer
		Open debug:
		_kdebug fe basic
		debug console

		Test Procedure:
		1. Laptop1 reports to join group 238.1.1.1, open debug to check multicast packet
		forwarding on portal, and capture to check on laptop1, laptop2
		2. Laptop2 reports to join group 238.1.1.2, open debug to check multicast stream
		forwarding and capture to check
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<property name="sta1.capture.packet.result" value="sta1.capture.packet.result" />
	<property name="sta2.capture.packet.result" value="sta2.capture.packet.result" />
	<property name="file.dir" value="/tmp" />

	<stage>
		<step no="0">
			<desc>
				shutdown interface eth1
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<telnet target="ap1">
				-v "interface eth1 shutdown"
			</telnet>
		</step>

		<step no="1">
			<desc>
				On portal:
				Laptop1 connects to portal's ssid A on wifi0.1 interface, and authenticated
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<include prefix="2" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="2.1">
			<desc>
				pc connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<include prefix="2.2" file="subs/chk_conn_in_sta.xml" args="sta1" />

		<step no="2.3">
			<desc>Get sta1's ip</desc>
			<setvar name="sta1.tif.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig_sta1.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.4">
			<desc>
				get sta1's mac with two delimiter style
			</desc>
			<setvar name="sta1.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m -width
			</setvar>
		</step>

		<step no="2.5">
			<desc>
				get sta1's mac with five delimiter style
			</desc>
			<setvar name="sta1.mac">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m
			</setvar>
		</step>

		<step no="2.6">
			<desc>
				touch a file and write group1's mac(for example :0100:5e01:010a) in it
			</desc>
			<log-file>step2.6_group1_mac.log</log-file>
			<script>
				echo "${pub.mtcast1.group1.mac}" &gt; ${log.dir}/${log.file}
			</script>
		</step>

		<step no="2.7">
			<desc>
				touch a file and write group2's mac(for example :0100:5e01:010b) in it.
			</desc>
			<log-file>step2.7_group2_mac.log</log-file>
			<script>
				echo "${pub.mtcast1.group2.mac}" &gt; ${log.dir}/${log.file}
			</script>
		</step>

		<step no="2.8">
			<desc>Get pub multicast group1's mac with 5 delimiter style</desc>
			<setvar name="pub.multicast.group1.mac">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step2.6_group1_mac.log -p "(\S{2})(\S{2}):(\S{2})(\S{2}):(\S{2})(\S{2})" --script "':'.join(m.groups())"
			</setvar>
		</step>

		<step no="2.9">
			<desc>Get pub multicast group2's mac with 5 delimiter style</desc>
			<setvar name="pub.multicast.group2.mac">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step2.7_group2_mac.log -p "(\S{2})(\S{2}):(\S{2})(\S{2}):(\S{2})(\S{2})" --script "':'.join(m.groups())"
			</setvar>
		</step>

		<step no="3">
			<desc>
				On portal:
				Laptop2 connects to portal's ssid A on wifi1.1 interface, and authenticated
			</desc>
			<telnet target="ap1">
				-v "interface wifi1 mode access"
				-v "interface wifi1 radio channel 36"
				-v "interface wifi1 ssid ${ssid.name}"
				-v "ssid ${ssid.name} multicast conversion-to-unicast always"
			</telnet>
		</step>

		<include prefix="4" file="subs/wpa_supplicant_start.xml" args="sta2" />

		<step no="4.1">
			<desc>
				pc connect ap
			</desc>
			<ssh target="sta2" prompt=">|.*#">
				-v "ifconfig ${sta2.tif.name} up"
				-v "iwconfig ${sta2.tif.name} channel 36"
				-v "iwconfig ${sta2.tif.name} commit"
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<include prefix="4.2" file="subs/chk_conn_in_sta.xml" args="sta2" />

		<step no="4.3">
			<desc>Get sta2's ip</desc>
			<setvar name="sta2.tif.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig_sta2.log -i ${sta2.tif.name} -nomask
			</setvar>
		</step>

		<step no="4.4">
			<desc>
				get sta2's mac with two delimiter style
			</desc>
			<setvar name="sta2.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta2.mif.ip} -u ${sta2.user} -p ${sta2.passwd} -i ${sta2.tif.name} -m -width
			</setvar>
		</step>

		<step no="4.5">
			<desc>
				get sta2's mac with five delimiter style
			</desc>
			<setvar name="sta2.mac">
				${bin.dir}/getrmtip.pl -d ${sta2.mif.ip} -u ${sta2.user} -p ${sta2.passwd} -i ${sta2.tif.name} -m
			</setvar>
		</step>

		<step no="5">
			<desc>
				open debug mode
			</desc>
			<telnet target="ap1">
				-v "clear log all"
				-v "exec capture remote-sniffer"
				-v "_kdebug fe basic"
				-v "_ff dst-ip ${pub.mtcast1.group1.ip}"
				-v "_kdebug fe detail"
			</telnet>
		</step>

		<step no="5.1">
			<desc>
				delete local files
			</desc>
			<log-file>step6_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "rm -f ${file.dir}/${sta1.capture.packet.result}"
			</ssh>
		</step>

		<step no="6">
			<desc>
				check capture on laptop
			</desc>
			<log-file>step6_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "nohup tshark -i ${sta1.tif.name} dst port ${pub.mtcast1.group1.port} -V &gt; ${file.dir}/${sta1.capture.packet.result} 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="6.1">
			<desc>
				2. Laptop report the video on group 238.1.1.1, check capture on laptop and debug
				on portal.
			</desc>
			<log-file>step6.1_join_group.log</log-file>
			<ssh target="sta1">
				-v "nohup ./mrecv -d ${pub.mtcast1.group1.ip} &amp;"
			</ssh>
		</step>

		<step no="6.2">
			<desc>
				get pid of "mrecv" on sta1
			</desc>
			<setvar name="sta1.join.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step6.1_join_group.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="6.3">
			<desc>
				get pid of "tshark" on sta1
			</desc>
			<setvar name="sta1.tshark.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step6_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="6.4" delay="30">
			<desc>
				show interface wifi0 multicast
			</desc>
			<log-file>step6.4_check_group_membership.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0 multicast" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-e "Group IP address : ${pub.mtcast1.group1.ip}"</log-match>
			<log-match>-e "Group MAC address : ${pub.mtcast1.group1.mac}"</log-match>
			<log-match>-c -e "MAC Address : ${sta1.tif.mac} *IP Address : ${sta1.tif.ip}"</log-match>
			<log-match>-e "Transmitted Multicast packet(s) number: 0"</log-match>
		</step>

		<step no="6.5">
			<desc>
				check if ap receive unicast packet.
			</desc>
			<log-file>step6.5_check_transmit_number.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -f ${log.dir}/step6.4_check_group_membership.log -p "Multicast conversion to unicast packet\(s\) number: \s*(\d+)" --script "int(m.group(1)) &gt; 500" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "True"</log-match>
		</step>

		<step no="7">
			<desc>set filter</desc>
			<log-file>step7_show_filter.log</log-file>
			<telnet target="ap1">
				-v "no capture interface wifi0"
				-v "filter 1 l3 dst-ip ${pub.mtcast1.group1.ip}"
				-v "show filter"
			</telnet>
		</step>

		<step no="7.1">
			<desc>save capturer</desc>
			<log-file>step7.1_set_default_capture_file.log</log-file>
			<telnet target="ap1">
				-v "capture save interface wifi0 step7.1_${job.id}_wifi0.dmp"
			</telnet>
		</step>

		<step no="7.2">
			<desc>Capture pkts from AP</desc>
			<telnet target="ap1">
				-v "capture interface wifi0"
			</telnet>
		</step>

		<step no="8">
			<desc>
				kill process which run in background.
			</desc>
			<log-file>step8_kill_process.log</log-file>
			<ssh target="sta1">
				-v "kill ${sta1.tshark.pid}"
			</ssh>
		</step>

		<step no="8.1">
			<desc>
				cat files.
			</desc>
			<log-file>step8.1_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat ${file.dir}/${sta1.capture.packet.result}"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)Dst:.*\(${sta1.mac}\)" -p "Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -e "User Datagram Protocol" -f ${log.dir}/${log.file}</log-match>
			<log-match>-n -e "Dst:" -i "(${pub.multicast.group1.mac})"</log-match>
		</step>

		<step no="8.2" delay="30">
			<desc>Transmit pkts from AP to master</desc>
			<telnet target="ap1" timeout="180">
				-v "save capture local step7.1_${job.id}_wifi0.dmp tftp://${mpc.tif.ip}:/step7.1_${job.id}_wifi0.dmp"
			</telnet>
		</step>

		<step no="8.3">
			<desc>Use Tshark convert pcap file to packet tree</desc>
			<log-file>step8.3_check_wifi0_result.log</log-file>
			<script>
				sleep 10;tshark -r /tftpboot/step7.1_${job.id}_wifi0.dmp -V &gt; ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)Destination address:.*\(${sta1.mac}\)" -p "Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -e "User Datagram Protocol" -f ${log.dir}/${log.file}</log-match>
			<log-match>-n -e "Dst:" -i "(${pub.multicast.group1.mac})"</log-match>
		</step>

		<step no="9">
			<desc>
				clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
				-v "no _ff id 1"
				-v "_ff dst-ip ${pub.mtcast1.group2.ip}"
			</telnet>
		</step>

		<step no="9.1">
			<desc>
				delete local files on sta2
			</desc>
			<ssh target="sta2">
				-v "rm -f ${file.dir}/${sta2.capture.packet.result}"
			</ssh>
		</step>

		<step no="10">
			<desc>
				check capture on laptop2
			</desc>
			<log-file>step10_capture_packet.log</log-file>
			<ssh target="sta2">
				-v "nohup tshark -i ${sta2.tif.name} dst port ${pub.mtcast1.group2.port} -V &gt; ${file.dir}/${sta2.capture.packet.result} 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="10.1">
			<desc>
				2. Laptop2 report the video on group 238.1.1.2, check capture on laptop and debug
				on portal.
			</desc>
			<log-file>step10.1_join_group.log</log-file>
			<ssh target="sta2">
				-v "nohup ./mrecv -d ${pub.mtcast1.group2.ip} &amp;"
			</ssh>
		</step>

		<step no="10.2">
			<desc>
				get pid of "mrecv" on sta2
			</desc>
			<setvar name="sta2.join.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step10.1_join_group.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="10.3">
			<desc>
				get pid of "tshark" on sta2
			</desc>
			<setvar name="sta2.tshark.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step10_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="11" delay="30">
			<desc>
				show interface wifi1 multicast
			</desc>
			<log-file>step11_check_group_membership.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1 multicast" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-e "Group IP address : ${pub.mtcast1.group2.ip}"</log-match>
			<log-match>-e "Group MAC address : ${pub.mtcast1.group2.mac}"</log-match>
			<log-match>-c -e "MAC Address : ${sta2.tif.mac} *IP Address : ${sta2.tif.ip}"</log-match>
			<log-match>-e "Transmitted Multicast packet(s) number: 0"</log-match>
		</step>

		<step no="11.1">
			<desc>
				check if ap receive unicast packet.
			</desc>
			<log-file>step11.1_check_transmit_number.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -f ${log.dir}/step11_check_group_membership.log -p "Multicast conversion to unicast packet\(s\) number: \s*(\d+)" --script "int(m.group(1)) &gt; 500" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "True"</log-match>
		</step>

		<step no="12">
			<desc>set filter</desc>
			<log-file>step12_show_filter.log</log-file>
			<telnet target="ap1">
				-v "no capture interface wifi1"
				-v "filter 1 l3 dst-ip ${pub.mtcast1.group2.ip}"
				-v "show filter"
			</telnet>
		</step>

		<step no="12.1">
			<desc>save capturer</desc>
			<log-file>step12.1_set_default_capture_file.log</log-file>
			<telnet target="ap1">
				-v "capture save interface wifi1 step12.1_${job.id}_wifi1.dmp"
			</telnet>
		</step>

		<step no="12.2">
			<desc>Capture pkts from AP</desc>
			<telnet target="ap1">
				-v "capture interface wifi1"
			</telnet>
		</step>

		<step no="13">
			<desc>
				kill process which run in background.
			</desc>
			<log-file>step13_kill_process.log</log-file>
			<ssh target="sta2">
				-v "kill ${sta2.tshark.pid}"
			</ssh>
		</step>

		<step no="13.1">
			<desc>
				cat files.
			</desc>
			<log-file>step13.1_check_result.log</log-file>
			<ssh target="sta2">
				-v "cat ${file.dir}/${sta2.capture.packet.result}"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)Dst:.*\(${sta2.mac}\)" -p "Dst: ${pub.mtcast1.group2.ip} \(${pub.mtcast1.group2.ip}\)" -e "User Datagram Protocol" -f ${log.dir}/${log.file}</log-match>
			<log-match>-n -e "Dst:" -i "(${pub.multicast.group1.mac})"</log-match>
		</step>

		<step no="14" delay="30">
			<desc>Transmit pkts from AP to master</desc>
			<telnet target="ap1" timeout="180">
				-v "save capture local step12.1_${job.id}_wifi1.dmp tftp://${mpc.tif.ip}:/step12.1_${job.id}_wifi1.dmp"
			</telnet>
		</step>

		<step no="14.1">
			<desc>Use Tshark convert pcap file to packet tree</desc>
			<log-file>step14.1_check_wifi1_result.log</log-file>
			<script>
				sleep 10;tshark -r /tftpboot/step12.1_${job.id}_wifi1.dmp -V &gt; ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)Destination address:.*\(${sta2.mac}\)" -p "Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group2.ip} \(${pub.mtcast1.group2.ip}\)" -e "User Datagram Protocol" -f ${log.dir}/${log.file}</log-match>
			<log-match>-n -e "Dst:" -i "(${pub.multicast.group1.mac})"</log-match>
		</step>
	</stage>

	<post-process>
		<include file="include/default_post_process.xml" />

		<stage>
			<step no="0">
				<desc>
					kill process which run in background.
				</desc>
				<ssh target="sta1">
					-v "kill ${sta1.join.pid}"
					-v "kill ${sta1.tshark.pid}"
					-v "rm -f ${file.dir}/${sta1.capture.packet.result}"
				</ssh>
			</step>

			<step no="1">
				<desc>
					kill process which run in background.
				</desc>
				<ssh target="sta2">
					-v "kill ${sta2.join.pid}"
					-v "kill ${sta2.tshark.pid}"
					-v "rm -f ${file.dir}/${sta2.capture.packet.result}"
				</ssh>
			</step>

			<step no="2">
				<desc>
					delete local files on mpc
				</desc>
				<script>
					rm -f /tftpboot/step12.1_${job.id}_wifi1.dmp /tftpboot/step7.1_${job.id}_wifi0.dmp
				</script>
			</step>
		</stage>
	</post-process>
</testcase>