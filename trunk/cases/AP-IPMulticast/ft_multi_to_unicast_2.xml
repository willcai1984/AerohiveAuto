<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Group's ip multicast packet won't be converted forever in disable mode</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		on portal:
		Laptop1 connects to portal's ssid A on wifi0.1 interface, through ssid A
		ssid A multicast conversion-to-unicast always
		Portal enable remote capture: exec capture remote-sniffer
		Active multicast stream is :238.1.1.1
		Open debug

		Test Procedure:
		1. Laptop1 reports to join group 238.1.1.1, check multicast packet forwarding
		2. disable multicast to unicast conversation:
		cli: ssid A multicast conversion-to-unicast disable
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="sta1.ucast.packet" value="sta1_unicast.log" />
	<property name="sta1.mcast.packet" value="sta1_multicast.log" />
	<property name="file.dir" value="/tmp" />

	<stage>
		<step no="0">
			<desc>shutdown interface eth1</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<telnet target="ap1">
				-v "interface eth1 shutdown"
			</telnet>
		</step>

		<step no="1">
			<desc>
				on portal:
				Laptop1 connects to portal's ssid A on wifi0.1 interface, through ssid A
				ssid A multicast conversion-to-unicast always
				Portal enable remote capture: exec capture remote-sniffer
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "ssid ${ssid.name} multicast conversion-to-unicast always"
			</telnet>
		</step>
		
		<include prefix="connect_ap" file="subs/sta_wifi_connect_${tb.os}_new.xml" obj-args="conn1, sta1, ap1" />

		<step no="3.1">
			<desc>get sta1's mac with five delimiter style</desc>
			<setvar name="sta1.mac">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m
			</setvar>
		</step>
		<step no="3.2">
			<desc>Get pub multicast group2's mac with 5 delimiter style</desc>
			<setvar name="pub.multicast.group2.mac">
				perl -e '$i="${pub.mtcast1.group2.mac}";$i=~s/(\w\w)(\w\w)/$1:$2/g;print $i'
			</setvar>
		</step>
		<step no="3.3">
			<desc>clear log all on ap1 and open debug mode</desc>
			<telnet target="ap1">
				-v "clear log all"
				-v "_ff dst-ip ${pub.mtcast1.group2.ip} bidirectional"
				-v "_kdebug fe detail"
				-v "_kdebug fe basic"
			</telnet>
		</step>
		<step no="3.4">
			<desc>delete local files on sta1</desc>
			<ssh target="sta1">
				-v "rm -f ${file.dir}/${sta1.ucast.packet}"
				-v "rm -f ${file.dir}/${sta1.mcast.packet}"
			</ssh>
		</step>
		
		<step no="4.1">
			<desc>Laptop1 report to join multicast group</desc>
			<log-file>join_group.log</log-file>
			<ssh target="sta1">
				-v "nohup /usr/local/auto/bin/join_mcast_group --group ${pub.mtcast1.group2.ip} &amp;"
			</ssh>
		</step>
		<step no="4.2">
			<desc>get pid of "join_mcast_group" on sta1</desc>
			<setvar name="sta1.join.pid">
				${bin.dir}/getbyrexp.py -p "\[\d+\]\s+(\d+)" -t str \
				-f ${log.dir}/join_group.log 
			</setvar>
		</step>
		<step no="4.3" delay="5">
			<desc>show interface wifi0 multicast</desc>
			<log-file>step4.3_show_interface_wifi0_multicast.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0 multicast"
			</telnet>
		</step>
		<step no="4.4">
			<desc>get the number of transmitted Multicast packet(s) number</desc>
			<setvar name="wifi0.transmit.unicast.number">
				${bin.dir}/getbyrexp.py \
				-p "Multicast conversion to unicast packet\(s\) number: \s*(\d+)" -t str \
				-f ${log.dir}/step4.3_show_interface_wifi0_multicast.log
			</setvar>
		</step>
		<step no="4.5" delay="40">
			<desc>
				"show interface wifi0 multicast" to check multicast groupâ€™s membership table on portal
			</desc>
			<log-file>step4.5_check_group_membership.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0 multicast"
			</telnet>
			<log-match>-e "Group IP address : ${pub.mtcast1.group2.ip}"</log-match>
			<log-match>-e "Group MAC address : ${pub.mtcast1.group2.mac}"</log-match>
			<log-match>-c -e "MAC Address : ${sta1.tif.mac} *IP Address : ${sta1.tif.ip}"</log-match>
			<log-match>-e "Transmitted Multicast packet(s) number: 0"</log-match>
		</step>
		<step no="4.6">
			<desc>check if ap receive unicast packet</desc>
			<log-file>step4.6_check_transmit_number.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4.5_check_group_membership.log \
				-p "Multicast conversion to unicast packet\(s\) number: \s*(\d+)" \
				--script "int(m.group(1))-${wifi0.transmit.unicast.number} &gt; 100" > ${log.dir}/${log.file}
			</script>
		</step>
		
		<step no="5.1">
			<desc>set filter</desc>
			<telnet target="ap1">
				-v "no capture interface wifi0"
				-v "filter 1 l3 dst-ip ${pub.mtcast1.group2.ip}"
				-v "show filter"
			</telnet>
		</step>
		<step no="5.2">
			<desc>capture packet on sta1</desc>
			<log-file>start_tshark_ucast.log</log-file>
			<ssh target="sta1">
				-v "nohup tshark -i ${sta1.tif.name} dst port ${pub.mtcast1.group2.port} -V &gt; ${file.dir}/${sta1.ucast.packet} &amp;"
			</ssh>
		</step>
		<step no="5.3">
			<desc>get pid of "tshark" on sta1</desc>
			<setvar name="sta1.unicast.tshark.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/start_tshark_ucast.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>
		<step no="5.4">
			<desc>capture packet on AP</desc>
			<telnet target="ap1">
				-v "capture save interface wifi0 tftp://${mpc.tif.ip}:ucast_${job.id}_wifi0.dmp"
				-v "capture interface wifi0"
			</telnet>
		</step>
		<step no="5.5" delay="2">
			<desc>after 2s, stop packet capture on AP</desc>
			<telnet target="ap1">
				-v "no capture interface wifi0"
			</telnet>
		</step>
		<step no="5.6">
			<desc>stop client packet capture, kill tshark process</desc>
			<ssh target="sta1">
				-v "kill ${sta1.unicast.tshark.pid}"
			</ssh>
		</step>
		<step no="5.7">
			<desc>copy file to logdir</desc>
			<ssh target="sta1">
				-v "cd ${file.dir} &amp;&amp; tftp ${mpc.mif.ip} -c put ${sta1.ucast.packet}"
			</ssh>
		</step>
		<step no="5.8">
			<desc>check packet</desc>
			<log-file>check_sta_ucast_result.log</log-file>
			<script>
				mv /tftpboot/${sta1.ucast.packet} ${log.dir}/${log.file}
			</script>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b "(?i)Dst:.*\(${sta1.mac}\)"
				-p "Dst: ${pub.mtcast1.group2.ip} \(${pub.mtcast1.group2.ip}\)"
				-e "User Datagram Protocol"
				-f ${log.dir}/${log.file}
			</log-match>
			<log-match>-n -e "Dst:" -i "(${pub.multicast.group2.mac})"</log-match>
		</step>
		<step no="5.9">
			<desc>Use Tshark convert pcap file to packet tree</desc>
			<log-file>check_ucast_wifi0_result.log</log-file>
			<script>
				tshark -r /tftpboot/ucast_${job.id}_wifi0.dmp -V &gt; ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b "(?i)Destination address:.*\(${sta1.mac}\)" 
				-p "Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group2.ip} \(${pub.mtcast1.group2.ip}\)"
				-e "User Datagram Protocol"
				-f ${log.dir}/${log.file}
			</log-match>
			<log-match>-n -e "Dst:" -i "(${pub.multicast.group2.mac})"</log-match>
		</step>

		<step no="6">
			<desc>
				2. disable multicast to unicast conversation:
				cli: ssid A multicast conversion-to-unicast disable
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name} multicast conversion-to-unicast disable"
				-v "clear log all"
			</telnet>
		</step>

		<step no="7.1" delay="2">
			<desc>capture multicast packet on sta1</desc>
			<log-file>start_tshark_mcast.log</log-file>
			<ssh target="sta1">
				-v "nohup tshark -i ${sta1.tif.name} dst port ${pub.mtcast1.group2.port} -V &gt; ${file.dir}/${sta1.mcast.packet} &amp;"
			</ssh>
		</step>
		<step no="7.2">
			<desc>get pid of "tshark" on sta1</desc>
			<setvar name="sta1.multicast.tshark.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/start_tshark_mcast.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>
		<step no="7.3">
			<desc>set filter</desc>
			<telnet target="ap1">
				-v "filter 1 l3 dst-ip ${pub.mtcast1.group2.ip}"
				-v "show filter"
			</telnet>
		</step>
		<step no="7.4">
			<desc>start capture multicast packet on AP</desc>
			<telnet target="ap1">
				-v "capture save interface wifi0 tftp://${mpc.tif.ip}:mcast_${job.id}_wifi0.dmp"
				-v "capture interface wifi0"
			</telnet>
		</step>
		<step no="7.5" delay="2">
			<desc>after 2s, stop packet capture on AP</desc>
			<telnet target="ap1">
				-v "no capture interface wifi0"
			</telnet>
		</step>
		<step no="7.6">
			<desc>kill tshark process</desc>
			<ssh target="sta1">
				-v "kill ${sta1.multicast.tshark.pid}"
			</ssh>
		</step>
		<step no="7.7">
			<desc>copy file to logdir</desc>
			<ssh target="sta1">
				-v "cd ${file.dir} &amp;&amp; tftp ${mpc.mif.ip} -c put ${sta1.mcast.packet}"
			</ssh>
		</step>
		<step no="7.8">
			<desc>check packet</desc>
			<log-file>check_sta_mcast_result.log</log-file>
			<script>
				mv /tftpboot/${sta1.mcast.packet} ${log.dir}/${log.file}
			</script>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b "(?i)Dst:.*\(${pub.multicast.group2.mac}\)"
				-p "Dst: ${pub.mtcast1.group2.ip} \(${pub.mtcast1.group2.ip}\)"
				-e "User Datagram Protocol"
				-f ${log.dir}/${log.file}
			</log-match>
		</step>
		<step no="7.9">
			<desc>Use Tshark convert pcap file to packet tree</desc>
			<log-file>check_mcast_wifi0_result.log</log-file>
			<script>
				tshark -r /tftpboot/mcast_${job.id}_wifi0.dmp -V &gt; ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b "(?i)Destination address:.*\(${pub.multicast.group2.mac}\)"
				-p "Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group2.ip} \(${pub.mtcast1.group2.ip}\)"
				-e "User Datagram Protocol"
				-f ${log.dir}/${log.file}
			</log-match>
			<log-match>-n -e "Dst:" -i "(${sta1.mac})"</log-match>
		</step>
	</stage>

	<post-process>
		<include file="include/default_post_process.xml" />
		<stage>
			<step no="p0">
				<desc>
					kill process which run in background.
				</desc>
				<ssh target="sta1">
					-v "kill ${sta1.join.pid}"
					-v "kill ${sta1.multicast.tshark.pid}"
					-v "kill ${sta1.unicast.tshark.pid}"
					-v "rm -f ${file.dir}/${sta1.ucast.packet}"
					-v "rm -f ${file.dir}/${sta1.mcast.packet}"
				</ssh>
			</step>
			<step no="p1">
				<desc>
					delete local files on mpc
				</desc>
				<script>
					rm -f /tftpboot/mcast_${job.id}_wifi0.dmp
					rm -f /tftpboot/ucast_${job.id}_wifi0.dmp
				</script>
			</step>
		</stage>
	</post-process>
</testcase>
