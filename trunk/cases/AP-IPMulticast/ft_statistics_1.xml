<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Show interface wifi0[wifi0.y] multicast</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		On portal:
		Ssid A binding wifi0.1
		Ssid B binding wifi0.2
		Laptop1,Laptop2 connect to portal on wifi0.1, both be authenticated.
		Reset to clear portal's statistics

		Test Procedure:
		1. Laptop1 and laptop2 report to join multicast group 238.1.1.1, check statistics on wifi0
		2. Laptop1 reports to leave multicast group 238.1.1.1, check statistics on wifi0
		3. Laptop1 reports to join multicast group 238.1.1.2, check statistics on wifi0
		4. Sending multicast stream on group 238.1.1.1, check statistics on wifi0
		5. Check statistics on sub-interface:
		"show interface wifi0.1 multicast"
		"show interface wifi0.2 multicast"
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<property name="sta1.leave.group1.capture.packet.result" value="sta1.leave.group1.capture.packet.result" />
	<property name="file.dir" value="/tmp" />

	<stage>
		<step no="0">
			<desc>
				reset config
			</desc>
			<console target="ap1">
				-v "reset config"
			</console>
		</step>

		<step no="0.1">
			<desc>
				shutdown interface eth1
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<console target="ap1">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="1">
			<desc>
				On portal:
				Ssid A binding wifi0.1
				Laptop1,Laptop2 connect to portal on wifi0.1, both be authenticated.
				Reset to clear portal's statistics
			</desc>
			<console target="ap1">
				-v "console page 0"
				-v "interface eth0 manage all"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "ssid ${ssid.name}_1"
				-v "interface wifi0 ssid ${ssid.name}_1"
				-v "ssid ${ssid.name} multicast conversion-to-unicast auto"
				-v "ssid ${ssid.name}_1 multicast conversion-to-unicast auto"
				-v "report statistic period 1"
			</console>
		</step>

		<include prefix="2" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="2.1">
			<desc>
				pc connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<include prefix="2.2" file="subs/chk_conn_in_sta.xml" args="sta1" />

		<step no="2.3">
			<desc>Get sta1's ip</desc>
			<setvar name="sta1.tif.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig_sta1.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.4">
			<desc>
				get sta1's mac with two delimiter style
			</desc>
			<setvar name="sta1.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m -width
			</setvar>
		</step>

		<include prefix="3" file="subs/wpa_supplicant_start.xml" args="sta2" />

		<step no="3.1">
			<desc>
				pc connect ap
			</desc>
			<ssh target="sta2" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}_1\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<include prefix="3.2" file="subs/chk_conn_in_sta.xml" args="sta2" />

		<step no="3.3">
			<desc>Get sta2's ip</desc>
			<setvar name="sta2.tif.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig_sta2.log -i ${sta2.tif.name} -nomask
			</setvar>
		</step>

		<step no="3.4">
			<desc>
				get sta2's mac with two delimiter style
			</desc>
			<setvar name="sta2.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta2.mif.ip} -u ${sta2.user} -p ${sta2.passwd} -i ${sta2.tif.name} -m -width
			</setvar>
		</step>

		<step no="4">
			<desc>
				Laptop2 report to join group 238.1.1.1,
			</desc>
			<log-file>step4_join_group.log</log-file>
			<ssh target="sta2" timeout="180">
				-v "nohup ./mrecv -d ${pub.mtcast1.group1.ip} &amp;"
			</ssh>
		</step>

		<step no="4.1">
			<desc>
				Laptop1 report to join group 238.1.1.1,
			</desc>
			<log-file>step4.1_join_group.log</log-file>
			<ssh target="sta1" timeout="180">
				-v "nohup ./mrecv -d ${pub.mtcast1.group1.ip} &amp;"
			</ssh>
		</step>

		<step no="4.2">
			<desc>
				get pid of "mrecv" on sta2
			</desc>
			<setvar name="sta2.join.group1.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4_join_group.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="4.3">
			<desc>
				get pid of "mrecv" on sta1
			</desc>
			<setvar name="sta1.join.group1.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4.1_join_group.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="5" delay="10">
			<desc>
				"show interface wifi0.1 multicast" to check multicast group’s membership table on portal
			</desc>
			<log-file>step5_check_group_membership.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0.1 multicast"
			</telnet>
			<log-match>-e "Group IP address : ${pub.mtcast1.group1.ip}"</log-match>
			<log-match>-e "Group MAC address : ${pub.mtcast1.group1.mac}"</log-match>
			<log-match>-e "Received IGMP join packet(s) number : 1"</log-match>
			<log-match>-e "Received IGMP leave packet(s) number : 0"</log-match>
			<log-match>-e "Received subscribed this group client(s) number : 1"</log-match>
			<log-match>-e "Transmitted Multicast packet(s) number:"</log-match>
			<log-match>-e "Multicast packet(s) average latency :"</log-match>
			<log-match>-e "Multicast packet(s) average jitter :"</log-match>
			<log-match>-c -e "MAC Address : ${sta1.tif.mac} *IP Address : ${sta1.tif.ip}"</log-match>
		</step>

		<step no="5.1">
			<desc>
				"show interface wifi0.2 multicast" to check multicast group’s membership table on portal
			</desc>
			<log-file>step5.1_check_group_membership.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0.2 multicast"
			</telnet>
			<log-match>-e "Group IP address : ${pub.mtcast1.group1.ip}"</log-match>
			<log-match>-e "Group MAC address : ${pub.mtcast1.group1.mac}"</log-match>
			<log-match>-e "Received IGMP join packet(s) number : 1"</log-match>
			<log-match>-e "Received IGMP leave packet(s) number : 0"</log-match>
			<log-match>-e "Received subscribed this group client(s) number : 1"</log-match>
			<log-match>-e "Transmitted Multicast packet(s) number:"</log-match>
			<log-match>-e "Multicast packet(s) average latency :"</log-match>
			<log-match>-e "Multicast packet(s) average jitter :"</log-match>
			<log-match>-c -e "MAC Address : ${sta2.tif.mac} *IP Address : ${sta2.tif.ip}"</log-match>
		</step>

		<step no="5.2" delay="10">
			<desc>
				capture packet on sta1
			</desc>
			<log-file>step5.2_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "rm -f ${file.dir}/${sta1.leave.group1.capture.packet.result}"
				-v "nohup tshark -i ${sta1.tif.name} igmp &gt; ${file.dir}/${sta1.leave.group1.capture.packet.result} &amp;"
			</ssh>
		</step>

		<step no="5.3">
			<desc>
				get pid of "tshark" on sta1
			</desc>
			<setvar name="sta1.leave.tshark.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step5.2_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="6">
			<desc>
				Laptop1 reports to leave multicast group 238.1.1.1
			</desc>
			<log-file>step6_join_group.log</log-file>
			<ssh target="sta1" slow="yes">
				-v "kill ${sta1.join.group1.pid}"
			</ssh>
		</step>

		<step no="6.1" delay="30">
			<desc>
				kill process
			</desc>
			<ssh target="sta1" slow="yes">
				-v "kill ${sta1.leave.tshark.pid}"
			</ssh>
		</step>

		<step no="6.2">
			<desc>
				cat files on sta1
			</desc>
			<log-file>step6.2_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat ${file.dir}/${sta1.leave.group1.capture.packet.result}"
			</ssh>
			<log-match>-e "${sta1.tif.ip} -&gt; 224.0.0.2 *IGMP V2 Leave Group ${pub.mtcast1.group1.ip}"</log-match>
		</step>

		<step no="7">
			<desc>
				"show interface wifi0 multicast" to check multicast group’s membership table on portal
			</desc>
			<log-file>step7_check_group_membership.log</log-file>
			<telnet target="ap1" slow="yes">
				-v "show interface wifi0.1 multicast"
			</telnet>
			<log-match>-n -e "Group IP address : ${pub.mtcast1.group1.ip}"</log-match>
			<log-match>-n -e "Group MAC address : ${pub.mtcast1.group1.mac}"</log-match>
			<log-match>-c -n -e "MAC Address : ${sta1.tif.mac} *IP Address : ${sta1.tif.ip}"</log-match>
		</step>
		
		<step no="7.1">
			<desc>
				"show interface wifi0.2 multicast" to check multicast group’s membership table on portal
			</desc>
			<log-file>step7.1_check_group_membership.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0.2 multicast"
			</telnet>
			<log-match>-e "Group IP address : ${pub.mtcast1.group1.ip}"</log-match>
			<log-match>-e "Group MAC address : ${pub.mtcast1.group1.mac}"</log-match>
			<log-match>-e "Received IGMP join packet(s) number : 1"</log-match>
			<log-match>-e "Received IGMP leave packet(s) number : 0"</log-match>
			<log-match>-e "Received subscribed this group client(s) number : 1"</log-match>
			<log-match>-e "Transmitted Multicast packet(s) number:"</log-match>
			<log-match>-e "Multicast packet(s) average latency :"</log-match>
			<log-match>-e "Multicast packet(s) average jitter :"</log-match>
			<log-match>-c -e "MAC Address : ${sta2.tif.mac} *IP Address : ${sta2.tif.ip}"</log-match>
		</step>

		<step no="8" delay="10">
			<desc>
				Laptop1 report to join group 238.1.1.2
			</desc>
			<log-file>step8_join_group.log</log-file>
			<ssh target="sta1" timeout="180">
				-v "nohup ./mrecv -d ${pub.mtcast1.group2.ip} &amp;"
			</ssh>
		</step>

		<step no="8.1">
			<desc>
				get pid of "mrecv" on sta1
			</desc>
			<setvar name="sta1.join.group2.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step8_join_group.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="9">
			<desc>
				"show interface wifi0.1 multicast" to check multicast group’s membership table on portal
			</desc>
			<log-file>step9_check_group_membership.log</log-file>
			<telnet target="ap1" slow="yes">
				-v "show interface wifi0.1 multicast"
			</telnet>
			<log-match>-e "Group IP address : ${pub.mtcast1.group2.ip}"</log-match>
			<log-match>-e "Group MAC address : ${pub.mtcast1.group2.mac}"</log-match>
			<log-match>-e "Received IGMP join packet(s) number : 2"</log-match>
			<log-match>-e "Received IGMP leave packet(s) number : 1"</log-match>
			<log-match>-e "Received subscribed this group client(s) number : 1"</log-match>
			<log-match>-e "Transmitted Multicast packet(s) number:"</log-match>
			<log-match>-e "Multicast packet(s) average latency :"</log-match>
			<log-match>-e "Multicast packet(s) average jitter :"</log-match>
			<log-match>-c -e "MAC Address : ${sta1.tif.mac} *IP Address : ${sta1.tif.ip}"</log-match>
		</step>

		<step no="9.1">
			<desc>
				"show interface wifi0.2 multicast" to check multicast group’s membership table on portal
			</desc>
			<log-file>step9.1_check_group_membership.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0.2 multicast"
			</telnet>
			<log-match>-e "Group IP address : ${pub.mtcast1.group1.ip}"</log-match>
			<log-match>-e "Group MAC address : ${pub.mtcast1.group1.mac}"</log-match>
			<log-match>-e "Received IGMP join packet(s) number : 1"</log-match>
			<log-match>-e "Received IGMP leave packet(s) number : 0"</log-match>
			<log-match>-e "Received subscribed this group client(s) number : 1"</log-match>
			<log-match>-e "Transmitted Multicast packet(s) number:"</log-match>
			<log-match>-e "Multicast packet(s) average latency :"</log-match>
			<log-match>-e "Multicast packet(s) average jitter :"</log-match>
			<log-match>-c -e "MAC Address : ${sta2.tif.mac} *IP Address : ${sta2.tif.ip}"</log-match>
		</step>
	</stage>

	<post-process>
		<include file="include/default_post_process.xml" />

		<stage>
			<step no="0">
				<desc>
					kill process which run in background and delete local files.
				</desc>
				<ssh target="sta1">
					-v "kill ${sta1.join.group1.pid}"
					-v "kill ${sta1.join.group2.pid}"
					-v "kill ${sta1.leave.tshark.pid}"
					-v "rm -f ${file.dir}/${sta1.leave.group1.capture.packet.result}"
				</ssh>
			</step>

			<step no="0.1">
				<desc>
					kill process which run in background.
				</desc>
				<ssh target="sta2">
					-v "kill ${sta2.join.group1.pid}"
				</ssh>
			</step>
		</stage>
	</post-process>
</testcase>