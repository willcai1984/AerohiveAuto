<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>For local multicast groups, multicast to unicast conversation not apply  </brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		on portal:
		Laptop1 connect to portal on wifi0.1 interface, through ssid A
		ssid A multicast conversion-to-unicast always
		Active multicast stream is :238.1.1.1, 238.1.1.2, 235.1.1.1
		Open debug

		Test Procedure:
		1. laptop1 reports to join group 238.1.1.1, 238.1.1.2, 235.1.1.1
		check multicast packet forwarding
		2. send local multicast group packet(eg: dst ip 224.0.0.1) from wired network, check
		local multicast packet forward and group multicast group packet forwarding
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="sta1.group1.capture.packet.result" value="sta1.group1.capture.packet.result" />
	<property name="sta1.group2.capture.packet.result" value="sta1.group2.capture.packet.result" />
	<property name="sta1.capture.local.multicast.packet.result" value="sta1.capture.local.multicast.packet.result" />
	<property name="file.dir" value="/tmp" />

	<stage>
		<step no="1">
			<desc>
				on portal:
				Laptop1 connect to portal on wifi0.1 interface, through ssid A
				ssid A multicast conversion-to-unicast always
				Active multicast stream is :238.1.1.1, 238.1.1.2, 235.1.1.1
				Open debug
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "ssid ${ssid.name} multicast conversion-to-unicast always"
				-v "exec capture remote-sniffer"
			</telnet>
		</step>

		<include prefix="2" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="2.1">
			<desc>
				pc connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<include prefix="2.2" file="subs/chk_conn_in_sta.xml" args="sta1" />

		<step no="2.3">
			<desc>Get sta1's ip</desc>
			<setvar name="sta1.tif.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig_sta1.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.4">
			<desc>
				get sta1's mac with five delimiter style
			</desc>
			<setvar name="sta1.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m
			</setvar>
		</step>

		<step no="3">
			<desc>
				config hive on ap2
			</desc>
			<telnet target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				touch a file and write group1's mac(for example :0100:5e01:010a) in it
			</desc>
			<log-file>step3.1_group1_mac.log</log-file>
			<script>
				echo "${pub.mtcast1.group1.mac}" &gt; ${log.dir}/${log.file}
			</script>
		</step>

		<step no="3.2">
			<desc>Get pub multicast group1's mac with 5 delimiter style</desc>
			<setvar name="pub.multicast.group1.mac">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step3.1_group1_mac.log -p "(\S{2})(\S{2}):(\S{2})(\S{2}):(\S{2})(\S{2})" --script "':'.join(m.groups())"
			</setvar>
		</step>

		<step no="3.3">
			<desc>
				touch a file and write group2's mac(for example :0100:5e01:010b) in it.
			</desc>
			<log-file>step3.3_group2_mac.log</log-file>
			<script>
				echo "${pub.mtcast1.group2.mac}" &gt; ${log.dir}/${log.file}
			</script>
		</step>

		<step no="3.4">
			<desc>Get pub multicast group2's mac with 5 delimiter style</desc>
			<setvar name="pub.multicast.group2.mac">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step3.3_group2_mac.log -p "(\S{2})(\S{2}):(\S{2})(\S{2}):(\S{2})(\S{2})" --script "':'.join(m.groups())"
			</setvar>
		</step>

		<step no="4">
			<desc>
				capture packet on sta1
			</desc>
			<log-file>step4_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "rm -f ${file.dir}/${sta1.group1.capture.packet.result}"
				-v "nohup tshark -i ${sta1.tif.name} dst port ${pub.mtcast1.group1.port} -V &gt; ${file.dir}/${sta1.group1.capture.packet.result} &amp;"
			</ssh>
		</step>

		<step no="4.1">
			<desc>
				get pid of "tshark" on sta1
			</desc>
			<setvar name="sta1.group1.tshark.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="5">
			<desc>
				capture packet on sta1
			</desc>
			<log-file>step5_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "rm -f ${file.dir}/${sta1.group2.capture.packet.result}"
				-v "nohup tshark -i ${sta1.tif.name} dst port ${pub.mtcast1.group2.port} -V &gt; ${file.dir}/${sta1.group2.capture.packet.result} &amp;"
			</ssh>
		</step>

		<step no="5.1">
			<desc>
				get pid of "tshark" on sta1
			</desc>
			<setvar name="sta1.group2.tshark.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step5_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="6">
			<desc>
				Laptop1 report to join group 238.1.1.1,
			</desc>
			<log-file>step6_join_group.log</log-file>
			<ssh target="sta1">
				-v "nohup ./mrecv -d ${pub.mtcast1.group1.ip} &amp;"
			</ssh>
		</step>

		<step no="6.1">
			<desc>
				get pid of "mrecv" on sta1
			</desc>
			<setvar name="sta1.join.group1.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step6_join_group.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="7">
			<desc>
				Laptop1 report to join group 238.1.1.2
			</desc>
			<log-file>step7_join_group.log</log-file>
			<ssh target="sta1">
				-v "nohup ./mrecv -d ${pub.mtcast1.group2.ip} &amp;"
			</ssh>
		</step>

		<step no="7.1">
			<desc>
				get pid of "mrecv" on sta1
			</desc>
			<setvar name="sta1.join.group2.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step7_join_group.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="8">
			<desc>set filter</desc>
			<log-file>step8_show_filter.log</log-file>
			<telnet target="ap1">
				-v "no capture interface wifi0"
				-v "filter 1 l3 src-ip ${pub.mtcast1.ip}"
				-v "show filter"
			</telnet>
		</step>

		<step no="8.1">
			<desc>save capture</desc>
			<log-file>step8.1_set_default_capture_file.log</log-file>
			<telnet target="ap1">
				-v "capture save interface wifi0 step8.1_${job.id}_wifi0.dmp"
			</telnet>
		</step>

		<step no="8.2">
			<desc>Capture pkts from AP</desc>
			<telnet target="ap1">
				-v "capture interface wifi0"
			</telnet>
		</step>

		<step no="9" delay="60">
			<desc>
				kill process which run in background.
			</desc>
			<ssh target="sta1">
				-v "kill ${sta1.group1.tshark.pid}"
				-v "kill ${sta1.group2.tshark.pid}"
			</ssh>
		</step>

		<step no="9.1">
			<desc>
				cat files on sta1
			</desc>
			<log-file>step9.1_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat ${file.dir}/${sta1.group1.capture.packet.result}"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)Dst:.*\(${sta1.tif.mac}\)" -p "Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -e "User Datagram Protocol" -f ${log.dir}/${log.file}</log-match>
			<log-match>-n -e "Dst:" -i "(${pub.multicast.group1.mac})"</log-match>
		</step>

		<step no="9.2">
			<desc>
				cat files on sta1
			</desc>
			<log-file>step9.2_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat ${file.dir}/${sta1.group2.capture.packet.result}"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)Dst:.*\(${sta1.tif.mac}\)" -p "Dst: ${pub.mtcast1.group2.ip} \(${pub.mtcast1.group2.ip}\)" -e "User Datagram Protocol" -f ${log.dir}/${log.file}</log-match>
			<log-match>-n -e "Dst:" -i "(${pub.multicast.group2.mac})"</log-match>
		</step>

		<step no="10">
			<desc>Transmit pkts from AP to master</desc>
			<telnet target="ap1" timeout="180">
				-v "save capture local step8.1_${job.id}_wifi0.dmp tftp://${mpc.tif.ip}:/step8.1_${job.id}_wifi0.dmp"
			</telnet>
		</step>

		<step no="10.1">
			<desc>Use Tshark convert pcap file to packet tree</desc>
			<log-file>step10.1_check_wifi0_result.log</log-file>
			<script>
				sleep 10;tshark -r /tftpboot/step8.1_${job.id}_wifi0.dmp -V &gt; ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)Destination address:.*\(${sta1.tif.mac}\)" -ps p "Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group1.ip} \(${pub.mtcast1.group1.ip}\)" -e "User Datagram Protocol" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)Destination address:.*\(${sta1.tif.mac}\)" -ps p "Src: ${pub.mtcast1.ip} \(${pub.mtcast1.ip}\), Dst: ${pub.mtcast1.group2.ip} \(${pub.mtcast1.group2.ip}\)" -e "User Datagram Protocol" -f ${log.dir}/${log.file}</log-match>
			<log-match>-n -e "Dst:" -i "(${pub.multicast.group1.mac})"</log-match>
			<log-match>-n -e "Dst:" -i "(${pub.multicast.group2.mac})"</log-match>
		</step>

		<step no="11">
			<desc>
				capture packet on sta1
			</desc>
			<log-file>step11_capture_packet.log</log-file>
			<ssh target="sta1">
				-v "rm -f ${file.dir}/${sta1.capture.local.multicast.packet.result}"
				-v "nohup tshark -i ${sta1.tif.name} host 224.0.0.1 -V &gt; ${file.dir}/${sta1.capture.local.multicast.packet.result} &amp;"
			</ssh>
		</step>

		<step no="11.1">
			<desc>
				get pid of "tshark" on sta1
			</desc>
			<setvar name="sta1.local.tshark.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step11_capture_packet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="12">
			<desc>set filter</desc>
			<log-file>step12_show_filter.log</log-file>
			<telnet target="ap1">
				-v "no capture interface wifi0"
				-v "filter 1 l3 protocol 1"
				-v "show filter"
			</telnet>
		</step>

		<step no="12.1">
			<desc>save capture</desc>
			<log-file>step12.1_set_default_capture_file.log</log-file>
			<telnet target="ap1">
				-v "capture save interface wifi0 step12.1_${job.id}_wifi0.dmp"
			</telnet>
		</step>

		<step no="12.2">
			<desc>Capture pkts from AP</desc>
			<telnet target="ap1">
				-v "capture interface wifi0"
			</telnet>
		</step>

		<step no="12.3">
			<desc>
				1. laptop1 reports to join group 238.1.1.1, 238.1.1.2, 235.1.1.1
				check multicast packet forwarding
			</desc>
			<log-file>step12.3_send_local_multicast.log</log-file>
			<telnet target="ap2" timeout="500">
				-v "ping 224.0.0.1 count 200"
			</telnet>
		</step>

		<step no="13" delay="30">
			<desc>
				kill process which run in background.
			</desc>
			<ssh target="sta1">
				-v "kill ${sta1.local.tshark.pid}"
			</ssh>
		</step>

		<step no="13">
			<desc>
				cat files on sta1
			</desc>
			<log-file>step13_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat ${file.dir}/${sta1.capture.local.multicast.packet.result}"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "Protocols in frame:.*icmp" -p "Dst: 224.0.0.1 \(224.0.0.1\)" -e "Echo \(ping\) request" -f ${log.dir}/${log.file}</log-match>
			<log-match>-n -e "Dst:" -i "(${sta1.tif.mac})"</log-match>
		</step>

		<step no="14">
			<desc>Transmit pkts from AP to master</desc>
			<telnet target="ap1" timeout="180">
				-v "save capture local step12.1_${job.id}_wifi0.dmp tftp://${mpc.tif.ip}:/step12.1_${job.id}_wifi0.dmp"
			</telnet>
		</step>

		<step no="14.1">
			<desc>Use Tshark convert pcap file to packet tree</desc>
			<log-file>step14.1_check_wifi0_result.log</log-file>
			<script>
				sleep 10;tshark -r /tftpboot/step12.1_${job.id}_wifi0.dmp -V &gt; ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)Destination address:.*\(01:00:5e:00:00:01\)" -ps p "Src: ${ap2.mgt0.ip} \(${ap2.mgt0.ip}\), Dst: 224.0.0.1 \(224.0.0.1\)" -e "User Datagram Protocol" -f ${log.dir}/${log.file}</log-match>
			<log-match>-n -e "Dst:" -i "(${sta1.tif.mac})"</log-match>
		</step>
	</stage>

	<post-process>
		<include file="include/default_post_process.xml" />

		<stage>
			<step no="0">
				<desc>
					kill process which run in background.
				</desc>
				<ssh target="sta1">
					-v "kill ${sta1.join.pid}"
					-v "kill ${sta1.group1.tshark.pid}"
					-v "kill ${sta1.group2.tshark.pid}"
					-v "kill ${sta1.local.tshark.pid}"
					-v "rm -f ${file.dir}/${sta1.group1.capture.packet.result}"
					-v "rm -f ${file.dir}/${sta1.group2.capture.packet.result}"
					-v "rm -f ${file.dir}/${sta1.capture.local.multicast.packet.result}"
				</ssh>
			</step>

			<step no="1">
				<desc>
					delete local files on mpc
				</desc>
				<script>
					rm -f /tftpboot/step8.1_${job.id}_wifi0.dmp /tftpboot/step12.1_${job.id}_wifi0.dmp
				</script>
			</step>
		</stage>
	</post-process>
</testcase>