<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>VLAN group configuration, range merge</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		pre-condition:

		test procedure:
		1. Configure VLAN group with VLAN 54, 56
		vlan-group &gt;string&lt; &gt;number&lt; [&gt;number&lt;]
		2. Configure VLAN group with VLAN 55
		3. Check VLAN group
		4. delete VLAN 55 from VLAN group
		5. Check VLAN group
		
		expect result:
		Result1, VLAN group contains VLAN 54, 56
		Result2, VLAN group contains VLAN 54 - 56
		Result3, range 54 and 56 merged together
		Result4, VLAN group contains VLAN 54, 56
		Result5, range 54-56 now become two separate ranges
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>linux</tbtype>
	<stage>		
		<step no="1">
    		<desc>
       			config ap1
    		</desc>
    		<log-file>ap1_config.log</log-file>
    		<console target="ap1">
       			-v "interface mgt0 vlan ${tb.vlan1}"
       			-v "interface mgt0 native-vlan ${tb.vlan1}"
       			-v "interface mgt0 dhcp client"
       			-v "hive ${hive.name}"
       			-v "interface mgt0 hive ${hive.name}"
       			-v "vlan-group 1 ${tb.vlan1}"
       			-v "vlan-group 1 ${tb.vlan3}"
    		</console>
		</step>
		
		<step no="1.1" delay="10">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step1.1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="1.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step1.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>	
	
		<step no="2">
			<desc>check the vlan-group in running-config</desc>
			<log-file>check_config1.log</log-file>
			<ssh target="ap1">
				-v "show running-config | include vlan-group"
			</ssh>
			<log-match>-i "vlan-group 1 ${tb.vlan1}"</log-match>
			<log-match>-i "vlan-group 1 ${tb.vlan3}"</log-match>
		</step>
		
		<step no="3">
			<desc>show vlan-group</desc>
			<log-file>show_vlan_group1.log</log-file>
			<ssh target="ap1">
				-v "show vlan-group"
			</ssh>
			<log-match>-re -i "${tb.vlan1} .*${tb.vlan3}"</log-match>		
		</step>
		
		<step no="4">
			<desc>add ${tb.vlan2} to vlan-group</desc>
			<log-file>add_vlan.log</log-file>
			<ssh target="ap1">
				-v "vlan-group 1 ${tb.vlan2}"
			</ssh>
		</step>
		
		<step no="5">
			<desc>check the vlan-group in running-config</desc>
			<log-file>check_config2.log</log-file>
			<ssh target="ap1">
				-v "show running-config | include vlan-group"
			</ssh>
			<log-match>-i "vlan-group 1 ${tb.vlan1} ${tb.vlan3}"</log-match>
		</step>
		
		<step no="6">
			<desc>show vlan-group</desc>
			<log-file>show_vlan_group2.log</log-file>
			<ssh target="ap1">
				-v "show vlan-group"
			</ssh>
			<log-match>-i "${tb.vlan1}-${tb.vlan3}"</log-match>		
		</step>
		
		<step no="7">
			<desc>delete ${tb.vlan2} from vlan-group</desc>
			<log-file>delete_vlan.log</log-file>
			<ssh target="ap1">
				-v "no vlan-group 1 ${tb.vlan2}"
			</ssh>
		</step>
		
		<step no="8">
			<desc>check the vlan-group in running-config</desc>
			<log-file>check_config1.log</log-file>
			<ssh target="ap1">
				-v "show running-config | include vlan-group"
			</ssh>
			<log-match>-i "vlan-group 1 ${tb.vlan1}"</log-match>
			<log-match>-i "vlan-group 1 ${tb.vlan3}"</log-match>
		</step>
		
		<step no="9">
			<desc>show vlan-group</desc>
			<log-file>show_vlan_group1.log</log-file>
			<ssh target="ap1">
				-v "show vlan-group"
			</ssh>
			<log-match>-re -i "${tb.vlan1} .*${tb.vlan3}"</log-match>		
		</step>
	</stage>
</testcase>