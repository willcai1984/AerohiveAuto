<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Configure multiple L3 interfaces, then delete them</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		pre-condition:
		CVG connects to a trunk port which permits VLAN 51, 52, 53
		VLAN Probe range 1-4094
	
		test procedure:
		1. Startup CVG, check if it can detect the vlans
		2. configure multiple l3 interfaces(mgt0.x or vlan-interface) which include vlan 52, 53 and other vlans not in vlan-range, check the bonjour vlan
		3. delete the configured l3 interfaces, check the bonjour vlan
		
		expect result:
		Result1, CVG is BDD, bonjour vlans are created in CVG
		Result2, bonjour vlans can be replaced correctly
		Result3, bonjour vlans can be created automatically
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>linux</tbtype>
	<stage>		
		<step no="1">
    		<desc>
       			config ap1
    		</desc>
    		<log-file>ap1_config.log</log-file>
    		<console target="ap1">
       			-v "interface mgt0 vlan ${tb.vlan1}"
       			-v "interface mgt0 native-vlan ${tb.vlan1}"
       			-v "interface mgt0 dhcp client"
       			-v "hive ${hive.name}"
       			-v "interface mgt0 hive ${hive.name}"
       			-v "bonjour-gateway enable"
       			-v "bonjour-gateway vlan ${tb.vlan1} ${tb.vlan3}"
    		</console>
		</step>
				
		<step no="1.1" delay="10">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step1.1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="1.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step1.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>	
					
		<step no="2" type="loop-check" loop-max-times="15" loop-interval="5">
			<desc>check bonjour-gateway status on ap1</desc>
			<log-file>show_bon_sta1.log</log-file>
			<ssh target="ap1">
				-v "show bonjour-gateway status"
			</ssh>
			<log-match>-i "Running as bonjour gateway"</log-match>
		</step>
					
		<step no="3" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>check the bonjour-gateway vlan</desc>
			<log-file>show_bonjour_vlan.log</log-file>
			<ssh target="ap1">
				-v "show bonjour-gateway vlan"
			</ssh>
			<log-match>-p 1 -i "${tb.vlan1}"</log-match>
			<log-match>-p 1 -i "${tb.vlan2}"</log-match>
			<log-match>-p 1 -i "${tb.vlan3}"</log-match>
		</step>
		
		<step no="4">
			<desc>config mgt0.x interface</desc>
			<log-file>config_mgt0.x.log</log-file>
			<ssh target="ap1">
				-v "interface mgt0.1 vlan ${tb.vlan2}"
				-v "interface mgt0.1 ip 192.168.${tb.vlan2}.${tb.vlan2}/24"
				-v "interface mgt0.2 vlan ${tb.vlan3}"
				-v "interface mgt0.2 ip 192.168.${tb.vlan3}.${tb.vlan3}/24"
				-v "interface mgt0.3 vlan ${tb.vlan4}"
				-v "interface mgt0.3 ip 192.168.${tb.vlan4}.${tb.vlan4}/24"
				-v "interface mgt0.4 vlan ${tb.vlan5}"
				-v "interface mgt0.4 ip 192.168.${tb.vlan5}.${tb.vlan5}/24"
			</ssh>
		</step>
		
		<step no="5">
			<desc>check the bonjour-gateway vlan</desc>
			<log-file>show_bon_vlan2.log</log-file>
			<ssh target="ap1">
				-v "show bonjour-gateway vlan"
			</ssh>
			<log-match>-p 1 -i "${tb.vlan1}"</log-match>			
			<log-match>-p 1 -i "${tb.vlan2}" -p 2 -i "192.168.${tb.vlan2}.${tb.vlan2}"</log-match>
			<log-match>-p 1 -i "${tb.vlan3}" -p 2 -i "192.168.${tb.vlan3}.${tb.vlan3}"</log-match>
			<log-match>-n -p 1 -i "${tb.vlan4}"</log-match>
			<log-match>-n -p 1 -i "${tb.vlan5}"</log-match>
		</step>		
		
		<step no="6">
			<desc>delete mgt0.x interface</desc>
			<log-file>delete_mgt0.x.log</log-file>
			<ssh target="ap1">
				-v "no interface mgt0.1 vlan"
				-v "no interface mgt0.2 vlan"
				-v "no interface mgt0.3 vlan"
				-v "no interface mgt0.4 vlan"
			</ssh>
		</step>
		
		<step no="7" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>check the bonjour-gateway vlan</desc>
			<log-file>show_bonjour_vlan3.log</log-file>
			<ssh target="ap1">
				-v "show bonjour-gateway vlan"
			</ssh>
			<log-match>-p 1 -i "${tb.vlan1}"</log-match>
			<log-match>-p 1 -i "${tb.vlan2}"</log-match>
			<log-match>-p 1 -i "${tb.vlan3}"</log-match>
		</step>
	</stage>
</testcase>