<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Manually configured Bonjour neighbors (remote BDD) cooperate with the automatically learned Bonjour neighbors</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		pre-condition:
		CVG1 connects to trunk port which permits VLAN 51, 52, 53,
		AP350 is in VLAN 51, AP330 is in VLAN 52
		Macbook 1 connects to AP350, VLAN 51
		Winbook 1 connects to AP330, VLAN 52
		CVG2 connects to trunk port which permits VLAN 56
		AP141 is in VLAN 54, BR200_WP is in VLAN 55
		Macbook 2 connects to AP141, VLAN 54
		AppleTV connects to BR200_WP, VLAN 55
		CVG1 and CVG2 are manually configured as Bonjour Neighbor
		AP141 and BR200_WP are automatically learned as Bonjour Neighbors
		Filter *._*._*. are enabled on all VLANs 

		test procedure:
		1.	Check services on CVG2
		2.	Manually configure AP141 as Bonjour neighbor of CVG1,check services on AP141, BR200_WP,
		3.	Manually configure BR200_WP as Bonjour neighbor of CVG1,check services on BR200_WP, CVG2
		4.	Manually configure AP141 as Bonjour neighbor of CVG2
		
		expect result:
		1.	Check services on CVG2
		2.	Manually configure AP141 as Bonjour neighbor of CVG1,check services on AP141, BR200_WP,
		3.	Manually configure BR200_WP as Bonjour neighbor of CVG1,check services on BR200_WP, CVG2
		4.	Manually configure AP141 as Bonjour neighbor of CVG2
	</description>
	<numofap>3</numofap>
	<numofsta>0</numofsta>
	<tbtype>linux</tbtype>
	<stage>
	
		<include prefix="0" file="subs/l3swcfg_port_vlan.xml" args="${tb.apple.l3sw.port}, ${tb.vlan1}, ${tb.vlans}" />
		
		<step no="1">
    		<desc>
       			config ap1
    		</desc>
    		<log-file>ap1_config.log</log-file>
    		<console target="ap1">
       			-v "interface mgt0 vlan ${tb.vlan1}"
       			-v "interface mgt0 native-vlan ${tb.vlan1}"
       			-v "interface mgt0 dhcp client"
       			-v "hive ${hive.name}"
       			-v "interface mgt0 hive ${hive.name}"
       			-v "hive ${hive.name} password aerohive"
       			-v "no interface wifi1 radio channel"
       			-v "interface wifi1 radio channel 48"
       			-v "bonjour-gateway enable"
       			-v "bonjour-gateway vlan ${tb.vlan1} ${tb.vlan3}"
    		</console>
		</step>
		
		<step no="1.1" delay="10">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step1.1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="1.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step1.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>	
		
		<step no="2">
			<desc>config ap2</desc>
			<log-file>ap2_config.log</log-file>
			<console target="ap2">
				-v "interface mgt0 vlan ${tb.vlan2}"   			
       			-v "interface mgt0 dhcp client"
       			-v "hive ${hive.name}"
       			-v "interface mgt0 hive ${hive.name}"
       			-v "hive ${hive.name} password aerohive"
       			-v "no interface wifi1 radio channel"
       			-v "interface wifi1 radio channel 48"
       			-v "bonjour-gateway enable"
       			-v "bonjour-gateway vlan ${tb.vlan2}"
			</console>
		</step>
		
		<step no="2.1" delay="10">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step2.1_show_interface_mgt0_info.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="2.2">
			<desc>Get ap2's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step2.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>	
		
		<step no="3">
			<desc>config ap3</desc>
			<log-file>ap3_config.log</log-file>
			<console target="ap3">
				-v "interface mgt0 vlan ${tb.vlan3}"   			
       			-v "interface mgt0 dhcp client"
       			-v "hive ${hive.name}1"
       			-v "interface mgt0 hive ${hive.name}1"
       			-v "bonjour-gateway enable"
       			-v "bonjour-gateway vlan ${tb.vlan3}"
			</console>
		</step>
		
		<step no="3.1" delay="10">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step3.1_show_interface_mgt0_info.log</log-file>
			<console target="ap3">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="3.2">
			<desc>Get ap3's ip</desc>
			<setvar name="ap3.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step3.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>	
	
		<step no="4">
			<desc>config ap3 as bonjour neighbor on ap1</desc>
			<log-file>step4_config_neighbor.log</log-file>
			<ssh target="ap1">
				-v "bonjour-gateway neighbor ${ap3.mgt0.ip}"
			</ssh>
		</step>
				
		<step no="5" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>check bonjour-gateway status on ap1</desc>
			<log-file>step5_show_bon_sta.log</log-file>
			<ssh target="ap1">
				-v "show bonjour-gateway status"
			</ssh>
			<log-match>-i "Running as bonjour gateway"</log-match>
			<log-match>-i "${ap2.mgt0.ip}/24 metric=1"</log-match>
			<log-match>-i "${ap3.mgt0.ip}/24 metric=N/A"</log-match>
		</step>
			
		<step no="6" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>check bonjour-gateway status on ap2</desc>
			<log-file>step6_show_bon_sta.log</log-file>
			<ssh target="ap2">
				-v "show bonjour-gateway status"
			</ssh>
			<log-match>-i "Running as bonjour gateway"</log-match>
			<log-match>-i "${ap1.mgt0.ip}/24 metric=1"</log-match>
		</step>
		
		<step no="7">
			<desc>check bonjour-gateway status on ap3</desc>
			<log-file>step7_show_bon_sta.log</log-file>
			<ssh target="ap3">
				-v "show bonjour-gateway status"
			</ssh>
			<log-match>-i "Running as bonjour gateway"</log-match>
			<log-match>-i "${ap1.mgt0.ip}/24 metric=N/A"</log-match>
		</step>			
			
		<step no="8"  type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>show local service on ap1</desc>
			<log-file>step8_local_service.log</log-file>
			<ssh target="ap1">
				-v "show bonjour-gateway service local"
			</ssh>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_airplay._tcp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_raop._tcp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_touch-able._tcp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_sleep-proxy._udp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_appletv-v2._tcp,_"</log-match>
		</step>
		
		<step no="9">
			<desc>show local service on ap2</desc>
			<log-file>step9_local_service.log</log-file>
			<console target="ap2">
				-v "show bonjour-gateway service local"
			</console>
			<log-match>-n -i "192.168.${tb.vlan1}" -i "_airplay._tcp."</log-match>
			<log-match>-n -i "192.168.${tb.vlan1}" -i "_raop._tcp."</log-match>
			<log-match>-n -i "192.168.${tb.vlan1}" -i "_touch-able._tcp."</log-match>
			<log-match>-n -i "192.168.${tb.vlan1}" -i "_sleep-proxy._udp."</log-match>
			<log-match>-n -i "192.168.${tb.vlan1}" -i "_appletv-v2._tcp,_"</log-match>
		</step>
		
		<step no="9.1">
			<desc>_debug bgd basic on ap2</desc>
			<console target="ap2">
				-v "_debug bgd basic"
			</console>
		</step>
				
		<step no="10">
			<desc>show local service on ap3</desc>
			<log-file>step10_local_service.log</log-file>
			<console target="ap3">
				-v "show bonjour-gateway service local"
			</console>
			<log-match>-n -i "192.168.${tb.vlan1}" -i "_airplay._tcp."</log-match>
			<log-match>-n -i "192.168.${tb.vlan1}" -i "_raop._tcp."</log-match>
			<log-match>-n -i "192.168.${tb.vlan1}" -i "_touch-able._tcp."</log-match>
			<log-match>-n -i "192.168.${tb.vlan1}" -i "_sleep-proxy._udp."</log-match>
			<log-match>-n -i "192.168.${tb.vlan1}" -i "_appletv-v2._tcp,_"</log-match>
		</step>
		
		<step no="10.1">
			<desc>_debug bgd basic on ap3</desc>
			<console target="ap3">
				-v "_debug bgd basic"
			</console>
		</step>
		
		<step no="11">
			<desc>config filter rule on ap1</desc>
			<log-file>config_filter.log</log-file>
			<ssh target="ap1">
				-v "vlan-group 1 ${tb.vlan4}"
				-v "bonjour-gateway filter rule 1 * to 1"
			</ssh>
		</step>
		
		<step no="12" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>check log buffer on ap2</desc>
			<log-file>step12_log_buf.log</log-file>
			<console target="ap2">
				-v "show logging buffered | include \"Add remote entry\""
			</console>
			<log-match>-i "Add remote entry Apple TV._airplay._tcp. on vlan ${tb.vlan1} into service table"</log-match>
			<log-match>-i "Add remote entry AC37A4A9C4207EE2._touch-able._tcp. on vlan ${tb.vlan1} into service table"</log-match>
			<log-match>-i "Add remote entry AC37A4A9C4207EE2._appletv-v2._tcp.,_00000000-1f4f-3682-058b-d7e44a9548e9 on vlan ${tb.vlan1} into service table"</log-match>
			<log-match>-i "Add remote entry 70-35-60-63.1 Apple TV._sleep-proxy._udp. on vlan ${tb.vlan1} into service table"</log-match>
			<log-match>-i "Add remote entry 600308CBE085@Apple TV._raop._tcp. on vlan ${tb.vlan1} into service table"</log-match>
		</step>
		
		<step no="13" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>check log buffer on ap3</desc>
			<log-file>step13_log_buf.log</log-file>
			<console target="ap3">
				-v "show logging buffered | include \"Add remote entry\""
			</console>
			<log-match>-i "Add remote entry Apple TV._airplay._tcp. on vlan ${tb.vlan1} into service table"</log-match>
			<log-match>-i "Add remote entry AC37A4A9C4207EE2._touch-able._tcp. on vlan ${tb.vlan1} into service table"</log-match>
			<log-match>-i "Add remote entry AC37A4A9C4207EE2._appletv-v2._tcp.,_00000000-1f4f-3682-058b-d7e44a9548e9 on vlan ${tb.vlan1} into service table"</log-match>
			<log-match>-i "Add remote entry 70-35-60-63.1 Apple TV._sleep-proxy._udp. on vlan ${tb.vlan1} into service table"</log-match>
			<log-match>-i "Add remote entry 600308CBE085@Apple TV._raop._tcp. on vlan ${tb.vlan1} into service table"</log-match>
		</step>
	
		<step no="12.1">
			<desc>check remote service on ap2</desc>
			<log-file>step12.1_remote_service.log</log-file>
			<console target="ap2">
				-v "show bonjour-gateway service remote"
			</console>
			<log-match>-i "Type=_appletv-v2._tcp.; subType=,_00000000-1f4f-3682-058b-d7e44a9548e9; VLAN=${tb.vlan1}; BDD=192.168.${tb.vlan1}"</log-match>
			<log-match>-i "Type=_airplay._tcp.; subType=; VLAN=${tb.vlan1}; BDD=192.168.${tb.vlan1}"</log-match>
			<log-match>-i "Type=_sleep-proxy._udp.; subType=; VLAN=${tb.vlan1}; BDD=192.168.${tb.vlan1}"</log-match>
			<log-match>-i "Type=_touch-able._tcp.; subType=; VLAN=${tb.vlan1}; BDD=192.168.${tb.vlan1}"</log-match>
			<log-match>-i "Type=_raop._tcp.; subType=; VLAN=${tb.vlan1}; BDD=192.168.${tb.vlan1}"</log-match>
		</step>
		
		<step no="13.1">
			<desc>check remote service on ap3</desc>
			<log-file>step13.1_remote_service.log</log-file>
			<console target="ap3">
				-v "show bonjour-gateway service remote"
			</console>
			<log-match>-i "Type=_appletv-v2._tcp.; subType=,_00000000-1f4f-3682-058b-d7e44a9548e9; VLAN=${tb.vlan1}; BDD=192.168.${tb.vlan1}"</log-match>
			<log-match>-i "Type=_airplay._tcp.; subType=; VLAN=${tb.vlan1}; BDD=192.168.${tb.vlan1}"</log-match>
			<log-match>-i "Type=_sleep-proxy._udp.; subType=; VLAN=${tb.vlan1}; BDD=192.168.${tb.vlan1}"</log-match>
			<log-match>-i "Type=_touch-able._tcp.; subType=; VLAN=${tb.vlan1}; BDD=192.168.${tb.vlan1}"</log-match>
			<log-match>-i "Type=_raop._tcp.; subType=; VLAN=${tb.vlan1}; BDD=192.168.${tb.vlan1}"</log-match>
		</step>
		
	</stage>
</testcase>