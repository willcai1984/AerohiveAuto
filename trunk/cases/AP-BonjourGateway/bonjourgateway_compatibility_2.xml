<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check MDNS packet is management traffic</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		pre-condition:
		AP can learn the service from AppleTV
	
		test procedure:
		1. config ‘forwarding-engine drop to-self-non-management-traffic’ on AP, wait for a moment, check the services on AP
		2. turn off ‘forwarding-engine drop to-self-non-management-traffic’ on AP, wait for a moment, check the services on AP
		
		expect result:
		1. service exist
		2. service exist	
	</description>
	<numofap>2</numofap>
	<numofsta>0</numofsta>
	<tbtype>linux</tbtype>
	<stage>
	
		<include prefix="0" file="subs/l3swcfg_port_vlan.xml" args="${tb.apple.l3sw.port}, ${tb.vlan1}, ${tb.vlans}" />
		
		<step no="1">
    		<desc>
       			config ap1
    		</desc>
    		<log-file>ap1_config.log</log-file>
    		<console target="ap1">
       			-v "interface mgt0 vlan ${tb.vlan1}"
       			-v "interface mgt0 native-vlan ${tb.vlan1}"
       			-v "interface mgt0 dhcp client"
       			-v "hive ${hive.name}"
       			-v "interface mgt0 hive ${hive.name}"
       			-v "bonjour-gateway enable"
       			-v "bonjour-gateway vlan ${tb.vlan1} ${tb.vlan3}"
    		</console>
		</step>
		
		<step no="2" type="loop-check" loop-max-times="15" loop-interval="5">
			<desc>check bonjour-gateway status on ap1</desc>
			<log-file>step2_show_bon_sta.log</log-file>
			<ssh target="ap1">
				-v "show bonjour-gateway status"
			</ssh>
			<log-match>-i "Running as bonjour gateway"</log-match>
		</step>
					
		<step no="3"  type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>show local service on ap1</desc>
			<log-file>step3_local_service.log</log-file>
			<ssh target="ap1">
				-v "show bonjour-gateway service local"
			</ssh>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_airplay._tcp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_raop._tcp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_touch-able._tcp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_sleep-proxy._udp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_appletv-v2._tcp,_"</log-match>
		</step>
		
		<step no="4">
			<desc>config forwarding-engine drop to-self-non-management-traffic</desc>
			<log-file>step4_config_forward.log</log-file>
			<ssh target="ap1">
				-v "forwarding-engine drop to-self-non-management-traffic"
			</ssh>
		</step>
		
		<step no="5"  delay="20">
			<desc>show local service on ap1</desc>
			<log-file>step5_local_service.log</log-file>
			<ssh target="ap1">
				-v "show bonjour-gateway service local"
			</ssh>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_airplay._tcp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_raop._tcp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_touch-able._tcp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_sleep-proxy._udp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_appletv-v2._tcp,_"</log-match>
		</step>	
		
		<step no="6">
			<desc>cancel forwarding-engine drop to-self-non-management-traffic</desc>
			<log-file>step6_cancel_forward.log</log-file>
			<ssh target="ap1">
				-v "no forwarding-engine drop to-self-non-management-traffic"
			</ssh>
		</step>
		
		<step no="7"  delay="20">
			<desc>show local service on ap1</desc>
			<log-file>step7_local_service.log</log-file>
			<ssh target="ap1">
				-v "show bonjour-gateway service local"
			</ssh>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_airplay._tcp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_raop._tcp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_touch-able._tcp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_sleep-proxy._udp."</log-match>
			<log-match>-p 2 -i "${tb.vlan1}" -i "192.168.${tb.vlan1}" -i "_appletv-v2._tcp,_"</log-match>
		</step>	
	</stage>
</testcase>