<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify the display statistic infromation is correct when run “show ssid counter station” command.</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		1. Created a hive ID
		2.This hive ID has been already bound with mgt0 interface
		3. There is two neighbors with same hive ID
		Test Procedure:
		1. Turn on packets sniffer
		2. Ececute CLI command on each MP:
		# clear hive &lt;hiveID&gt; counter neighbor
		# show hive &lt;hiveID&gt; counter neighbor
		3. verify the number of beacon frames
		4. verify the number of tx data frames
		5. verify the number of rx date frames
		6. verify the number of droped frames
		7. verify the number of error frames
	</description>
	<numofap>2</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	<stage>
		<step no="1">
			<desc>
				Configure portal AP
			</desc>
			<log-file>ap_configure_1.log</log-file>
			<telnet target="ap1">
				-v "ssid ${ssid.name}1"
				-v "interface wifi0 ssid ${ssid.name}1"
				-v "interface wifi0 radio channel 6"
				-v "hive ${hive.name}1"
				-v "interface mgt0 hive ${hive.name}1"
				-v "save config"
			</telnet>
		</step>
		<step no="2">
			<desc>
				1) Configure MP with same hive
			</desc>
			<log-file>ap_configure_2.log</log-file>
			<telnet target="ap2">
				-v "ssid ${ssid.name}2"
				-v "interface wifi0 ssid ${ssid.name}2"
				-v "interface wifi0 radio channel 6"
				-v "hive ${hive.name}1"
				-v "interface mgt0 hive ${hive.name}1"
				-v "save config"
			</telnet>
		</step>
		
	<if>"${ap1.wifi1.existed}" == "true"</if>
		<step no="1.1">
			<desc>
				Configure portal AP
			</desc>
			<log-file>ap_configure_1.1.log</log-file>
			<telnet target="ap1">
				-v "interface wifi1 radio channel 161"
				-v "save config"
			</telnet>
		</step>
		<step no="2.1">
			<desc>
				1) Configure MP with same hive
			</desc>
			<log-file>ap_configure_2.1.log</log-file>
			<telnet target="ap2">
				-v "interface wifi1 radio channel 161"
				-v "save config"
			</telnet>
		</step>
		<step no="3">
			<desc>show wifi1.1's mac of portal</desc>
			<log-file>wifi11_mac_portal.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.1"
			</telnet>
		</step>

		<step no="4">
			<desc>get wifi1.1 mac of portal</desc>
			<setvar name="ap1_wifi11_mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/wifi11_mac_portal.log -i wifi1.1 -o aero -m -width
			</setvar>
		</step>
		<step no="5">
			<desc>ap2 hive down and up</desc>
			<log-file>ap2_hive_updown.log</log-file>
			<telnet target="ap2">
				-v "interface wifi1 hive ${hive.name}1 shutdown"
				-v "no interface wifi1 hive ${hive.name}1 shutdown"
			</telnet>
		</step>
		<step no="6" delay="90">
			<desc>
				3) show ap2 acsp _neighbor
			</desc>
			<log-file>show_acsp_neighbor.log</log-file>
			<console target="ap2">
				-v "show acsp _nbr | include ${ap1_wifi11_mac}"
			</console>
		</step>
		<step no="7">
			<desc>
				3) show hive neighbor
			</desc>
			<log-file>show_ap2_hive_neighbor.log</log-file>
			<console target="ap2">
				-v "show hive ${hive.name}1 neighbor"
			</console>
			<log-match>-e "${ap1_wifi11_mac}"</log-match>
		</step>

		<step no="8">
			<desc>
				clear hive ${hive.name} counter neighbor
			</desc>
			<console target="ap2">
				-v "clear hive ${hive.name}1 counter neighbor"
			</console>
		</step>

		<step no="9" delay="60">
			<desc>
				Ececute CLI command on each MP:
				show hive counter neighbor
			</desc>
			<log-file>step9_MP_show_hive_counter_neighbor.log</log-file>
			<console target="ap2">
				-v "show hive ${hive.name}1 counter neighbor"
			</console>
			<no-error-check />
		</step>

		<step no="9.1">
			<desc>
				get ap1 content "rx data frames"
			</desc>
			<setvar name="content_3">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx data frames" -f ${log.dir}/step9_MP_show_hive_counter_neighbor.log -t str
			</setvar>
		</step>

		<step no="9.2">
			<desc>
				get ap1 content "tx data frames"
			</desc>
			<setvar name="content_4">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx data frames" -f ${log.dir}/step9_MP_show_hive_counter_neighbor.log -t str
			</setvar>
		</step>

		<step no="10" delay="120">
			<desc>
				show hive counter neighbor
			</desc>
			<log-file>step10_MP_show_hive_counter_neighbor.log</log-file>
			<console target="ap2">
				-v "show hive ${hive.name}1 counter neighbor"
			</console>
			<no-error-check />
		</step>

		<step no="10.1">
			<desc>
				get ap1 content "rx data frames"
			</desc>
			<setvar name="content_1">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx data frames" -f ${log.dir}/step10_MP_show_hive_counter_neighbor.log -t str
			</setvar>
		</step>

		<step no="10.2">
			<desc>
				get ap1 content "tx data frames"
			</desc>
			<setvar name="content_2">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx data frames" -f ${log.dir}/step10_MP_show_hive_counter_neighbor.log -t str
			</setvar>
		</step>

		<step no="10.3">
			<desc>
				compare ap1 content "rx data frames"
			</desc>
			<script>
				if [ ${content_1} -gt ${content_3} ]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="10.4">
			<desc>
				compare ap1 content "tx data frames"
			</desc>
			<script>
				if [ ${content_2} -gt ${content_4} ]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>
	</stage>
</testcase>
