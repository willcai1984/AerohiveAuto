<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify "show interface wifi0 counter" works normally when interface wifi0 is up</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Interface wifi0 is up

		Test Procedure:
		Ececute CLI command on each MP:
		show interface wifi0 counter
		show interface wifi0 _counter
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<stage>
		<step no="1">
			<desc>
				STA connects to MP
				"interface wifi0 mode access"
				"ssid ${ssid.name}"
				"interface wifi0 ssid ${ssid.name}"
				"interface wifi0 radio channel 1"
			</desc>
			<log-file>step1_config_client_connects_AP.log</log-file>
			<console target="ap1">
				-v "interface wifi0 mode access"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 1"
			</console>
		</step>

		<property name="conn1.ssid" value="${ssid.name}"/>
        <property name="rx_data_frames_0" value="0"/>
		<property name="rx_management_frames_0" value="0"/>
		<property name="tx_data_frames_0" value="0"/>
		<property name="tx_beacon_frames_0" value="0"/>
		<property name="tx_management_frames_0" value="0"/>
		
		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}_new.xml" obj-args="conn1, sta1, ap1"/>
		<include prefix="2.1" file="subs/sta_ping.xml" args="sta1, ${ap1.mgt0.ip}, 55"/>
		
		<step no="3">
			<desc>
				show station
			</desc>
			<log-file>step3.log</log-file>
			<console target="ap1">
				-v "show station"
			</console>
			<no-error-check />
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>	
	
		
		<step no="3.2">
            <desc>
                AP ping station
            </desc>
            <log-file>step3.2.log</log-file>
            <console target="ap1" timeout="360">
                  -v "ping ${sta1.tif.ip} count 150"
            </console>
            <no-error-check />
        </step>  
		
		<step no="3.3">
            <desc>
                STA ping AP
            </desc>
            <log-file>step3.3.log</log-file>
            <ssh target="sta1" timeout="3600">
                -v "nohup ping ${ap1.mgt0.ip} -c 1500 &amp;"
            </ssh>
            <no-error-check />
        </step>  
		
        <step no="4" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				show interface wifi0 counter
			</desc>
			<log-file>step4.log</log-file>
			<console target="ap1">
				-v "show interface wifi0 counter"
			</console>
			<log-match>-c -e "rx data frames"</log-match>
			<log-match>-c -e "rx unicast data frames"</log-match>
			<log-match>-c -e "rx multicast data frames"</log-match>
			<log-match>-c -e "rx broadcast data frames"</log-match>
			<log-match>-c -e "rx management frames"</log-match>
			<log-match>-c -e "rx BAR (Block Ack Request) frames"</log-match>
			<log-match>-c -e "rx Retries"</log-match>
			<log-match>-c -e "rx CRC errors"</log-match>
			<log-match>-c -e "rx frame errors other than CRC"</log-match>
			<log-match>-c -e "hw FIFO overrun"</log-match>
			<log-match>-c -e "decryption failed"</log-match>
			<log-match>-c -e "MIC failure"</log-match>
			<log-match>-c -e "rx frames dropped"</log-match>
			<log-match>-c -e "frame too short"</log-match>
			<log-match>-c -e "frame too large"</log-match>
			<log-match>-c -e "tx data frames"</log-match>
			<log-match>-c -e "tx unicast data frames"</log-match>
			<log-match>-c -e "tx multicast data frames"</log-match>
			<log-match>-c -e "tx broadcast data frames"</log-match>
			<log-match>-c -e "tx WMM best effort data frames"</log-match>
			<log-match>-c -e "tx WMM background data frames"</log-match>
			<log-match>-c -e "tx WMM video data frames"</log-match>
			<log-match>-c -e "tx WMM voice data frames"</log-match>
			<log-match>-c -e "tx management frames other than beacon"</log-match>
			<log-match>-c -e "tx beacon frames"</log-match>
			<log-match>-c -e "tx BAR (Block Ack Request) frames"</log-match>
			<log-match>-c -e "tx aggregated completions"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "tx RTS failures"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "tx frames with no ack marked"</log-match>
			<log-match>-c -e "tx frames with rts enabled"</log-match>
			<log-match>-c -e "tx frames with cts enabled"</log-match>
			<log-match>-c -e "tx frames with short preamble"</log-match>
			<log-match>-c -e "tx frames with an alternate rate"</log-match>
			<log-match>-c -e "tx frames with protection"</log-match>
			<log-match>-c -e "tx frames dropped"</log-match>
			<log-match>-c -e "no tx buffer (data)"</log-match>
			<log-match>-c -e "no tx buffer (mgmt)"</log-match>
			<log-match>-c -e "tx frame errors"</log-match>
			<log-match>-c -e "too many hw retries"</log-match>
			<log-match>-c -e "hw FIFO underrun"</log-match>
			<log-match>-c -e "transmit filtered by hw"</log-match>
			<log-match>-c -e "exceeded txop"</log-match>
			<log-match>-c -e "exceeded tx timer"</log-match>
			<log-match>-c -e "interference raise alert"</log-match>
			<log-match>-c -e "interference clear alert"</log-match>
			<log-match>-c -e "band steering suppress"</log-match>
			<log-match>-c -e "load balance suppress"</log-match>
			<log-match>-c -e "weak snr suppress"</log-match>
			<log-match>-c -e "safety net bypassed suppress"</log-match>
			<no-error-check />
		</step>
		
		<step no="4.0">
			<desc>
				show interface wifi0 _counter
			</desc>
			<log-file>step4.0.log</log-file>
			<console target="ap1">
				-v "show interface wifi0 _counter"
			</console>
			<log-match>-e "rx data frames"</log-match>
			<log-match>-e "tx data frames"</log-match>
			<log-match>-e "rx management frames"</log-match>
			<log-match>-e "tx beacon frames"</log-match>
			<log-match>-e "tx management frames"</log-match>
			<no-error-check />
		</step>

		<step no="4.1">
			<desc>
				get wifi0 content "rx data frames"
			</desc>
			<setvar name="rx_data_frames_1">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx data frames" -f ${log.dir}/step4.log -t str
			</setvar>
		</step>
		
		<step no="4.2">
			<desc>
				get wifi0 content "rx management frames"
			</desc>
			<setvar name="rx_management_frames_1">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx management frames" -f ${log.dir}/step4.log -t str
			</setvar>
		</step>
		
		<step no="4.3">
			<desc>
				get wifi0 content "tx data frames"
			</desc>
			<setvar name="tx_data_frames_1">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx data frames" -f ${log.dir}/step4.log -t str
			</setvar>
		</step>
		
		<step no="4.4">
			<desc>
				get wifi0 content "tx beacon frames"
			</desc>
			<setvar name="tx_beacon_frames_1">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx beacon frames" -f ${log.dir}/step4.log -t str
			</setvar>
		</step>
		
		<step no="4.5">
			<desc>
				get wifi0 content "tx management frames"
			</desc>
			<setvar name="tx_management_frames_1">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx management frames" -f ${log.dir}/step4.log -t str
			</setvar>
		</step>

		<step no="5">
			<desc>
				compare content "tx beacon frames"
			</desc>
			 <script>
             echo ${tx_beacon_frames_0} ${tx_beacon_frames_1} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>
		
		<step no="5.1">
			<desc>
				compare content "tx data frames"
			</desc>
			 <script>
             echo ${tx_data_frames_0} ${tx_data_frames_1} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>
		
		<step no="5.2">
			<desc>
				compare content "rx management frames"
			</desc>
			 <script>
             echo ${rx_management_frames_0} ${rx_management_frames_1} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>
		
		<step no="5.3">
			<desc>
				compare content "rx data frames"
			</desc>
			 <script>
             echo ${rx_data_frames_0} ${rx_data_frames_1} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>	
		
		<step no="5.4">
			<desc>
				compare content "tx management frames"
			</desc>
			 <script>
             echo ${tx_management_frames_0} ${tx_management_frames_1} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>	
		
    </stage>
	<stage>
        <step no="100">
            <desc>
                shutdown wlan interface on sta1
            </desc>
            <log-file>100.log</log-file>
            <ssh target="sta1" prompt=".*#">
                -v "ifconfig ${sta1.tif.name} down"
            </ssh>
        </step>

    </stage>
	
	<failed-process>
    <stage>
        <step no="110">
            <desc>
                shutdown wlan interface on sta1
            </desc>
            <log-file>110.log</log-file>
            <ssh target="sta1" prompt=".*#">
                -v "ifconfig ${sta1.tif.name} down"
            </ssh>
        </step>
    </stage>
    </failed-process>
</testcase>		