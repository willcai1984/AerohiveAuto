<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify the display statistic infromation is correct when run “show ssid counter station” command.</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		1.wifi0 is up
		2.There is a ssid binding with wifi0.1 interface
		3. There is two stations associated with this ssid
		Test Procedure:
		1. Turn on packets sniffer
		2. Ececute CLI command on each MP:
		# clear ssid &lt;ssid&gt; counter station
		# show ssid &lt;ssid&gt; counter station
		3. verify the number of beacon frames
		4. verify the number of tx data frames
		5. verify the number of rx date frames
		6. verify the number of droped frames
		7. verify the number of error frames
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<stage>
		<step no="1">
			<desc>
				"interface wifi0 mode access"
				"ssid ${ssid.name}"
				"interface wifi0 ssid ${ssid.name}"
				"interface wifi0 radio channel 1"
			</desc>
			<log-file>step1_config_client_connects_AP.log</log-file>
			<console target="ap1">
				-v "interface wifi0 mode access"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 1"
			</console>
		</step>

		<property name="conn1.ssid" value="${ssid.name}"/>
		<property name="conn2.ssid" value="${ssid.name}"/>
								
		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}_new.xml" obj-args="conn1, sta1, ap1"/>
		<include prefix="2.1" file="subs/sta_wifi_connect_${tb.os}_new.xml" obj-args="conn2, sta2, ap1"/>
	
		<step no="3">
			<desc>show station</desc>
			<log-file>step3.log</log-file>
			<console target="ap1">
				-v "show sta"
			</console>
			<no-error-check />
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
			<log-match>-c -i "${sta2.tif.mac}" -i "${sta2.tif.ip}"</log-match>	
		</step>	
		
		<step no="4">
			<desc>
				clear ssid counter station
			</desc>
			<telnet target="ap1">
				-v "clear ssid ${ssid.name} counter station"
			</telnet>
		</step>
		
		<step no="5" delay="120">
			<desc>
				Ececute CLI command on MP:
				show ssid ${ssid.name} counter station
			</desc>
			<log-file>step5.log</log-file>
			<console target="ap1">
				-v "show ssid ${ssid.name} counter station ${sta1.tif.mac}"
			</console>
			<no-error-check />
		</step>

		<step no="5.1">
			<desc>
				get station1 content "tx data frames"
			</desc>
			<setvar name="sta1_content_1">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx data frames" -f ${log.dir}/step5.log -t str
			</setvar>
		</step>
		
		<step no="6">
			<desc>
				Ececute CLI command on MP:
				show ssid ${ssid.name} counter station
			</desc>
			<log-file>step6.log</log-file>
			<console target="ap1">
				-v "show ssid ${ssid.name} counter station ${sta2.tif.mac}"
			</console>
			<no-error-check />
		</step>
		
		<step no="6.1">
			<desc>
				get station2 content "rx data frames"
			</desc>
			<setvar name="sta2_content_2">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx data frames" -f ${log.dir}/step6.log -t str
			</setvar>
		</step>
		
		<step no="7">
			<desc>
				sta1 ping sta2
			</desc>
			<log-file>step6.log</log-file>
			<ssh target="sta1" timeout="200">
				-v "ping ${sta2.tif.ip} -c 100"
			</ssh>
			<log-match>-e "from ${sta2.tif.ip}"</log-match>
			<log-match>-n -e "100% packet loss"</log-match>
		</step>
		
		<step no="8">
			<desc>
				Ececute CLI command on MP:
				show ssid ${ssid.name} counter station
			</desc>
			<log-file>step8.log</log-file>
			<console target="ap1">
				-v "show ssid ${ssid.name} counter station ${sta1.tif.mac}"
			</console>
			<no-error-check />
		</step>

		<step no="8.1">
			<desc>
				get station1 content "tx data frames"
			</desc>
			<setvar name="sta1_content_1_1">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx data frames" -f ${log.dir}/step8.log -t str
			</setvar>
		</step>
		
		<step no="9">
			<desc>
				Ececute CLI command on MP:
				show ssid ${ssid.name} counter station
			</desc>
			<log-file>step9.log</log-file>
			<console target="ap1">
				-v "show ssid ${ssid.name} counter station ${sta2.tif.mac}"
			</console>
			<no-error-check />
		</step>
		
		<step no="9.1">
			<desc>
				get station2 content "rx data frames"
			</desc>
			<setvar name="sta2_content_2_1">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx data frames" -f ${log.dir}/step9.log -t str
			</setvar>
		</step>
		
		<step no="10">
			<desc>
				compare content "rx data frames"
			</desc>
			<script>
				if [ ${sta2_content_2_1} -gt ${sta2_content_2} ]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>
		
		<step no="11">
			<desc>
				compare content "tx data frames"
			</desc>
			<script>
				if [ ${sta1_content_1_1} -gt ${sta1_content_1} ]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>
	</stage>
	
		<stage>
        <step no="100">
            <desc>
                shutdown wlan interface on sta1
            </desc>
            <log-file>100.log</log-file>
            <ssh target="sta1" prompt=".*#">
                -v "ifconfig ${sta1.tif.name} down"
            </ssh>
        </step>
		<step no="101">
            <desc>
                shutdown wlan interface on sta2
            </desc>
            <log-file>101.log</log-file>
            <ssh target="sta2" prompt=".*#">
                -v "ifconfig ${sta2.tif.name} down"
            </ssh>
        </step>	
    </stage>
	
	<failed-process>
    <stage>
        <step no="110">
            <desc>
                shutdown wlan interface on sta1
            </desc>
            <log-file>110.log</log-file>
            <ssh target="sta1" prompt=".*#">
                -v "ifconfig ${sta1.tif.name} down"
            </ssh>
        </step>
		<step no="111">
            <desc>
                shutdown wlan interface on sta2
            </desc>
            <log-file>111.log</log-file>
            <ssh target="sta2" prompt=".*#">
                -v "ifconfig ${sta2.tif.name} down"
            </ssh>
        </step>
    </stage>
    </failed-process>
	
	
	
</testcase>
