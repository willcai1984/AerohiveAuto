<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief></brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description></description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>
	<stage>
		<step no="1">
			<desc></desc>
			<log-file>1.log</log-file>
			<telnet target="ap1">
				-v "interface wifi1 mode access"
				-v "ssid ${ssid.name}"
				-v "interface wifi1 ssid ${ssid.name}"
				-v "save config"
			</telnet>
		</step>
		
	    <property name="conn1.ssid" value="${ssid.name}"/>
		<property name="conn2.ssid" value="${ssid.name}"/>
		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}_new.xml" obj-args="conn1, sta1, ap1"/>
		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}_new.xml" obj-args="conn2, sta2, ap1"/>
		
		<step no="4">
			<desc>show station</desc>
			<log-file>4.log</log-file>
			<console target="ap1">
				-v "show sta"
			</console>
			<no-error-check />
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
			<log-match>-c -i "${sta2.tif.mac}" -i "${sta2.tif.ip}"</log-match>	
		</step>	
		
		<step no="5">
			<desc>
				 Execute ping from client1 to client2 more than 2 minutes then stoped
			</desc>
			<log-file>5.log</log-file>
			<ssh target="sta1" timeout="200">
				 -v "ping ${sta2.tif.ip} -c 1000 -i 0.01 -s 1024"
			</ssh>
			<log-match>-e "from ${sta2.tif.ip}"</log-match>
			<log-match>-n -e "100% packet loss"</log-match>
		</step>

		<step no="6">
			<desc>
				 Execute ping from client2 to client1 for 2 minutes then stoped
			</desc>
			<log-file>6.log</log-file>
			<ssh target="sta2" timeout="200">
				 -v "ping ${sta1.tif.ip} -c 1000 -i 0.01 -s 1024"
			</ssh>
			<log-match>-e "from ${sta1.tif.ip}"</log-match>
			<log-match>-n -e "100% packet loss"</log-match>
		</step>
		
		<step no="7">
			<desc>
			</desc>
			<log-file>7.log</log-file>
			<console target="ap1">
				-v "show interface wifi1.1 counter"
			</console>
			<log-match>-c -e "tx frames dropped"</log-match>
			<log-match>-c -e "no tx buffer"</log-match>
			<log-match>-c -e "unknown destination"</log-match>
			<log-match>-c -e "bad cipher/key type"</log-match>
			<log-match>-c -e "no defkey"</log-match>
			<log-match>-c -e "no space for crypto hdrs"</log-match>
			<log-match>-c -e "power save queue full"</log-match>
			<log-match>-c -e "other reasons"</log-match>
			<log-match>-c -e "unicast vlan mismatch"</log-match>
			<log-match>-c -e "multicast/broadcast vlan mismatch"</log-match>	
			<no-error-check />
		</step>
		
		<step no="8">
			<desc>
				get value
			</desc>
			<setvar name="A">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx frames dropped" -f ${log.dir}/7.log -t str
			</setvar>
		</step>

		<step no="8.1">
			<desc>
				get value
			</desc>
			<setvar name="B">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+no tx buffer" -f ${log.dir}/7.log -t str
			</setvar>
		</step>
		
		<step no="8.2">
			<desc>
				get value
			</desc>
			<setvar name="C">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+unknown destination" -f ${log.dir}/7.log -t str
			</setvar>
		</step>
		
		<step no="8.3">
			<desc>
				get value
			</desc>
			<setvar name="D">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+bad cipher/key type" -f ${log.dir}/7.log -t str
			</setvar>
		</step>
		
		<step no="8.4">
			<desc>
				get value
			</desc>
			<setvar name="E">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+no defkey" -f ${log.dir}/7.log -t str
			</setvar>
		</step>	

		<step no="8.5">
			<desc>
				get value
			</desc>
			<setvar name="F">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+no space for crypto hdrs" -f ${log.dir}/7.log -t str
			</setvar>
		</step>	

		<step no="8.6">
			<desc>
				get value
			</desc>
			<setvar name="G">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+power save queue full" -f ${log.dir}/7.log -t str
			</setvar>
		</step>	

		<step no="8.7">
			<desc>
				get value
			</desc>
			<setvar name="H">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+other reasons" -f ${log.dir}/7.log -t str
			</setvar>
		</step>	

		<step no="8.8">
			<desc>
				get value
			</desc>
			<setvar name="I">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+unicast vlan mismatch" -f ${log.dir}/7.log -t str
			</setvar>
		</step>	

		<step no="8.9">
			<desc>
				get value
			</desc>
			<setvar name="J">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+multicast/broadcast vlan mismatch" -f ${log.dir}/7.log -t str
			</setvar>
		</step>	
		
		<step no="9">
			<desc>
				compare 
			</desc>
			<script>
             echo ${A} ${B} ${C} ${D} ${E} ${F} ${G} ${H} ${I} ${J}| awk '{
             if ($1==$2+$3+$4+$5+$6+$7+$8+$9+$10)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>	
	</stage>
		
	<stage>
        <step no="100">
            <desc>
                shutdown wlan interface on sta1
            </desc>
            <log-file>100.log</log-file>
            <ssh target="sta1" prompt=".*#">
                -v "ifconfig ${sta1.tif.name} down"
            </ssh>
        </step>
		<step no="101">
            <desc>
                shutdown wlan interface on sta2
            </desc>
            <log-file>101.log</log-file>
            <ssh target="sta2" prompt=".*#">
                -v "ifconfig ${sta2.tif.name} down"
            </ssh>
        </step>	
    </stage>
	
	<failed-process>
    <stage>
        <step no="110">
            <desc>
                shutdown wlan interface on sta1
            </desc>
            <log-file>110.log</log-file>
            <ssh target="sta1" prompt=".*#">
                -v "ifconfig ${sta1.tif.name} down"
            </ssh>
        </step>
		<step no="111">
            <desc>
                shutdown wlan interface on sta2
            </desc>
            <log-file>111.log</log-file>
            <ssh target="sta2" prompt=".*#">
                -v "ifconfig ${sta2.tif.name} down"
            </ssh>
        </step>
    </stage>
    </failed-process>
	
</testcase>			