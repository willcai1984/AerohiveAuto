<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify “clear hive &lt;hvieID&gt; counter neighbor &lt;neighbor mac&gt;” command works normally when clears specified neighbor with same hiveID.</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		1.Created hiveID already existing
		2. Created hiveID has been assigned to mgt0 interface of
		each MP.
		3. All MPs can discover each other
		Test Procedure:
		Ececute CLI command on each MP:
		# clear hvie hiveID counter neighbor neighbor mac
		# show hive hiveID counter neighbor neighbor mac
		# show hive hiveID counter neighbor another neighbor mac
	</description>
	<numofap>2</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	<stage>
		<step no="1">
			<desc>
				Configure portal AP
			</desc>
			<log-file>ap_configure_1.log</log-file>
			<telnet target="ap1">
				-v "ssid ${ssid.name}1"
				-v "interface wifi0 ssid ${ssid.name}1"
				-v "interface wifi0 radio channel 6"
				-v "interface wifi1 radio channel 161"
				-v "hive ${hive.name}1"
				-v "interface mgt0 hive ${hive.name}1"
				-v "save config"
			</telnet>

		</step>
		<step no="2">
			<desc>
				1) Configure MP with same hive
			</desc>
			<log-file>ap_configure_2.log</log-file>
			<telnet target="ap2">
				-v "ssid ${ssid.name}2"
				-v "interface wifi0 ssid ${ssid.name}2"
				-v "interface wifi0 radio channel 6"
				-v "interface wifi1 radio channel 161"
				-v "hive ${hive.name}1"
				-v "interface mgt0 hive ${hive.name}1"
				-v "save config"
			</telnet>

		</step>
		<step no="3">
			<desc>show wifi1.1's mac of portal</desc>
			<log-file>wifi11_mac_portal.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.1"
			</telnet>
		</step>

		<step no="4">
			<desc>get wifi1.1 mac of portal</desc>
			<setvar name="ap1_wifi11_mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/wifi11_mac_portal.log -i wifi1.1 -o aero -m -width
			</setvar>
		</step>
		<step no="5">
			<desc>ap2 hive down and up</desc>
			<log-file>ap2_hive_updown.log</log-file>
			<console target="ap2">
				-v "interface wifi1 hive ${hive.name}1 shutdown"
				-v "no interface wifi1 hive ${hive.name}1 shutdown"
			</console>
		</step>
		<step no="6" delay="90">
			<desc>
				3) show ap2 acsp _neighbor
			</desc>
			<log-file>show_acsp_neighbor.log</log-file>
			<console target="ap2">
				-v "show acsp _nbr | include ${ap1_wifi11_mac}"
			</console>
		</step>
		<step no="7">
			<desc>
				3) show hive neighbor
			</desc>
			<log-file>show_ap2_hive_neighbor.log</log-file>
			<console target="ap2">
				-v "show hive ${hive.name}1 neighbor"
			</console>
			<log-match>-e "${ap1_wifi11_mac}"</log-match>
		</step>
		
		<step no="8">
			<desc>
				clear hive ${hive.name} counter neighbor
			</desc>
			<console target="ap2">
				-v "clear hive ${hive.name}1 counter neighbor ${ap1_wifi11_mac}"
			</console>
		</step>
		

		<step no="9" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				Ececute CLI command on each MP:
				show hive counter neighbor
			</desc>
			<log-file>step9_MP_show_hive_counter_neighbor.log</log-file>
			<console target="ap2">
				-v "show hive ${hive.name}1 counter neighbor ${ap1_wifi11_mac}"
			</console>
			<log-match>-c -e "neighbor ${ap1_wifi11_mac}:"</log-match>
			<log-match>-c -e "rx data bytes"</log-match>
			<log-match>-c -e "rx data frames"</log-match>
			<log-match>-c -e "rx unicast data frames"</log-match>
			<log-match>-c -e "rx multicast data frames"</log-match>
			<log-match>-c -e "rx broadcast data frames"</log-match>
			<log-match>-c -e "rx management frames"</log-match>
			<log-match>-c -e "rx control frames"</log-match>
			<log-match>-c -e "rx beacon frames"</log-match>
			<log-match>-c -e "rx probe response frames"</log-match>
			<log-match>-c -e "rx dropped because of duplicate"</log-match>
			<log-match>-c -e "rx dropped because frame with wep but privicy off"</log-match>
			<log-match>-c -e "rx dropped because frame without wep but privacy on"</log-match>
			<log-match>-c -e "rx demic failed"</log-match>
			<log-match>-c -e "rx decapsulation failed"</log-match>
			<log-match>-c -e "rx defragmentation failed"</log-match>
			<log-match>-c -e "rx disassociation"</log-match>
			<log-match>-c -e "rx deauthentication"</log-match>
			<log-match>-c -e "\d* rx decrypt failed on crc"</log-match>
			<log-match>-c -e "rx on unauthorized port"</log-match>
			<log-match>-c -e "rx unecrypted with privacy"</log-match>
			<log-match>-c -e "\d*.\d*s rx airtime"</log-match>
			<log-match>-c -e "rx \[re\]associations while associated"</log-match>
			<log-match>-c -e "tx data bytes"</log-match>
			<log-match>-c -e "tx data frames"</log-match>
			<log-match>-c -e "tx unicast data frames"</log-match>
			<log-match>-c -e "\d* tx WMM best effort data frames"</log-match>
			<log-match>-c -e "tx WMM background data frames"</log-match>
			<log-match>-c -e "tx WMM video data frames"</log-match>
			<log-match>-c -e "\d* tx WMM voice data frames"</log-match>
			<log-match>-c -e "tx management frames"</log-match>
			<log-match>-c -e "rx probe request frames"</log-match>
			<log-match>-c -e "tx on uapsd queue"</log-match>
			<log-match>-c -e "tx dropped because no vlan tag"</log-match>
			<log-match>-c -e "tx dropped because bad vlan tag"</log-match>
			<log-match>-c -e "tx dropped because repeat tx failures"</log-match>
			<log-match>-c -e "tx discard on uapsd queue because excessive retry"</log-match>
			<log-match>-c -e "tx \[re\]associations"</log-match>
			<log-match>-c -e "tx \[re\]association failures"</log-match>
			<log-match>-c -e "tx \[re\]authentications"</log-match>
			<log-match>-c -e "tx \[re\]authentication failures"</log-match>
			<log-match>-c -e "tx deauthentications"</log-match>
			<log-match>-c -e "tx disassociations"</log-match>
			<log-match>-c -e "tx dropped because power save queue full"</log-match>
			<log-match>-c -e "\d*.\d*s tx airtime"</log-match>
			<log-match>-c -e "uapsd triggers"</log-match>
			<log-match>-c -e "SLA disabled status good_and_meet"</log-match>
			<log-match>-c -e "Kbps SLA BW"</log-match>
			<log-match>-c -e "Kbps BW usage"</log-match>
			<log-match>-c -e "connectivity score"</log-match>
			<log-match>-c -e "SLA violation traps sent"</log-match>
			<log-match>-c -e "SLA clear traps sent"</log-match>
			<log-match>-c -e "tx frames buffered"</log-match>
			<log-match>-c -e "PS q depth"</log-match>
			<log-match>-c -e "UAPSD q depth"</log-match>
			<log-match>-c -e "TX Latency Stats:"</log-match>
			<log-match>-c -e "AC: BE:"</log-match>
			<log-match>-c -e "AC: BK:"</log-match>
			<log-match>-c -e "AC: Vi:"</log-match>
			<log-match>-c -e "AC: Vo:"</log-match>
			<log-match>-c -e "Extra TX/RX Drops:"</log-match>
			<log-match>-c -e "\d* tx max retried"</log-match>
			<log-match>-c -e "tx fifo err"</log-match>
			<log-match>-c -e "tx filtered"</log-match>
			<log-match>-c -e "tx exceed txop"</log-match>
			<log-match>-c -e "tx exceed timer"</log-match>
			<log-match>-c -e "rx ver mismatch"</log-match>
			<log-match>-c -e "rx old seq"</log-match>
			<log-match>-c -e "rx subframe dup"</log-match>
			<log-match>-c -e "rx too short"</log-match>
			<log-match>-c -e "rx wrong bssid"</log-match>
			<log-match>-c -e "rx wrong direction"</log-match>
			<log-match>-c -e "rx not assoc"</log-match>
			<no-error-check />
		</step>

		<step no="9.1">
			<desc>
				get ap1 content "rx data frames"
			</desc>
			<setvar name="content_3">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx data frames" -f ${log.dir}/step9_MP_show_hive_counter_neighbor.log -t str
			</setvar>
		</step>

		<step no="9.2">
			<desc>
				get ap1 content "tx data frames"
			</desc>
			<setvar name="content_4">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx data frames" -f ${log.dir}/step9_MP_show_hive_counter_neighbor.log -t str
			</setvar>
		</step>

		<step no="10" delay="120" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				show hive counter neighbor
			</desc>
			<log-file>step10_MP_show_hive_counter_neighbor.log</log-file>
			<console target="ap2">
				-v "show hive ${hive.name}1 counter neighbor"
			</console>
			<log-match>-c -e "neighbor ${ap1_wifi11_mac}:"</log-match>
			<log-match>-c -e "rx data bytes"</log-match>
			<log-match>-c -e "rx data frames"</log-match>
			<log-match>-c -e "rx unicast data frames"</log-match>
			<log-match>-c -e "rx multicast data frames"</log-match>
			<log-match>-c -e "rx broadcast data frames"</log-match>
			<log-match>-c -e "rx management frames"</log-match>
			<log-match>-c -e "rx control frames"</log-match>
			<log-match>-c -e "rx beacon frames"</log-match>
			<log-match>-c -e "rx probe response frames"</log-match>
			<log-match>-c -e "rx dropped because of duplicate"</log-match>
			<log-match>-c -e "rx dropped because frame with wep but privicy off"</log-match>
			<log-match>-c -e "rx dropped because frame without wep but privacy on"</log-match>
			<log-match>-c -e "rx demic failed"</log-match>
			<log-match>-c -e "rx decapsulation failed"</log-match>
			<log-match>-c -e "rx defragmentation failed"</log-match>
			<log-match>-c -e "rx disassociation"</log-match>
			<log-match>-c -e "rx deauthentication"</log-match>
			<log-match>-c -e "rx decrypt failed on crc"</log-match>
			<log-match>-c -e "rx on unauthorized port"</log-match>
			<log-match>-c -e "rx unecrypted with privacy"</log-match>
			<log-match>-c -e "rx airtime"</log-match>
			<log-match>-c -e "rx \[re\]associations while associated"</log-match>
			<log-match>-c -e "tx data bytes"</log-match>
			<log-match>-c -e "tx data frames"</log-match>
			<log-match>-c -e "tx unicast data frames"</log-match>
			<log-match>-c -e "tx WMM best effort data frames"</log-match>
			<log-match>-c -e "tx WMM background data frames"</log-match>
			<log-match>-c -e "tx WMM video data frames"</log-match>
			<log-match>-c -e "tx WMM voice data frames"</log-match>
			<log-match>-c -e "tx management frames"</log-match>
			<log-match>-c -e "rx probe request frames"</log-match>
			<log-match>-c -e "tx on uapsd queue"</log-match>
			<log-match>-c -e "tx dropped because no vlan tag"</log-match>
			<log-match>-c -e "tx dropped because bad vlan tag"</log-match>
			<log-match>-c -e "tx dropped because repeat tx failures"</log-match>
			<log-match>-c -e "tx discard on uapsd queue because excessive retry"</log-match>
			<log-match>-c -e "tx \[re\]associations"</log-match>
			<log-match>-c -e "tx \[re\]association failures"</log-match>
			<log-match>-c -e "tx \[re\]authentications"</log-match>
			<log-match>-c -e "tx \[re\]authentication failures"</log-match>
			<log-match>-c -e "tx deauthentications"</log-match>
			<log-match>-c -e "tx disassociations"</log-match>
			<log-match>-c -e "tx dropped because power save queue full"</log-match>
			<log-match>-c -e "tx airtime"</log-match>
			<log-match>-c -e "uapsd triggers"</log-match>
			<log-match>-c -e "SLA disabled status good_and_meet"</log-match>
			<log-match>-c -e "Kbps SLA BW"</log-match>
			<log-match>-c -e "Kbps BW usage"</log-match>
			<log-match>-c -e "connectivity score"</log-match>
			<log-match>-c -e "SLA violation traps sent"</log-match>
			<log-match>-c -e "SLA clear traps sent"</log-match>
			<log-match>-c -e "tx frames buffered"</log-match>
			<log-match>-c -e "PS q depth"</log-match>
			<log-match>-c -e "UAPSD q depth"</log-match>
			<log-match>-c -e "TX Latency Stats:"</log-match>
			<log-match>-c -e "AC: BE:"</log-match>
			<log-match>-c -e "AC: BK:"</log-match>
			<log-match>-c -e "AC: Vi:"</log-match>
			<log-match>-c -e "AC: Vo:"</log-match>
			<log-match>-c -e "Extra TX/RX Drops:"</log-match>
			<log-match>-c -e "tx max retried"</log-match>
			<log-match>-c -e "tx fifo err"</log-match>
			<log-match>-c -e "tx filtered"</log-match>
			<log-match>-c -e "tx exceed txop"</log-match>
			<log-match>-c -e "tx exceed timer"</log-match>
			<log-match>-c -e "rx ver mismatch"</log-match>
			<log-match>-c -e "rx old seq"</log-match>
			<log-match>-c -e "rx subframe dup"</log-match>
			<log-match>-c -e "rx too short"</log-match>
			<log-match>-c -e "rx wrong bssid"</log-match>
			<log-match>-c -e "rx wrong direction"</log-match>
			<log-match>-c -e "rx not assoc"</log-match>
			<no-error-check />
		</step>

		<step no="10.1">
			<desc>
				get ap1 content "rx data frames"
			</desc>
			<setvar name="content_1">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx data frames" -f ${log.dir}/step10_MP_show_hive_counter_neighbor.log -t str
			</setvar>
		</step>

		<step no="10.2">
			<desc>
				get ap1 content "tx data frames"
			</desc>
			<setvar name="content_2">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx data frames" -f ${log.dir}/step10_MP_show_hive_counter_neighbor.log -t str
			</setvar>
		</step>

		<step no="10.3">
			<desc>
				compare ap1 content "rx data frames"
			</desc>
			<script>
				if [ ${content_1} -gt ${content_3} ]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="10.4">
			<desc>
				compare ap1 content "tx data frames"
			</desc>
			<script>
				if [ ${content_2} -gt ${content_4} ]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>
	</stage>
</testcase>
