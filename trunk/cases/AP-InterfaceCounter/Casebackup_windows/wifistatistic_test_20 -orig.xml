<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify "show hive &lt;string&gt; counter neighbor &lt;mac&gt;" command works normally MPs already have same hive ID.</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		1.Created hive ID already existing
		2. Created hive ID has been assigned to mgt0 interface of each MP.

		Test Procedure:
		Ececute CLI command on each VAP interface:
		show hive &lt;hiveID&gt; counter neighbor
	</description>
	<numofap>3</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="0">
			<desc>
				shutdown interface eth1
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<console target="ap3">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="1">
			<desc>
				Created hive ID assigned to mgt0 of MP
			</desc>
			<log-file>step1_hive_assigned_mgt0_MP.log</log-file>
			<console target="ap3">
				-v "interface wifi0 mode access"
				-v "interface wifi1 mode dual"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 149"
			</console>
		</step>

		<step no="1.1">
			<desc>
				MP show interface wifi1
			</desc>
			<log-file>step1.1_show_int_wifi1.log</log-file>
			<console target="ap3">
				-v "show interface wifi1"
			</console>
		</step>

		<step no="1.2">
			<desc>
				get the mgt0 MAC of MP
			</desc>
			<setvar name="mac_3">
				${bin.dir}/getbyrexp.py -p "(?i)MAC addr=(\d+.*?);" -f ${log.dir}/step1.1_show_int_wifi1.log -t str
			</setvar>
		</step>

		<step no="1.3">
			<desc>
				Created hive ID assigned to mgt0 of AP1
			</desc>
			<log-file>step1.3_hive_assigned_mgt0_AP1.log</log-file>
			<console target="ap1">
				-v "interface wifi0 mode access"
				-v "interface wifi1 mode dual"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 149"
			</console>
		</step>

		<step no="1.4">
			<desc>
				AP1 show interface wifi1
			</desc>
			<log-file>step1.4_show_int_wifi1.log</log-file>
			<console target="ap1">
				-v "show interface wifi1"
			</console>
		</step>

		<step no="1.5">
			<desc>
				get the mgt0 MAC of AP1
			</desc>
			<setvar name="mac_1">
				${bin.dir}/getbyrexp.py -p "(?i)MAC addr=(\d+.*?);" -f ${log.dir}/step1.4_show_int_wifi1.log -t str
			</setvar>
		</step>

		<step no="1.6">
			<desc>
				Created hive ID assigned to mgt0 of AP2
			</desc>
			<log-file>step1.6_hive_assigned_mgt0_AP2.log</log-file>
			<console target="ap2">
				-v "interface wifi0 mode access"
				-v "interface wifi1 mode dual"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 149"
			</console>
		</step>

		<step no="1.7">
			<desc>
				AP2 show interface wifi1
			</desc>
			<log-file>step1.7_show_int_wifi1.log</log-file>
			<console target="ap2">
				-v "show interface wifi1"
			</console>
		</step>

		<step no="1.8">
			<desc>
				get the mgt0 MAC of AP2
			</desc>
			<setvar name="mac_2">
				${bin.dir}/getbyrexp.py -p "(?i)MAC addr=(\d+.*?);" -f ${log.dir}/step1.7_show_int_wifi1.log -t str
			</setvar>
		</step>

		<step no="1.8.1">
			<desc>
				MP interface eth0 shutdown
			</desc>
			<console target="ap3">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<step no="1.9" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				MP show hive ${hive.name} neighbor
			</desc>
			<log-file>step1.9_show_int_mgt0_${loop_check.idx}.log</log-file>
			<console target="ap3">
				-v "show hive ${hive.name} neighbor"
			</console>
			<log-match>-e "${mac_1}"</log-match>
			<log-match>-e "${mac_2}"</log-match>
		</step>

		<step no="1.10" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				AP1 show hive ${hive.name} neighbor
			</desc>
			<log-file>step1.10_show_int_mgt0_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show hive ${hive.name} neighbor"
			</console>
			<log-match>-e "${mac_2}"</log-match>
			<log-match>-e "${mac_3}"</log-match>

		</step>

		<step no="1.11" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				AP2 show hive ${hive.name} neighbor
			</desc>
			<log-file>step1.11_show_int_mgt0_${loop_check.idx}.log</log-file>
			<console target="ap2">
				-v "show hive ${hive.name} neighbor"
			</console>
			<log-match>-e "${mac_1}"</log-match>
			<log-match>-e "${mac_3}"</log-match>
		</step>

		<step no="2" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Ececute CLI command on each VAP interface:
				MP show hive &lt;hiveID&gt; counter neighbor
			</desc>
			<log-file>step2_MP_show_hive_counter_neighbor.log</log-file>
			<console target="ap3">
				-v "show hive ${hive.name} counter neighbor"
			</console>
			<log-match>-c -e "Hive:${hive.name}" -i "interface:wifi1.1"</log-match>
			<log-match>-c -e "neighbor ${mac_1}:"</log-match>
			<log-match>-c -e "rx data bytes"</log-match>
			<log-match>-c -e "rx data frames"</log-match>
			<log-match>-c -e "rx unicast data frames"</log-match>
			<log-match>-c -e "rx multicast data frames"</log-match>
			<log-match>-c -e "rx broadcast data frames"</log-match>
			<log-match>-c -e "rx management frames"</log-match>
			<log-match>-c -e "rx control frames"</log-match>
			<log-match>-c -e "rx beacon frames"</log-match>
			<log-match>-c -e "rx probe response frames"</log-match>
			<log-match>-c -e "rx dropped because of duplicate"</log-match>
			<log-match>-c -e "rx dropped because frame with wep but privicy off"</log-match>
			<log-match>-c -e "rx dropped because frame without wep but privacy on"</log-match>
			<log-match>-c -e "rx demic failed"</log-match>
			<log-match>-c -e "rx decapsulation failed"</log-match>
			<log-match>-c -e "rx defragmentation failed"</log-match>
			<log-match>-c -e "rx disassociation"</log-match>
			<log-match>-c -e "rx deauthentication"</log-match>
			<log-match>-c -e "rx decrypt failed on crc"</log-match>
			<log-match>-c -e "rx on unauthorized port"</log-match>
			<log-match>-c -e "rx unecrypted with privacy"</log-match>
			<log-match>-c -e "rx airtime"</log-match>
			<log-match>-c -e "rx \[re\]associations while associated"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "tx data bytes"</log-match>
			<log-match>-c -e "tx data frames"</log-match>
			<log-match>-c -e "tx unicast data frames"</log-match>
			<log-match>-c -e "tx WMM best effort data frames"</log-match>
			<log-match>-c -e "tx WMM background data frames"</log-match>
			<log-match>-c -e "tx WMM video data frames"</log-match>
			<log-match>-c -e "tx WMM voice data frames"</log-match>
			<log-match>-c -e "tx management frames"</log-match>
			<log-match>-c -e "rx probe request frames"</log-match>
			<log-match>-c -e "tx on uapsd queue"</log-match>
			<log-match>-c -e "tx dropped because no vlan tag"</log-match>
			<log-match>-c -e "tx dropped because bad vlan tag"</log-match>
			<log-match>-c -e "tx dropped because repeat tx failures"</log-match>
			<log-match>-c -e "tx discard on uapsd queue because excessive retry"</log-match>
			<log-match>-c -e "tx \[re\]associations"</log-match>
			<log-match>-c -e "tx \[re\]association failures"</log-match>
			<log-match>-c -e "tx \[re\]authentications"</log-match>
			<log-match>-c -e "tx \[re\]authentication failures"</log-match>
			<log-match>-c -e "tx deauthentications"</log-match>
			<log-match>-c -e "tx disassociations"</log-match>
			<log-match>-c -e "tx dropped because power save queue full"</log-match>
			<log-match>-c -e "ms tx airtime"</log-match>
			<log-match>-c -e "uapsd triggers"</log-match>
			<log-match>-c -e "tx" -i "Kbps stat:"</log-match>
			<log-match>-c -e "tx unicasts"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "SLA disabled status good_and_meet"</log-match>
			<log-match>-c -e "Kbps SLA BW"</log-match>
			<log-match>-c -e "Kbps BW usage"</log-match>
			<log-match>-c -e "connectivity score"</log-match>
			<log-match>-c -e "SLA violation traps sent"</log-match>
			<log-match>-c -e "SLA clear traps sent"</log-match>
			<log-match>-c -e "tx frames buffered"</log-match>
			<log-match>-c -e "PS q depth"</log-match>
			<log-match>-c -e "UAPSD q depth"</log-match>
			<log-match>-c -e "TX Latency Stats:"</log-match>
			<log-match>-c -e "AC: BE:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "AC: BK:"</log-match>
			<log-match>-c -e "AC: Vi:"</log-match>
			<log-match>-c -e "AC: Vo:"</log-match>
			<log-match>-c -e "Extra TX/RX Drops:"</log-match>
			<log-match>-c -e "tx max retried"</log-match>
			<log-match>-c -e "tx fifo err"</log-match>
			<log-match>-c -e "tx filtered"</log-match>
			<log-match>-c -e "tx exceed txop"</log-match>
			<log-match>-c -e "tx exceed timer"</log-match>
			<log-match>-c -e "rx ver mismatch"</log-match>
			<log-match>-c -e "rx old seq"</log-match>
			<log-match>-c -e "rx subframe dup"</log-match>
			<log-match>-c -e "rx too short"</log-match>
			<log-match>-c -e "rx wrong bssid"</log-match>
			<log-match>-c -e "rx wrong direction"</log-match>
			<log-match>-c -e "rx not assoc"</log-match>

			<log-match>-c -e "neighbor ${mac_2}:"</log-match>
			<log-match>-c -e "rx data bytes"</log-match>
			<log-match>-c -e "rx data frames"</log-match>
			<log-match>-c -e "rx unicast data frames"</log-match>
			<log-match>-c -e "rx multicast data frames"</log-match>
			<log-match>-c -e "rx broadcast data frames"</log-match>
			<log-match>-c -e "rx management frames"</log-match>
			<log-match>-c -e "rx control frames"</log-match>
			<log-match>-c -e "rx beacon frames"</log-match>
			<log-match>-c -e "rx probe response frames"</log-match>
			<log-match>-c -e "rx dropped because of duplicate"</log-match>
			<log-match>-c -e "rx dropped because frame with wep but privicy off"</log-match>
			<log-match>-c -e "rx dropped because frame without wep but privacy on"</log-match>
			<log-match>-c -e "rx demic failed"</log-match>
			<log-match>-c -e "rx decapsulation failed"</log-match>
			<log-match>-c -e "rx defragmentation failed"</log-match>
			<log-match>-c -e "rx disassociation"</log-match>
			<log-match>-c -e "rx deauthentication"</log-match>
			<log-match>-c -e "rx decrypt failed on crc"</log-match>
			<log-match>-c -e "rx on unauthorized port"</log-match>
			<log-match>-c -e "rx unecrypted with privacy"</log-match>
			<log-match>-c -e "rx airtime"</log-match>
			<log-match>-c -e "rx \[re\]associations while associated"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "tx data bytes"</log-match>
			<log-match>-c -e "tx data frames"</log-match>
			<log-match>-c -e "tx unicast data frames"</log-match>
			<log-match>-c -e "tx WMM best effort data frames"</log-match>
			<log-match>-c -e "tx WMM background data frames"</log-match>
			<log-match>-c -e "tx WMM video data frames"</log-match>
			<log-match>-c -e "tx WMM voice data frames"</log-match>
			<log-match>-c -e "tx management frames"</log-match>
			<log-match>-c -e "rx probe request frames"</log-match>
			<log-match>-c -e "tx on uapsd queue"</log-match>
			<log-match>-c -e "tx dropped because no vlan tag"</log-match>
			<log-match>-c -e "tx dropped because bad vlan tag"</log-match>
			<log-match>-c -e "tx dropped because repeat tx failures"</log-match>
			<log-match>-c -e "tx discard on uapsd queue because excessive retry"</log-match>
			<log-match>-c -e "tx \[re\]associations"</log-match>
			<log-match>-c -e "tx \[re\]association failures"</log-match>
			<log-match>-c -e "tx \[re\]authentications"</log-match>
			<log-match>-c -e "tx \[re\]authentication failures"</log-match>
			<log-match>-c -e "tx deauthentications"</log-match>
			<log-match>-c -e "tx disassociations"</log-match>
			<log-match>-c -e "tx dropped because power save queue full"</log-match>
			<log-match>-c -e "tx airtime"</log-match>
			<log-match>-c -e "uapsd triggers"</log-match>
			<log-match>-c -e "tx" -i "Kbps stat:"</log-match>
			<log-match>-c -e "tx unicasts"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "SLA disabled status good_and_meet"</log-match>
			<log-match>-c -e "Kbps SLA BW"</log-match>
			<log-match>-c -e "Kbps BW usage"</log-match>
			<log-match>-c -e "connectivity score"</log-match>
			<log-match>-c -e "SLA violation traps sent"</log-match>
			<log-match>-c -e "SLA clear traps sent"</log-match>
			<log-match>-c -e "tx frames buffered"</log-match>
			<log-match>-c -e "PS q depth"</log-match>
			<log-match>-c -e "UAPSD q depth"</log-match>
			<log-match>-c -e "TX Latency Stats:"</log-match>
			<log-match>-c -e "AC: BE:"</log-match>
			<log-match>-c -e "AC: BK:"</log-match>
			<log-match>-c -e "AC: Vi:"</log-match>
			<log-match>-c -e "AC: Vo:"</log-match>
			<log-match>-c -e "Extra TX/RX Drops:"</log-match>
			<log-match>-c -e "tx max retried"</log-match>
			<log-match>-c -e "tx fifo err"</log-match>
			<log-match>-c -e "tx filtered"</log-match>
			<log-match>-c -e "tx exceed txop"</log-match>
			<log-match>-c -e "tx exceed timer"</log-match>
			<log-match>-c -e "rx ver mismatch"</log-match>
			<log-match>-c -e "rx old seq"</log-match>
			<log-match>-c -e "rx subframe dup"</log-match>
			<log-match>-c -e "rx too short"</log-match>
			<log-match>-c -e "rx wrong bssid"</log-match>
			<log-match>-c -e "rx wrong direction"</log-match>
			<log-match>-c -e "rx not assoc"</log-match>
			<no-error-check />
		</step>

		<step no="2.1">
			<desc>
				get wifi1 "rx data frames"
			</desc>
			<setvar name="ap3_mac1_content_1">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+rx data frames" -f ${log.dir}/step2_MP_show_hive_counter_neighbor.log -t str | cut -d, -f1
			</setvar>
		</step>

		<step no="2.2">
			<desc>
				get mac1 content "rx unicast data frames"
			</desc>
			<setvar name="ap3_mac1_content_2">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+rx unicast data frames" -f ${log.dir}/step2_MP_show_hive_counter_neighbor.log -t str | cut -d, -f1
			</setvar>
		</step>

		<step no="2.3">
			<desc>
				get mac1 content "tx data frames"
			</desc>
			<setvar name="ap3_mac1_content_3">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+tx data frames" -f ${log.dir}/step2_MP_show_hive_counter_neighbor.log -t str | cut -d, -f1
			</setvar>
		</step>

		<step no="2.4">
			<desc>
				get mac1 content "tx unicast data frames"
			</desc>
			<setvar name="ap3_mac1_content_4">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx unicast data frames" -f ${log.dir}/step2_MP_show_hive_counter_neighbor.log -t str | cut -d, -f1
			</setvar>
		</step>

		<step no="2.5">
			<desc>
				get mac2 "rx data frames"
			</desc>
			<setvar name="ap3_mac2_content_1">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx data frames" -f ${log.dir}/step2_MP_show_hive_counter_neighbor.log -t str | cut -d, -f2
			</setvar>
		</step>

		<step no="2.6">
			<desc>
				get mac2 content "rx unicast data frames"
			</desc>
			<setvar name="ap3_mac2_content_2">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx unicast data frames" -f ${log.dir}/step2_MP_show_hive_counter_neighbor.log -t str | cut -d, -f2
			</setvar>
		</step>

		<step no="2.7">
			<desc>
				get mac2 content "tx data frames"
			</desc>
			<setvar name="ap3_mac2_content_3">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx data frames" -f ${log.dir}/step2_MP_show_hive_counter_neighbor.log -t str | cut -d, -f2
			</setvar>
		</step>

		<step no="2.8">
			<desc>
				get mac2 content "tx unicast data frames"
			</desc>
			<setvar name="ap3_mac2_content_4">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+tx unicast data frames" -f ${log.dir}/step2_MP_show_hive_counter_neighbor.log -t str | cut -d, -f2
			</setvar>
		</step>

		<step no="2.9">
			<desc>
				compare mac1 content "rx data frames"
			</desc>
			<script>
				c=$(echo "${ap3_mac1_content_1} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="2.10">
			<desc>
				compare mac1 content "rx unicast data frames"
			</desc>
			<script>
				c=$(echo "${ap3_mac1_content_2} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="2.11">
			<desc>
				compare mac1 content "tx data frames"
			</desc>
			<script>
				c=$(echo "${ap3_mac1_content_3} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="2.12">
			<desc>
				compare mac1 content "tx unicast data frames"
			</desc>
			<script>
				c=$(echo "${ap3_mac1_content_4} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="2.13">
			<desc>
				compare mac2 content "rx data frames"
			</desc>
			<script>
				c=$(echo "${ap3_mac2_content_1} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="2.14">
			<desc>
				compare mac2 content "rx unicast data frames"
			</desc>
			<script>
				c=$(echo "${ap3_mac2_content_2} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="2.15">
			<desc>
				compare mac2 content "tx data frames"
			</desc>
			<script>
				c=$(echo "${ap3_mac2_content_3} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="2.16">
			<desc>
				compare mac2 content "tx unicast data frames"
			</desc>
			<script>
				c=$(echo "${ap3_mac2_content_4} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="3" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				AP1 show hive &lt;hiveID&gt; counter neighbor
			</desc>
			<log-file>step3_AP1_show_hive_counter_neighbor.log</log-file>
			<console target="ap1">
				-v "show hive ${hive.name} counter neighbor"
			</console>
			<log-match>-c -e "Hive:${hive.name}" -i "interface:wifi1.1"</log-match>
			<log-match>-c -e "neighbor ${mac_2}:"</log-match>
			<log-match>-c -e "rx data bytes"</log-match>
			<log-match>-c -e "rx data frames"</log-match>
			<log-match>-c -e "rx unicast data frames"</log-match>
			<log-match>-c -e "rx multicast data frames"</log-match>
			<log-match>-c -e "rx broadcast data frames"</log-match>
			<log-match>-c -e "rx management frames"</log-match>
			<log-match>-c -e "rx control frames"</log-match>
			<log-match>-c -e "rx beacon frames"</log-match>
			<log-match>-c -e "rx probe response frames"</log-match>
			<log-match>-c -e "rx dropped because of duplicate"</log-match>
			<log-match>-c -e "rx dropped because frame with wep but privicy off"</log-match>
			<log-match>-c -e "rx dropped because frame without wep but privacy on"</log-match>
			<log-match>-c -e "rx demic failed"</log-match>
			<log-match>-c -e "rx decapsulation failed"</log-match>
			<log-match>-c -e "rx defragmentation failed"</log-match>
			<log-match>-c -e "rx disassociation"</log-match>
			<log-match>-c -e "rx deauthentication"</log-match>
			<log-match>-c -e "rx decrypt failed on crc"</log-match>
			<log-match>-c -e "rx on unauthorized port"</log-match>
			<log-match>-c -e "rx unecrypted with privacy"</log-match>
			<log-match>-c -e "ms rx airtime"</log-match>
			<log-match>-c -e "rx \[re\]associations while associated"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "tx data bytes"</log-match>
			<log-match>-c -e "tx data frames"</log-match>
			<log-match>-c -e "tx unicast data frames"</log-match>
			<log-match>-c -e "tx WMM best effort data frames"</log-match>
			<log-match>-c -e "tx WMM background data frames"</log-match>
			<log-match>-c -e "tx WMM video data frames"</log-match>
			<log-match>-c -e "tx WMM voice data frames"</log-match>
			<log-match>-c -e "tx management frames"</log-match>
			<log-match>-c -e "rx probe request frames"</log-match>
			<log-match>-c -e "tx on uapsd queue"</log-match>
			<log-match>-c -e "tx dropped because no vlan tag"</log-match>
			<log-match>-c -e "tx dropped because bad vlan tag"</log-match>
			<log-match>-c -e "tx dropped because repeat tx failures"</log-match>
			<log-match>-c -e "tx discard on uapsd queue because excessive retry"</log-match>
			<log-match>-c -e "tx \[re\]associations"</log-match>
			<log-match>-c -e "tx \[re\]association failures"</log-match>
			<log-match>-c -e "tx \[re\]authentications"</log-match>
			<log-match>-c -e "tx \[re\]authentication failures"</log-match>
			<log-match>-c -e "tx deauthentications"</log-match>
			<log-match>-c -e "tx disassociations"</log-match>
			<log-match>-c -e "tx dropped because power save queue full"</log-match>
			<log-match>-c -e "ms tx airtime"</log-match>
			<log-match>-c -e "uapsd triggers"</log-match>
			<log-match>-c -e "tx" -i "Kbps stat:"</log-match>
			<log-match>-c -e "tx unicasts"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "tx" -i "Kbps stat:"</log-match>
			<log-match>-c -e "tx unicasts"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "tx" -i "Kbps stat:"</log-match>
			<log-match>-c -e "tx unicasts"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "SLA disabled status good_and_meet"</log-match>
			<log-match>-c -e "Kbps SLA BW"</log-match>
			<log-match>-c -e "Kbps BW usage"</log-match>
			<log-match>-c -e "connectivity score"</log-match>
			<log-match>-c -e "SLA violation traps sent"</log-match>
			<log-match>-c -e "SLA clear traps sent"</log-match>
			<log-match>-c -e "tx frames buffered"</log-match>
			<log-match>-c -e "PS q depth"</log-match>
			<log-match>-c -e "UAPSD q depth"</log-match>
			<log-match>-c -e "TX Latency Stats:"</log-match>
			<log-match>-c -e "AC: BE:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "AC: BK:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "AC: Vi:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "AC: Vo:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "Extra TX/RX Drops:"</log-match>
			<log-match>-c -e "tx max retried"</log-match>
			<log-match>-c -e "tx fifo err"</log-match>
			<log-match>-c -e "tx filtered"</log-match>
			<log-match>-c -e "tx exceed txop"</log-match>
			<log-match>-c -e "tx exceed timer"</log-match>
			<log-match>-c -e "rx ver mismatch"</log-match>
			<log-match>-c -e "rx old seq"</log-match>
			<log-match>-c -e "rx subframe dup"</log-match>
			<log-match>-c -e "rx too short"</log-match>
			<log-match>-c -e "rx wrong bssid"</log-match>
			<log-match>-c -e "rx wrong direction"</log-match>
			<log-match>-c -e "rx not assoc"</log-match>

			<log-match>-c -e "neighbor ${mac_3}:"</log-match>
			<log-match>-c -e "rx data bytes"</log-match>
			<log-match>-c -e "rx data frames"</log-match>
			<log-match>-c -e "rx unicast data frames"</log-match>
			<log-match>-c -e "rx multicast data frames"</log-match>
			<log-match>-c -e "rx broadcast data frames"</log-match>
			<log-match>-c -e "rx management frames"</log-match>
			<log-match>-c -e "rx control frames"</log-match>
			<log-match>-c -e "rx beacon frames"</log-match>
			<log-match>-c -e "rx probe response frames"</log-match>
			<log-match>-c -e "rx dropped because of duplicate"</log-match>
			<log-match>-c -e "rx dropped because frame with wep but privicy off"</log-match>
			<log-match>-c -e "rx dropped because frame without wep but privacy on"</log-match>
			<log-match>-c -e "rx demic failed"</log-match>
			<log-match>-c -e "rx decapsulation failed"</log-match>
			<log-match>-c -e "rx defragmentation failed"</log-match>
			<log-match>-c -e "rx disassociation"</log-match>
			<log-match>-c -e "rx deauthentication"</log-match>
			<log-match>-c -e "rx decrypt failed on crc"</log-match>
			<log-match>-c -e "rx on unauthorized port"</log-match>
			<log-match>-c -e "rx unecrypted with privacy"</log-match>
			<log-match>-c -e "ms rx airtime"</log-match>
			<log-match>-c -e "rx \[re\]associations while associated"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "tx data bytes"</log-match>
			<log-match>-c -e "tx data frames"</log-match>
			<log-match>-c -e "tx unicast data frames"</log-match>
			<log-match>-c -e "tx WMM best effort data frames"</log-match>
			<log-match>-c -e "tx WMM background data frames"</log-match>
			<log-match>-c -e "tx WMM video data frames"</log-match>
			<log-match>-c -e "tx WMM voice data frames"</log-match>
			<log-match>-c -e "tx management frames"</log-match>
			<log-match>-c -e "rx probe request frames"</log-match>
			<log-match>-c -e "tx on uapsd queue"</log-match>
			<log-match>-c -e "tx dropped because no vlan tag"</log-match>
			<log-match>-c -e "tx dropped because bad vlan tag"</log-match>
			<log-match>-c -e "tx dropped because repeat tx failures"</log-match>
			<log-match>-c -e "tx discard on uapsd queue because excessive retry"</log-match>
			<log-match>-c -e "tx \[re\]associations"</log-match>
			<log-match>-c -e "tx \[re\]association failures"</log-match>
			<log-match>-c -e "tx \[re\]authentications"</log-match>
			<log-match>-c -e "tx \[re\]authentication failures"</log-match>
			<log-match>-c -e "tx deauthentications"</log-match>
			<log-match>-c -e "tx disassociations"</log-match>
			<log-match>-c -e "tx dropped because power save queue full"</log-match>
			<log-match>-c -e "ms tx airtime"</log-match>
			<log-match>-c -e "uapsd triggers"</log-match>
			<log-match>-c -e "tx" -i "Kbps stat:"</log-match>
			<log-match>-c -e "tx unicasts"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "tx" -i "Kbps stat:"</log-match>
			<log-match>-c -e "tx unicasts"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "tx" -i "Kbps stat:"</log-match>
			<log-match>-c -e "tx unicasts"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "SLA disabled status good_and_meet"</log-match>
			<log-match>-c -e "Kbps SLA BW"</log-match>
			<log-match>-c -e "Kbps BW usage"</log-match>
			<log-match>-c -e "connectivity score"</log-match>
			<log-match>-c -e "SLA violation traps sent"</log-match>
			<log-match>-c -e "SLA clear traps sent"</log-match>
			<log-match>-c -e "tx frames buffered"</log-match>
			<log-match>-c -e "PS q depth"</log-match>
			<log-match>-c -e "UAPSD q depth"</log-match>
			<log-match>-c -e "TX Latency Stats:"</log-match>
			<log-match>-c -e "AC: BE:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "AC: BK:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "AC: Vi:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "AC: Vo:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "Extra TX/RX Drops:"</log-match>
			<log-match>-c -e "tx max retried"</log-match>
			<log-match>-c -e "tx fifo err"</log-match>
			<log-match>-c -e "tx filtered"</log-match>
			<log-match>-c -e "tx exceed txop"</log-match>
			<log-match>-c -e "tx exceed timer"</log-match>
			<log-match>-c -e "rx ver mismatch"</log-match>
			<log-match>-c -e "rx old seq"</log-match>
			<log-match>-c -e "rx subframe dup"</log-match>
			<log-match>-c -e "rx too short"</log-match>
			<log-match>-c -e "rx wrong bssid"</log-match>
			<log-match>-c -e "rx wrong direction"</log-match>
			<log-match>-c -e "rx not assoc"</log-match>
			<no-error-check />
		</step>

		<step no="3.1">
			<desc>
				get ap1 mac2 content "rx data frames"
			</desc>
			<setvar name="ap1_mac2_content_1">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+rx data frames" -f ${log.dir}/step3_AP1_show_hive_counter_neighbor.log -t str | cut -d, -f1
			</setvar>
		</step>

		<step no="3.2">
			<desc>
				get ap1 mac2 content "rx unicast data frames"
			</desc>
			<setvar name="ap1_mac2_content_2">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+rx unicast data frames" -f ${log.dir}/step3_AP1_show_hive_counter_neighbor.log -t str | cut -d, -f1
			</setvar>
		</step>

		<step no="3.3">
			<desc>
				get ap1 mac2 content "tx data frames"
			</desc>
			<setvar name="ap1_mac2_content_3">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx data frames" -f ${log.dir}/step3_AP1_show_hive_counter_neighbor.log -t str |  cut -d, -f1
			</setvar>
		</step>

		<step no="3.4">
			<desc>
				get ap1 mac2 content "tx unicast data frames"
			</desc>
			<setvar name="ap1_mac2_content_4">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+tx unicast data frames" -f ${log.dir}/step3_AP1_show_hive_counter_neighbor.log -t str |  cut -d, -f1
			</setvar>
		</step>
		
		<step no="3.5">
			<desc>
				get ap1 mac3 content "rx data frames"
			</desc>
			<setvar name="ap1_mac3_content_1">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+rx data frames" -f ${log.dir}/step3_AP1_show_hive_counter_neighbor.log -t str | cut -d, -f2
			</setvar>
		</step>

		<step no="3.6">
			<desc>
				get ap1 mac3 content "rx unicast data frames"
			</desc>
			<setvar name="ap1_mac3_content_2">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+rx unicast data frames" -f ${log.dir}/step3_AP1_show_hive_counter_neighbor.log -t str  | cut -d, -f2
			</setvar>
		</step>

		<step no="3.7">
			<desc>
				get ap1 mac3 content "tx data frames"
			</desc>
			<setvar name="ap1_mac3_content_3">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+tx data frames" -f ${log.dir}/step3_AP1_show_hive_counter_neighbor.log -t str | cut -d, -f2
			</setvar>
		</step>

		<step no="3.8">
			<desc>
				get ap1 mac3 content "tx unicast data frames"
			</desc>
			<setvar name="ap1_mac3_content_4">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+tx unicast data frames" -f ${log.dir}/step3_AP1_show_hive_counter_neighbor.log -t str | cut -d, -f2
			</setvar>
		</step>

		<step no="3.9">
			<desc>
				compare ap1 mac2 content "rx data frames"
			</desc>
			<script>
				c=$(echo "${ap1_mac2_content_1} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="3.10">
			<desc>
				compare ap1 mac2 content "rx unicast data frames"
			</desc>
			<script>
				c=$(echo "${ap1_mac2_content_2} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>
		
		<step no="3.11">
			<desc>
				compare ap1 mac2 content "tx data frames"
			</desc>
			<script>
				c=$(echo "${ap1_mac2_content_3} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>
		
		<step no="3.12">
			<desc>
				compare ap1 mac2 content "tx unicast data frames"
			</desc>
			<script>
				c=$(echo "${ap1_mac2_content_4} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>
		
		<step no="3.13">
			<desc>
				compare ap1 mac3 content "rx data frames"
			</desc>
			<script>
				c=$(echo "${ap1_mac3_content_1} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="3.14">
			<desc>
				compare ap1 mac3 content "rx unicast data frames"
			</desc>
			<script>
				c=$(echo "${ap1_mac3_content_2} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>
		
		<step no="3.15">
			<desc>
				compare ap1 mac3 content "tx data frames"
			</desc>
			<script>
				c=$(echo "${ap1_mac3_content_3} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>
		
		<step no="3.16">
			<desc>
				compare ap1 mac3 content "tx unicast data frames"
			</desc>
			<script>
				c=$(echo "${ap1_mac3_content_4} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="4" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				AP2 show hive &lt;hiveID&gt; counter neighbor
			</desc>
			<log-file>step4_AP2_show_hive_counter_neighbor.log</log-file>
			<console target="ap2">
				-v "show hive ${hive.name} counter neighbor"
			</console>
			<log-match>-c -e "Hive:${hive.name}" -i "interface:wifi1.1"</log-match>
			<log-match>-c -e "neighbor ${mac_1}:"</log-match>
			<log-match>-c -e "rx data bytes"</log-match>
			<log-match>-c -e "rx data frames"</log-match>
			<log-match>-c -e "rx unicast data frames"</log-match>
			<log-match>-c -e "rx multicast data frames"</log-match>
			<log-match>-c -e "rx broadcast data frames"</log-match>
			<log-match>-c -e "rx management frames"</log-match>
			<log-match>-c -e "rx control frames"</log-match>
			<log-match>-c -e "rx beacon frames"</log-match>
			<log-match>-c -e "rx probe response frames"</log-match>
			<log-match>-c -e "rx dropped because of duplicate"</log-match>
			<log-match>-c -e "rx dropped because frame with wep but privicy off"</log-match>
			<log-match>-c -e "rx dropped because frame without wep but privacy on"</log-match>
			<log-match>-c -e "rx demic failed"</log-match>
			<log-match>-c -e "rx decapsulation failed"</log-match>
			<log-match>-c -e "rx defragmentation failed"</log-match>
			<log-match>-c -e "rx disassociation"</log-match>
			<log-match>-c -e "rx deauthentication"</log-match>
			<log-match>-c -e "rx decrypt failed on crc"</log-match>
			<log-match>-c -e "rx on unauthorized port"</log-match>
			<log-match>-c -e "rx unecrypted with privacy"</log-match>
			<log-match>-c -e "ms rx airtime"</log-match>
			<log-match>-c -e "rx \[re\]associations while associated"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "tx data bytes"</log-match>
			<log-match>-c -e "tx data frames"</log-match>
			<log-match>-c -e "tx unicast data frames"</log-match>
			<log-match>-c -e "tx WMM best effort data frames"</log-match>
			<log-match>-c -e "tx WMM background data frames"</log-match>
			<log-match>-c -e "tx WMM video data frames"</log-match>
			<log-match>-c -e "tx WMM voice data frames"</log-match>
			<log-match>-c -e "tx management frames"</log-match>
			<log-match>-c -e "rx probe request frames"</log-match>
			<log-match>-c -e "tx on uapsd queue"</log-match>
			<log-match>-c -e "tx dropped because no vlan tag"</log-match>
			<log-match>-c -e "tx dropped because bad vlan tag"</log-match>
			<log-match>-c -e "tx dropped because repeat tx failures"</log-match>
			<log-match>-c -e "tx discard on uapsd queue because excessive retry"</log-match>
			<log-match>-c -e "tx \[re\]associations"</log-match>
			<log-match>-c -e "tx \[re\]association failures"</log-match>
			<log-match>-c -e "tx \[re\]authentications"</log-match>
			<log-match>-c -e "tx \[re\]authentication failures"</log-match>
			<log-match>-c -e "tx deauthentications"</log-match>
			<log-match>-c -e "tx disassociations"</log-match>
			<log-match>-c -e "tx dropped because power save queue full"</log-match>
			<log-match>-c -e "ms tx airtime"</log-match>
			<log-match>-c -e "uapsd triggers"</log-match>
			<log-match>-c -e "tx" -i "Kbps stat:"</log-match>
			<log-match>-c -e "tx unicasts"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "tx" -i "Kbps stat:"</log-match>
			<log-match>-c -e "tx unicasts"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "tx" -i "Kbps stat:"</log-match>
			<log-match>-c -e "tx unicasts"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "SLA disabled status good_and_meet"</log-match>
			<log-match>-c -e "Kbps SLA BW"</log-match>
			<log-match>-c -e "Kbps BW usage"</log-match>
			<log-match>-c -e "connectivity score"</log-match>
			<log-match>-c -e "SLA violation traps sent"</log-match>
			<log-match>-c -e "SLA clear traps sent"</log-match>
			<log-match>-c -e "tx frames buffered"</log-match>
			<log-match>-c -e "PS q depth"</log-match>
			<log-match>-c -e "UAPSD q depth"</log-match>
			<log-match>-c -e "TX Latency Stats:"</log-match>
			<log-match>-c -e "AC: BE:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "AC: BK:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "AC: Vi:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "AC: Vo:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "Extra TX/RX Drops:"</log-match>
			<log-match>-c -e "tx max retried"</log-match>
			<log-match>-c -e "tx fifo err"</log-match>
			<log-match>-c -e "tx filtered"</log-match>
			<log-match>-c -e "tx exceed txop"</log-match>
			<log-match>-c -e "tx exceed timer"</log-match>
			<log-match>-c -e "rx ver mismatch"</log-match>
			<log-match>-c -e "rx old seq"</log-match>
			<log-match>-c -e "rx subframe dup"</log-match>
			<log-match>-c -e "rx too short"</log-match>
			<log-match>-c -e "rx wrong bssid"</log-match>
			<log-match>-c -e "rx wrong direction"</log-match>
			<log-match>-c -e "rx not assoc"</log-match>

			<log-match>-c -e "neighbor ${mac_3}:"</log-match>
			<log-match>-c -e "rx data bytes"</log-match>
			<log-match>-c -e "rx data frames"</log-match>
			<log-match>-c -e "rx unicast data frames"</log-match>
			<log-match>-c -e "rx multicast data frames"</log-match>
			<log-match>-c -e "rx broadcast data frames"</log-match>
			<log-match>-c -e "rx management frames"</log-match>
			<log-match>-c -e "rx control frames"</log-match>
			<log-match>-c -e "rx beacon frames"</log-match>
			<log-match>-c -e "rx probe response frames"</log-match>
			<log-match>-c -e "rx dropped because of duplicate"</log-match>
			<log-match>-c -e "rx dropped because frame with wep but privicy off"</log-match>
			<log-match>-c -e "rx dropped because frame without wep but privacy on"</log-match>
			<log-match>-c -e "rx demic failed"</log-match>
			<log-match>-c -e "rx decapsulation failed"</log-match>
			<log-match>-c -e "rx defragmentation failed"</log-match>
			<log-match>-c -e "rx disassociation"</log-match>
			<log-match>-c -e "rx deauthentication"</log-match>
			<log-match>-c -e "rx decrypt failed on crc"</log-match>
			<log-match>-c -e "rx on unauthorized port"</log-match>
			<log-match>-c -e "rx unecrypted with privacy"</log-match>
			<log-match>-c -e "ms rx airtime"</log-match>
			<log-match>-c -e "rx \[re\]associations while associated"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "rx" -i "Kpbs stat:"</log-match>
			<log-match>-c -e "rx unicast"</log-match>
			<log-match>-c -e "rx retries"</log-match>
			<log-match>-c -e "tx data bytes"</log-match>
			<log-match>-c -e "tx data frames"</log-match>
			<log-match>-c -e "tx unicast data frames"</log-match>
			<log-match>-c -e "tx WMM best effort data frames"</log-match>
			<log-match>-c -e "tx WMM background data frames"</log-match>
			<log-match>-c -e "tx WMM video data frames"</log-match>
			<log-match>-c -e "tx WMM voice data frames"</log-match>
			<log-match>-c -e "tx management frames"</log-match>
			<log-match>-c -e "rx probe request frames"</log-match>
			<log-match>-c -e "tx on uapsd queue"</log-match>
			<log-match>-c -e "tx dropped because no vlan tag"</log-match>
			<log-match>-c -e "tx dropped because bad vlan tag"</log-match>
			<log-match>-c -e "tx dropped because repeat tx failures"</log-match>
			<log-match>-c -e "tx discard on uapsd queue because excessive retry"</log-match>
			<log-match>-c -e "tx \[re\]associations"</log-match>
			<log-match>-c -e "tx \[re\]association failures"</log-match>
			<log-match>-c -e "tx \[re\]authentications"</log-match>
			<log-match>-c -e "tx \[re\]authentication failures"</log-match>
			<log-match>-c -e "tx deauthentications"</log-match>
			<log-match>-c -e "tx disassociations"</log-match>
			<log-match>-c -e "tx dropped because power save queue full"</log-match>
			<log-match>-c -e "ms tx airtime"</log-match>
			<log-match>-c -e "uapsd triggers"</log-match>
			<log-match>-c -e "tx" -i "Kbps stat:"</log-match>
			<log-match>-c -e "tx unicasts"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "tx" -i "Kbps stat:"</log-match>
			<log-match>-c -e "tx unicasts"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "tx" -i "Kbps stat:"</log-match>
			<log-match>-c -e "tx unicasts"</log-match>
			<log-match>-c -e "tx retries"</log-match>
			<log-match>-c -e "SLA disabled status good_and_meet"</log-match>
			<log-match>-c -e "Kbps SLA BW"</log-match>
			<log-match>-c -e "Kbps BW usage"</log-match>
			<log-match>-c -e "connectivity score"</log-match>
			<log-match>-c -e "SLA violation traps sent"</log-match>
			<log-match>-c -e "SLA clear traps sent"</log-match>
			<log-match>-c -e "tx frames buffered"</log-match>
			<log-match>-c -e "PS q depth"</log-match>
			<log-match>-c -e "UAPSD q depth"</log-match>
			<log-match>-c -e "TX Latency Stats:"</log-match>
			<log-match>-c -e "AC: BE:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "AC: BK:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "AC: Vi:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "AC: Vo:"</log-match>
			<log-match>-c -e "Less than 5ms:"</log-match>
			<log-match>-c -e "5ms to 10ms:"</log-match>
			<log-match>-c -e "10ms to 15ms:"</log-match>
			<log-match>-c -e "15ms to 20ms:"</log-match>
			<log-match>-c -e "20ms or more:"</log-match>
			<log-match>-c -e "Extra TX/RX Drops:"</log-match>
			<log-match>-c -e "tx max retried"</log-match>
			<log-match>-c -e "tx fifo err"</log-match>
			<log-match>-c -e "tx filtered"</log-match>
			<log-match>-c -e "tx exceed txop"</log-match>
			<log-match>-c -e "tx exceed timer"</log-match>
			<log-match>-c -e "rx ver mismatch"</log-match>
			<log-match>-c -e "rx old seq"</log-match>
			<log-match>-c -e "rx subframe dup"</log-match>
			<log-match>-c -e "rx too short"</log-match>
			<log-match>-c -e "rx wrong bssid"</log-match>
			<log-match>-c -e "rx wrong direction"</log-match>
			<log-match>-c -e "rx not assoc"</log-match>
			<no-error-check />
		</step>

		<step no="4.1">
			<desc>
				get ap2 mac1 content "rx data frames"
			</desc>
			<setvar name="ap2_mac1_content_1">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+rx data frames" -f ${log.dir}/step4_AP2_show_hive_counter_neighbor.log -t str | cut -d, -f1
			</setvar>
		</step>

		<step no="4.2">
			<desc>
				get ap2 mac1 content "rx unicast data frames"
			</desc>
			<setvar name="ap2_mac1_content_2">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+rx unicast data frames" -f ${log.dir}/step4_AP2_show_hive_counter_neighbor.log -t str | cut -d, -f1
			</setvar>
		</step>

		<step no="4.3">
			<desc>
				get ap2 mac1 content "tx data frames"
			</desc>
			<setvar name="ap2_mac1_content_3">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+tx data frames" -f ${log.dir}/step4_AP2_show_hive_counter_neighbor.log -t str | cut -d, -f1
			</setvar>
		</step>

		<step no="4.4">
			<desc>
				get ap2 mac1 content "tx unicast data frames"
			</desc>
			<setvar name="ap2_mac1_content_4">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+tx unicast data frames" -f ${log.dir}/step4_AP2_show_hive_counter_neighbor.log -t str | cut -d, -f1
			</setvar>
		</step>

		<step no="4.5">
			<desc>
				get ap2 mac1 content "rx data frames"
			</desc>
			<setvar name="ap2_mac3_content_1">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+rx data frames" -f ${log.dir}/step4_AP2_show_hive_counter_neighbor.log -t str | cut -d, -f2
			</setvar>
		</step>

		<step no="4.6">
			<desc>
				get ap2 mac1 content "rx unicast data frames"
			</desc>
			<setvar name="ap2_mac3_content_2">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+rx unicast data frames" -f ${log.dir}/step4_AP2_show_hive_counter_neighbor.log -t str | cut -d, -f2
			</setvar>
		</step>

		<step no="4.7">
			<desc>
				get ap2 mac1 content "tx data frames"
			</desc>
			<setvar name="ap2_mac3_content_3">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+tx data frames" -f ${log.dir}/step4_AP2_show_hive_counter_neighbor.log -t str | cut -d, -f2
			</setvar>
		</step>

		<step no="4.8">
			<desc>
				get ap2 mac1 content "tx unicast data frames"
			</desc>
			<setvar name="ap2_mac3_content_4">
				${bin.dir}/getbyrexp.py  -p "(\d+)\s+tx unicast data frames" -f ${log.dir}/step4_AP2_show_hive_counter_neighbor.log -t str | cut -d, -f2
			</setvar>
		</step>

		<step no="4.9">
			<desc>
				compare ap2 mac1 content "rx data frames"
			</desc>
			<script>
				c=$(echo "${ap2_mac1_content_1} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="4.10">
			<desc>
				compare ap2 mac1 content "rx unicast data frames"
			</desc>
			<script>
				c=$(echo "${ap2_mac1_content_2} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="4.11">
			<desc>
				compare ap2 mac1 content "tx data frames"
			</desc>
			<script>
				c=$(echo "${ap2_mac1_content_3} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="4.12">
			<desc>
				compare ap2 mac1 content "tx unicast data frames"
			</desc>
			<script>
				c=$(echo "${ap2_mac1_content_4} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="4.13">
			<desc>
				compare ap2 mac3 content "rx data frames"
			</desc>
			<script>
				c=$(echo "${ap2_mac3_content_1} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="4.14">
			<desc>
				compare ap2 mac3 content "rx unicast data frames"
			</desc>
			<script>
				c=$(echo "${ap2_mac3_content_2} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="4.15">
			<desc>
				compare ap2 mac3 content "tx data frames"
			</desc>
			<script>
				c=$(echo "${ap2_mac3_content_3} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>

		<step no="4.16">
			<desc>
				compare ap2 mac3 content "tx unicast data frames"
			</desc>
			<script>
				c=$(echo "${ap2_mac3_content_4} &gt; 0" | bc)
				if [[ $c -eq 1 ]]
				then
				exit 0
				else
				exit 1
				fi
			</script>
		</step>
	</stage>
</testcase>