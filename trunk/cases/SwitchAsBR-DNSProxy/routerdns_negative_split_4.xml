<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Split DNS mode, set a local or internet DNS server as internal DNS server, when use internal DNS server, verify if still through tunnel</brief>
	<priority>Middle</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Set interface eth0 to wan mod
		Eth0 obtain ip address from dhcp server
		Set interface eth1 to access mode and enable mac-learning
		Eth0 can obtain ip address from DHCP server
		Disable dhcp client on mgt0 and configure a static ip address
		Enable DHCP server on interface mgt0.1
		Enable DNS server on mgt0.1
		Set a internal DNS server dns1(this server locate in local or internet)
		Set a external DNS server dns1(this server locate in corporate network)
		Set internal domain name pattern test.com
		Set a SSID and bind it to interface wifi0
		Connect a client to SSID and make client obtain ip address from mgt0.1
		Use Wireshark to capture packet on client and DNS server
		Set filter _ff id 1 dst-port 53 bidirectional
		Open debug _kdebug fe basic/detail and debug console

		Test Procedure:
		1. Ping xxx.test.com from client, verify which DNS server be used, verify if will
		through tunnel
		2. Ping xxx.yyy.com from client, verify which DNS server be used, verify if will
		through tunnel
	</description>
	<numofbr>1</numofbr>
	<numofcvg>1</numofcvg>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>linux</tbtype>
	<property name="br1.vpc1.mask" value="255.255.255.0" />
	<stage>
		<include prefix="1" file="subs/vpn_setup_one_sw.xml" obj-args="cvg1, br1" />

		<step no="2.2">
			<desc>
				config mgt0.1 with dhcp service enable,dns service enable
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "vlan ${br1.vpc1.vlan}"
				-v "interface vlan ${br1.vpc1.vlan}"
				-v "interface vlan${br1.vpc1.vlan} ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options netmask ${br1.vpc1.mask}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options dns1 ${br1.br.mgt0.1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server enable"
				-v "interface vlan${br1.vpc1.vlan} dns-server int-domain-name ${cvg1.dns1.domain1}"
				-v "interface vlan${br1.vpc1.vlan} dns-server int-resolve dns1 ${cvg1.dns1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dns-server ext-resolve dns1 ${pub.dns1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dns-server enable"
			</telnet>
			<no-error-check />
		</step>

		<step no="2.3">
			<desc>
				Set interface eth1 to access mode and enable mac-learning
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface ${br1.br.lan.int1} switchport mode access"
				-v "interface ${br1.br.lan.int1} switchport access vlan ${br1.vpc1.vlan}"
			</telnet>
		</step>

		<!-- <step no="2.4"> <desc> config BR as l3 VPN client </desc> <telnet target="${br1.br.wan.ip}"> -v "save vpn ca-cert tftp://${pub.tftp1.tip}:certs/cacert.pem" -v "vpn client-ipsec-tunnel ${br1.br.name}_client_ipsec_1 vpn-mode layer-3" -v "vpn ipsec-tunnel ${br1.br.name}_client_ipsec_1 gateway ${cvg1.cvg.mip.ip} client-name ${br1.br.name} password aerohive" -v "vpn tunnel-policy vpn_tunnel_policy client ipsec-tunnel ${br1.br.name}_client_ipsec_1 primary" -v "routing route-request enable" -v "routing internal-sub-network ${br1.br.mgt0.ip}/${br.mgt0.supermask}" -v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${cvg1.cvg.wan.netmask}" </telnet> </step> -->

		<step no="2.5">
			<desc>br1.vpc1 get ip addr from dhcp server of mgt0.1</desc>
			<log-file>ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="2.6">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.7">
			<multi-setvar>
				echo "cvg1.dns1.ip.net=$(echo ${cvg1.dns1.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<step no="2.8">
			<multi-setvar>
				echo "pub.dns1.ip.net=$(echo ${pub.dns1.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<!-- <step no="3" delay="20" type="loop-check" loop-max-times="10" loop-interval="15"> <desc> check vpn ike sa on BR1 side </desc> <log-file>step3_ike_sa_br_${loop_check.idx}.log</log-file> <telnet target="${br1.br.wan.ip}"> -v "show vpn ike sa" </telnet> <log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.mip.ip}\[4500\]"</log-match> <no-error-check /> </step> -->

		<!-- <step no="3.1" type="loop-check" loop-max-times="10" loop-interval="15"> <desc> check vpn ike sa on CVG side </desc> <log-file>step3.1_ike_sa_cvg_${loop_check.idx}.log</log-file> <telnet target="${cvg1.cvg.tunnel.ip}" timeout="3"> -v "show vpn ike sa" </telnet> <log-match>-p 3 -i "9" -p 4 -i "R" -i "${pub.br_fw.ip}"</log-match> <no-error-check /> </step> -->

		<!-- <step no="3.2"> <desc> check gre tunnel on br1 side </desc> <log-file>step3.2_show_gre_tunnel_br.log</log-file> <telnet target="${br1.br.wan.ip}"> -v "show vpn layer-3-tunnel" </telnet> <log-match>-p 1 -i "tunnel0" -p 3 -i "${cvg1.cvg.wan.ip}" -p 4 -i "${br1.br.mgt0.ip}" -p 6 -i "${cvg1.cvg.mip.ip}"</log-match> <no-error-check /> </step> <step no="3.3"> <desc> check gre tunnel on cvg side </desc> <log-file>step3.3_show_gre_tunnel_cvg.log</log-file> <telnet target="${cvg1.cvg.tunnel.ip}" timeout="3"> -v "show vpn layer-3-tunnel" </telnet> <log-match>-p 1 -i "tunnel0" -p 3 -i "any" -p 4 -i "${cvg1.cvg.wan.ip}" -p 6 -i "anonymous"</log-match> <no-error-check /> </step> -->

		<step no="3.4">
			<desc>
				Set filter _ff id 1 dst-port 53 bidirectional
				Open debug _kdebug fe basic/detail and debug console
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "_ff id 1 dst-port 53 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
			</telnet>
		</step>

		<!-- <step no="3.5"> <desc> check gre tunnel on br1 side </desc> <log-file>step3.5_show_ip_route.log</log-file> <telnet target="${br1.br.wan.ip}"> -v "show ip route" </telnet> <no-error-check /> <log-match>-c -i "${cvg1.dns1.ip.net}" -i "tunnel0"</log-match> <log-match>-n -c -i "${pub.dns1.ip.net}" -i "tunnel0"</log-match> </step> -->

		<step no="4">
			<desc>
				packet capture on internal dns server
			</desc>
			<log-file>step4_inndns1_packet_capture.log</log-file>
			<ssh host="${cvg1.dns1.mip}">
				-v "nohup tshark -l -i ${cvg1.dns1.tif.name} ip proto 17 &gt; ${job.id}intdns_ping_1.log &amp;"
			</ssh>
		</step>

		<step no="4.1">
			<desc>
				get cvg1.dns1 tshark process
			</desc>
			<setvar name="dns1.tshark.id_1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4_inndns1_packet_capture.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="5.1">
			<desc>
				vpc ping internal domain name
			</desc>
			<log-file>step5.1_vpc_ping_internal_domain.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.dns1.domain1} -c 10"
			</ssh>
			<log-match>-c -i "from" -i "ttl="</log-match>
		</step>

		<step no="5.2">
			<desc>
				check ping packet on internal dns server
			</desc>
			<log-file>step5.2_intdns_check_ping_packet.log</log-file>
			<ssh host="${cvg1.dns1.mip}">
				-v "kill -9 ${dns1.tshark.id_1}"
				-v "cat ${job.id}intdns_ping_1.log"
				-v "rm -f ${job.id}intdns_ping_1.log"
			</ssh>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.br.mgt0.1.ip} -&gt; ${cvg1.dns1.ip}.+DNS.+Standard query.+A.+${cvg1.dns1.domain1}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.3">
			<desc>
				-check the logging result
			</desc>
			<log-file>step5.3_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="500">
				-v "show logging buffered"
				-v "clear log all"
			</telnet>
			<no-error-check />
		</step>

		<step no="6">
			<desc>
				packet capture on dns server
			</desc>
			<log-file>step6_dns_server_packet_capture.log</log-file>
			<ssh host="${pub.dns1.ip}">
				-v "nohup tshark -l -i ${pub.http_server.tif.name} ip proto 17 &gt; ${job.id}ping_2.log &amp;"
			</ssh>
		</step>

		<step no="6.1">
			<desc>
				get tcpdump process
			</desc>
			<setvar name="tcpdump.id_2">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step6_dns_server_packet_capture.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="6.2">
			<desc>
				vpc ping external domain name
			</desc>
			<log-file>step6.2_vpc_ping_external_domain.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.domain1} -c 10"
			</ssh>
			<log-match>-c -i "from" -i "ttl="</log-match>
		</step>

		<step no="6.3">
			<desc>
				check ping packet on external dns server
			</desc>
			<log-file>step6.3_check_ping_packet.log</log-file>
			<ssh host="${pub.dns1.ip}">
				-v "kill -9 ${tcpdump.id_2}"
				-v "cat ${job.id}ping_2.log | grep '${pub.dns1.domain1}'"
			</ssh>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${pub.br_fw.ip}\s+-&gt;\s+${pub.dns1.ip} DNS Standard query A ${pub.dns1.domain1}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7" delay="30">
			<desc>
				-check the logging result
			</desc>
			<log-file>step7_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="500">
				-v "show logging buffered"
				-v "clear log all"
			</telnet>
			<no-error-check />
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0.1">
				<desc>
					clear file
				</desc>
				<ssh host="${cvg1.dns1.mip}">
					-v "kill -9 ${dns1.tshark.id_1}"
					-v "rm -f ${job.id}intdns_ping_1.log"
				</ssh>
			</step>

			<step no="0.2">
				<desc>
					kill dns server ping process
					clear file
				</desc>
				<ssh host="${pub.dns1.ip}">
					-v "kill -9 ${tcpdump.id_2}"
					-v "rm -f ${job.id}ping_2.log"
				</ssh>
			</step>
		</stage>

		<include file="include/br_default_post_process.xml" />
	</post-process>
</testcase>