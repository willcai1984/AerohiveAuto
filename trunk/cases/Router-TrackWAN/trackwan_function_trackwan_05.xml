<?xml version="1.0" encoding="UTF-8"?>
<testcase>
    <brief>Track-wan process when it's configured on different interfaces</brief>    
	<priority>Accept</priority>
    <automated>yes</automated>
    <description>        
		Pre-Condition:
					  1. AP is running with default config
		Test Procedure:
				      1. Track-wan process when it's configured on different interfaces
		Expect Result: 
					  Result 1:Track-wan process when it's configured on different interfaces
    </description>
    <numofbr>1</numofbr>
    <numofsta>0</numofsta>
	<br-opt-modem>1</br-opt-modem>
    <tbtype>linux</tbtype>
	
	<property name="usbmodem_id" value="huawei_e220" />
	<property name="apn_name" value="3gnet" />
	<property name="usbmodem_mode" value="always-connected" />
	<property name="customized_interval" value="15" />
	<property name="track_wan_name" value="use-for-wan" />
	<property name="track_wan_name_eth0" value="use-for-wan-eth0" />
	<property name="track_wan_name_usbnet0" value="use-for-wan-usbnet0" />
	<property name="unreachable_ip_address" value="9.9.9.9" />
	<property name="google_dns_ip" value="8.8.8.8" />
  
    <stage>
	
		<step no="1.1.1">
            <desc>
				Config usb modem as always-connect mode
            </desc>
			<console target="br1.br">
				-v "usbmodem modem-id ${usbmodem_id} apn ${apn_name}"			
				-v ""
				-v ""
				-v ""
				-v ""
				-v "usbmodem mode ${usbmodem_mode}"
				-v ""
				-v ""
				-v ""
				-v ""
				-v ""
				-v "usbmodem enable"
			</console>	
        </step>
		
		<step no="1.2.1">
            <desc>
				Track-wan process when it's configured on different interfaces
            </desc>
			<console target="br1.br">
				-v "no track-wan ${track_wan_name_eth0} "
				-v "no track-wan ${track_wan_name_usbnet0} "
				-v "track-wan ${track_wan_name} "
				-v "track-wan ${track_wan_name} ip ${mpc.tif.ip}"
				-v "track-wan ${track_wan_name} ip ${google_dns_ip}"
				-v "track-wan ${track_wan_name} ip ${unreachable_ip_address}"
				-v "track-wan ${track_wan_name} interface eth0"
				-v "track-wan ${track_wan_name} interface usbnet0"
				-v "track-wan ${track_wan_name} enable"
			</console>		
        </step>
		
		<step no="1.3.1" delay="150">
            <desc>
            	  Check wan monitor state of each interface
            </desc>
            <log-file>step1.3.1_CheckWanState.log</log-file>
            <console target="br1.br">
				-v "show track-wan"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b 'Interface:\s+eth0' -e 'Interface:\s+usbnet0' -p 'WAN Monitor State: down' -f ${log.dir}/${log.file}				
			</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b 'Interface:\s+usbnet0' -p 'WAN Monitor State: down' -f ${log.dir}/${log.file}				
			</log-match>
        </step>
		
		<step no="1.4.1">
            <desc>
				Config track-wan ip
            </desc>
			<console target="br1.br">
				-v "no track-wan ${track_wan_name} ip ${google_dns_ip}"
			</console>		
        </step>
		
		<step no="1.5.1" delay="30">
            <desc>
            	  Check wan monitor state of each interface
            </desc>
            <log-file>step1.5.1_CheckWanState.log</log-file>
            <console target="br1.br">
				-v "show track-wan"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b 'Interface:\s+eth0' -e 'Interface:\s+usbnet0' -p 'WAN Monitor State: down' -f ${log.dir}/${log.file}				
			</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b 'Interface:\s+usbnet0' -p 'WAN Monitor State: down' -f ${log.dir}/${log.file}				
			</log-match>
        </step>
		
		<step no="1.6.1">
            <desc>
				Config track-wan ip
            </desc>
			<console target="br1.br">
				-v "no track-wan ${track_wan_name} ip ${unreachable_ip_address}"
			</console>		
        </step>
		
		<step no="1.7.1" delay="30">
            <desc>
            	  Check wan monitor state of each interface
            </desc>
            <log-file>step1.7.1_CheckWanState.log</log-file>
            <console target="br1.br">
				-v "show track-wan"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b 'Interface:\s+eth0' -e 'Interface:\s+usbnet0' -p 'WAN Monitor State: up' -f ${log.dir}/${log.file}				
			</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b 'Interface:\s+usbnet0' -p 'WAN Monitor State: down' -f ${log.dir}/${log.file}				
			</log-match>
        </step>
		
		
		<step no="1.8.1">
            <desc>
				Config track-wan usbnet0 ip
            </desc>
			<console target="br1.br">
				-v "track-wan ${track_wan_name} ip ${google_dns_ip}"
				-v "no track-wan ${track_wan_name} ip ${mpc.tif.ip}"
			</console>		
        </step>
		
		<step no="1.9.1" delay="100">
            <desc>
            	  Check wan monitor state of each interface
            </desc>
            <log-file>step1.9.1_CheckWanState.log</log-file>
            <console target="br1.br">
				-v "show track-wan"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b 'Interface:\s+eth0' -e 'Interface:\s+usbnet0' -p 'WAN Monitor State: down' -f ${log.dir}/${log.file}				
			</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b 'Interface:\s+usbnet0' -p 'WAN Monitor State: up' -f ${log.dir}/${log.file}				
			</log-match>
        </step>
	</stage>
		
</testcase>