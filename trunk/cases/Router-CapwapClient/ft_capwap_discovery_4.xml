<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>When HiveAPs are in managed state on HM, what is the capwap state on HiveAPs. If capwap traffic is cut off.</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		HiveAPs are accepted as managed APs.
		HiveAPs and HM are in capwap communication.

		Test Procedure:
		1. Check the HiveAPs capwap state.
		2. Check capwap state on HM in newly discovered page.
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>windows</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />

	<stage>
		<include prefix="start_selenium_server" file="subs/start_selenium_server.xml" args="${sta1.mif.ip}, ${job_selenium_dir}, ${job_selenium_jar}, ${job_selenium_workload}" />

		<step no="1">
			<desc>
				HiveAPs are accepted as managed APs.
				HiveAPs and HM are in capwap communication.
			</desc>
			<telnet target="ap1">
				-v "capwap client enable"
				-v "capwap client server name ${pub.hm1.ip}"
			</telnet>
		</step>

		<step no="1.1">
			<desc>config ap2</desc>
			<telnet target="ap2">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="1.2" delay="180">
			<desc>
				1. Check the HiveAPs capwap state.
			</desc>
			<log-file>discovery_4_check_capwap_state.log</log-file>
			<telnet target="ap1">
				-v "show capwap client"
			</telnet>
			<log-match>-c -i "RUN state: Connected securely to the CAPWAP server"</log-match>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap2" />

		<step no="2">
			<desc>upload delta configura</desc>
			<log-file>discovery4_upload_delta_config.log</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/hm/upload_config_new.py -r http://${sta1.mif.ip}:4444/wd/hub -t ie -f ${log.dir}/${log.file} -l debug --parameters login.server=https://${pub.hm1.ip}/ upload.policy=QuickStart-Wireless-Only upload.type=complete ap.mgt0_ip=${ap1.mgt0.ip}
			</script>
		</step>

		<step no="3" delay="180">
			<desc>
				1. Shut down wifi1.
				if shutdown wifi1,need to have a hive name
			</desc>
			<console target="ap1">
				-v "interface eth0 shutdown"
				-v "interface eth1 shutdown"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 hive ${hive.name} shutdown"
			</console>
		</step>

		<step no="3.1">
			<desc>
				no capwap client enable
			</desc>
			<console target="ap1">
				-v "no capwap client enable"
			</console>
		</step>

		<step no="3.2">
			<desc>
				capwap client enable
			</desc>
			<console target="ap1">
				-v "capwap client enable"
			</console>
		</step>

		<step no="4" delay="60">
			<desc>
				check on hm
			</desc>
			<log-file>discovery_4_check_capwap_state_on_hm.log</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/hm/tools.py -r http://${sta1.mif.ip}:4444/wd/hub -t ie -f ${log.dir}/${log.file} -l info --parameters login.server=https://${pub.hm1.ip}/ tool.name=get_connection ap.mgt0_ip=${ap1.mgt0.ip}
			</script>
		</step>

		<step no="5">
			<desc>
				1. Check the HiveAPs capwap state.
			</desc>
			<log-file>discovery_4_check_capwap_state1.log</log-file>
			<console target="ap1">
				-v "show capwap client"
			</console>
			<log-match>-c -n -i "RUN state: Connected securely to the CAPWAP server"</log-match>
		</step>
	</stage>

	<post-process>
		<stage>
			<include prefix="stop_selenium_server" file="subs/stop_selenium_server.xml" args="${sta1.mif.ip}, ${job_selenium_workload}" />
		</stage>
		<include file="include/default_post_process.xml" />

	</post-process>
</testcase>