<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Modify username/password when PPPoE link had been established</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		Test Procedure:
		1) BR connects to PPPoE server successfully
		2) Laptop connects to any web site(such as google)
		3) Modify PPPoE username/password(Type in mgt0 IPaddr to log in MiniUI via
		browser)
		4) Laptop connects to any web site(such as google)
	</description>
	<numofbr>1</numofbr>
	<numofcvg>0</numofcvg>
	<tbtype>winlin</tbtype>

	<property name="pppoe.Remote.ip" value="10.0.10.22" />
	<property name="pppoe.test.username" value="sigma1" />
	<property name="pppoe.test.password" value="sigma2" />

	<stage>
<!-- 		<step no="2">
			<desc>configure mgt0.1 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				Set one user-profile and define the attribute x
				Bind the security-object to the port.
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "interface eth1 mac-learning enable"
			</telnet>
		</step>
 -->
		<step no="2.2">
			<desc>
				eth0 WAN is working as PPPoE
			</desc>
			<console target="br1.br" timeout="180">
				-v "interface eth0 pppoe username ${pub.pppoe1.username} password ${pub.pppoe1.passwd}"
				-v "interface eth0 pppoe enable"
			</console>
		</step>

		<step no="3">
			<desc>
				get ip address
			</desc>
			<log-file>step3_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ifconfig ${br1.vpc1.tif.name} down"
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="3.1">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="3.2">
			<desc>
				show dns
			</desc>
			<log-file>step3.2_check_dns.log</log-file>
			<console target="br1.br">
				-v "show dns"
			</console>
		</step>

		<step no="3.3">
			<desc>
				get dns
			</desc>
			<setvar name="dns1.addr">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step3.2_check_dns.log -p "Primary\s+:\s+(\S+)" -t str
			</setvar>
		</step>

		<step no="4" delay="10" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				show interface eth0 pppoe
			</desc>
			<log-file>step4_show_interface_eth0_pppoe_${loop_check.idx}.log</log-file>
			<console target="br1.br" timeout="300">
				-v "show interface eth0 pppoe"
			</console>
			<log-match>-c -i "Remote IP: ${pppoe.Remote.ip}"</log-match>
			<log-match>-c -i "PPPoE status: enabled"</log-match>
			<log-match>-c -i "Username: ${pub.pppoe1.username}"</log-match>
			<log-match>-c -i "Connection status: connected"</log-match>
		</step>

		<step no="4.1" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				vpc ping dns
			</desc>
			<log-file>step4.1_vpc_ping_dns_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${dns1.addr} -c 5"
			</ssh>
			<log-match>-c -i "from ${dns1.addr}" -i "ttl="</log-match>
		</step>

		<step no="5">
			<desc>
				Modify PPPoE username/password
			</desc>
			<console target="br1.br" timeout="180">
				-v "interface eth0 pppoe username ${pppoe.test.username} password ${pppoe.test.password}"
			</console>
		</step>

		<step no="6" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				show interface eth0 pppoe
			</desc>
			<log-file>step6_show_interface_eth0_pppoe_${loop_check.idx}.log</log-file>
			<console target="br1.br" timeout="300">
				-v "show interface eth0 pppoe"
			</console>
			<log-match>-c -i "PPPoE status: enabled"</log-match>
			<log-match>-c -i "Connection status: unconnect"</log-match>
			<failed>next</failed>
		</step>

		<step no="6.1" delay="10">
			<desc>
				show dns
			</desc>
			<log-file>step6.1_check_dns.log</log-file>
			<console target="br1.br">
				-v "show dns"
			</console>
		</step>

		<step no="6.2">
			<desc>
				get dns
			</desc>
			<setvar name="dns2.addr">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step6.1_check_dns.log -p "Primary\s+:\s+(\S+)" -t str
			</setvar>
		</step>

		<step no="6.3" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				vpc ping dns
			</desc>
			<log-file>step6.3_vpc_ping_dns_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${dns2.addr} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${dns2.addr}" -i "ttl="</log-match>
		</step>
	</stage>
</testcase>
