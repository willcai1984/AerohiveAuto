<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>PPPoE parameters test</brief>
	<priority>Middle</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		Test Procedure:
		1) Configure normal PPPoE and band it to eth0
		2) Log in shell and show PPPoE parameters
		3) Ps process and look up PPPD's parameters
	</description>
	<numofbr>1</numofbr>
	<numofcvg>0</numofcvg>
	<tbtype>winlin</tbtype>

	<property name="pppoe.Remote.ip" value="10.0.10.22" />

	<stage>
		<step no="1">
			<desc>
				Configure normal PPPoE and band it to eth0
			</desc>
			<console target="br1.br">
				-v "interface eth0 pppoe username ${pub.pppoe1.username} password ${pub.pppoe1.passwd}"
				-v "interface eth0 pppoe enable"
			</console>
		</step>

		<step no="2" delay="10" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>
				show PPPoE parameters
			</desc>
			<log-file>step2_show_interface_pppoe_${loop_check.idx}.log</log-file>
			<console target="br1.br">
				-v "show interface eth0 pppoe"
			</console>
			<log-match>-c -i "Remote IP: ${pppoe.Remote.ip}"</log-match>
			<log-match>-c -i "PPPoE status: enabled"</log-match>
			<log-match>-c -i "Username: ${pub.pppoe1.username}"</log-match>
			<log-match>-c -i "Connection status: connected"</log-match>
		</step>

		<step no="3">
			<desc>
				Ps process and look up PPPDâ€™s parameters
			</desc>
			<log-file>step3_check_PPPD_process.log</log-file>
			<console target="br1.br" prompt="\$|AH.*#">
				-b -sp "${br1.br.shellpwd}"
				-v "_shell"
				-v "ps"
				-v "exit"
				-v ""
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "ps" -ps p0 "Pppd" -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>
</testcase>
