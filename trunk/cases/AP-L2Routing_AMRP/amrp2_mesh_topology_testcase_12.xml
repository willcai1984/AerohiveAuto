<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Two portals one MP boot up, Check loop protected</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		-configure three APs in the same subnet and same hive.
		-Client1 associate to Portal1
		-Client2 associate to MP
		-Portal1 is MP's BMT

		Test Procedure:

		1. Client1 associate to Portal1 send broadcast packets. Check how Portal1
		handle
		2. Client1 send a broadcast packets, check how Portal2 handle
		3. Client1 send a broadcast packets, check how MP handle
		4. Portal1 will receive broadcast packets,src-mac is client1's mac. So how
		Portal1 will handle
		5. Client2 associate to MP send broadcast packets. Check how MP handle
		6. Client2 send a broadcast packets, check how Portal2 handle
		7. Client2 send a broadcast packets, check how Portal1 handle
		8. PC send a broadcast pkts heck how Portal1 handle
		9. PC send a broadcast packet, check how Portal2 handle
		10. PC send a broadcast packet, check how MP handle
	</description>
	<numofap>3</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.ssid" value="${ssid.name}_1" />
	<property name="conn1.proto" value="open" />
	<property name="conn2.ssid" value="${ssid.name}_2" />
	<property name="conn2.proto" value="open" />

	<stage>
		<step no="1.1.0">
			<desc>
				-if eth1 exist,shutdown eth1
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<console target="ap1">
				-v "interface eth1 shutdown"
			</console>
		</step>
		
		<step no="1.1">
			<desc>
				-configure mp1
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<console target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${conn1.ssid}"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "interface wifi1 radio channel 40"
				-v "interface eth0 shutdown"
				-v "save config"
			</console>
		</step>
		
		<step no="1.1_0">
			<desc>
				-configure mp1
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<console target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${conn1.ssid}"
				-v "interface eth0 mode backhaul"
				-v "interface eth0 mac-learning enable" 
				-v "no interface mgt0 dhcp-server enable"
				-v "no interface mgt0 ip"
				-v "interface mgt0 dhcp client"
				-v "interface wifi0 mode dual"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "save config"
			</console>
		</step>

		<step no="1.1.1">
			<desc>
				-show interface in mp1
			</desc>
			<log-file>step1.1.1_show_interface_ap1.log</log-file>
			<console target="ap1">
				-v "show interface"
			</console>
		</step>

		<step no="1.1.2">
			<desc>
				Get mgt0 mac in mp1
			</desc>
			<setvar name="mp1.mgt0.mac">
				${bin.dir}/getbyrexp.py -p "Mgt0 *(\S+) *" -f ${log.dir}/step1.1.1_show_interface_ap1.log -t str
			</setvar>
		</step>

		<step no="1.1.3">
			<desc>
				Get wifi1 mac in mp1
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<setvar name="mp1.wifi1.mac">
				${bin.dir}/getbyrexp.py -p "Wifi1.1 *(\S+) *" -f ${log.dir}/step1.1.1_show_interface_ap1.log -t str
			</setvar>
		</step>
		
		<step no="1.1.3_0">
			<desc>
				Get wifi1 mac in mp1
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<setvar name="mp1.wifi1.mac">
				${bin.dir}/getbyrexp.py -p "Wifi0.1 *(\S+) *" -f ${log.dir}/step1.1.1_show_interface_ap1.log -t str
			</setvar>
		</step>

		<step no="1.2">
			<desc>
				-configure Portal1
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<telnet target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${conn2.ssid}"
				-v "interface wifi0 ssid ${conn2.ssid}"
				-v "interface wifi1 radio channel 40"
				-v "save config"
			</telnet>
		</step>
		
		<step no="1.2_0">
			<desc>
				-configure Portal1
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<telnet target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface eth0 mode backhaul"
				-v "interface eth0 mac-learning enable" 
				-v "no interface mgt0 dhcp-server enable"
				-v "no interface mgt0 ip"
				-v "interface mgt0 dhcp client"
				-v "interface wifi0 mode dual"
				-v "interface wifi0 radio channel 11"
				-v "ssid ${conn2.ssid}"
				-v "interface wifi0 ssid ${conn2.ssid}"
				-v "save config"
			</telnet>
		</step>

		<step no="1.2.1">
			<desc>
				-show interface in portal1
			</desc>
			<log-file>step1.2.1_show_interface_ap2.log</log-file>
			<telnet target="ap2">
				-v "show interface"
			</telnet>
		</step>

		<step no="1.2.2">
			<desc>
				Get mgt0 mac in portal1
			</desc>
			<setvar name="por1.mgt0.mac">
				${bin.dir}/getbyrexp.py -p "Mgt0 *(\S+) *" -f ${log.dir}/step1.2.1_show_interface_ap2.log -t str
			</setvar>
		</step>

		<step no="1.2.3">
			<desc>
				Get wifi1 mac in portal1
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<setvar name="por1.wifi1.mac">
				${bin.dir}/getbyrexp.py -p "Wifi1.1 *(\S+) *" -f ${log.dir}/step1.2.1_show_interface_ap2.log -t str
			</setvar>
		</step>
		
		<step no="1.2.3_0">
			<desc>
				Get wifi1 mac in portal1
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<setvar name="por1.wifi1.mac">
				${bin.dir}/getbyrexp.py -p "Wifi0.1 *(\S+) *" -f ${log.dir}/step1.2.1_show_interface_ap2.log -t str
			</setvar>
		</step>
		
		<step no="1.3">
			<desc>
				-configure Portal2
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<telnet target="ap3">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 40"
				-v "save config"
			</telnet>
		</step>
		
		<step no="1.3_0">
			<desc>
				-configure Portal2
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<telnet target="ap3">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface eth0 mode backhaul"
				-v "interface eth0 mac-learning enable" 
				-v "no interface mgt0 dhcp-server enable"
				-v "no interface mgt0 ip"
				-v "interface mgt0 dhcp client"
				-v "interface wifi0 mode dual"
				-v "interface wifi0 radio channel 11"
				-v "save config"
			</telnet>
		</step>
		
		<step no="1.3.0">
			<desc>
				-configure mp1
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<console target="ap1">
				-v "interface eth0 shutdown"
				-v "save config"
			</console>
		</step>

		<step no="1.3.1" delay="45">
			<desc>
				-show interface in Portal2
			</desc>
			<log-file>step1.3.1_show_interface_ap3.log</log-file>
			<telnet target="ap3">
				-v "show interface"
			</telnet>
		</step>

		<step no="1.3.2">
			<desc>
				Get mgt0 mac in Portal2
			</desc>
			<setvar name="por2.mgt0.mac">
				${bin.dir}/getbyrexp.py -p "Mgt0 *(\S+) *" -f ${log.dir}/step1.3.1_show_interface_ap3.log -t str
			</setvar>
		</step>

		<step no="1.3.3">
			<desc>
				Get wifi1 mac in Portal2
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<setvar name="por2.wifi1.mac">
				${bin.dir}/getbyrexp.py -p "Wifi1.1 *(\S+) *" -f ${log.dir}/step1.3.1_show_interface_ap3.log -t str
			</setvar>
		</step>
		
		<step no="1.3.3_0">
			<desc>
				Get wifi1 mac in Portal2
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<setvar name="por2.wifi1.mac">
				${bin.dir}/getbyrexp.py -p "Wifi0.1 *(\S+) *" -f ${log.dir}/step1.3.1_show_interface_ap3.log -t str
			</setvar>
		</step>

		<include prefix="1.4" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<include prefix="1.5" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta2, ap2" />

		<step no="2.1">
			<desc>
				-reboot Portal1
			</desc>
			<console target="ap2">
				-v "reboot"
			</console>
		</step>

		<step no="2.2" delay="15">
			<desc>
				-reboot mp1
			</desc>
			<console target="ap1">
				-v "reboot"
			</console>
		</step>

		<step no="2.3" delay="15">
			<desc>
				-reboot Portal2
			</desc>
			<console target="ap3">
				-v "reboot"
			</console>
		</step>
		
		<step no="3.1.0" delay="120">
			<desc>
				-configure mp1
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<console target="ap1">
				-v "interface wifi0 radio channel 11"
			</console>
		</step>
		
		<step no="3.1.1">
			<desc>
				-configure mp1
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<console target="ap2">
				-v "interface wifi0 radio channel 11"
			</console>
		</step>
		
		<step no="3.1.2">
			<desc>
				-configure mp1
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<console target="ap3">
				-v "interface wifi0 radio channel 11"
			</console>
		</step>

		<step no="3.1" delay="120">
			<desc>
				open debug on Portal1
			</desc>
			<console target="ap2">
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_ff protocol 1"
				-v "clear log all"
			</console>
		</step>

		<step no="3.2">
			<desc>
				open debug on Portal2
			</desc>
			<console target="ap3">
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_ff protocol 1"
				-v "clear log all"
			</console>
		</step>

		<step no="3.3">
			<desc>
				open debug on mp1
			</desc>
			<console target="ap1">
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_ff protocol 1"
				-v "clear log all"
			</console>
		</step>

		<step no="4">
			<desc>ping from sta2 to ${tb.vlan1.broadcast}</desc>
			<log-file>step4_sta2_send_broadcast.log</log-file>
			<ssh target="sta2">
				-v "ping ${tb.vlan1.broadcast} -b -c 5"
			</ssh>
			<no-error-check />
			<log-match>-c -i "from ${ap2.mgt0.gw}: " -i "ttl="</log-match>
		</step>

		<include prefix="4.0.1" file="subs/save_ap_log.xml" args="show logging buffered, ap2, step4.0.1_show_logging_buffered_por1.log" />

		<include prefix="4.0.2" file="subs/save_ap_log.xml" args="show logging buffered, ap3, step4.0.2_show_logging_buffered_por2.log" />

		<step no="4.1">
			<desc>
				-check logging buffered in Portal1
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<log-file>step4.0.1_show_logging_buffered_por1.log</log-file>
			<no-error-check />
			<log-match>-i "(i) wifi0.1 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi1.1 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi0.1 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) eth0 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "\[fe\]: wifi1.1 drop illegal broadcast from ${mp1.wifi1.mac} route-nhop ${por1.mgt0.mac}"</log-match>
			<log-match>-i "\[fe\]: wifi1.1 drop illegal broadcast from ${por2.wifi1.mac} route-nhop ${por1.mgt0.mac}"</log-match>
		</step>
		
		<step no="4.1_0">
			<desc>
				-check logging buffered in Portal1
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<log-file>step4.0.1_show_logging_buffered_por1.log</log-file>
			<no-error-check />
			<log-match>-i "(i) wifi0.2 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi0.1 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi0.2 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) eth0 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "\[fe\]: wifi0.1 drop illegal broadcast from ${mp1.wifi1.mac} route-nhop ${por1.mgt0.mac}"</log-match>
			<log-match>-i "\[fe\]: wifi0.1 drop illegal broadcast from ${por2.wifi1.mac} route-nhop ${por1.mgt0.mac}"</log-match>
		</step>

		<step no="4.2">
			<desc>
				-show logging buffered in mp1
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<log-file>step4.2_show_logging_mp1.log</log-file>
			<console target="ap1" timeout="240">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-i "(i) wifi1.1 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "\[fe\]: wifi1.1 drop illegal broadcast from ${por2.wifi1.mac}" -i "route-nhop ${por1.wifi1.mac}"</log-match>
			<log-match>-i "(o) wifi1.1 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "\[fe\]: interface down, don't flood on eth0"</log-match>
		</step>
		
		<step no="4.2_0">
			<desc>
				-show logging buffered in mp1
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<log-file>step4.2_show_logging_mp1.log</log-file>
			<console target="ap1" timeout="240">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-i "(i) wifi0.1 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "wifi0.1 drop illegal broadcast from ${por2.wifi1.mac}" -i "route-nhop ${por1.wifi1.mac}"</log-match>
			<log-match>-i "(o) wifi0.1 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "interface down, don't flood on eth0"</log-match>
		</step>

		<step no="4.3">
			<desc>
				-show logging buffered in Portal2
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<log-file>step4.0.2_show_logging_buffered_por2.log</log-file>
			<no-error-check />
			<log-match>-i "(i) eth0 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(i) wifi1.1 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "\[fe\]: wifi1.1 drop illegal broadcast from ${por1.wifi1.mac}" -i "route-nhop ${por2.mgt0.mac}"</log-match>
			<log-match>-i "\[fe\]: wifi1.1 drop illegal broadcast from ${mp1.wifi1.mac}" -i "route-nhop ${por2.mgt0.mac}"</log-match>
			<log-match>-i "(o) wifi1.1 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "\[fe\]: eth0 no broadcast out from incoming port"</log-match>
		</step>
		
		<step no="4.3_0">
			<desc>
				-show logging buffered in Portal2
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<log-file>step4.0.2_show_logging_buffered_por2.log</log-file>
			<no-error-check />
			<log-match>-i "(i) eth0 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(i) wifi0.1 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "wifi0.1 drop illegal broadcast from ${por1.wifi1.mac}" -i "route-nhop ${por2.mgt0.mac}"</log-match>
			<log-match>-i "wifi0.1 drop illegal broadcast from ${mp1.wifi1.mac}" -i "route-nhop ${por2.mgt0.mac}"</log-match>
			<log-match>-i "(o) wifi0.1 ${sta2.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "eth0 no broadcast out from incoming port"</log-match>
		</step>

		<step no="4.4.1">
			<desc>
				clear log all on Portal1
			</desc>
			<console target="ap2">
				-v "clear log all"
			</console>
		</step>

		<step no="4.4.2">
			<desc>
				clear log all on Portal2
			</desc>
			<console target="ap3">
				-v "clear log all"
			</console>
		</step>

		<step no="4.4.3">
			<desc>
				clear log all on mp1
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="4.4.4">
			<desc>
				show route in mp1
			</desc>
			<log-file>step4.4.4_show_route_mp1.log</log-file>
			<console target="ap1">
				-v "show route"
			</console>
		</step>

		<step no="4.4.5">
			<desc>
				get the result of search
			</desc>
			<setvar name="search.result1">
				echo `${bin.dir}/searchblocks.py -ps p "0000:0000:0000 *${por1.wifi1.mac} *wifi1.1" -f ${log.dir}/step4.4.4_show_route_mp1.log`
			</setvar>
			<no-error-check />
		</step>

		<step no="5" delay="120">
			<desc>ping from sta1 to ${tb.vlan1.broadcast}</desc>
			<log-file>step5_sta1_send_broadcast.log</log-file>
			<ssh target="sta1">
				-v "ping ${tb.vlan1.broadcast} -b -c 5"
			</ssh>
			<no-error-check />
			<log-match>-c -i "from ${ap1.mgt0.gw}: " -i "ttl="</log-match>
		</step>

		<include prefix="5.0.1" file="subs/save_ap_log.xml" args="show logging buffered, ap2, step5.0.1_show_logging_buffered_por1.log" />

		<include prefix="5.0.2" file="subs/save_ap_log.xml" args="show logging buffered, ap3, step5.0.2_show_logging_buffered_por2.log" />

		<step no="5.1">
			<desc>
				-check logging buffered in Portal1
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<log-file>step5.0.1_show_logging_buffered_por1.log</log-file>
			<no-error-check />
			<log-match>-i "(i) wifi1.1 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi1.1 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
		</step>
		
		<step no="5.1_0">
			<desc>
				-check logging buffered in Portal1
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<log-file>step5.0.1_show_logging_buffered_por1.log</log-file>
			<no-error-check />
			<log-match>-i "(i) wifi0.1 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi0.1 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
		</step>

		<step no="5.2">
			<desc>
				-show logging buffered in mp1
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<log-file>step5.2_show_logging_mp1.log</log-file>
			<console target="ap1" timeout="240">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-i "(i) wifi0.1 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "\[fe\]: wifi1.1 drop illegal broadcast from ${por2.wifi1.mac}" -i "route-nhop ${mp1.mgt0.mac}"</log-match>
			<log-match>-i "\[fe\]: wifi1.1 drop illegal broadcast from ${por1.wifi1.mac}" -i "route-nhop ${mp1.mgt0.mac}"</log-match>
			<log-match>-i "(o) wifi1.1 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi0.1 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "\[fe\]: interface down, don't flood on eth0"</log-match>
		</step>
		
		<step no="5.2_0">
			<desc>
				-show logging buffered in mp1
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<log-file>step5.2_show_logging_mp1.log</log-file>
			<console target="ap1" timeout="240">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-i "(i) wifi0.2 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "wifi0.1 drop illegal broadcast from ${por2.wifi1.mac}" -i "route-nhop ${mp1.mgt0.mac}"</log-match>
			<log-match>-i "\[fe\]: wifi0.1 drop illegal broadcast from ${por1.wifi1.mac}" -i "route-nhop ${mp1.mgt0.mac}"</log-match>
			<log-match>-i "(o) wifi0.1 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi0.2 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "interface down, don't flood on eth0"</log-match>
		</step>

		<step no="5.3">
			<desc>
				-check logging buffered in Portal2
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<log-file>step5.0.2_show_logging_buffered_por2.log</log-file>
			<no-error-check />
			<log-match>-i "(i) wifi1.1 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi1.1 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-n -i "(o) eth0 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "\[fe\]: wifi1.1 drop illegal broadcast from ${por1.wifi1.mac}" -i "route-nhop ${por2.mgt0.mac}"</log-match>
		</step>
		
		<step no="5.3_0">
			<desc>
				-check logging buffered in Portal2
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<log-file>step5.0.2_show_logging_buffered_por2.log</log-file>
			<no-error-check />
			<log-match>-i "(i) wifi0.1 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi0.1 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-n -i "(o) eth0 ${sta1.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
		</step>

		<step no="5.4.1">
			<desc>
				clear log all on Portal1
			</desc>
			<console target="ap2">
				-v "clear log all"
			</console>
		</step>

		<step no="5.4.2">
			<desc>
				clear log all on Portal2
			</desc>
			<console target="ap3">
				-v "clear log all"
			</console>
		</step>

		<step no="5.4.3">
			<desc>
				clear log all on mp1
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="5.4.3.1">
			<desc>
				-show route in mp1
			</desc>
			<log-file>step5.4.3.1_show_route_mp1.log</log-file>
			<console target="ap1">
				-v "show route"
			</console>
		</step>

		<step no="5.4.3.2">
			<desc>
				get the result of search
			</desc>
			<setvar name="search.result2">
				echo `${bin.dir}/searchblocks.py -ps p "0000:0000:0000 *${por2.wifi1.mac} *wifi1.1" -f ${log.dir}/step5.4.3.1_show_route_mp1.log`
			</setvar>
			<no-error-check />
		</step>

		<step no="6">
			<desc>ping from mpc to ${tb.vlan1.broadcast}</desc>
			<log-file>step6_mpc_send_broadcast.log</log-file>
			<script>
				ping ${tb.vlan1.broadcast} -b -c 5
			</script>
			<no-error-check />
		</step>

		<include prefix="6.0.1" file="subs/save_ap_log.xml" args="show logging buffered, ap2, step6.0.1_show_logging_buffered_por1.log" />

		<include prefix="6.0.2" file="subs/save_ap_log.xml" args="show logging buffered, ap3, step6.0.2_show_logging_buffered_por2.log" />

		<step no="6.1">
			<desc>
				-check logging buffered in Portal1
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<log-file>step6.0.1_show_logging_buffered_por1.log</log-file>
			<no-error-check />
			<log-match>-i "(i) eth0 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi1.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(i) wifi1.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "\[fe\]: wifi1.1 drop illegal broadcast from ${por2.wifi1.mac}" -i "route-nhop ${por1.mgt0.mac}"</log-match>
			<log-match>-i "\[fe\]: wifi1.1 drop illegal broadcast from ${mp1.wifi1.mac}" -i "route-nhop ${por1.mgt0.mac}"</log-match>
		</step>
		
		<step no="6.1_0">
			<desc>
				-check logging buffered in Portal1
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<log-file>step6.0.1_show_logging_buffered_por1.log</log-file>
			<no-error-check />
			<log-match>-i "(i) eth0 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi0.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(i) wifi0.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "wifi0.1 drop illegal broadcast from ${por2.wifi1.mac}" -i "route-nhop ${por1.mgt0.mac}"</log-match>
			<log-match>-i "wifi0.1 drop illegal broadcast from ${mp1.wifi1.mac}" -i "route-nhop ${por1.mgt0.mac}"</log-match>
		</step>

		<step no="6.2.1">
			<if>"${search.result2}"=="success" &amp;&amp; ("${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true")</if>
			<desc>
				-show logging buffered in mp1
			</desc>			
			<log-file>step6.2.1_show_logging_mp1.log</log-file>
			<console target="ap1" timeout="240">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-i "(i) wifi1.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi1.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "\[fe\]: wifi1.1 drop illegal broadcast from ${por1.wifi1.mac}" -i "route-nhop ${por2.wifi1.mac}"</log-match>
			<log-match>-i "\[fe\]: interface down, don't flood on eth0"</log-match>
		</step>
		
		<step no="6.2.1_0">
			<if>"${search.result2}"=="success" &amp;&amp; ("${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true") </if>
			<desc>
				-show logging buffered in mp1
			</desc>			
			<log-file>step6.2.1_show_logging_mp1.log</log-file>
			<console target="ap1" timeout="240">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-i "(i) wifi0.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi0.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "wifi0.1 drop illegal broadcast from ${por1.wifi1.mac}" -i "route-nhop ${por2.wifi1.mac}"</log-match>
			<log-match>-i "interface down, don't flood on eth0"</log-match>
		</step>

		<step no="6.2.2">
			<if>"${search.result2}"=="fail" &amp;&amp; ("${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true")</if>
			<desc>
				-show logging buffered in mp1
			</desc>
			<log-file>step6.2.2_show_logging_mp1.log</log-file>
			<console target="ap1" timeout="240">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-i "(i) wifi1.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi1.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "\[fe\]: wifi1.1 drop illegal broadcast from ${por2.wifi1.mac}" -i "route-nhop ${por1.wifi1.mac}"</log-match>
			<log-match>-i "\[fe\]: interface down, don't flood on eth0"</log-match>
		</step>
		
		<step no="6.2.2_0">
			<if>"${search.result2}"=="fail" &amp;&amp; ("${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true")</if>
			<desc>
				-show logging buffered in mp1
			</desc>
			<log-file>step6.2.2_show_logging_mp1.log</log-file>
			<console target="ap1" timeout="240">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-i "(i) wifi0.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi0.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "\[fe\]: wifi0.1 drop illegal broadcast from ${por2.wifi1.mac}" -i "route-nhop ${por1.wifi1.mac}"</log-match>
			<log-match>-i "\[fe\]: interface down, don't flood on eth0"</log-match>
		</step>

		<step no="6.3">
			<desc>
				-check logging buffered in Portal2
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<log-file>step6.0.2_show_logging_buffered_por2.log</log-file>
			<no-error-check />
			<log-match>-i "(i) eth0 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi1.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(i) wifi1.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "\[fe\]: wifi1.1 drop illegal broadcast from ${mp1.wifi1.mac}" -i "route-nhop ${por2.mgt0.mac }"</log-match>
			<log-match>-i "\[fe\]: wifi1.1 drop illegal broadcast from ${por1.wifi1.mac}" -i "route-nhop ${por2.mgt0.mac }"</log-match>
		</step>
		
		<step no="6.3_0">
			<desc>
				-check logging buffered in Portal2
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<log-file>step6.0.2_show_logging_buffered_por2.log</log-file>
			<no-error-check />
			<log-match>-i "(i) eth0 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi0.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(i) wifi0.1 ${mpc.tif.ip}-&gt;${tb.vlan1.broadcast}" -i "icmp-echo-req"</log-match>
			<log-match>-i "wifi0.1 drop illegal broadcast from ${mp1.wifi1.mac}" -i "route-nhop ${por2.mgt0.mac }"</log-match>
			<log-match>-i "wifi0.1 drop illegal broadcast from ${por1.wifi1.mac}" -i "route-nhop ${por2.mgt0.mac }"</log-match>
		</step>
	</stage>
</testcase>