<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Three portals, not fully mesh, DA failover(this case don't check route converage time)</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-condition	
			-configure two Portals in the same subnet and same hive
			-Portal 1 and portal 2, Portal3 full mesh
			-boot portal1 first and then portal3,Portal2.
			- AP1 is DA, AP2 is attach, AP3 is BDA.
		Test procedure	
			1.	 When AP boot up, debug amrp basic in Portal1 and Portal2,Portal3 Calculate route converge time
			2.	 Show amrp interface eth0, show amrp ethlink. in Portal 1 and portal 2, ,Portal3
			3.	 Plug out cable of Portal1,check route converge in Portal2 Portal3
			4.	Check client traffic recover
			5.	Plug in cable of Portal1, check route converge in Portal2 Portal3
			6.	Check client traffic recover
			7.	Fast plug out/ in cable of Portal1 check route table
		Expect result	
			1.	Route converge time should ASAP
			2.	Portal1 should be DA,Portal2 should BDA,Portal3 should be attach
			3.	Portal2 and Portal3’s route converge should be ASAP
			4.	Traffic should be recover quickly
			5.	Portal2 and Portal3’s route converge should be ASAP
			6.	Traffic should be recover quickly
			7.	Route should not be turbulence.
	</description>
	<numofap>3</numofap>
	<numofsta>1</numofsta>
	<tbtype>winlin</tbtype>
	<stage>
		<if>(("${ap.wifi1.existed}" == "true") &amp;&amp; ("${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true")) || "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
		<step no="0.1_1">
			<desc>
				shutdown AP1 eth1
			</desc>
			<if>"${ap.eth1.existed}" == "true"</if>
			<telnet target="ap1">
				-v "interface eth1 shutdown"
			</telnet>
		</step>

		<step no="0.1_2">
			<desc>
				shutdown AP2 eth1			
			</desc>
			<if>"${ap.eth1.existed}" == "true"</if>
			<telnet target="ap2">
				-v "interface eth1 shutdown"
			</telnet>
		</step>

		<step no="0.1_3">
			<desc>
				shutdown AP3 eth1
			</desc>
			<if>"${ap.eth1.existed}" == "true"</if>
			<telnet target="ap3">
				-v "interface eth1 shutdown"
			</telnet>
		</step>

		<step no="0.2_1">
			<desc>
				-Configure Portals in the same subnet and same hive in AP1
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<console target="ap1">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 44"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "save config"
			</console>
		</step>
		
		<step no="0.2_2">
			<desc>
				-Configure Portals in the same subnet and same hive in AP1
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<console target="ap1">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface eth0 mode backhaul"
				-v "interface eth0 mac-learning enable" 
				-v "no interface mgt0 dhcp-server enable"
				-v "no interface mgt0 ip"
				-v "interface mgt0 dhcp client"
				-v "interface wifi0 mode dual"
				-v "interface wifi0 radio channel 6"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "save config"
			</console>
		</step>

		<step no="0.3_1">
			<desc>
				-Configure Portals in the same subnet and same hive in AP2
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<console target="ap2">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 44"
				-v "ssid ${ssid.name}.1"
				-v "interface wifi0 ssid ${ssid.name}.1"
				-v "save config"
			</console>
		</step>
		
		<step no="0.3_2">
			<desc>
				-Configure Portals in the same subnet and same hive in AP2
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<console target="ap2">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface eth0 mode backhaul"
				-v "interface eth0 mac-learning enable" 
				-v "no interface mgt0 dhcp-server enable"
				-v "no interface mgt0 ip"
				-v "interface mgt0 dhcp client"
				-v "interface wifi0 mode dual"
				-v "interface wifi0 radio channel 6"
				-v "ssid ${ssid.name}.1"
				-v "interface wifi0 ssid ${ssid.name}.1"
				-v "save config"
			</console>
		</step>

		<step no="0.4_1">
			<desc>
				-Configure Portals in the same subnet and same hive in AP3
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<console target="ap3">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 44"
				-v "ssid ${ssid.name}.1"
				-v "interface wifi0 ssid ${ssid.name}.1"
				-v "save config"
			</console>
		</step>
		
		<step no="0.4_2">
			<desc>
				-Configure Portals in the same subnet and same hive in AP3
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<console target="ap3">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface eth0 mode backhaul"
				-v "interface eth0 mac-learning enable" 
				-v "no interface mgt0 dhcp-server enable"
				-v "no interface mgt0 ip"
				-v "interface mgt0 dhcp client"
				-v "interface wifi0 mode dual"
				-v "interface wifi0 radio channel 6"
				-v "ssid ${ssid.name}.1"
				-v "interface wifi0 ssid ${ssid.name}.1"
				-v "save config"
			</console>
		</step>

		<step no="0.5_1">
			<desc>
				-show interface for AP1
			</desc>
			<log-file>step0.5show_interface_ap1.log</log-file>
			<console target="ap1">
				-v "show interface"
			</console>
		</step>

		<step no="0.5_2">
			<desc>
				-Get AP1's mgt0 mac
			</desc>
			<setvar name="ap1_m0_mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/step0.5show_interface_ap1.log -k "Mgt0" -p 2
			</setvar>
		</step>

		<step no="0.5_3">
			<desc>
				-Get AP1's wifi1 mac
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<setvar name="ap1_w1_mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/step0.5show_interface_ap1.log -k "Wifi1" -p 2
			</setvar>
		</step>
		
		<step no="0.5_4">
			<desc>
				-Get AP1's wifi1 mac
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<setvar name="ap1_w1_mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/step0.5show_interface_ap1.log -k "Wifi0" -p 2
			</setvar>
		</step>

		<step no="0.6_1">
			<desc>
				-show interface for AP2
			</desc>
			<log-file>step0.6_show_interface_ap2.log</log-file>
			<console target="ap2">
				-v "show interface"
			</console>
		</step>

		<step no="0.6_2">
			<desc>
				-Get AP2's mgt0 mac
			</desc>
			<setvar name="ap2_m0_mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/step0.6_show_interface_ap2.log -k "Mgt0" -p 2
			</setvar>
		</step>

		<step no="0.6_3">
			<desc>
				-Get AP2's wifi1 mac
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<setvar name="ap2_w1_mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/step0.6_show_interface_ap2.log -k "Wifi1" -p 2
			</setvar>
		</step>
		
		<step no="0.6_4">
			<desc>
				-Get AP2's wifi1 mac
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<setvar name="ap2_w1_mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/step0.6_show_interface_ap2.log -k "Wifi0" -p 2
			</setvar>
		</step>

		<step no="0.7_1">
			<desc>
				-show interface for AP3
			</desc>
			<log-file>step0.7_show_interface_ap3.log</log-file>
			<console target="ap3">
				-v "show interface"
			</console>
		</step>

		<step no="step0.7_2">
			<desc>
				-Get AP3's mgt0 mac
			</desc>
			<setvar name="ap3_m0_mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/step0.7_show_interface_ap3.log -k "Mgt0" -p 2
			</setvar>
		</step>

		<step no="0.7_3">
			<desc>
				-Get AP3's wifi1 mac
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<setvar name="ap3_w1_mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/step0.7_show_interface_ap3.log -k "Wifi1" -p 2
			</setvar>
		</step>
		
		<step no="0.7_4">
			<desc>
				-Get AP3's wifi1 mac
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<setvar name="ap3_w1_mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/step0.7_show_interface_ap3.log -k "Wifi0" -p 2
			</setvar>
		</step>

		<step no="1.1">
			<desc>
				-Reboot AP1
			</desc>
			<console target="ap1">
				-v "reboot"
			</console>
		</step>

		<step no="1.2" delay="10">
			<desc>
				-Reboot AP3
			</desc>
			<console target="ap3">
				-v "reboot"
			</console>
		</step>

		<step no="1.3" delay="10">
			<desc>
				-Reboot AP3
			</desc>
			<console target="ap2">
				-v "reboot"
			</console>
		</step>

		<step no="1.4_1">
			<desc>
				-show interface of mgt0 on AP1
			</desc>
			<log-file>step1.4_show_ap1_int_mgt0.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="1.4_2">
			<desc>
				-get IP of mgt0 on AP1
			</desc>
			<setvar name="ap1_m0_ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step1.4_show_ap1_int_mgt0.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="1.5_1">
			<desc>
				-show interface of mgt0 on AP2
			</desc>
			<log-file>step1.5_show_ap2_int_mgt0.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="1.5_2">
			<desc>
				-get IP of mgt0 on AP2
			</desc>
			<setvar name="ap2_m0_ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step1.5_show_ap2_int_mgt0.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="1.6_1">
			<desc>
				-show interface of mgt0 on AP3
			</desc>
			<log-file>step1.6_show_ap3_int_mgt0.log</log-file>
			<console target="ap3">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="1.6_2">
			<desc>
				-get IP of mgt0 on AP3
			</desc>
			<setvar name="ap3_m0_ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step1.6_show_ap3_int_mgt0.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
		
<!-- here don't check the time of route converage -->

		<step no="2.1_1" delay="60">
			<desc>
				-show amrp interface eth0 in AP1
			</desc>
			<log-file>step2.1_show_amrp_interface_eth0_ap1.log</log-file>
			<console target="ap1">
				-v "show amrp interface eth0"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "state\s+:\s+DA" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2.1_2">
			<desc>
				-show amrp ethlink in AP1
				-Fix ME: Don't know why delay 60 seconds but there also have two entry. Need QA help.
			</desc>
			<log-file>step2.1_show_amrp_ethlink_ap1.log</log-file>
			<console target="ap1">
				-v "show amrp ethlink"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap1_m0_mac} ${ap1_m0_ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2.2_1" delay="60">
			<desc>
				-show amrp interface eth0 in AP3
			</desc>
			<log-file>step2.2_show_amrp_interface_eth0_ap3.log</log-file>
			<console target="ap3">
				-v "show amrp interface eth0"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "state\s+:\s+BDA" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2.2_2">
			<desc>
				-show amrp ethlink in AP3
			</desc>
			<log-file>step2.2_show_amrp_ethlink_ap3.log</log-file>
			<console target="ap3">
				-v "show amrp ethlink"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "1\s+${ap1_m0_mac} ${ap1_m0_ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2.3_1" delay="60">
			<desc>
				-show amrp interface eth0 in AP2 to check AP2 status is attached
			</desc>
			<log-file>step2.3_show_amrp_interface_eth0_ap2.log</log-file>
			<console target="ap2">
				-v "show amrp interface eth0"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "state\s+:\s+ATTACHED" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2.3_2">
			<desc>
				-show amrp ethlink in AP2
			</desc>
			<log-file>step2.3_show_amrp_ethlink_ap2.log</log-file>
			<console target="ap2">
				-v "show amrp ethlink"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "1\s+${ap1_m0_mac} ${ap1_m0_ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2.4">
			<desc>
				-Check AP2/AP3 is AP1's neighbor
			</desc>
			<log-file>step2.4_show_amrp_neighbor_ap1.log</log-file>
			<console target="ap1">
				-v "show amrp neighbor"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2_w1_mac} ${ap2_m0_ip}\s+TWO-WAY" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap3_w1_mac} ${ap3_m0_ip}\s+TWO-WAY" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2.5">
			<desc>
				-Check AP1/AP3 is AP2's neighbor
			</desc>
			<log-file>step2.5_show_amrp_neighbor_ap2.log</log-file>
			<console target="ap2">
				-v "show amrp neighbor"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap1_w1_mac} ${ap1_m0_ip}\s+TWO-WAY" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap3_w1_mac} ${ap3_m0_ip}\s+TWO-WAY" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2.6">
			<desc>
				-Check AP1/AP2 is AP3's neighbor
			</desc>
			<log-file>step2.6_show_amrp_neighbor_ap3.log</log-file>
			<console target="ap3">
				-v "show amrp neighbor"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap1_w1_mac} ${ap1_m0_ip}\s+TWO-WAY" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2_w1_mac} ${ap2_m0_ip}\s+TWO-WAY" -f ${log.dir}/${log.file}</log-match>
		</step>
		
		<!--station associate to AP1-->
		<property name="conn1.ssid" value="${ssid.name}" />
		<property name="conn1.proto" value="open" />
		<include prefix="3.1_1" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />
		
		<step no="3.1_2">
			<desc>check station traffic</desc>
			<log-file>step3.1_sta_ping.log</log-file>
			<ssh target="sta1">
				-v "ping ${tb.server1} -I wlan0 -c 5"
			</ssh>
			<log-match>-c -i "from ${tb.server1}: icmp_req" -i "ttl="</log-match>			
		</step>

		<step no="3.2" delay="60">
			<desc>
				-Show ssid station in AP1
			</desc>
			<log-file>step3.2_show_ssid_station.log</log-file>
			<console target="ap1">
				-v "show ssid ${ssid.name} station"
			</console>
		</step>

		<step no="3.3">
			<desc>
				-Get laptop1 ip in AP1
			</desc>
			<setvar name="laptop1_ip_in_ap">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/step3.2_show_ssid_station.log -k "${sta1.tif.mac}" -p 2
			</setvar>
		</step>

		<step no="3.4">
			<desc>
				-Compare laptop1 show ip to AP1 show station ip
			</desc>
			<script>
				if [ ${laptop1_ip_in_ap} != ${sta1.tif.ip} ]; then exit 1;fi
			</script>
		</step>

		<step no="3.5">
			<desc>
				-Shutdown AP1's interface eth0
			</desc>
			<console target="ap1">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<!--here, when AP1 shutdown, don't check route converage time-->

		<step no="3.6_1">
			<desc>
				-Show route, default route should be wifi1.1
			</desc>
			<log-file>step3.6_show_ap1_router.log</log-file>
			<console target="ap1">
				-v "show route"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "0000:0000:0000\s+${ap2_w1_mac}|0000:0000:0000\s+${ap3_w1_mac}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.6_2" delay="60">
			<desc>
				-show amrp interface eth0 in AP1
			</desc>
			<log-file>step3.6_show_amrp_interface_eth0_ap1.log</log-file>
			<console target="ap1">
				-v "show amrp interface eth0"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "amrp can't find eth0" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="3.6_3">
			<desc>
				-show amrp ethlink in AP1
			</desc>
			<log-file>step3.6_show_amrp_ethlink_ap1.log</log-file>
			<console target="ap1">
				-v "show amrp ethlink"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap3_m0_mac} ${ap3_m0_ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.7_1" delay="60">
			<desc>
				-show amrp interface eth0 in AP2
			</desc>
			<log-file>step3.7_show_amrp_interface_eth0_ap2.log</log-file>
			<console target="ap2">
				-v "show amrp interface eth0"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "state\s+:\s+BDA" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.7_2">
			<desc>
				-show amrp ethlink in AP2
			</desc>
			<log-file>step3.7_show_amrp_ethlink_ap2.log</log-file>
			<console target="ap2">
				-v "show amrp ethlink"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "1\s+${ap3_m0_mac} ${ap3_m0_ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.8_1" delay="60">
			<desc>
				-show amrp interface eth0 in AP3
			</desc>
			<log-file>step3.8_show_amrp_interface_eth0_ap3.log</log-file>
			<console target="ap3">
				-v "show amrp interface eth0"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "state\s+:\s+DA" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.8_2">
			<desc>
				-show amrp ethlink in AP3
			</desc>
			<log-file>step3.8_show_amrp_ethlink_ap3.log</log-file>
			<console target="ap3">
				-v "show amrp ethlink"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "1\s+${ap3_m0_mac} ${ap3_m0_ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.1">
			<desc>check station traffic recover</desc>
			<log-file>step4.1_sta_ping.log</log-file>
			<ssh target="sta1">
				-v "ping ${tb.server1} -I wlan0 -c 5"
			</ssh>
			<log-match>-c -i "from ${tb.server1}: icmp_req" -i "ttl="</log-match>			
		</step>
		
		<step no="5.1">
			<desc>
				-no Shutdown AP1's interface eth0
			</desc>
			<console target="ap1">
				-v "no interface eth0 shutdown"
			</console>
		</step>

		<step no="5.2_1">
			<desc>
				-Show route, default route should be eth0
			</desc>
			<log-file>step5.2_show_ap1_router.log</log-file>
			<console target="ap1">
				-v "show route"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "0000:0000:0000\s+${ap1_m0_mac}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.2_2" delay="60">
			<desc>
				-show amrp interface eth0 in AP1
			</desc>
			<log-file>step5.2_show_amrp_interface_eth0_ap1.log</log-file>
			<console target="ap1">
				-v "show amrp interface eth0"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "state\s+:\s+ATTACHED" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.2_3">
			<desc>
				-show amrp ethlink in AP1
			</desc>
			<log-file>step5.2_show_amrp_ethlink_ap1.log</log-file>
			<console target="ap1">
				-v "show amrp ethlink"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap3_m0_mac} ${ap3_m0_ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.3_1" delay="60">
			<desc>
				-show amrp interface eth0 in AP2
			</desc>
			<log-file>step5.3_show_amrp_interface_eth0_ap2.log</log-file>
			<console target="ap2">
				-v "show amrp interface eth0"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "state\s+:\s+BDA" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.3_2">
			<desc>
				-show amrp ethlink in AP2
			</desc>
			<log-file>step5.3_show_amrp_ethlink_ap2.log</log-file>
			<console target="ap2">
				-v "show amrp ethlink"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "1\s+${ap3_m0_mac} ${ap3_m0_ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.4_1" delay="60">
			<desc>
				-show amrp interface eth0 in AP3
			</desc>
			<log-file>step5.4_show_amrp_interface_eth0_ap3.log</log-file>
			<console target="ap3">
				-v "show amrp interface eth0"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "state\s+:\s+DA" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.4_2">
			<desc>
				-show amrp ethlink in AP3
			</desc>
			<log-file>step5.4_show_amrp_ethlink_ap3.log</log-file>
			<console target="ap3">
				-v "show amrp ethlink"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "1\s+${ap3_m0_mac} ${ap3_m0_ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6.1" delay="30">
			<desc>check station traffic recover</desc>
			<log-file>step6.1_sta_ping.log</log-file>
			<ssh target="sta1">
				-v "ping ${tb.server1} -I wlan0 -c 5"
			</ssh>
			<log-match>-c -i "from ${tb.server1}: icmp_req" -i "ttl="</log-match>			
		</step>		
		
		
		<step no="7.1">
			<desc>
				-Shutdown AP1's interface eth0
				-no Shutdown AP1's interface eth0
			</desc>
			<console target="ap1">
				-v "interface eth0 shutdown"
				-v "no interface eth0 shutdown"
			</console>
		</step>1

		<step no="7.2_1">
			<desc>
				-Show route, default route should be eth0
			</desc>
			<log-file>step7.2_show_ap1_router.log</log-file>
			<console target="ap1">
				-v "show route"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "0000:0000:0000\s+${ap1_m0_mac}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="step7.2_2" delay="60">
			<desc>
				-show amrp interface eth0 in AP1
			</desc>
			<log-file>step7.2_show_amrp_interface_eth0_ap1.log</log-file>
			<console target="ap1">
				-v "show amrp interface eth0"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "state\s+:\s+ATTACHED" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7.2_3">
			<desc>
				-show amrp ethlink in AP1
			</desc>
			<log-file>step7.2_show_amrp_ethlink_ap1.log</log-file>
			<console target="ap1">
				-v "show amrp ethlink"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap3_m0_mac} ${ap3_m0_ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7.3_1" delay="20">
			<desc>
				-show amrp interface eth0 in AP2
			</desc>
			<log-file>step7.3_show_amrp_interface_eth0_ap2.log</log-file>
			<console target="ap2">
				-v "show amrp interface eth0"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "state\s+:\s+BDA" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7.3_2">
			<desc>
				-show amrp ethlink in AP2
			</desc>
			<log-file>step7.3_show_amrp_ethlink_ap2.log</log-file>
			<console target="ap2">
				-v "show amrp ethlink"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "1\s+${ap3_m0_mac} ${ap3_m0_ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7.4_1" delay="20">
			<desc>
				-show amrp interface eth0 in AP3
			</desc>
			<log-file>step7.4_show_amrp_interface_eth0_ap3.log</log-file>
			<console target="ap3">
				-v "show amrp interface eth0"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "state\s+:\s+DA" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7.4_2">
			<desc>
				-show amrp ethlink in AP3
			</desc>
			<log-file>step7.4_show_amrp_ethlink_ap3.log</log-file>
			<console target="ap3">
				-v "show amrp ethlink"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "1\s+${ap3_m0_mac} ${ap3_m0_ip}" -f ${log.dir}/${log.file}</log-match>
		</step>
		
		<step no="7.5" delay="30">
			<desc>check station traffic recover</desc>
			<log-file>step7.5_sta_ping.log</log-file>
			<ssh target="sta1">
				-v "ping ${tb.server1} -I wlan0 -c 5"
			</ssh>
			<log-match>-c -i "from ${tb.server1}: icmp_req" -i "ttl="</log-match>			
		</step>

	</stage>
</testcase>
