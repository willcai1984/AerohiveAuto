<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>L3 roaming with two different subnet Interface Allowed SAME VLAN, Client L3 roaming between Portals</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		1. Configure switch1 port allow vlan all,switch2 port allow vlan all
		2. Configure AP1,AP2,AP3,AP4 in the same management vlan 41,
		3. Enable L3-roaming(configure mobility-policy on AP4)
		4. AP1 interface eth0 allow vlan 41,42. AP2 interface eth0 allow vlan 41,43. AP3,AP4
		interface eth0 allow vlan 44
		5. Make sure AP1 is BDA,AP2 is DA
		1. Configure switch1 port allow vlan 41,42,switch2 port allow vlan 41,43,
		2. Configure AP1,AP2,AP3,AP4 in the same management vlan 41
		3. Enable L3-roaming(configure mobility-policy on AP2)
		4. AP1,AP2 interface eth0 allow vlan 41,42. AP3,AP4 interface eth0 allow vlan 41,42,43

		Test Procedure:

		1. AP1 user-profile client vlan-id is 42, AP2 user-profile client vlan-id is 43, AP3,AP4
		user-profile client vlan-id is 44
		2. Open "debug amrp xnxp detail" on AP2,when client associate to AP2,check DNXP
		cache with ('1st-tunnel/2nd -tunnel', allowed-vlan-number) should be advertised to
		all DNXP neighbors included AP3,AP4
		3. "show amrp dnxp cache
		&lt;mac_addr&gt;" in AP1,AP3,AP4
		4. When Client roaming from AP2 to AP3, Open "_debug amrp xnxp detail" on AP3
		5. After tunnel build succeed, Check client running traffic, ping gateway, for detail
		"debug FE basic"
		6. After tunnel build succeed, "show route", "show amrp dnxp tunnel" on AP3
		7. Client roaming from AP3 to AP4, Open "_debug amrp xnxp detail" on AP4
		8. After tunnel build succeed, "show route", "show amrp dnxp tunnel" on AP4
		9. Client roaming back from AP4 to AP3, then from AP3 to AP2,When client roaming
		from AP3 to AP2. Open "debug amrp xnxp detail"on AP3
		1. Create a SSID on AP1,AP2, user-profile client vlan-id is 42, AP3,AP4 user-profile
		client vlan-id is 43
		2. Client associate to AP2,then roaming from AP2 to AP3.
		3. When Client roaming from AP2 to AP3, Open "_debug amrp xnxp detail" on AP3
	</description>
	<numofap>3</numofap>
	<numofsta>1</numofsta>
	<tbtype>winlin</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />

	<stage>
		<if>"${tb.bridge_support}" == "true" &amp;&amp; "${ap1.wifi1.existed}" =="true"</if>

		<step no="pre1.1">
			<desc>
				2. Configure AP1 management vlan ${tb.vlan1}
				3. Enable L3-roaming (configure mobility-policy)
				AP1 interface eth0 allow vlan ${tb.vlan1}, ${tb.vlan2}
				user-profile vlan ${tb.vlan2}, attribute 77,binding mobility-policy sj
				config ssid A security-object sj
				5. Make sure AP1 is DA
			</desc>
			<console target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "interface eth0 allowed-vlan ${tb.vlan1}"
				-v "interface eth0 allowed-vlan ${tb.vlan2}"
				-v "ssid ${conn1.ssid}"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 77"
				-v "ssid ${conn1.ssid} security-object FWtest"
				-v "mobility-policy FWtest dnxp"
				-v "user-profile ${tb.vlan2} qos-policy def-user-qos vlan-id ${tb.vlan2} mobility-policy FWtest attribute 77"
				-v "interface wifi1 radio channel 165"
				-v "interface wifi0 radio channel 1"
				-v "amrp interface eth0 priority 100"
				-v "save config"
			</console>
		</step>

		<step no="pre1.2">
			<desc>
				On ap2 Configure management vlan ${tb.vlan1}
				AP1 interface eth0 allow vlan ${tb.vlan1}, ${tb.vlan3}
				ssid A security-object sj
				interface wifi0 ssid A
				5. Make sure AP1 is DA,AP2 is BDA
			</desc>
			<console target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "interface eth0 allowed-vlan ${tb.vlan1}"
				-v "interface eth0 allowed-vlan ${tb.vlan3}"
				-v "ssid ${conn1.ssid}"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "interface wifi0 ssid ${conn1.ssid} shutdown"
				-v "interface wifi1 radio channel 165"
				-v "interface wifi0 radio channel 1"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 77"
				-v "ssid ${conn1.ssid} security-object FWtest"
				-v "mobility-policy FWtest dnxp"
				-v "user-profile ${tb.vlan3} qos-policy def-user-qos vlan-id ${tb.vlan3} attribute 77"
				-v "amrp interface eth0 priority 50"
				-v "save config"
			</console>
		</step>

		<step no="pre1.3">
			<desc>
				On ap3 Configure management vlan ${tb.vlan1}
				AP3 interface eth0 allow vlan ${tb.vlan1}, ${tb.vlan4}
				5. Make sure AP1 is DA,AP2 is BDA
			</desc>
			<console target="ap3">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "interface eth0 allowed-vlan ${tb.vlan1}"
				-v "interface eth0 allowed-vlan ${tb.vlan4}"
				-v "ssid ${conn1.ssid}"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "interface wifi0 ssid ${conn1.ssid} shutdown"
				-v "interface wifi1 radio channel 165"
				-v "interface wifi0 radio channel 1"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 77"
				-v "ssid ${conn1.ssid} security-object FWtest"
				-v "mobility-policy FWtest dnxp"
				-v "user-profile ${tb.vlan4} qos-policy def-user-qos vlan-id ${tb.vlan4} attribute 77"
				-v "amrp interface eth0 priority 10"
				-v "save config"
			</console>
		</step>

		<step no="pre1.4a">
			<if>"${ap1.eth1.existed}" =="true"</if>
			<desc>
				shutdown eth1
			</desc>
			<console target="ap1">
				-v "interface eth1 shutdown"
				-v "save config"
			</console>
		</step>
		<step no="pre1.4b">
			<if>"${ap2.eth1.existed}" =="true"</if>
			<desc>
				shutdown eth1
			</desc>
			<console target="ap2">
				-v "interface eth1 shutdown"
				-v "save config"
			</console>
		</step>

		<step no="pre1.4c">
			<if>"${ap3.eth1.existed}" =="true"</if>
			<desc>
				shutdown eth1
			</desc>
			<console target="ap3">
				-v "interface eth1 shutdown"
				-v "save config"
			</console>
		</step>

		<step no="pre2.1">
			<desc>
				ap1 reboot
			</desc>
			<console target="ap1">
				-v "reboot"
			</console>
		</step>

		<step no="pre2.2" delay="30">
			<desc>
				ap2 reboot
			</desc>
			<console target="ap2">
				-v "reboot"
			</console>
		</step>

		<step no="pre2.3" delay="30">
			<desc>
				ap3 reboot
			</desc>
			<console target="ap3">
				-v "reboot"
			</console>
		</step>

		<step no="pre3.1" type="loop-check" loop-max-times="30" loop-interval="10">
			<desc>
				Make sure AP1 is DA
			</desc>
			<log-file>step_pre3.1_show_amrp_interface_eth0_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show amrp interface eth0"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "state[: ]+DA" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="pre3.2" type="loop-check" loop-max-times="15" loop-interval="10">
			<desc>
				Make sure AP2 is BDA
			</desc>
			<log-file>step_pre3.2_show_amrp_interface_eth0_${loop_check.idx}.log</log-file>
			<console target="ap2">
				-v "show amrp interface eth0"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "state[: ]+BDA" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="pre3.3" type="loop-check" loop-max-times="15" loop-interval="10">
			<desc>
				Make sure AP3 is attached
			</desc>
			<log-file>step_pre3.3_show_amrp_interface_eth0_${loop_check.idx}.log</log-file>
			<console target="ap3">
				-v "show amrp interface eth0"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "state[: ]+ATTACHED" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="pre4.1">
			<desc>
				-show interface mgt0 in ap1
			</desc>
			<log-file>step_pre4.1_show_interface_mgt0_ap1.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="pre4.1b">
			<desc>
				Get mgt0 IP on ap1
			</desc>
			<setvar name="ap1.mgt0.ip">
				${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -f ${log.dir}/step_pre4.1_show_interface_mgt0_ap1.log -t str
			</setvar>
		</step>

		<step no="pre4.1c">
			<desc>
				Get mgt0 mac in ap1
			</desc>
			<setvar name="ap1.mgt0.mac">
				${bin.dir}/getbyrexp.py -p "MAC addr=([\da-fA-F:]+)*" -f ${log.dir}/step_pre4.1_show_interface_mgt0_ap1.log -t str
			</setvar>
		</step>

		<step no="pre4.2">
			<desc>
				-show interface mgt0 in ap2
			</desc>
			<log-file>step_pre4.2_show_interface_mgt0_ap2.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="pre4.2b">
			<desc>
				Get mgt0 IP on ap2
			</desc>
			<setvar name="ap2.mgt0.ip">
				${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -f ${log.dir}/step_pre4.2_show_interface_mgt0_ap2.log -t str
			</setvar>
		</step>

		<step no="pre4.2c">
			<desc>
				Get mgt0 mac in ap2
			</desc>
			<setvar name="ap2.mgt0.mac">
				${bin.dir}/getbyrexp.py -p "MAC addr=([\da-fA-F:]+)*" -f ${log.dir}/step_pre4.2_show_interface_mgt0_ap2.log -t str
			</setvar>
		</step>

		<step no="pre4.3">
			<desc>
				-show interface mgt0 in ap3
			</desc>
			<log-file>step_pre4.3_show_interface_mgt0_ap3.log</log-file>
			<console target="ap3">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="pre4.3b">
			<desc>
				Get mgt0 IP on ap3
			</desc>
			<setvar name="ap3.mgt0.ip">
				${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -f ${log.dir}/step_pre4.3_show_interface_mgt0_ap3.log -t str
			</setvar>
		</step>

		<step no="pre4.3c">
			<desc>
				Get mgt0 mac in ap3
			</desc>
			<setvar name="ap3.mgt0.mac">
				${bin.dir}/getbyrexp.py -p "MAC addr=([\da-fA-F:]+)*" -f ${log.dir}/step_pre4.3_show_interface_mgt0_ap3.log -t str
			</setvar>
		</step>

		<step no="pre5.1" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				-show amrp dnxp neighbor in ap1
			</desc>
			<log-file>step_pre5.1_show_amrp_dnxp_neighbor_ap1.log</log-file>
			<telnet target="ap1">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match>-c -i "${ap2.mgt0.mac}" -i "${ap2.mgt0.ip}/24" -i "L2"</log-match>
			<log-match>-c -i "${ap3.mgt0.mac}" -i "${ap3.mgt0.ip}/24" -i "L2"</log-match>
		</step>

		<step no="pre5.2" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				-show amrp dnxp neighbor in ap2
			</desc>
			<log-file>step_pre5.2_show_amrp_dnxp_neighbor_ap2.log</log-file>
			<telnet target="ap2">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match>-c -i "${ap1.mgt0.mac}" -i "${ap1.mgt0.ip}/24" -i "L2"</log-match>
			<log-match>-c -i "${ap3.mgt0.mac}" -i "${ap3.mgt0.ip}/24" -i "L2"</log-match>
		</step>

		<step no="pre5.3" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				-show amrp dnxp neighbor in ap3
			</desc>
			<log-file>step_pre5.3_show_amrp_dnxp_neighbor_ap3.log</log-file>
			<telnet target="ap3">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match>-c -i "${ap1.mgt0.mac}" -i "${ap1.mgt0.ip}/24" -i "L2"</log-match>
			<log-match>-c -i "${ap2.mgt0.mac}" -i "${ap2.mgt0.ip}/24" -i "L2"</log-match>
		</step>

		<step no="1.1">
			<desc>
				On ap1
				clear log all
				_debug amrp xnxp detail
			</desc>
			<telnet target="ap1">
				-v "_debug amrp xnxp detail"
				-v "clear log all"
			</telnet>
		</step>

		<include prefix="1.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="1.3a">
			<desc>
				On ap1 show logging buffered: AP1 should advertised DNXP cache to all DNXP neighbors
			</desc>
			<log-file>step1.3a_show_logging_buffered_ap1.log</log-file>
			<telnet target="ap1" timeout="400">
				-v "show logging buffered"
				-v ""
				-v ""
				-v "clear log buf"
			</telnet>
			<log-match>-c -i "\[nxp_detail\]: export to ${ap2.mgt0.ip} dnxp ${sta1.tif.mac} vlan ${tb.vlan2} upid 77 unroam(0/60) life(10) flag 0x3 homelan${ap1.mgt0.ip}(${ap1.mgt0.mac})"</log-match>
			<log-match>-c -i "\[nxp_detail\]: export to ${ap3.mgt0.ip} dnxp ${sta1.tif.mac} vlan ${tb.vlan2} upid 77 unroam(0/60) life(10) flag 0x3 homelan${ap1.mgt0.ip}(${ap1.mgt0.mac})"</log-match>
			<log-match>-c -i "\[nxp_detail\]: tx one CLIENT-INFO to ${ap2.mgt0.ip}"</log-match>
			<log-match>-c -i "\[nxp_detail\]: tx one CLIENT-INFO to ${ap3.mgt0.ip}"</log-match>
			<no-error-check />
		</step>

		<step no="1.3b" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				On ap2 show amrp dnxp cache: AP2 should have DNXP cache of client, cache info should matched with Debug in AP1
			</desc>
			<log-file>step1.3b_show_amrp_dnxp_cache_ap2.log</log-file>
			<telnet target="ap2">
				-v "show amrp dnxp cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${ap1.mgt0.ip}" -i "${tb.vlan2}" -i "77"</log-match>
		</step>

		<step no="1.3c" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				On ap3 show amrp dnxp cache: AP3 should have DNXP cache of client, cache info should matched with Debug in AP1
			</desc>
			<log-file>step1.3c_show_amrp_dnxp_cache_ap3.log</log-file>
			<telnet target="ap3">
				-v "show amrp dnxp cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${ap1.mgt0.ip}" -i "${tb.vlan2}" -i "77"</log-match>
		</step>

		<step no="2">
			<desc>
				On ap2 no interface wifi0 ssid ${conn1.ssid} shutdown
			</desc>
			<telnet target="ap2">
				-v "no interface wifi0 ssid ${conn1.ssid} shutdown"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				On ap2 _debug amrp xnxp detail
				clear log all
			</desc>
			<telnet target="ap2">
				-v "clear log all"
				-v "_debug amrp xnxp detail"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				On ap1 interface wifi0 ssid ${conn1.ssid} shutdown
			</desc>
			<telnet target="ap1">
				-v "interface wifi0 ssid ${conn1.ssid} shutdown"
			</telnet>
		</step>

		<step no="2.3a" type="loop-check" loop-max-times="15" loop-interval="10">
			<desc>
				show station on ap2
			</desc>
			<log-file>step2.3a_show_station.log</log-file>
			<telnet target="ap2">
				-v "show station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="2.3b" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check tunnel build succeed (on ap2)
			</desc>
			<log-file>step2.3b_show_route.log</log-file>
			<telnet target="ap2">
				-v "show route"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${ap2.mgt0.mac}" -i "wifi0.1" -i "0" -i "77" -i "LTO"</log-match>
		</step>

		<step no="2.4" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				show tunnel build succeed
			</desc>
			<log-file>step2.4_show_route.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${ap1.mgt0.mac}" -i "mgt0" -i "0" -i "77" -i "LTO"</log-match>
		</step>

		<step no="2.5">
			<desc>
				On ap2
				show logging buffered
			</desc>
			<log-file>step2.5_show_logging_buffered_ap2.log</log-file>
			<telnet target="ap2" timeout="400">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "\[nxp_basic\]: dnxp client ${sta1.tif.mac} attach to tunnel ${ap1.mgt0.ip}"</log-match>
			<log-match>-c -i "\[nxp_detail\]: tx one CLIENT-INFO to ${ap1.mgt0.ip}"</log-match>
			<log-match>-c -i "\[nxp_detail\]: tx one CLIENT-INFO to ${ap3.mgt0.ip}"</log-match>
		</step>

		<step no="3.1a">
			<desc>
				config debug on ap1
			</desc>
			<telnet target="ap1">
				-v "no _debug amrp xnxp"
				-v "_kdebug fe detail"
				-v "_kdebug fe basic"
				-v "_ff id 1 protocol 1"
				-v "_ff id 2 protocol 47"
				-v "clear log all"
			</telnet>
		</step>

		<step no="3.1b">
			<desc>
				config debug on ap2
			</desc>
			<telnet target="ap2">
				-v "no _debug amrp xnxp"
				-v "_kdebug fe detail"
				-v "_kdebug fe basic"
				-v "_ff id 1 protocol 1"
				-v "_ff id 2 protocol 47"
				-v "clear log all"
			</telnet>
		</step>

		<step no="3.1c">
			<desc>
				config debug on ap3
			</desc>
			<telnet target="ap3">
				-v "_kdebug fe detail"
				-v "_kdebug fe basic"
				-v "_ff id 1 protocol 1"
				-v "_ff id 2 protocol 47"
				-v "clear log all"
			</telnet>
		</step>

		<!--After tunnel build succeed, Check client running traffic, ping gateway, for detail "debug FE basic" -->

		<include prefix="3.2" file="subs/sta_ping.xml" args="sta1, ${tb.vlan1.gw}, 4" />

		<include prefix="3.2a" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step3.2.1_show_logging_buffered.log" />

		<include prefix="3.2b" file="subs/save_ap_log.xml" args="show logging buffered, ap2, step3.2.2_show_logging_buffered.log" />

		<include prefix="3.2c" file="subs/save_ap_log.xml" args="show logging buffered, ap3, step3.2.3_show_logging_buffered.log" />

		<step no="3.3a">
			<desc>
				-check logging buffered in ap1
			</desc>
			<log-file>step3.2.1_show_logging_buffered.log</log-file>
			<log-match>-c -i "(i) eth0 ${ap2.mgt0.ip}->${ap1.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-c -i "(u) mgt0 ${ap2.mgt0.ip}->${ap1.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-c -i "(r) mgt0 ${sta1.tif.ip}->${tb.vlan1.gw}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) eth0 ${sta1.tif.ip}->${tb.vlan1.gw}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth0 ${tb.vlan1.gw}->${sta1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(i) mgt0 ${ap1.mgt0.ip}->${ap2.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-c -i "(o) eth0 ${ap1.mgt0.ip}->${ap2.mgt0.ip}" -i "proto(47)"</log-match>
		</step>

		<step no="3.3b">
			<desc>
				-check logging buffered in ap2
			</desc>
			<log-file>step3.2.2_show_logging_buffered.log</log-file>
			<log-match>-c -i "(i) wifi0.1 ${sta1.tif.ip}->${tb.vlan1.gw}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) mgt0 ${ap2.mgt0.ip}->${ap1.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-c -i "(o) eth0 ${ap2.mgt0.ip}->${ap1.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-c -i "(i) eth0 ${ap1.mgt0.ip}->${ap2.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-c -i "(u) mgt0 ${ap1.mgt0.ip}->${ap2.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-c -i "(r) mgt0 ${tb.vlan1.gw}->${sta1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(o) wifi0.1 ${tb.vlan1.gw}->${sta1.tif.ip}" -i "icmp-echo-reply"</log-match>
		</step>

		<step no="3.3c">
			<desc>
				-check logging buffered in ap3
			</desc>
			<log-file>step3.2.3_show_logging_buffered.log</log-file>
			<log-match>-n -c -i "(i) eth0 ${ap2.mgt0.ip}->${ap1.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-n -c -i "(u) mgt0 ${ap2.mgt0.ip}->${ap1.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-n -c -i "(r) mgt0 ${sta1.tif.ip}->${tb.vlan1.gw}" -i "icmp-echo-req"</log-match>
			<log-match>-n -c -i "(o) eth0 ${sta1.tif.ip}->${tb.vlan1.gw}" -i "icmp-echo-req"</log-match>
			<log-match>-n -c -i "(i) eth0 ${tb.vlan1.gw}->${sta1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-n -c -i "(i) mgt0 ${ap1.mgt0.ip}->${ap2.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-n -c -i "(o) eth0 ${ap1.mgt0.ip}->${ap2.mgt0.ip}" -i "proto(47)"</log-match>
		</step>

		<step no="4">
			<desc>
				After tunnel build succeed, "show amrp dnxp tunnel" on AP2
			</desc>
			<log-file>step4_show_amrp_dnxp_tunnel_ap2.log</log-file>
			<telnet target="ap2">
				-v "show amrp tunnel"
			</telnet>
			<log-match>-c -i "${ap1.mgt0.ip}" -i "DA"</log-match>
		</step>

		<step no="5">
			<desc>
				On ap3 no interface wifi0 ssid ${conn1.ssid} shutdown
			</desc>
			<telnet target="ap3">
				-v "no interface wifi0 ssid ${conn1.ssid} shutdown"
			</telnet>
		</step>

		<step no="5.1">
			<desc>
				On ap3
				_debug amrp xnxp detail
				clear log all
			</desc>
			<telnet target="ap3">
				-v "no _kdebug fe detail"
				-v "no _kdebug fe basic"
				-v "no _ff id 1"
				-v "no _ff id 2"
				-v "_debug amrp xnxp detail"
				-v "clear log all"
			</telnet>
		</step>

		<step no="5.2">
			<desc>
				On ap2
				interface wifi0 ssid A shutdown
			</desc>
			<telnet target="ap2">
				-v "interface wifi0 ssid ${conn1.ssid} shutdown"
			</telnet>
		</step>

		<step no="5.3a" delay="50">
			<desc>
				show station on ap3
			</desc>
			<log-file>step5.3a_show_station_.log</log-file>
			<telnet target="ap3">
				-v "show station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="5.3b">
			<desc>
				check tunnel build succeed
			</desc>
			<log-file>step5.3b_show_route.log</log-file>
			<telnet target="ap3">
				-v "show route"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${ap3.mgt0.mac}" -i "wifi0.1" -i "0" -i "77" -i "LTO"</log-match>
		</step>

		<step no="5.4">
			<desc>
				show tunnel build succeed
			</desc>
			<log-file>step5.4_show_route.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${ap1.mgt0.mac}" -i "mgt0" -i "0" -i "77" -i "LTO"</log-match>
		</step>

		<step no="5.5">
			<desc>
				On ap3
				show logging buffered
			</desc>
			<log-file>step5.5_show_logging_buffered_ap3.log</log-file>
			<telnet target="ap3" timeout="400">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "\[nxp_basic\]: dnxp client ${sta1.tif.mac} attach to tunnel ${ap1.mgt0.ip}"</log-match>
			<log-match>-c -i "\[nxp_detail\]: tx one CLIENT-INFO to ${ap1.mgt0.ip}"</log-match>
			<log-match>-c -i "\[nxp_detail\]: tx one CLIENT-INFO to ${ap2.mgt0.ip}"</log-match>
		</step>

		<step no="6">
			<desc>
				After tunnel build succeed, "show amrp dnxp tunnel" on AP3
			</desc>
			<log-file>step6_show_amrp_dnxp_tunnel_ap3.log</log-file>
			<telnet target="ap3">
				-v "show amrp tunnel"
			</telnet>
			<log-match>-c -i "${ap1.mgt0.ip}" -i "DA"</log-match>
		</step>

		<step no="7.1">
			<desc>
				On ap2
				interface wifi0 ssid A shutup
			</desc>
			<telnet target="ap2">
				-v "no interface wifi0 ssid ${conn1.ssid} shutdown"
			</telnet>
		</step>

		<step no="7.2">
			<desc>
				On ap3
				interface wifi0 ssid A shutup
			</desc>
			<telnet target="ap3">
				-v "interface wifi0 ssid ${conn1.ssid} shutdown"
			</telnet>
		</step>

		<step no="7.3" delay="50">
			<desc>
				show station on ap2
			</desc>
			<log-file>step7.3_show_station_.log</log-file>
			<telnet target="ap2">
				-v "show station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="7.3.1">
			<desc>
				check tunnel build succeed
			</desc>
			<log-file>step7.3.1_show_route.log</log-file>
			<telnet target="ap2">
				-v "show route"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${ap2.mgt0.mac}" -i "wifi0.1" -i "0" -i "77" -i "LTO"</log-match>
		</step>

		<step no="7.4">
			<desc>
				show tunnel build succeed
			</desc>
			<log-file>step7.4_show_route.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${ap1.mgt0.mac}" -i "mgt0" -i "0" -i "77" -i "LTO"</log-match>
		</step>

		<step no="8.3">
			<desc>
				On ap1
				interface wifi0 ssid A shutup
			</desc>
			<telnet target="ap1">
				-v "no interface wifi0 ssid ${conn1.ssid} shutdown"
			</telnet>
		</step>

		<step no="8.4">
			<desc>
				On ap2
				interface wifi0 ssid A shutup
			</desc>
			<telnet target="ap2">
				-v "interface wifi0 ssid ${conn1.ssid} shutdown"
			</telnet>
		</step>

		<step no="8.5" delay="50">
			<desc>
				show station on ap1
			</desc>
			<log-file>step8.5_show_station_.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="8.5.1">
			<desc>
				check tunnel will be deleted
			</desc>
			<log-file>step8.5.1_show_route.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac}" -i "${ap1.mgt0.mac}" -i "wifi0.1" -i "0" -i "77" -i "LTO"</log-match>
		</step>
	</stage>
</testcase>