<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>IKE phase 1 rekey</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		-a minimal BR/GW environment setup

		Test Procedure:

		-Configure IKE Phase 1 lifetime to be the minimum value (180 sec)
		-Configure IKE Phase 2 lifetime to be 230 sec, so that IKE Phase 1 SA would expire before
		IKE Phase 2 SA rekeys
		-Verify IKE Phase 2 SA is rekeyed before its lifetime expires.
		-Verify Only IKE Phase 2 rekey when it's lifte time is longer than phase 1 life time.
		-Verify system clock is changed in remote or gateway side.
		-repeated with no NAT devices between the VPN client and VPN server
		-after phase1 rekey is done, check the tunnel status
		-check the tunnel routes
	</description>
	<numofcvg>1</numofcvg>
	<numofbr>1</numofbr>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>no</cvg-opt-fw>
	<tbtype>winlin</tbtype>

	<property name="conn1.ssid" value="${job.sid}-${tb.name}" />
	<property name="br.route.netmask" value="255.255.255.0" />

	<stage>

		<step no="pre.0.1">
			<desc>enable wan port nat if FW nonexists</desc>
			<if>"no" == "${cvg1.cvg.fw_existed}"</if>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "interface eth0 mode wan nat"
				-v "_debug brd basic"
				-v "_debug brd info"
				-v "_debug vpn info"
			</telnet>
		</step>

		<include prefix="1" file="subs/vpn_setup_one_sw.xml" obj-args="cvg1, br1" />

		<step no="2.1">
			<desc>config mgt0.1 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface vlan${br1.vpc1.vlan} dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options netmask ${br.route.netmask}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server enable"
			</telnet>
		</step>

		<step no="2.2">
			<desc>config mgt0.2 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface vlan${br1.vpc2.vlan} dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface vlan${br1.vpc2.vlan} dhcp-server options netmask ${br.route.netmask}"
				-v "interface vlan${br1.vpc2.vlan} dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface vlan${br1.vpc2.vlan} dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface vlan${br1.vpc2.vlan} dhcp-server enable"
			</telnet>
		</step>

		<step no="set_lan_info">
			<multi-setvar>
				echo "br1.br.mgt0.1.route=$(echo ${br1.br.mgt0.1.ip} | cut -d. -f1,2,3).0"
				echo "br1.br.mgt0.2.route=$(echo ${br1.br.mgt0.2.ip} | cut -d. -f1,2,3).0"
				echo "cvg1.dns1.route=$(echo ${cvg1.dns1.ip} | cut -d. -f1,2,3).0"
				echo "cvg1.dns2.route=$(echo ${cvg1.dns2.ip} | cut -d. -f1,2,3).0"
				echo "cvg1.vpc1.route=$(echo ${cvg1.vpc1.tif.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<step no="3">
			<desc>Check route distribution is correct</desc>
		</step>

		<step no="3.1" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>On GW, will add the tunnel routes according to BR's modification </desc>
			<log-file>3.1.show_route_cvg_.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="10">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${br1.br.mgt0.1.route}" -p 8 -i "${cvg1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${br1.br.mgt0.2.route}" -p 8 -i "${cvg1.tunnel.id}"</log-match>
		</step>

		<step no="3.2" type="loop-check" loop-max-times="15" loop-interval="10">
			<desc>-check the ip route tablelist</desc>
			<log-file>3.2_show_l3_ip_route.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${cvg1.dns1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg1.dns2.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg1.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
		</step>

		<step no="4">
			<desc>
				setup all wifi radio and eth interface as access mode
				connect STA1 under wifi, connect a STA2 under eth1
			</desc>
		</step>

		<step no="4.1">
			<desc>
				set all wired interface as access mode
				eth1 access br1.vpc1.vlan, eth2 trunk with native-vlan br1.vpc2.vlan
			</desc>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				<!---v "security-object lan1"
				-v "security-object lan1 default-user-profile-attr 1"-->
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"	
				-v "interface ${br1.br.lan.int1} switchport mode access"
				-v "interface ${br1.br.lan.int1} switchport access vlan ${br1.vpc1.vlan}"
				-v "interface ${br1.br.lan.int1} switchport user-profile-attribute 1"
			</telnet>
		</step>

		<step no="4.2">
			<desc>br1.vpc1 get ip addr from dhcp server of mgt0.1</desc>
			<log-file>ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name} -r"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="4.2b">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<include prefix="4.3" file="subs/sta_ping.xml" args="br1.vpc1, ${cvg1.vpc1.tif.ip}, 4" />

		<step no="4.4">
			<desc>
				enable debug
			</desc>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "_debug vpn info"
				-v "_debug vpn all"
				-v "no _debug vpn packet"
				-v "clear log buff"
			</telnet>
		</step>

		<step no="5">
			<desc>
				check the phase to lifetime
			</desc>
			<log-file>step5.chow_ikeconfig.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show vpn ike configuration"
				-v "show vpn ike sp"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "phase1 proposal" -ps p "lifetime time 85984 sec" -ps p "phase2 proposal" -e "lifetime time 3600 sec" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.1">
			<desc>
				Configure IKE Phase 1 lifetime to be the minimum value (180 sec)
				Configure IKE Phase 2 lifetime to be 300 sec, so that IKE Phase 1 SA would expire before IKE Phase 2 SA rekeys
			</desc>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "vpn ipsec-tunnel ${br1.tunnel.name} ike phase1 lifetime 180"
				-v "vpn ipsec-tunnel ${br1.tunnel.name} ike phase2 lifetime 300"
			</telnet>
		</step>

		<step no="5.2">
			<desc>
				check the phase to lifetime
			</desc>
			<log-file>step5.2_show_ike_config.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show vpn ike configuration"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "phase1 proposal" -ps p "lifetime time 180 sec" -ps p "phase2 proposal" -e "lifetime time 300 sec" -f ${log.dir}/${log.file}</log-match>
		</step>
		
		<step no="5.3"  type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				check the vpn ike sa is established
			</desc>
			<log-file>step5.3_ike_sa_br.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>
		</step>
		
		<step no="get_tunnel0-id_BR">
			<desc>get  tunnel0-id</desc>
			<setvar name="br1.tunnel0-id">
				${bin.dir}/getbyrexp.py -p "${cvg1.cvg.tunnel.ip}.*\s+(\d+)" -f ${log.dir}/step5.3_ike_sa_br.log -t str
			</setvar>
		</step>

		<step no="5.4" delay="15">
			<desc>
				 layer-3-tunnel status should be correct
			</desc>
			<log-file>step5.4_show_gre_tunnel_br.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show vpn tunnel-id ${br1.tunnel0-id}"
				-v "show vpn  ipsec-tunnel"
				-v "show vpn ike sp"
				-v "show vpn layer-3-tunnel"
	
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "tunnel\d+[\t ]*gre/ipsec[\t ]*${cvg1.cvg.wan.ip}[\t ]*${br1.br.mgt0.ip}[\t ]*\d+[\t ]*${cvg1.cvg.tunnel.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>


		<step no="6.1" delay="180" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				Verify IKE Phase 1 is rekeyed when its lifetime expires.
				Verify Only IKE Phase 2 rekey when it’s lifte time is longer than phase 1 life time.
			</desc>
			<log-file>step6.1_ike_sa_br.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>
		</step>
		
		<step no="get_tunnel0-id_BR">
			<desc>get  tunnel0-id</desc>
			<setvar name="br1.tunnel0-id">
				${bin.dir}/getbyrexp.py -p "${cvg1.cvg.tunnel.ip}.*\s+(\d+)" -f ${log.dir}/step6.1_ike_sa_br.log -t str
			</setvar>
		</step>

		<step no="6.2">
			<desc>
				2. layer-3-tunnel status should be correct
			</desc>
			<log-file>step6.2_show_gre_tunnel_br.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show vpn tunnel-id ${br1.tunnel0-id}"
				-v "show vpn  ipsec-tunnel"
				-v "show vpn ike sp"
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "tunnel\d+[\t ]*gre/ipsec[\t ]*${cvg1.cvg.wan.ip}[\t ]*${br1.br.mgt0.ip}[\t ]*\d+[\t ]*${cvg1.cvg.tunnel.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="get_tunnel.id_BR">
			<desc>get br primary tunnel id</desc>
			<setvar name="br1.tunnel.id">
				${bin.dir}/getbyrexp.py -p "(tunnel\d+)[\t ]*gre/ipsec[\t ]*${cvg1.cvg.wan.ip}[\t ]*${br1.br.mgt0.ip}[\t ]*\d+[\t ]*${cvg1.cvg.tunnel.ip}" -f ${log.dir}/step6.2_show_gre_tunnel_br.log -t str
			</setvar>
		</step>

		<step no="7">
			<desc>
				3. after tunnel is down, the tunnel routes should be removed
				4. after tunnel is up, the tunnel routes should be added correctly
			</desc>
			<log-file>step7_show_log_buff.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show log buf "
			</telnet>
			<log-match bin="${bin.dir}/mlinesearch.pl">-l "Send gre packet \(${br1.br.mgt0.ip}-&gt;${cvg1.cvg.wan.ip}\) to trigger phase2 start" -l "VPN gateway mgt0\(${cvg1.cvg.mgt0.ip}\) route: ip route add blackhole ${cvg1.cvg.mgt0.ip}/32 table t_internal_drop" -l "VPN gateway mgt0\(${cvg1.cvg.mgt0.ip}\) route: ip route add ${cvg1.cvg.mgt0.ip}/32 dev ${br1.tunnel.id} table t_exception" -l "VPN gateway mgt0\(${cvg1.cvg.mgt0.ip}\) route: ip route add ${cvg1.cvg.mgt0.ip}/32 dev ${br1.tunnel.id} table t_all" -l "VPN gateway mgt0\(${cvg1.cvg.mgt0.ip}\) route: ip route add ${cvg1.cvg.mgt0.ip}/32 dev ${br1.tunnel.id} table main" -l "got vpn server GRE gateway:${cvg1.cvg.wan.ip}" -l "successfully set l3 tunnel if endpoints : tunnel0 ${br1.br.mgt0.ip}-&gt;${cvg1.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		
		<step no="7.1" >
			<desc>
				check the phase1 rekey of tunnel0 on BR1 is correct
			</desc>
			<log-file>step7.1_show_log_buff.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show log buf "
			</telnet>
			<log-match>-i "Phase 1 established" </log-match>
 			<log-match>-i "phase1 rekey, use old session ID:" </log-match>
  			<log-match>-i "#Status:Phase 1 expired" </log-match>
			<no-error-check />
		</step>
		
		<step no="7.2" delay="100" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				check the phase2 rekey of tunnel0 on BR1 is correct
			</desc>
			<log-file>step7.2_show_log_buff.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show log buf "
				-v "clear log buffer"
			</telnet>
			<log-match>-i "Phase 2 established" </log-match>
 			<log-match>-i "&lt;IKE ${cvg1.cvg.wan.ip}\[4500\]&gt; Phase 2 started" </log-match>
  			<log-match>-i "#Status:Phase 2 expired" </log-match>
			<no-error-check />
		</step>
		

		<include prefix="8" file="subs/sta_ping.xml" args="br1.vpc1, ${cvg1.vpc1.tif.ip}, 4" />

		<include prefix="9" file="subs/br_close_fw.xml" obj-args="br1" />

		<step no="9.1">
			<desc>eth0 dhcp</desc>
			<console target="br1.br" slow="yes">
				-v "no interface ${br1.br.wan.int1} dhcp client"
				-v ""
				-v "interface ${br1.br.wan.int1} dhcp client"
				-v ""
			</console>
		</step>

		<step no="9.2" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>check traffic through wan on BR</desc>
			<console target="br1.br">
				-v "ping ${pub.dns1.ip}"
			</console>
			<log-match>-c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>

		<step no="9.3" delay="5">
			<desc>show interface eth0 on BR</desc>
			<log-file>show_br1.br__eth0.log</log-file>
			<console target="br1.br">
				-v "show interface ${br1.br.wan.int1} dhcp client"
			</console>
		</step>

		<step no="9.4">
			<desc>get eth0 ip of br</desc>
			<setvar name="br1.br.wan.ip">
				${bin.dir}/getbyrexp.py -p "Get IP address (\d+\.\d+\.\d+\.\d+) from" -f ${log.dir}/show_br1.br__eth0.log -t str
			</setvar>
		</step>

		<step no="10">
			<desc>config BR connect to CVG</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "vpn ipsec-tunnel ${br1.tunnel.name} gateway ${cvg1.cvg.tunnel.ip} client-name ${br1.br.name} password aerohive"
				-v "no vpn ipsec-tunnel ${br1.tunnel.name} ike phase1 lifetime"
				-v "no vpn ipsec-tunnel ${br1.tunnel.name} ike phase2 lifetime"
			</telnet>
		</step>

		<step no="10.1" delay="20" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on BR side
				destination to public address of the CVG behind FW
			</desc>
			<log-file>10.1ike_sa_br.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.tunnel.ip}"</log-match>
		</step>
		
		<step no="get_tunnel0-id_BR">
			<desc>get  tunnel0-id</desc>
			<setvar name="br1.tunnel0-id">
				${bin.dir}/getbyrexp.py -p "${cvg1.cvg.tunnel.ip}.*\s+(\d+)" -f ${log.dir}/10.1ike_sa_br.log -t str
			</setvar>
		</step>
		

		<step no="10.2" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on CVG side
				destination to public address of the BR
			</desc>
			<log-file>10.2.ike_sa_cvg.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "R" -i "${br1.br.wan.ip}"</log-match>
		</step>

		<step no="10.3" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				layer-3-tunnel status should be correct
			</desc>
			<log-file>step10.3_show_gre_tunnel_br.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn tunnel-id ${br1.tunnel0-id}"
				-v "show vpn  ipsec-tunnel"
				-v "show vpn ike sp"
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "tunnel\d+[\t ]*gre/ipsec[\t ]*${cvg1.cvg.wan.ip}[\t ]*${br1.br.mgt0.ip}[\t ]*\d+[\t ]*${cvg1.cvg.tunnel.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="get_tunnel.id_BR">
			<desc>get br primary tunnel id</desc>
			<setvar name="br1.tunnel.id">
				${bin.dir}/getbyrexp.py -p "(tunnel\d+)[\t ]*gre/ipsec[\t ]*${cvg1.cvg.wan.ip}[\t ]*${br1.br.mgt0.ip}[\t ]*\d+[\t ]*${cvg1.cvg.tunnel.ip}" -f ${log.dir}/step10.3_show_gre_tunnel_br.log -t str
			</setvar>
		</step>

		<step no="10.4" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>check gre tunnel on cvg side
				local to CVG wan addr
			</desc>
			<log-file>10.4.show_gre_tunnel_cvg.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "any" -p 4 -i "${cvg1.cvg.wan.ip}" -p 6 -i "anonymous"</log-match>
		</step>

		<step no="10.5" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>On GW, will add the tunnel routes according to BR's modification </desc>
			<log-file>10.5.show_route_cvg_.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="10">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${br1.br.mgt0.1.route}" -p 8 -i "${cvg1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${br1.br.mgt0.2.route}" -p 8 -i "${cvg1.tunnel.id}"</log-match>
		</step>

		<step no="10.6" type="loop-check" loop-max-times="15" loop-interval="10">
			<desc>-check the ip route tablelist</desc>
			<log-file>10.6_show_l3_ip_route.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${cvg1.dns1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg1.dns2.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg1.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
		</step>

		<include prefix="10.7" file="subs/sta_ping.xml" args="br1.vpc1, ${cvg1.vpc1.tif.ip}, 4" />

		<step no="11">
			<desc>
				check the phase to lifetime
			</desc>
			<log-file>step11.chow_ikeconfig.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show vpn ike configuration"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "phase1 proposal" -ps p "lifetime time 85984 sec" -ps p "phase2 proposal" -e "lifetime time 3600 sec" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="12">
			<desc>
				Configure IKE Phase 1 lifetime to be the minimum value (180 sec)
				Configure IKE Phase 2 lifetime to be 300 sec, so that IKE Phase 1 SA would expire before IKE Phase 2 SA rekeys
			</desc>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "vpn ipsec-tunnel ${br1.tunnel.name} ike phase1 lifetime 180"
				-v "vpn ipsec-tunnel ${br1.tunnel.name} ike phase2 lifetime 300"
			</telnet>
		</step>

		<step no="12.1">
			<desc>
				check the phase to lifetime
			</desc>
			<log-file>step12.1_show_ike_config.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show vpn ike configuration"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "phase1 proposal" -ps p "lifetime time 180 sec" -ps p "phase2 proposal" -e "lifetime time 300 sec" -f ${log.dir}/${log.file}</log-match>
		</step>
		
		<step no="12.2"  type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				check the vpn ike sa is established on br
			</desc>
			<log-file>step12.1_ike_sa_br.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.tunnel.ip}"</log-match>
		</step>
		
		<step no="get_tunnel0-id_BR">
			<desc>get  tunnel0-id</desc>
			<setvar name="br1.tunnel0-id">
				${bin.dir}/getbyrexp.py -p "${cvg1.cvg.tunnel.ip}.*\s+(\d+)" -f ${log.dir}/step12.1_ike_sa_br.log -t str
			</setvar>
		</step>
		
		<step no="12.3" delay="15">
			<desc>
				 layer-3-tunnel status should be correct
			</desc>
			<log-file>step12.3_show_gre_tunnel_br.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show vpn tunnel-id ${br1.tunnel0-id}"
				-v "show vpn  ipsec-tunnel"
				-v "show vpn ike sp"
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "tunnel\d+[\t ]*gre/ipsec[\t ]*${cvg1.cvg.wan.ip}[\t ]*${br1.br.mgt0.ip}[\t ]*\d+[\t ]*${cvg1.cvg.tunnel.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>
		
		<step no="12.4">
			<desc>
				3. after tunnel is down, the tunnel routes should be removed
				4. after tunnel is up, the tunnel routes should be added correctly
			</desc>
			<log-file>step12.4_show_log_buff.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show log buf"
			</telnet>
			<log-match bin="${bin.dir}/mlinesearch.pl">-l "Send gre packet \(${br1.br.mgt0.ip}-&gt;${cvg1.cvg.wan.ip}\) to trigger phase2 start" -l "VPN gateway mgt0\(${cvg1.cvg.mgt0.ip}\) route: ip route add blackhole ${cvg1.cvg.mgt0.ip}/32 table t_internal_drop" -l "VPN gateway mgt0\(${cvg1.cvg.mgt0.ip}\) route: ip route add ${cvg1.cvg.mgt0.ip}/32 dev ${br1.tunnel.id} table t_exception" -l "VPN gateway mgt0\(${cvg1.cvg.mgt0.ip}\) route: ip route add ${cvg1.cvg.mgt0.ip}/32 dev ${br1.tunnel.id} table t_all" -l "VPN gateway mgt0\(${cvg1.cvg.mgt0.ip}\) route: ip route add ${cvg1.cvg.mgt0.ip}/32 dev ${br1.tunnel.id} table main" -l "got vpn server GRE gateway:${cvg1.cvg.wan.ip}" -l "successfully set l3 tunnel if endpoints : tunnel0 ${br1.br.mgt0.ip}-&gt;${cvg1.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="13.1" delay="180"  type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				
				Verify Only IKE Phase 2 rekey when it’s lifte time is longer than phase 1 life time.
			</desc>
			<log-file>step13.1_ike_sa_br${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show vpn ike sa"
				-v "show vpn ike sp"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.tunnel.ip}"</log-match>
		</step>

		<step no="13.2">
			<desc>
				2. layer-3-tunnel status should be correct
			</desc>
			<log-file>step13.2_show_gre_tunnel_br.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "tunnel\d+[\t ]*gre/ipsec[\t ]*${cvg1.cvg.wan.ip}[\t ]*${br1.br.mgt0.ip}[\t ]*\d+[\t ]*${cvg1.cvg.tunnel.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="get_tunnel.id_BR">
			<desc>get br primary tunnel id</desc>
			<setvar name="br1.tunnel.id">
				${bin.dir}/getbyrexp.py -p "(tunnel\d+)[\t ]*gre/ipsec[\t ]*${cvg1.cvg.wan.ip}[\t ]*${br1.br.mgt0.ip}[\t ]*\d+[\t ]*${cvg1.cvg.tunnel.ip}" -f ${log.dir}/step13.2_show_gre_tunnel_br.log -t str
			</setvar>
		</step>
		
		<step no="13.3" type="loop-check" loop-max-times="15" loop-interval="10">
			<desc>-check the ip route tablelist on br</desc>
			<log-file>13.3_show_l3_ip_route.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${cvg1.dns1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg1.dns2.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg1.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
		</step>
		
		<step no="14.1" >
			<desc>
				check the phase1 rekey of tunnel0 on BR1 is correct
			</desc>
			<log-file>step14.1_show_log_buff.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show log buf"
			</telnet>
			<log-match>-i "Phase 1 established" </log-match>
 			<log-match>-i "phase1 rekey, use old session ID:" </log-match>
  			<log-match>-i "#Status:Phase 1 expired" </log-match>
			<no-error-check />
		</step>
		
		<step no="14.2" delay="100" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				check the phase2 rekey of tunnel0 on BR1 is correct
			</desc>
			<log-file>step14.2_show_log_buff.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show log buf"
				-v "clear log buffer"
			</telnet>
			<log-match>-i "Phase 2 established" </log-match>
 			<log-match>-i "&lt;IKE ${cvg1.cvg.wan.ip}\[4500\]&gt; Phase 2 started" </log-match>
  			<log-match>-i "#Status:Phase 2 expired" </log-match>
			<no-error-check />
		</step>
		
		
		
		<step no="14.3" >
			<desc>show log On GW</desc>
			<log-file>14.3.show_route_cvg_.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="60">
				-v "show ip route"
				-v "show log buffer"
			</telnet>
			<no-error-check />
		</step>

		<include prefix="15" file="subs/sta_ping.xml" args="br1.vpc1, ${cvg1.vpc1.tif.ip}, 4" />


		<include prefix="16" file="subs/br_open_fw.xml" obj-args="br1" />

	</stage>

	<failed-process>
		<stage>
		<step no="1">
			<desc>
				 show log buffer on br if the case failed 
			</desc>
			<log-file>step1_show_gre_tunnel_br.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show log buffer"
				
			</telnet>
			<no-error-check />
		</step>
			<include prefix="0.1" file="subs/br_open_fw.xml" obj-args="br1" />
		</stage>

		<include file="include/br_default_failed_process.xml" />

	</failed-process>

</testcase>
