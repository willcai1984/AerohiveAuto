<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Remove a exception sub network</brief>
	<priority>High</priority>
	<automated>no</automated>
	<description>

		Pre-Condition:

		-l3 vpn tunnel is created between BR and CVG
		-setup a ssid on BR, bind a user-profile with l3-tunnel-action with-
		exception
		-connect a ssid to the above ssid

		Test Procedure:

		- check the ip policy-route l3-tunnel-split,tunnel routes should be
		correct
		-STA1 ping web server on internet
		-STA1 ping servers behind remote CVG1
		-STA1 ping servers behind remote CVG2
		-STA1 ping local LANs
	</description>
	<numofbr>1</numofbr>
	<numofcvg>2</numofcvg>
	<tbtype>winlin</tbtype>
	<cvg-opt-same-backnet>no</cvg-opt-same-backnet>
	
	<property name="br.route.netmask" value="255.255.255.0" />

	<stage>

		<step no="pre.0.1">
			<desc>enable wan port nat if FW nonexists</desc>
			<if>"no" == "${cvg1.cvg.fw_existed}"</if>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="5">
				-v "interface eth0 mode wan nat"
			</telnet>
		</step>

		<step no="pre.0.2">
			<desc>enable wan port nat if FW nonexists</desc>
			<if>"no" == "${cvg2.cvg.fw_existed}"</if>
			<telnet target="${cvg2.cvg.tunnel.ip}" timeout="5">
				-v "interface eth0 mode wan nat"
			</telnet>
		</step>

		<include prefix="1" file="subs/vpn_setup_two_sw.xml" obj-args="cvg1, cvg2, br1" />

		<step no="2.1">
			<desc>config mgt0.1 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "vlan ${br1.vpc1.vlan}"
				-v "interface vlan ${br1.vpc1.vlan}"
				-v "interface vlan${br1.vpc1.vlan} ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options netmask 255.255.255.0"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server enable"
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v ""
				-v ""
				-v ""
			</telnet>
		</step>
		
		<step no="2.2">
			<desc>config mgt0.2 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "vlan ${br1.vpc2.vlan}"
				-v "interface vlan ${br1.vpc2.vlan}"
				-v "interface vlan${br1.vpc2.vlan} ip ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
				-v "interface vlan${br1.vpc2.vlan} dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface vlan${br1.vpc2.vlan} dhcp-server options netmask 255.255.255.0"
				-v "interface vlan${br1.vpc2.vlan} dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface vlan${br1.vpc2.vlan} dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface vlan${br1.vpc2.vlan} dhcp-server enable"
				-v "routing internal-sub-network ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
				-v ""
				-v ""
				-v ""
			</telnet>
		</step>
		 <!--
		<step no="2.3" type="loop-check" loop-max-times="3" loop-interval="10">
			<desc>CVG1 advertise supper net for BRs</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${br.mgt0.supermask}"
				-v ""
				-v ""
			</telnet>
		</step>

		<step no="2.4" type="loop-check" loop-max-times="3" loop-interval="10">
			<desc>CVG2 advertise supper net for BRs</desc>
			<telnet target="${cvg2.cvg.tunnel.ip}" timeout="10">
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${br.mgt0.supermask}"
				-v ""
				-v ""
				-v ""
			</telnet>
		</step>-->

		<step no="set_lan_info">
			<multi-setvar>
				echo "br1.br.mgt0.1.route=$(echo ${br1.br.mgt0.1.ip} | cut -d. -f1,2,3).0"
				echo "cvg1.vpc1.route=$(echo ${cvg1.vpc1.tif.ip} | cut -d. -f1,2,3).0"
				echo "cvg1.dns1.route=$(echo ${cvg1.dns1.ip} | cut -d. -f1,2,3).0"
				echo "cvg2.vpc1.route=$(echo ${cvg2.vpc1.tif.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<step no="3.1" delay="30">
			<desc>On GW1, will add the tunnel routes according to BR's modification </desc>
			<log-file>3.1.show_route_cvg_.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="15">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${br1.br.mgt0.1.route}" -p 8 -i "${cvg1.tunnel.id}"</log-match>
		</step>

		<step no="3.2" delay="30">
			<desc>On GW2, will add the tunnel routes according to BR's modification </desc>
			<log-file>3.2.show_route_cvg_.log</log-file>
			<telnet target="${cvg2.cvg.tunnel.ip}" timeout="15">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${br1.br.mgt0.1.route}" -p 8 -i "${cvg2.tunnel.id}"</log-match>
		</step>

		<step no="4">
			<desc>
				setup all wifi radio and eth interface as access mode
				connect STA1 under wifi, connect a STA2 under eth1
				setup a eth interface to bind a user-profile with l3-tunnel-action with-exception,
				setup a ssid on BR, bind a user-profile with l3-tunnel-action with-exception
			</desc>
		</step>

		<step no="4.1">
			<desc>
				eth1 access br1.vpc1.vlan,eth4 access br1.vpc2.vlan
			</desc>
			<telnet target="${br1.br.wan.ip}">				
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"
				-v "user-profile lan2 qos-policy def-user-qos vlan-id ${br1.vpc2.vlan} attribute 2"
				-v "interface ${br1.br.lan.int1} switchport mode access"
				-v "interface ${br1.br.lan.int1} switchport access vlan ${br1.vpc1.vlan}"
				-v "interface ${br1.br.lan.int4} switchport mode access"
				-v "interface ${br1.br.lan.int4} switchport access vlan ${br1.vpc2.vlan}"
				-v "interface ${br1.br.lan.int1} switchport user-profile-attribute 1"
				-v "interface ${br1.br.lan.int4} switchport user-profile-attribute 2"	
			</telnet>
		</step>

		<step no="4.2">
			<desc>br1.vpc1 get ip addr from dhcp server of mgt0.1</desc>
			<log-file>ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="4.3">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>
		
		<step no="4.4">
			<desc>br1.vpc4 get ip addr from dhcp server of mgt0.2</desc>
			<log-file>ifconfig_vpc4_.log</log-file>
			<ssh target="br1.vpc4" timeout="120">
				-v "ifconfig ${br1.vpc4.tif.name} down"
				-v "ifconfig ${br1.vpc4.tif.name} up"
				-v "dhclient ${br1.vpc4.tif.name} -r"
				-v "dhclient ${br1.vpc4.tif.name}"
				-v "ifconfig ${br1.vpc4.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="4.5">
			<desc>set br1.vpc4.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc4.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc4.mif.ip} -u ${br1.vpc4.user} -p ${br1.vpc4.passwd} -i ${br1.vpc4.tif.name} -nomask
			</setvar>
		</step>		

		<step no="5.1">
			<desc>
				Check connectivity
				Add host cvg1.vpc1 as a exception list
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "routing match-map mlan1 user-profile lan1 to network ${cvg1.vpc1.route}/${br.lan.netmask}"
				-v "routing match-map mlan1_1 user-profile lan1 to any"
				-v "routing route-map rlan1 via ${br1.br.wan.int1}"
				-v "routing route-map rlan1_1 via encrypted"
				-v "routing policy plan1 id 1 match-map mlan1 route-map rlan1"
				-v "routing policy plan1_1 id 2 match-map mlan1_1 route-map rlan1_1"
			</telnet>
		</step>
		
		<step no="5.2">
			<desc>-check the Tunnel All With Exception Routing Table</desc>
			<log-file>5.1_show_l3_policy_route.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show routing policy plan1"
			</telnet>
			<log-match>-i "${cvg1.vpc1.route}" -i "${br.route.netmask}"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\d *${br1.br.wan.int1}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.3" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>BR ping br1.vpc1</desc>
			<log-file>step5.3_ping.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "ping ${br1.vpc1.tif.ip}"
			</telnet>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="5.4" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>BR ping br1.vpc4</desc>
			<log-file>step5.4_ping.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "ping ${br1.vpc4.tif.ip}"
			</telnet>
			<log-match>-c -i "from ${br1.vpc4.tif.ip}: " -i "ttl="</log-match>
		</step>		

		<step no="5.5">
			<desc>enable debug on BR</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear log buffered"
				-v "_ff id 1 src-ip ${br1.vpc1.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</telnet>
		</step>		

		<step no="5.6" delay="30">
			<desc>-check the Tunnel All Split Routing Table</desc>
			<log-file>5.6_show_l3_tunnel_split.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip policy-route l3-tunnel-split"
			</telnet>
			<log-match>-p 1 -i "${cvg1.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 7 -i "${br1.tunnel.id}"</log-match>
		</step>

		<step no="5.7">
			<desc>-check ip Routing Table</desc>
			<log-file>5.7_show_l3_ip_route.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${cvg1.dns1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg1.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg2.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id2}"</log-match>
		</step>
		
		<step no="6" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>br1.vpc1 ping pub.dns1</desc>
			<log-file>vpc1_ping_pub.dns1.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>

		<step no="6.1">
			<desc>
				show log buffer
			</desc>
			<log-file>setp6.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v ""
				-v ""
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log buff"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "L\*: \(o\) tunnel\d+ ${br1.vpc1.tif.ip}[\t\>\- ]+${pub.dns1.ip}.+icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		
		<step no="7">
			<desc>br1.vpc1 ping cvg1.vpc1</desc>
			<log-file>vpc1_ping_cvg1.vpc1.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 4"				
			</ssh>
			<log-match>-n -c -i "from ${cvg1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>		

		<step no="7.1">
			<desc>
				show log buffer
			</desc>
			<log-file>setp7.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v ""
				-v ""
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log buff"
			</telnet>
			<!--  <log-match bin="${bin.dir}/searchbyrexp.py">-p "create routing cache:${br1.vpc1.tif.ip}[\t\>\- ]+${cvg1.vpc1.tif.ip}[\t ]+fwmark \d* dev ${br1.br.wan.kport1}" -f ${log.dir}/${log.file}</log-match>-->
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "iptables FORWARD pkt ${br1.vpc1.tif.ip}\(vlan${br1.vpc1.vlan}\)\-\>${cvg1.vpc1.tif.ip}\(${br1.br.wan.kport1}\)" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		
		<step no="8" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>br1.vpc1 ping br1.vpc4</desc>
			<log-file>vpc1_ping_br1.vpc4.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${br1.vpc4.tif.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${br1.vpc4.tif.ip}: " -i "ttl="</log-match>
		</step>		

		<step no="8.1">
			<desc>
				show log buffer
			</desc>
			<log-file>setp8.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v ""
				-v ""
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log buff"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "L\*: \(o\) mux0 ${br1.vpc1.tif.ip}[\t\>\- ]+${br1.vpc4.tif.ip}.+icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		
		<step no="9" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>br1.vpc1 ping cvg2.vpc1</desc>
			<log-file>vpc1_ping_cvg2.vpc1.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg2.vpc1.tif.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${cvg2.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="9.1">
			<desc>
				show log buffer
			</desc>
			<log-file>setp9.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v ""
				-v ""
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log buff"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "L\*: \(o\) tunnel\d+ ${br1.vpc1.tif.ip}[\t\>\- ]+${cvg2.vpc1.tif.ip}.+icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="10">
			<desc>
				-remove an ip addr(host) of cvg1.vpc1 to the exception list
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "no routing policy plan1"
				-v "no routing route-map rlan1"
				-v "no routing match-map mlan1"
			</telnet>
		</step>		

		<step no="10.1" type="loop-check" loop-max-times="3" loop-interval="5">
			<desc>-check the Tunnel All With Exception Routing Table</desc>
			<log-file>10.1_show_l3_tunnel_exception.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip policy-route l3-tunnel-exception"
			</telnet>
			<log-match>-p 1 -i "${cvg1.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 7 -i "${br1.tunnel.id}"</log-match>
		</step>

		<step no="10.2">
			<desc>-check the Tunnel All Split Routing Table</desc>
			<log-file>10.2_show_l3_tunnel_split.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip policy-route l3-tunnel-split"
			</telnet>
			<log-match>-p 1 -i "${cvg1.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 7 -i "${br1.tunnel.id}"</log-match>
		</step>

		<step no="10.3">
			<desc>-check the IP Routing Table</desc>
			<log-file>10.3_show_ip_route.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${cvg1.dns1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg1.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg2.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id2}"</log-match>
		</step>
		
		<step no="11" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>br1.vpc1 ping pub.dns1</desc>
			<log-file>vpc1_ping_pub.dns1_2.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>		

		<step no="11.1">
			<desc>
				show log buffer
			</desc>
			<log-file>setp11.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v ""
				-v ""
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log buff"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "L\*: \(o\) tunnel\d+ ${br1.vpc1.tif.ip}[\t\>\- ]+${pub.dns1.ip}.+icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		
		<step no="12" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>br1.vpc1 ping cvg1.vpc1</desc>
			<log-file>vpc1_ping_cvg1.vpc1_2.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${cvg1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>	

		<step no="12.1">
			<desc>
				show log buffer
			</desc>
			<log-file>setp12.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v ""
				-v ""
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log buff"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "L\*: \(o\) tunnel\d+ ${br1.vpc1.tif.ip}[\t\>\- ]+${cvg1.vpc1.tif.ip}.+icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		
		<step no="13" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>br1.vpc1 ping br1.vpc4</desc>
			<log-file>vpc1_ping_br1.vpc4_2.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${br1.vpc4.tif.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${br1.vpc4.tif.ip}: " -i "ttl="</log-match>
		</step>		

		<step no="13.1">
			<desc>
				show log buffer
			</desc>
			<log-file>setp13.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v ""
				-v ""
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log buff"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "L\*: \(o\) mux0 ${br1.vpc1.tif.ip}[\t\>\- ]+${br1.vpc4.tif.ip}.+icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		
		<step no="14" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>br1.vpc1 ping cvg2.vpc1</desc>
			<log-file>vpc1_ping_cvg2.vpc1_2.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg2.vpc1.tif.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${cvg2.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>	

		<step no="14.1">
			<desc>
				show log buffer
			</desc>
			<log-file>setp14.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v ""
				-v ""
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log buff"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "L\*: \(o\) tunnel\d+ ${br1.vpc1.tif.ip}[\t\>\- ]+${cvg2.vpc1.tif.ip}.+icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

	</stage>

</testcase>