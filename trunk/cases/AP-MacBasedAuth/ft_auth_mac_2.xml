<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Mac format with upper-case</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-config a ssid,mac auth enable
		-config a user on radius server,pls pay attention to the format

		Test Procedure:
		-config the mac format,we has several parameters
		-choose case-sensitivity , delimiter and style
		-client connect to ssid
		-config mac format with upper-case, e.g. AABBCCDDEEFF
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<stage>
		<step no="0.1">
			<setvar name="sta1.auth_mac">
				echo "${sta1.tif.smac}" | sed 's/://g'
			</setvar>
		</step>
		<include prefix="0.2" file="subs/ldap_add.xml" args="${sta1.auth_mac}, ${sta1.auth_mac}" />

		<step no="1">
			<desc>config hive for AP</desc>
			<ssh target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</ssh>
		</step>
		<step no="2">
			<desc>set security-object parameters</desc>
			<ssh target="ap1">
				-v "security-object autoap"
				-v "ssid ${ssid.name}"
				-v "security-object autoap security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap security additional-auth-method mac-based-auth"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "save config"
			</ssh>
		</step>
		<step no="2.1">
			<desc>
				check MAC-based auth status.
			</desc>
			<log-file>show_security_object_mac_auth.log</log-file>
			<ssh target="ap1">
				-v "show security-object autoap"
			</ssh>
			<log-match>-e "Enabled" -i "MAC-based auth" -p 3</log-match>
		</step>
		<step no="3">
			<desc>config the mac format,choose case-sensitivity , delimiter and style</desc>
			<ssh target="ap1">
				-v "aaa mac-format case-sensitivity upper-case"
				-v "aaa mac-format style no-delimiter"
			</ssh>
		</step>
		<step no="4">
			<desc>
				check mac-format example via show aaa;
			</desc>
			<log-file>show_aaa_mac_format.log</log-file>
			<ssh target="ap1">
				-v "show aaa"
			</ssh>
			<log-match>-e "AAA mac-format example:" -i "0123456789AB"</log-match>
		</step>

		<include prefix="5" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn1, sta1, ap1" />

		<include prefix="6" file="subs/chk_sta_conn_in_ap.xml" args="ap1, sta1, open, x, open, none" />
		<step no="7">
			<desc>enable auth debug on AP</desc>
			<ssh target="ap1">
				-v "_debug auth all"
				-v "logging debug"
				-v "clear log buff"
				-v "_kde wifi-driver wifi0.1 assoc"
			</ssh>
		</step>

		<property name="conn2.auth_negative_test" value="true" />
		<include prefix="8" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn2, sta2, ap1" />

		<include prefix="9" file="subs/save_ap_log.xml" args="show logging buffered, ap1, auth_debug.log" />

		<step no="11.1">
			<desc>ifconfig to show the ip add</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta2" timeout="80">
				-v "ifconfig ${sta2.tif.name}"
			</ssh>
		</step>
		<step no="11.2">
			<desc>
				get sta2 mac with five delimiter style
			</desc>
			<setvar name="sta2.tif.mac.with5">
				echo "${sta2.tif.mac}" | sed 's/://g; s/../&amp;:/g;s/.$//'
			</setvar>
		</step>
		<step no="12">
			<desc>check log buffer</desc>
			<log-file>auth_debug.log</log-file>
			<log-match>-e "MAC-based auth: RADIUS server send reject to station ${sta2.tif.mac}" -c</log-match>
			<log-match>-e "MAC-based auth: ban ${sta2.tif.mac}" -c</log-match>
			<log-match>-e "wifi0.1: ACL: add mac ${sta2.tif.mac.with5}" -i "action deny, dynamic" -c</log-match>
			<log-match>-e "wifi0.1: \[${sta2.tif.mac.with5}\]" -i "auth: disallowed by ACL" -c</log-match>
		</step>
		<step no="13.1" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				check debug info
			</desc>
			<log-file>auth_debug_remove_mc.log</log-file>
			<ssh target="ap1">
				-v "show logging debug | include ACL"
			</ssh>
			<log-match>-e "wifi0.1: ACL: remove mac ${sta2.tif.mac.with5} dynamic" -c</log-match>
		</step>
		<step no="14">
			<desc>show roaming cache on AP1 </desc>
			<log-file>show_roaming_cache_sta2.log</log-file>
			<ssh target="ap1">
				-v "show roaming cache"
			</ssh>
			<log-match>-e "${sta2.tif.mac}" -c -n</log-match>
		</step>
	</stage>
	<post-process>
		<stage>
			<include prefix="0.2" file="subs/ldap_delete.xml" args="${sta1.auth_mac}" />
		</stage>

		<include prefix="def_post" file="include/default_post_process.xml" />
	</post-process>
</testcase>