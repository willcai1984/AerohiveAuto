<testcase>
	<brief>Config a ssid with wpa2-aes-8021x</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<description>
		Topology to use
		Description
		Config a ssid with wpa2-aes-psk
		Pre-condition
		-config a ssid with wpa2-aes-psk
		Test procedure
		-client connect to ssid with the correct credentials
		Expect result
		1.Client connection successful
		2.Make sure the traffic run well,ping gateway for 10 minutes
	</description>

	<property name="so1.name" value="autoap1" />
	<property name="so1.proto" value="wpa2-aes-8021x" />
	<property name="so1.radius.ip" value="${pub.radius1.ip}" />
	<property name="so1.radius.sharesecret" value="${pub.radius1.sharesecret}" />

	<stage>
		<include prefix="1" file="subs/set_so_for_ssid.xml" obj-args="ap1, so1" args="${ssid.name}" />

		<include prefix="2" file="subs/bind_ssid_for_radio.xml" args="ap1, ${ssid.name}, wifi0" />

		<step no="2.1">
			<desc>set rekey period as 600 period</desc>
			<ssh target="ap1">
				-v "security-object autoap1 security protocol-suite wpa2-aes-8021x gmk-rekey-period 600"
				-v "_debug auth info"
			</ssh>
		</step>
		<step no="3">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=${so1.proto}"
				echo "conn1.pif=wifi0"
				echo "conn1.username=${pub.radius1.username}"
				echo "conn1.passwd=${pub.radius1.passwd}"
				echo "conn1.eap_type=TLS"
			</multi-setvar>
		</step>

		<include prefix="4" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<include prefix="5" file="subs/chk_sta_conn_status_in_ap.xml" obj-args="ap1, sta1" args="wpa2-aes-8021x, WPA2/CCMP, wpa2-8021x, aes" />
		<step no="6" delay="2000">
			<log-file>step6_show_log_buffer.log</log-file>
			<ssh target="ap1">
				-v "show logging buffered "
			</ssh>
		</step>
		<step no="7">
   			<setvar name="log.average_interval">
       			 perl ${bin.dir}/get_log_interval.pl \
        		 --file "${log.dir}/step6_show_log_buffer.log" \
      	  		 --pattern 'GMK rekeyd' \
        		 --mode "average"
    		</setvar>
		</step>
		<step no="8">
  		  <script>
      		  if [ ${log.average_interval} == 600 ]; then
      		  echo "average interval is OK"
         		   exit 0
      		  else
          		  echo "average interval is not OK"
           		   exit 1
        	  fi
   		 </script>
		</step>
	</stage>
</testcase>
