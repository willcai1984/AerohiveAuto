<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify that time settings of user group applies to manually configured accounts.</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-config a group with password-generation-method to manual

		Test Procedure:
		-config a start-time to this group
		-config a expired-time to this group
		-bind this group to a PPSK SSID
		-bind this ssid to wifi0
		-before the start time of the group, try to connect to the SSID [result 1]
		-when the start time reached, try to connect to the SSID [result 2]
		-keep the client connection and check it when the expire time reach
		[result 3]
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>winlin</tbtype>

	<property name="default.psk" value="aerohive" />
	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn1.proto" value="wpa-tkip-psk" />
	<property name="conn1.psk" value="ppskuser" />
	<property name="conn1.auth_negative_test" value="true" />
	<property name="conn1.dhcp_negative_test" value="true" />
	<property name="conn2.ssid" value="${ssid.name}" />
	<property name="conn2.proto" value="wpa-tkip-psk" />
	<property name="conn2.psk" value="ppskuser" />

	<stage>
		<step no="0">
			<desc>
				config vlan and native-vlan
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="0.1" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step0.1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="0.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="1">
			<desc>
				-config user group
				-set security-object parameter
			</desc>
			<ssh target="ap1">
				-v "_debug auth info"
				-v "clear log all"
				-v "user-group userGroup"
				-v "security-object ppsk"
				-v "security-object ppsk security protocol-suite wpa-tkip-psk ascii-key ${default.psk}"
				-v "security-object ppsk default-user-profile-attr 1"
				-v "security-object ppsk security private-psk"
				-v "user-profile ttt vlan-id ${tb.vlan1} attribute 1"
			</ssh>
		</step>

		<step no="1.1">
			<desc>
				-config a start-time to this group
				-config a expired-time to this group
				-bind this group to a PPSK SSID
				-bind this ssid to wifi0
			</desc>
			<ssh target="ap1">
				-v "user ppsk_user"
				-v "user ppsk_user password ppskuser"
				-v "user ppsk_user group userGroup"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} user-group userGroup"
				-v "ssid ${ssid.name} max-client 32"
				-v "ssid ${ssid.name} security-object ppsk"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 1"
				-v "clock date-time 2012-10-27 09:55:00"
				-v "user-group userGroup start-time 2012-10-27/10:00:00"
				-v "user-group userGroup expired-time 2012-10-27/10:07:00"
			</ssh>
		</step>

		<step no="1.2">
			<desc>
				show ap1's interface wifi0 info
			</desc>
			<log-file>show_ap1_interface_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				get ap1's wifi0's mac address
			</desc>
			<setvar name="ap1.wifi0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_ap1_interface_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<step no="2">
			<desc>
				-show auth private-psk
			</desc>
			<log-file>step2_show_auth_private_psk.log</log-file>
			<telnet target="ap1">
				-v "show auth private-psk"
			</telnet>
			<log-match>-c -i "PPSK-enabled=yes"</log-match>
			<log-match>-c -i "ppsk_user" -i "No"</log-match>
		</step>

		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="4">
			<desc>show log buffer</desc>
			<log-file>step4_show_logging_buffered.log</log-file>
			<ssh target="ap1">
				-v "show log b"
			</ssh>
		</step>

		<step no="4.1">
			<desc>
				check logging result
			</desc>
			<log-file>step4_show_logging_buffered.log</log-file>
			<log-match>-c -i "sta ${sta1.tif.mac} is disassociated from"</log-match>
			<log-match>-c -i "invalid MIC in msg 2/4 of 4-Way Handshake"</log-match>
		</step>

		<include prefix="5" file="subs/release_station_wifi.xml" obj-args="sta1" />

		<step no="6" delay="80" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				-show auth private-psk
			</desc>
			<log-file>step6_show_auth_private_psk_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "sh clock"
				-v "show auth private-psk"
			</telnet>
			<log-match>-c -i "ppsk_user" -i "Yes"</log-match>
		</step>

		<include prefix="7" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta1, ap1" />

		<step no="8">
			<desc>
				- sh ssid xxx st
			</desc>
			<log-file>step8_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}"</log-match>
		</step>

		<step no="8.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step8.1_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
		</step>

		<step no="8.2">
			<desc>
				- show auth
			</desc>
			<log-file>step8.2_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *1" -i "WPA/TKIP" -i "ppsk_user" -p 7 -i "done"</log-match>
		</step>

		<step no="8.3">
			<desc>
				- clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<step no="9" delay="120" type="loop-check" loop-max-times="25" loop-interval="10">
			<desc>
				-show auth private-psk
			</desc>
			<log-file>step9_show_auth_private_psk_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show auth private-psk"
				-v "show clock"
			</telnet>
			<log-match>-c -i "ppsk_user" -i "No"</log-match>
		</step>

		<include prefix="10" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step10_show_logging_buffered.log" />

		<step no="11">
			<desc>
				check logging result
			</desc>
			<log-file>step10_show_logging_buffered.log</log-file>
			<log-match>-c -i "Try to disassoc ${sta1.tif.mac} from" -i "for ssid ${ssid.name} because the Private-PSK was expired"</log-match>
		</step>

		<step no="12">
			<desc>
				- sh ssid xxx st
			</desc>
			<log-file>step12_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac} *${sta1.tif.ip}"</log-match>
		</step>

		<step no="12.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step12.1_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
		</step>

		<step no="12.2">
			<desc>
				- show auth
			</desc>
			<log-file>step12.2_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac} *1" -i "WPA/TKIP" -i "ppsk_user" -p 7 -i "done"</log-match>
		</step>
	</stage>
</testcase>