<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify the function of saving PPSK schedule to user config.</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Reset config of a HiveAP, both current config and bootstrap config.

		Test Procedure:
		1. Configure a PPSK schedule, 'sch001'
		2. Configure a system schedule 's_sch001'
		3. Check the running config and user config [result 1]
		4. Save users config
		5. Check the running config and user config [result 2]
		6. Config another PPSK schedule, 'sch002'
		7. Configure another system schedule 's_sch002'
		8. Check the running config and user config [result 3]
		9. Reboot the HiveAP
		10. After the AP is up again, check the running config and user config. [result 4]
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="0">
			<desc>
				Reset config of a HiveAP, both current config and bootstrap config.Reset current config of a HiveAP.
			</desc>
			<console target="ap1">
				-v "reset config bootstrap"
				-v ""
				-v ""
				-v ""
				-v "reset config"
			</console>
		</step>

		<step no="0.1" delay="90">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step0.1_ap1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="0.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.1_ap1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="0.3">
			<desc>
				-show clock
			</desc>
			<log-file>show_clock_info.log</log-file>
			<console target="ap1">
				-v "show clock"
				-v "interface eth0 manage all"
			</console>
		</step>

		<step no="0.4">
			<desc>
				get schedule start time
			</desc>
			<setvar name="schedule.starttime">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_clock_info.log -p "(\d+-\d+-\d+)\s+(\d+:\d+):\d+" -t str --script "' '.join(m.groups())"
			</setvar>
		</step>

		<step no="0.5">
			<desc>
				get schedule end time
			</desc>
			<setvar name="schedule.endtime">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_clock_info.log -p "(\d+-\d+-\d+)\s+(\d+:\d+):\d+" --script "(datetime.strptime(' '.join(m.groups()),'%Y-%m-%d %H:%M')+timedelta(minutes=100)).strftime('%Y-%m-%d %H:%M')"
			</setvar>
		</step>

		<step no="1">
			<desc>
				-Configure a PPSK schedule, 'sch001'
				-Configure a system schedule 's_sch001'
			</desc>
			<telnet target="ap1">
				-v "schedule psch01 ppsk once ${schedule.starttime} to ${schedule.endtime}"
				-v "schedule s_psch01 once ${schedule.starttime} to ${schedule.endtime}"
			</telnet>
		</step>

		<step no="2">
			<desc>
				-Check the running config users of schedule.
			</desc>
			<log-file>step2_show_run_config_user.log</log-file>
			<telnet target="ap1">
				-v "show running-config user"
			</telnet>
			<log-match>-c -i "schedule psch01 ppsk once ${schedule.starttime} to ${schedule.endtime}"</log-match>
		</step>

		<step no="2.1">
			<desc>
				-Check the running config of schedule.
			</desc>
			<log-file>step2.1_show_run_config.log</log-file>
			<telnet target="ap1">
				-v "show running-config"
			</telnet>
			<log-match>-c -i "schedule s_psch01 once ${schedule.starttime} to ${schedule.endtime}"</log-match>
		</step>

		<step no="3">
			<desc>
				-Save users config
			</desc>
			<telnet target="ap1">
				-v "save config users bootstrap"
			</telnet>
		</step>

		<step no="4">
			<desc>
				-Check the running config users of schedule.
			</desc>
			<log-file>step4_show_run_config_user.log</log-file>
			<telnet target="ap1">
				-v "show running-config user"
			</telnet>
			<log-match>-c -i "schedule psch01 ppsk once ${schedule.starttime} to ${schedule.endtime}"</log-match>
		</step>

		<step no="4.1">
			<desc>
				-Check the running config of schedule.
			</desc>
			<log-file>step4.1_show_run_config.log</log-file>
			<telnet target="ap1">
				-v "show running-config"
			</telnet>
			<log-match>-c -i "schedule s_psch01 once ${schedule.starttime} to ${schedule.endtime}"</log-match>
		</step>

		<step no="5">
			<desc>
				-Config another PPSK schedule, 'sch002'
				-Configure another system schedule 's_sch002'
			</desc>
			<telnet target="ap1">
				-v "schedule psch02 ppsk once ${schedule.starttime} to ${schedule.endtime}"
				-v "schedule s_psch02 once ${schedule.starttime} to ${schedule.endtime}"
			</telnet>
		</step>

		<step no="6">
			<desc>
				-Check the running config users of schedule.
			</desc>
			<log-file>step6_show_run_config_user.log</log-file>
			<telnet target="ap1">
				-v "show running-config user"
			</telnet>
			<log-match>-c -i "schedule psch01 ppsk once ${schedule.starttime} to ${schedule.endtime}"</log-match>
			<log-match>-c -i "schedule psch02 ppsk once ${schedule.starttime} to ${schedule.endtime}"</log-match>
		</step>

		<step no="6.1">
			<desc>
				-Check the running config of schedule.
			</desc>
			<log-file>step6.1_show_run_config.log</log-file>
			<telnet target="ap1">
				-v "show running-config"
			</telnet>
			<log-match>-c -i "schedule s_psch01 once ${schedule.starttime} to ${schedule.endtime}"</log-match>
			<log-match>-c -i "schedule s_psch02 once ${schedule.starttime} to ${schedule.endtime}"</log-match>
		</step>

		<step no="7">
			<desc>
				-Reboot the HiveAP
			</desc>
			<console target="ap1">
				-v "reboot" 
			</console>
		</step>

		<step no="7.1" delay="90">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step7.1_ap1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
				-v "interface eth0 manage all"
			</console>
		</step>

		<step no="7.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step7.1_ap1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="8">
			<desc>
				-Check the running config users of schedule.
			</desc>
			<log-file>step8_show_run_config_user.log</log-file>
			<telnet target="ap1">
				-v "show running-config user"
			</telnet>
			<log-match>-c -i "schedule psch01 ppsk once ${schedule.starttime} to ${schedule.endtime}"</log-match>
			<log-match>-n -c -i "schedule psch02 ppsk once ${schedule.starttime} to ${schedule.endtime}"</log-match>
		</step>

		<step no="8.1">
			<desc>
				-Check the running config of schedule.
			</desc>
			<log-file>step8.1_show_run_config.log</log-file>
			<telnet target="ap1">
				-v "show running-config"
			</telnet>
			<log-match>-n -c -i "schedule s_psch01 once ${schedule.starttime} to ${schedule.endtime}"</log-match>
			<log-match>-n -c -i "schedule s_psch02 once ${schedule.starttime} to ${schedule.endtime}"</log-match>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					reset config bootstrap
				</desc>
				<telnet target="ap1">
					-v "reset config bootstrap"
				</telnet>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>