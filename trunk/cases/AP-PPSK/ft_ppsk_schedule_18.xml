<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>One recurrent schedule used by 2 user groups.</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Change the system time zone to a non-default one, no DST setting.
		Configure and bind a PPSK SSID.
		Configure 2 user groups, password auto generated, without setting the time range.
		Set the 2 user groups to the PPSK SSID.

		Test Procedure:
		1. Config a PPSK schedule:
		Recurrent, without specifying time zone, one time range
		With both start date and end date specified
		make the start time later than the current time
		2. Set the schedule to both of the 2 user groups.
		3. Generate some user accounts for both user groups.
		4. Check the validity of the user accounts according to the schedule. [result 1]
		5. Check the connection using the generated accounts of both user groups according to the schedule. [result 2]
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>

	<property name="default.psk" value="aerohive" />

	<stage>
		<step no="0.1">
			<desc>
				show ap1's interface wifi0 info
			</desc>
			<log-file>show_ap1_interface_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="0.2">
			<desc>
				get ap1's wifi0's mac address
			</desc>
			<setvar name="ap1.wifi0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_ap1_interface_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<step no="1">
			<desc>
				Configure 2 user groups, password auto generated, without setting the time range.
			</desc>
			<telnet target="ap1">
				-v "_debug auth info"
				-v "clear log all"
				-v "user-group userGroup1"
				-v "user-group userGroup1 password-generation-method auto"
				-v "user-group userGroup2"
				-v "user-group userGroup2 password-generation-method auto"
				-v "security-object ppsk"
				-v "security-object ppsk security protocol-suite wpa-tkip-psk ascii-key ${default.psk}"
				-v "security-object ppsk default-user-profile-attr 1"
				-v "security-object ppsk security private-psk"
				-v "user-profile ttt vlan-id 1 attribute 1"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				-Configure and bind a PPSK SSID.
				-Set 2 user groups to the PPSK SSID.
				-Change the system time zone to a non-default one, no DST setting.
			</desc>
			<telnet target="ap1">
				-v "clock time-zone 1"
				-v "no clock time-zone daylight-saving-time"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} user-group userGroup1"
				-v "ssid ${ssid.name} user-group userGroup2"
				-v "ssid ${ssid.name} max-client 32"
				-v "ssid ${ssid.name} security-object ppsk"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 1"
				-v "clock date-time 2012-10-27 10:00:00"
				-v "schedule psch01 ppsk recurrent date-range 2012-10-27 to 2012-10-28 time-range 10:07 to 10:17"
				-v "user-group userGroup1 auto-generation schedule psch01"
				-v "user-group userGroup2 auto-generation schedule psch01"
				-v "user-group userGroup1 auto-generation index-range 1"
				-v "user-group userGroup2 auto-generation index-range 1"
			</telnet>
		</step>

		<step no="1.2" delay="3">
			<desc>
				show user-group
			</desc>
			<log-file>step1.2_show_user_group.log</log-file>
			<telnet target="ap1">
				-v "show user-group"
			</telnet>
			<log-match>-c -i "userGroup1" -p 6 -i "AP" -p 14 -i "psch01"</log-match>
			<log-match>-c -i "userGroup2" -p 6 -i "AP" -p 14 -i "psch01"</log-match>
		</step>

		<step no="2" delay="10">
			<desc>
				check logging result
			</desc>
			<log-file>step2_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "generated *for *user *(userGroup10001)"</log-match>
			<log-match>-c -i "generated *for *user *(userGroup20001)"</log-match>
		</step>

		<step no="3.a" var-type="s1">
			<desc>Get the ppsk value</desc>
			<setvar name="ppsk.auto.value.group1" type="special">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step2_show_logging_buffered.log -p "password \((.*)\) generated for user \(userGroup10001\)" --script "m.group(1)" -s none -g0
			</setvar>
		</step>

		<step no="3.b" var-type="s1">
			<desc>Get the ppsk value</desc>
			<setvar name="ppsk.auto.value.group2" type="special">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step2_show_logging_buffered.log -p "password \((.*)\) generated for user \(userGroup20001\)" --script "m.group(1)" -s none -g0
			</setvar>
		</step>

		<step no="3.1">
			<desc>
				show user
			</desc>
			<log-file>step3.1_show_user.log</log-file>
			<telnet target="ap1">
				-v "show user"
			</telnet>
			<log-match>-c -i "userGroup10001" -i "No *userGroup"</log-match>
			<log-match>-c -i "userGroup20001" -i "No *userGroup"</log-match>
		</step>

		<step no="3.2">
			<desc>
				-show auth private-psk
			</desc>
			<log-file>step3.2_show_auth_private_psk.log</log-file>
			<telnet target="ap1">
				-v "show auth private-psk"
			</telnet>
			<log-match>-c -i "userGroup10001" -i "No"</log-match>
			<log-match>-c -i "userGroup20001" -i "No"</log-match>
		</step>

		<step no="pre.conn1.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn1.psk" type="special">
				echo ${ppsk.auto.value.group1}
			</setvar>
		</step>

		<property name="conn1.ssid" value="${ssid.name}" />
		<property name="conn1.proto" value="wpa-tkip-psk" />
		<property name="conn1.auth_negative_test" value="true" />
		<property name="conn1.dhcp_negative_test" value="true" />

		<include prefix="4" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="pre.conn2.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn2.psk" type="special">
				echo ${ppsk.auto.value.group2}
			</setvar>
		</step>

		<property name="conn2.ssid" value="${ssid.name}" />
		<property name="conn2.proto" value="wpa-tkip-psk" />
		<property name="conn2.auth_negative_test" value="true" />
		<property name="conn2.dhcp_negative_test" value="true" />

		<include prefix="5" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta2, ap1" />

		<step no="6" delay="10">
			<desc>
				-check logging result
			</desc>
			<log-file>step6_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "invalid MIC in msg 2/4 of 4-Way Handshake"</log-match>
			<log-match>-c -i "sta ${sta1.tif.mac} is disassociated from"</log-match>
			<log-match>-c -i "sta ${sta2.tif.mac} is disassociated from"</log-match>
		</step>

		<step no="7" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show user
			</desc>
			<log-file>step7_show_user_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show user"
			</telnet>
			<log-match>-c -i "userGroup10001" -i "Yes *userGroup1"</log-match>
			<log-match>-c -i "userGroup20001" -i "Yes *userGroup2"</log-match>
		</step>

		<step no="7.1">
			<desc>
				-show auth private-psk
			</desc>
			<log-file>step7.1_show_auth_private_psk.log</log-file>
			<telnet target="ap1">
				-v "show auth private-psk"
			</telnet>
			<log-match>-c -i "userGroup10001" -i "Yes"</log-match>
			<log-match>-c -i "userGroup20001" -i "Yes"</log-match>
		</step>

		<step no="pre.conn3.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn3.psk" type="special">
				echo ${ppsk.auto.value.group1}
			</setvar>
		</step>

		<property name="conn3.ssid" value="${ssid.name}" />
		<property name="conn3.proto" value="wpa-tkip-psk" />

		<include prefix="8" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn3, sta1, ap1" />

		<step no="pre.conn4.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn4.psk" type="special">
				echo ${ppsk.auto.value.group2}
			</setvar>
		</step>

		<property name="conn4.ssid" value="${ssid.name}" />
		<property name="conn4.proto" value="wpa-tkip-psk" />

		<include prefix="9" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn4, sta2, ap1" />

		<step no="10">
			<desc>
				show station on ap1
			</desc>
			<log-file>step10_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
			<log-match>-c -i "${sta2.tif.mac}" -i "${sta2.tif.ip}"</log-match>
		</step>

		<step no="10.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step10.1_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
			<log-match>-c -i "${sta2.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
		</step>

		<step no="10.2">
			<desc>
				- show auth
			</desc>
			<log-file>step10.2_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *1" -i "WPA/TKIP" -i "userGroup10001" -p 7 -i "done"</log-match>
			<log-match>-c -i "${sta2.tif.mac} *1" -i "WPA/TKIP" -i "userGroup20001" -p 7 -i "done"</log-match>
		</step>

		<step no="10.3">
			<desc>
				- clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<step no="11" delay="10" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show user
			</desc>
			<log-file>step11_show_user_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show user"
			</telnet>
			<log-match>-c -i "userGroup10001" -i "No *userGroup1"</log-match>
			<log-match>-c -i "userGroup20001" -i "No *userGroup2"</log-match>
		</step>

		<step no="11.1">
			<desc>
				-show auth private-psk
			</desc>
			<log-file>step11.1_show_auth_private_psk.log</log-file>
			<telnet target="ap1">
				-v "show auth private-psk"
			</telnet>
			<log-match>-c -i "userGroup10001" -i "No"</log-match>
			<log-match>-c -i "userGroup20001" -i "No"</log-match>
		</step>

		<step no="12" delay="10">
			<desc>
				- check logging result
			</desc>
			<log-file>step12_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Try to disassoc ${sta1.tif.mac} from ${ap1.wifi0.mac}(wifi0.1) for ssid ${ssid.name}"</log-match>
			<log-match>-c -i "Try to disassoc ${sta2.tif.mac} from ${ap1.wifi0.mac}(wifi0.1) for ssid ${ssid.name}"</log-match>
		</step>

		<include prefix="13" file="subs/release_station_wifi.xml" obj-args="sta1" />

		<include prefix="14" file="subs/release_station_wifi.xml" obj-args="sta2" />

		<step no="15">
			<desc>
				-set clock time
			</desc>
			<telnet target="ap1">
				-v "clock date-time 2012-10-28 10:00:00"
			</telnet>
		</step>

		<step no="15.a" delay="10">
			<desc>
				check logging result
			</desc>
			<log-file>step15.a_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "generated *for *user *(userGroup10001)"</log-match>
			<log-match>-c -i "generated *for *user *(userGroup20001)"</log-match>
		</step>

		<step no="15.b" var-type="s1">
			<desc>Get the ppsk value</desc>
			<setvar name="ppsk.auto.value.group1.second" type="special">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step15.a_show_logging_buffered.log -p "password \((.*)\) generated for user \(userGroup10001\)" --script "m.group(1)" -s none -g0
			</setvar>
		</step>

		<step no="15.c" var-type="s1">
			<desc>Get the ppsk value</desc>
			<setvar name="ppsk.auto.value.group2.second" type="special">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step15.a_show_logging_buffered.log -p "password \((.*)\) generated for user \(userGroup20001\)" --script "m.group(1)" -s none -g0
			</setvar>
		</step>

		<step no="pre.conn5.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn5.psk" type="special">
				echo ${ppsk.auto.value.group1.second}
			</setvar>
		</step>

		<property name="conn5.ssid" value="${ssid.name}" />
		<property name="conn5.proto" value="wpa-tkip-psk" />
		<property name="conn5.auth_negative_test" value="true" />
		<property name="conn5.dhcp_negative_test" value="true" />

		<include prefix="16" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn5, sta1, ap1" />

		<step no="pre.conn6.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn6.psk" type="special">
				echo ${ppsk.auto.value.group2.second}
			</setvar>
		</step>

		<property name="conn6.ssid" value="${ssid.name}" />
		<property name="conn6.proto" value="wpa-tkip-psk" />
		<property name="conn6.auth_negative_test" value="true" />
		<property name="conn6.dhcp_negative_test" value="true" />

		<include prefix="17" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn6, sta2, ap1" />

		<step no="18" delay="10">
			<desc>
				-check logging result
			</desc>
			<log-file>step18_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "invalid MIC in msg 2/4 of 4-Way Handshake"</log-match>
			<log-match>-c -i "sta ${sta1.tif.mac} is disassociated from"</log-match>
			<log-match>-c -i "sta ${sta2.tif.mac} is disassociated from"</log-match>
		</step>

		<step no="19" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show user
			</desc>
			<log-file>step19_show_user_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show user"
			</telnet>
			<log-match>-c -i "userGroup10001" -i "Yes *userGroup1"</log-match>
			<log-match>-c -i "userGroup20001" -i "Yes *userGroup2"</log-match>
		</step>

		<step no="19.1">
			<desc>
				-show auth private-psk
			</desc>
			<log-file>step19.1_show_auth_private_psk.log</log-file>
			<telnet target="ap1">
				-v "show auth private-psk"
			</telnet>
			<log-match>-c -i "userGroup10001" -i "Yes"</log-match>
			<log-match>-c -i "userGroup20001" -i "Yes"</log-match>
		</step>

		<step no="pre.conn7.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn7.psk" type="special">
				echo ${ppsk.auto.value.group1.second}
			</setvar>
		</step>

		<property name="conn7.ssid" value="${ssid.name}" />
		<property name="conn7.proto" value="wpa-tkip-psk" />

		<include prefix="20" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn7, sta1, ap1" />

		<step no="pre.conn8.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn8.psk" type="special">
				echo ${ppsk.auto.value.group2.second}
			</setvar>
		</step>

		<property name="conn8.ssid" value="${ssid.name}" />
		<property name="conn8.proto" value="wpa-tkip-psk" />

		<include prefix="21" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn8, sta2, ap1" />

		<step no="22">
			<desc>
				show station on ap1
			</desc>
			<log-file>step22_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
			<log-match>-c -i "${sta2.tif.mac}" -i "${sta2.tif.ip}"</log-match>
		</step>

		<step no="22.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step22.1_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
			<log-match>-c -i "${sta2.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
		</step>

		<step no="22.2">
			<desc>
				- show auth
			</desc>
			<log-file>step22.2_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *1" -i "WPA/TKIP" -i "userGroup10001" -p 7 -i "done"</log-match>
			<log-match>-c -i "${sta2.tif.mac} *1" -i "WPA/TKIP" -i "userGroup20001" -p 7 -i "done"</log-match>
		</step>

		<step no="22.3">
			<desc>
				- clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<step no="23" delay="10" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show user
			</desc>
			<log-file>step23_show_user_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show user"
			</telnet>
			<log-match>-c -i "userGroup10001" -i "No *userGroup1"</log-match>
			<log-match>-c -i "userGroup20001" -i "No *userGroup2"</log-match>
		</step>

		<step no="23.1">
			<desc>
				-show auth private-psk
			</desc>
			<log-file>step23.1_show_auth_private_psk.log</log-file>
			<telnet target="ap1">
				-v "show auth private-psk"
			</telnet>
			<log-match>-c -i "userGroup10001" -i "No"</log-match>
			<log-match>-c -i "userGroup20001" -i "No"</log-match>
		</step>

		<step no="24" delay="10">
			<desc>
				- check logging result
			</desc>
			<log-file>step24_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Try to disassoc ${sta1.tif.mac} from ${ap1.wifi0.mac}(wifi0.1) for ssid ${ssid.name}"</log-match>
			<log-match>-c -i "Try to disassoc ${sta2.tif.mac} from ${ap1.wifi0.mac}(wifi0.1) for ssid ${ssid.name}"</log-match>
		</step>
	</stage>
</testcase>