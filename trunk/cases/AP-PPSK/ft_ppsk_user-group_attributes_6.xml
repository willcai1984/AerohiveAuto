<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Get a invalid user-attribute</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-config PSK-generation-method to username-and-password
		-config the password-generation-method to auto

		Test Procedure:
		1. config the user-attribute to 100
		2. make sure there is no UP with attribute 100
		3. config a ssid with default-attribute 1
		4. bind the group to SSID
		5. bind the ssid to wifi0
		6. client connect to AP using PPSK [result 1]
		7. client connect to AP using default PSK [result 2]
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<property name="default.psk" value="aerohive" />
	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn1.proto" value="wpa-tkip-psk" />
	<property name="conn1.psk" value="group1user" />
	<property name="conn2.ssid" value="${ssid.name}" />
	<property name="conn2.proto" value="wpa-tkip-psk" />
	<property name="conn2.psk" value="aerohive" />

	<stage>
		<step no="0">
			<desc>
				-Config ap1's vlan and native-vlan
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "clear log all"
				-v "_debug auth info"
			</console>
		</step>

		<step no="0.2" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step0.2_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="0.3">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.2_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="1">
			<desc>
				-config the user-attribute to 100
			</desc>
			<telnet target="ap1">
				-v "user-group userGroup1"
				-v "user-group userGroup1 user-attribute 100"
				-v "user-group userGroup1 password-generation-method auto"
				-v "user-group userGroup1 psk-generation-method username-and-password"
				-v "no user-group userGroup1 psk-format character-pattern special-characters"
				-v "user-group userGroup1 auto-generation index-range 1"
			</telnet>
		</step>
		<include prefix="2.2" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step2.2_show_logging_buffered.log" />

		<step no="2.2a">
			<desc>Get the ppsk value</desc>
			<setvar name="ppsk.auto.value">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step2.2_show_logging_buffered.log -p "password \((.*)\) generated for user \(userGroup10001\)" -t str -g-1 -s none
			</setvar>
		</step>

		<step no="2">
			<desc>
				-Config ap1
			</desc>
			<telnet target="ap1">
				-v "security-object ppsk"
				-v "security-object ppsk security protocol-suite wpa-tkip-psk ascii-key ${default.psk}"
				-v "security-object ppsk default-user-profile-attr 1"
				-v "security-object ppsk security private-psk"
				-v "user-profile sss vlan-id ${tb.vlan1} attribute 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} user-group userGroup1"
				-v "ssid ${ssid.name} max-client 32"
				-v "ssid ${ssid.name} security-object ppsk"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 1"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				show ap1's interface wifi0 info
			</desc>
			<log-file>show_ap1_interface_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				get ap1's wifi0's mac address
			</desc>
			<setvar name="ap1.wifi0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_ap1_interface_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<step no="3">
			<desc>
				show user
			</desc>
			<log-file>step3_show_user.log</log-file>
			<telnet target="ap1">
				-v "show user"
			</telnet>
			<log-match>-c -i "userGroup10001 " -i "Yes *userGroup1"</log-match>
		</step>

		<step no="3.1">
			<desc>
				show user-group
			</desc>
			<log-file>step3.1_show_user_group.log</log-file>
			<telnet target="ap1">
				-v "show user-group"
			</telnet>
			<log-match>-c -i "userGroup" -p 6 -i "AU" </log-match>
		</step>

		<step no="pre.conn1.psk">
			<desc>set value of psk</desc>
			<setvar name="conn1.psk">
				echo "userGroup10001${ppsk.auto.value}"
			</setvar>
		</step>
		<!--
		<property name="conn1.ssid" value="${ssid.name}" />
		<property name="conn1.proto" value="wpa-tkip-psk" />
		<property name="conn1.auth_negative_test" value="true" />
		<property name="conn1.dhcp_negative_test" value="true" />
		
		 <include prefix="4" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1"/>
		-->
		
		<step no="pre.sta.tif.mac">
			<desc>get mac of sta1</desc>
			<setvar name="sta1.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m -width 2 | tr '[A-F]' '[a-f]'
			</setvar>
		</step>
	 
		<step no="4.1">
			<desc>create a wpa_supplicant configuration file on sta1</desc>
			<ssh target="sta1">
				-v "echo \"ctrl_interface=/var/run/wpa_supplicant\" > /tmp/wpa_supplicant.cfg"
			</ssh>
		</step>
		<step no="4.2">
			<desc>kill the wpa_supplicant daemon on sta1</desc>
			<ssh target="sta1">
				-v "killall -9 wpa_supplicant -q"
				-v "killall dhclient -q"
			</ssh>
		</step>

		<step no="4.3" delay="5">
			<desc>start the wpa_supplicant on sta1</desc>
			<ssh target="sta1">
				-v "wpa_supplicant -i ${sta1.tif.name} ${sta1.wpa_flag} -c /tmp/wpa_supplicant.cfg -B"
			</ssh>
		</step>
	
		<step no="4.wpa_tkip_psk">
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt WPA-PSK"
				-v "set_network 0 proto WPA"
				-v "set_network 0 psk \"${conn1.psk}\""
				-v "set_network 0 pairwise TKIP"
				-v "set_network 0 group TKIP"
				-v "set_network 0 priority 5"
				-v "select_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>
		
		<step no="wifi1.process" type="loop-check" loop-max-times="10" loop-interval="5">		
			<if>"${tb.name}" != "hztb3" &amp;&amp; "${tb.name}" != "hztb5" &amp;&amp; "${tb.name}" != "hztb11"</if>
			<log-file>iwlist_sta1_4_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "iwlist ${sta1.tif.name} scanning essid ${ssid.name}"
			</ssh>
			<log-match>-e "ESSID"</log-match>
		</step>

		<!--<include prefix="6" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step6_show_logging_buffered.log" />

		<step no="6.1">
			<desc>
				check the logging result
			</desc>
			<log-file>step6_show_logging_buffered.log</log-file>
			<log-match>-c -i "\[fe\]: got invalid vlan from user profile id 100"</log-match>
			<log-match>-c -i "get user profile vlan failed in fe.*Invalid argument"</log-match>
			<log-match>-c -i "Try to disassoc ${sta1.tif.mac} from ${ap1.wifi0.mac}(wifi0.1) for ssid ${ssid.name} because of group rekey error"</log-match>
		</step>-->
		
		<step no="6" delay="12">
			<desc>
				-show logging buffered
			</desc>
			<log-file>step6_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="120">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "\[fe\]: got invalid vlan from user profile id 100"</log-match>
			<log-match>-c -i "get user profile vlan failed in fe.*Invalid argument"</log-match>
			<log-match>-c -i "Try to disassoc ${sta1.tif.mac} from ${ap1.wifi0.mac}(wifi0.1) for ssid ${ssid.name} because of group rekey error"</log-match>
		</step>

		<include prefix="7" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta2, ap1" />

		<step no="8">
			<desc>
				-sh ssid xxx st
			</desc>
			<log-file>step8_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta2.tif.mac} *${sta2.tif.ip}"</log-match>
		</step>

		<step no="8.1">
			<desc>
				-sh roa ca
			</desc>
			<log-file>step8.1_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta2.tif.mac}" -i "0 *YNNN"</log-match>
		</step>

		<step no="8.2">
			<desc>
				-show auth
			</desc>
			<log-file>step8.2_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "${sta2.tif.mac}" -i "WPA/TKIP" -p 7 -i "done"</log-match>
		</step>
	</stage>
</testcase>