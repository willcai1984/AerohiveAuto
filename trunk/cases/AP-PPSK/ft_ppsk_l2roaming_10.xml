<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>L2 roaming , one AP config the PPSK</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-config the same hive name and password on two APS, result 1
		-config PPSK on AP1, config PSK on AP2, result 2

		Test Procedure:
		-client connect AP1 with PPSK
		-roaming to AP2
		-back to AP1
		-client connnect to AP2
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>winlin</tbtype>

	<property name="default.psk" value="aerohive" />
	<property name="default.psk1" value="12345678" />
	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn1.proto" value="wpa-tkip-psk" />
	<property name="conn1.psk" value="${default.psk}" />
	<property name="conn2.ssid" value="${ssid.name}-A" />
	<property name="conn2.proto" value="wpa-tkip-psk" />
	<property name="conn2.psk" value="${default.psk}" />

	<stage>
		<step no="0">
			<desc>
				-Config ap1
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</console>
		</step>

		<step no="show.ap1.ip" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>ap1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="get.ap1.ip">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="show.ap1.mac">
			<desc>
				show interface wifi1.1 info
			</desc>
			<log-file>ap1_show_interface_wifi1.1_info.log</log-file>
			<ssh target="ap1">
				-v "show interface wifi1.1"
			</ssh>
		</step>

		<step no="get.ap1.mac">
			<desc>Get ap1's wifi1's mac</desc>
			<setvar name="ap1.wifi1.1.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap1_show_interface_wifi1.1_info.log -i wifi1.1 -o aero -m -width
			</setvar>
		</step>

		<step no="set.ap1.channel">
			<desc>
				-Config ap1
			</desc>
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<ssh target="ap1">
				-v "interface wifi1 radio channel 153"
			</ssh>
		</step>

		<step no="0.1">
			<desc>
				-Config ap2
			</desc>
			<console target="ap2">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</console>
		</step>

		<step no="show.ap2.ip" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>ap2_show_interface_mgt0_info.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="get.ap2.ip">
			<desc>Get ap2's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap2_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="show.ap2.mac">
			<desc>
				show interface wifi1.1 info
			</desc>
			<log-file>ap2_show_interface_wifi1.1_info.log</log-file>
			<ssh target="ap2">
				-v "show interface wifi1.1"
			</ssh>
		</step>

		<step no="get.ap2.mac">
			<desc>Get ap2's wifi1's mac</desc>
			<setvar name="ap2.wifi1.1.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap2_show_interface_wifi1.1_info.log -i wifi1.1 -o aero -m -width
			</setvar>
		</step>

		<step no="set.ap2.channel">
			<desc>
				-Config ap2
			</desc>
			<if>"${ap2.wifi1.existed}" == "true"</if>
			<ssh target="ap2">
				-v "interface wifi1 radio channel 153"
			</ssh>
		</step>

		<step no="0.2" type="loop-check" loop-max-times="15" loop-interval="5">
			<desc>
				show hive neighbor
			</desc>
			<log-file>step0.2_show_hive_neighbor.log</log-file>
			<ssh target="ap1">
				-v "show hive ${hive.name} neighbor"
			</ssh>
			<log-match>-c -i "${ap2.wifi1.1.mac}" -i "${hive.name}"</log-match>
		</step>

		<step no="0.3">
			<desc>
				show hive neighbor
			</desc>
			<log-file>step0.3_show_hive_neighbor.log</log-file>
			<ssh target="ap2">
				-v "show hive ${hive.name} neighbor"
			</ssh>
			<log-match>-c -i "${ap1.wifi1.1.mac}" -i "${hive.name}"</log-match>
		</step>

		<step no="1">
			<desc>
				-Config ap1
			</desc>
			<ssh target="ap1">
				-v "security-object ppsk"
				-v "security-object ppsk security protocol-suite wpa-tkip-psk ascii-key ${default.psk1}"
				-v "security-object ppsk security private-psk"
				-v "security-object ppsk default-user-profile-attr 1"
				-v "user ppsk_user1"
				-v "user ppsk_user1 password ${default.psk}"
				-v "user-group userGroup"
				-v "user ppsk_user1 group userGroup"
			</ssh>
		</step>

		<step no="1.1">
			<desc>
				-Config ap1
			</desc>
			<ssh target="ap1">
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} max-client 32"
				-v "ssid ${ssid.name} user-group userGroup"
				-v "ssid ${ssid.name} security-object ppsk"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 1"
				-v "user-profile ttt vlan-id ${tb.vlan1} attribute 1"
				-v "no bonjour-gateway enable"
				-v "_debug auth all"
				-v "clear log all"
			</ssh>
		</step>

		<step no="1.2">
			<desc>
				show ap1's interface wifi0.1 info
			</desc>
			<log-file>step1.2_show_ap1_interface_info.log</log-file>
			<ssh target="ap1">
				-v "show interface wifi0.1"
			</ssh>
		</step>

		<step no="1.3">
			<desc>
				get ap1's wifi0.1's mac address
			</desc>
			<setvar name="ap1.wifi0.1.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step1.2_show_ap1_interface_info.log -i wifi0.1 -o aero -m -width
			</setvar>
		</step>

		<step no="1.4">
			<desc>
				show run
			</desc>
			<log-file>show_ap1_running_config.log</log-file>
			<ssh target="ap1">
				-v "show running-config"
			</ssh>
		</step>

		<step no="2">
			<desc>
				-Config ap2
			</desc>
			<ssh target="ap2">
				-v "security-object ppsk"
				-v "security-object ppsk security protocol-suite wpa-tkip-psk ascii-key ${default.psk}"
				-v "security-object ppsk security private-psk"
				-v "security-object ppsk default-user-profile-attr 1"
			</ssh>
		</step>

		<step no="2.1">
			<desc>
				-Config ap2
			</desc>
			<ssh target="ap2">
				-v "ssid ${ssid.name}-A"
				-v "ssid ${ssid.name}-A max-client 32"
				-v "ssid ${ssid.name}-A security-object ppsk"
				-v "interface wifi0 ssid ${ssid.name}-A"
				-v "interface wifi0 radio channel 1"
				-v "user-profile ttt vlan-id ${tb.vlan1} attribute 1"
				-v "no bonjour-gateway enable"
				-v "_debug auth all"
				-v "clear log all"
			</ssh>
		</step>

		<step no="2.2">
			<desc>
				show ap2's interface wifi0.1 info
			</desc>
			<log-file>step2.2_show_ap2_interface_info.log</log-file>
			<ssh target="ap2">
				-v "show interface wifi0.1"
			</ssh>
		</step>

		<step no="2.3">
			<desc>
				get ap2's wifi0's mac address
			</desc>
			<setvar name="ap2.wifi0.1.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step2.2_show_ap2_interface_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<step no="2.4" type="loop-check" loop-max-times="15" loop-interval="10">
			<desc>
				show amrp neighbor
			</desc>
			<log-file>step2.4_show_amrp_neighbor_${loop_check.idx}.log</log-file>
			<ssh target="ap2" timeout="30">
				-v "show amrp neighbor"
			</ssh>
			<log-match bin="${bin.dir}/mlinesearch.pl">-l "eth0:" -i 1 -l "${ap1.mgt0.mac} *${ap1.mgt0.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2.5">
			<desc>
				show run
			</desc>
			<log-file>show_ap2_running_config.log</log-file>
			<ssh target="ap2">
				-v "show running-config"
			</ssh>
		</step>

		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="4" delay="5">
			<desc>
				show station on ap1
			</desc>
			<log-file>step4_show_station.log</log-file>
			<ssh target="ap1">
				-v "show ssid ${ssid.name} station"
			</ssh>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}"</log-match>
		</step>

		<step no="4.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step4.1_show_roaming_cache.log</log-file>
			<ssh target="ap1">
				-v "show roaming cache"
			</ssh>
			<log-match>-c -i "${sta1.tif.mac}" -i "0 *YNNN"</log-match>
		</step>

		<step no="4.2">
			<desc>
				- show auth
			</desc>
			<log-file>step4.2_show_auth.log</log-file>
			<ssh target="ap1">
				-v "show auth"
			</ssh>
			<log-match>-c -i "${sta1.tif.mac} *1" -i "WPA/TKIP" -i "ppsk_user1" -p 7 -i "done"</log-match>
		</step>
		<step no="5">
			<desc>show log buffer</desc>
			<log-file>step5_show_logging_buffered.log</log-file>
			<ssh target="ap1">
				-v "show log b"
			</ssh>
		</step>
		<step no="5.a">
			<desc>
				-check logging result
			</desc>
			<log-file>step5_show_logging_buffered.log</log-file>
			<log-match>-c -i "STA(${sta1.tif.mac}) login to SSID(wifi0.1) by user_name=ppsk_user1"</log-match>
			<log-match>-c -i "Station ${sta1.tif.mac} is authenticated to ${ap1.wifi0.1.mac} thru SSID ${ssid.name}"</log-match>
		</step>

		<step no="6">
			<desc>
				-clear log all
			</desc>
			<ssh target="ap2">
				-v "clear log all"
			</ssh>
		</step>

		<step no="6.1" delay="5">
			<desc>
				Shutdown wifi0 interface of ssidA on portal1
			</desc>
			<ssh target="ap1">
				-v "clear log all"
			</ssh>
		</step>

		<step no="7">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step7_show_roaming_cache.log</log-file>
			<ssh target="ap2">
				-v "show roaming cache mac ${sta1.tif.mac}"
			</ssh>
			<log-match>-c -i "Supplicant Address(SPA): *${sta1.tif.mac}"</log-match>
			<log-match>-c -i "Hops: *1"</log-match>
			<log-match>-c -i "User name: ppsk_user1"</log-match>
			<log-match>-c -i "Authenticator Address: *MAC=${ap1.wifi0.1.mac}, *IP=${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="7.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step7.1_show_roaming_cache.log</log-file>
			<ssh target="ap2">
				-v "show roaming cache"
			</ssh>
			<log-match>-c -i "${sta1.tif.mac} *${ap1.wifi0.1.mac}" -i "1 *YNNN"</log-match>
		</step>

		<include prefix="8" file="subs/release_station_wifi.xml" obj-args="sta1" />

		<include prefix="9" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta1, ap2" />

		<step no="10" delay="5">
			<desc>
				show station on ap1
			</desc>
			<log-file>step10_show_station.log</log-file>
			<ssh target="ap2">
				-v "show ssid ${ssid.name}-A station"
			</ssh>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}"</log-match>
		</step>

		<step no="10.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step10.1_show_roaming_cache.log</log-file>
			<ssh target="ap2">
				-v "show roaming cache"
			</ssh>
			<log-match>-c -i "${sta1.tif.mac}" -i "0 *YNNN"</log-match>
		</step>

		<step no="10.2">
			<desc>
				- show auth
			</desc>
			<log-file>step10.2_show_auth.log</log-file>
			<ssh target="ap2">
				-v "show auth"
			</ssh>
			<log-match>-c -i "${sta1.tif.mac} *1" -i "WPA/TKIP" -p 7 -i "done"</log-match>
		</step>

		<step no="11">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step11_show_roaming_cache.log</log-file>
			<ssh target="ap1">
				-v "show roaming cache mac ${sta1.tif.mac}"
			</ssh>
			<log-match>-c -i "Supplicant Address(SPA): *${sta1.tif.mac}"</log-match>
			<log-match>-c -i "Hops: *1"</log-match>
			<log-match>-c -i "User name: "</log-match>
			<log-match>-n -c -i "User name: ppsk_user1"</log-match>
			<log-match>-c -i "Authenticator Address: *MAC=${ap2.wifi0.1.mac}, *IP=${ap2.mgt0.ip}"</log-match>
		</step>

		<step no="11.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step11.1_show_roaming_cache.log</log-file>
			<ssh target="ap1">
				-v "show roaming cache"
			</ssh>
			<log-match>-c -i "${sta1.tif.mac} *${ap2.wifi0.1.mac}" -i "1 *YNNN"</log-match>
		</step>
	</stage>
</testcase>