<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check the auth type, wpa, wpa2, aes, tkip</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-config PSK-generation-method to username-password
		-config a concatenated-characters
		-config the password-generation-method to auto

		Test Procedure:
		-config wpa-tkip-psk ssid1
		-config wpa-aes-psk ssid2
		-config wpa2-tkip-psk ssid3
		-config wpa2-aes-psk ssid4
		station connects ssid1
		station connects ssid2
		station connects ssid3
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>winlin</tbtype>

	<property name="default.psk" value="aerohive" />

	<stage>
		<step no="1">
			<desc>
				-config the password-generation-method to auto
				-Config security-object parameters
			</desc>
			<telnet target="ap1">
				-v "_debug auth info"
				-v "clear log all"
				-v "user-group userGroup"
				-v "user-group userGroup password-generation-method auto"
				-v "no user-group userGroup psk-format character-pattern special-characters"
				-v "security-object ppsk1"
				-v "security-object ppsk1 security protocol-suite wpa-tkip-psk ascii-key ${default.psk}"
				-v "security-object ppsk1 default-user-profile-attr 1"
				-v "security-object ppsk1 security private-psk"
				-v "security-object ppsk1 security private-psk default-psk-disabled"
				-v "security-object ppsk2"
				-v "security-object ppsk2 security protocol-suite wpa-aes-psk ascii-key ${default.psk}"
				-v "security-object ppsk2 default-user-profile-attr 1"
				-v "security-object ppsk2 security private-psk"
				-v "security-object ppsk2 security private-psk default-psk-disabled"
				-v "security-object ppsk3"
				-v "security-object ppsk3 security protocol-suite wpa2-tkip-psk ascii-key ${default.psk}"
				-v "security-object ppsk3 default-user-profile-attr 1"
				-v "security-object ppsk3 security private-psk"
				-v "security-object ppsk3 security private-psk default-psk-disabled"
				-v "security-object ppsk4"
				-v "security-object ppsk4 security protocol-suite wpa2-aes-psk ascii-key ${default.psk}"
				-v "security-object ppsk4 default-user-profile-attr 1"
				-v "security-object ppsk4 security private-psk"
				-v "security-object ppsk4 security private-psk default-psk-disabled"												
			</telnet>
		</step>

		<step no="2">
			<desc>
				-config a user-profile
				-config a ssid default-attribute 1
				-bind the group to ssid
				-bind the ssid to wifi0
			</desc>
			<telnet target="ap1">
				-v "user-profile ttt vlan-id 1 attribute 1"
				-v "ssid ${ssid.name}1"
				-v "ssid ${ssid.name}1 user-group userGroup"
				-v "ssid ${ssid.name}1 max-client 32"
				-v "ssid ${ssid.name}1 security-object ppsk1"
				-v "interface wifi0 ssid ${ssid.name}1"
				-v "ssid ${ssid.name}2"
				-v "ssid ${ssid.name}2 user-group userGroup"
				-v "ssid ${ssid.name}2 max-client 32"
				-v "ssid ${ssid.name}2 security-object ppsk2"
				-v "interface wifi0 ssid ${ssid.name}2"
				-v "ssid ${ssid.name}3"
				-v "ssid ${ssid.name}3 user-group userGroup"
				-v "ssid ${ssid.name}3 max-client 32"
				-v "ssid ${ssid.name}3 security-object ppsk3"
				-v "interface wifi0 ssid ${ssid.name}3"
				-v "ssid ${ssid.name}4"
				-v "ssid ${ssid.name}4 user-group userGroup"
				-v "ssid ${ssid.name}4 max-client 32"
				-v "ssid ${ssid.name}4 security-object ppsk4"
				-v "interface wifi0 ssid ${ssid.name}4"												
				-v "interface wifi0 radio channel 1"
				-v "user-group userGroup auto-generation index-range 1 2"
			</telnet>
		</step>

		<step no="2.1" delay="10">
			<desc>
				check logging result
			</desc>
			<log-file>step2.1_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "generated *for *user *(userGroup0002)"</log-match>
		</step>

		<step no="2.1a" var-type="s1">
			<desc>Get the ppsk value</desc>
			<setvar name="ppsk.auto.value" type="special">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step2.1_show_logging_buffered.log -p "password \((.*)\) generated for user \(userGroup0002\)" --script "m.group(1)" -s none -g-1
			</setvar>
		</step>

		<step no="2.2">
			<desc>
				show user
			</desc>
			<log-file>step2.2_show_user.log</log-file>
			<telnet target="ap1">
				-v "show user"
			</telnet>
			<log-match>-c -i "userGroup0002" -i "Yes *userGroup"</log-match>
		</step>

		<step no="2.3">
			<desc>
				show user-group
			</desc>
			<log-file>step2.3_show_user_group.log</log-file>
			<telnet target="ap1">
				-v "show user-group"
			</telnet>
			<log-match>-c -i "userGroup" -p 6 -i "AP"</log-match>
		</step>

		<step no="2.4">
			<desc>
				show running-config users
			</desc>
			<log-file>step2.4_show_running_config_users.log</log-file>
			<telnet target="ap1">
				-v "show running-config users"
			</telnet>
			<log-match>-c -i "user-group userGroup auto-generation index-range 1 2"</log-match>
		</step>

		<step no="3">
			<desc>
				-show auth private-psk
			</desc>
			<log-file>step3_show_auth_private_psk.log</log-file>
			<telnet target="ap1">
				-v "show auth private-psk"
			</telnet>
			<log-match>-c -i "userGroup0002" -i "Yes"</log-match>
		</step>

		<step no="3.a1">
			<desc>Get the pmk value of userGroup0001</desc>
			<setvar name="pmk.value">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step3_show_auth_private_psk.log -p "userGroup0002\s*userGroup\s*(.*)\s*Yes" -t str
			</setvar>
		</step>

		<step no="3.a2">
			<desc>
				-show ssid XXX user-group
			</desc>
			<log-file>step3_a2_show_ssid_user_group.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name}1 user-group"
			</telnet>
			<log-match>-c -i "userGroup"</log-match>
		</step>

		<step no="3.b1">
			<desc>
				show ap1's interface wifi0.1 info
			</desc>
			<log-file>show_ap1_interface_wifi0_1_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0.1"
			</telnet>
		</step>

		<step no="3.b2">
			<desc>
				get ap1's wifi0.1's mac address
			</desc>
			<setvar name="ap1.wifi01.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_ap1_interface_wifi0_1_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<step no="3.c1">
			<desc>
				show ap1's interface wifi0.2 info
			</desc>
			<log-file>show_ap1_interface_wifi0_2_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0.2"
			</telnet>
		</step>

		<step no="3.c2">
			<desc>
				get ap1's wifi0.2's mac address
			</desc>
			<setvar name="ap1.wifi02.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_ap1_interface_wifi0_2_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<step no="3.d1">
			<desc>
				show ap1's interface wifi0.3 info
			</desc>
			<log-file>show_ap1_interface_wifi0_3_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0.3"
			</telnet>
		</step>

		<step no="3.d2">
			<desc>
				get ap1's wifi0.3's mac address
			</desc>
			<setvar name="ap1.wifi03.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_ap1_interface_wifi0_3_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>
		
		<step no="3.e1">
			<desc>
				show ap1's interface wifi0.4 info
			</desc>
			<log-file>show_ap1_interface_wifi0_4_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0.4"
			</telnet>
		</step>

		<step no="3.e2">
			<desc>
				get ap1's wifi0.4's mac address
			</desc>
			<setvar name="ap1.wifi04.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_ap1_interface_wifi0_4_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>		

		<step no="pre.conn1.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn1.psk" type="special">
				echo ${ppsk.auto.value}
			</setvar>
		</step>

		<property name="conn1.ssid" value="${ssid.name}1" />
		<property name="conn1.proto" value="wpa-tkip-psk" />
		<property name="conn2.ssid" value="${ssid.name}2" />
		<property name="conn2.proto" value="wpa-aes-psk" />
		<property name="conn3.ssid" value="${ssid.name}3" />
		<property name="conn3.proto" value="wpa2-tkip-psk" />
		<property name="conn4.ssid" value="${ssid.name}4" />
		<property name="conn4.proto" value="wpa2-aes-psk" />

		<include prefix="4" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="5" delay="10">
			<desc>
				-check the logging result
			</desc>
			<log-file>step5_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Station ${sta1.tif.mac} is authenticated to ${ap1.wifi01.mac} thru SSID ${ssid.name}1"</log-match>
			<log-match>-c -i "STA(${sta1.tif.mac}) login to SSID(wifi0.1) by user_name=userGroup0002"</log-match>
		</step>

		<step no="6">
			<desc>
				-sh ssid xxx st
			</desc>
			<log-file>step6_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name}1 station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}"</log-match>
		</step>

		<step no="6.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step6.1_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
		</step>

		<step no="6.2">
			<desc>
				- show auth
			</desc>
			<log-file>step6.2_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *1" -i "WPA/TKIP" -i "userGroup0002" -i "done"</log-match>
		</step>

		<include prefix="7" file="subs/release_station_wifi.xml" obj-args="sta1" />

		<step no="8">
			<desc>
				-clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>


		<step no="pre.conn2.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn2.psk" type="special">
				echo ${ppsk.auto.value}
			</setvar>
		</step>

		<include prefix="11" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta1, ap1" />

		<step no="12" delay="10">
			<desc>
				-check the logging result
			</desc>
			<log-file>step12_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="200">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Station ${sta1.tif.mac} is authenticated to ${ap1.wifi02.mac} thru SSID ${ssid.name}2"</log-match>
			<log-match>-c -i "STA(${sta1.tif.mac}) login to SSID(wifi0.2) by user_name=userGroup0002"</log-match>
		</step>

		<step no="13">
			<desc>
				-sh ssid xxx st
			</desc>
			<log-file>step13_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name}2 station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}"</log-match>
		</step>

		<step no="13.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step13.1_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
		</step>

		<step no="13.2">
			<desc>
				- show auth
			</desc>
			<log-file>step13.2_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *1" -i "WPA/CCMP" -i "userGroup0002" -i "done"</log-match>
		</step>
		
		<include prefix="14" file="subs/release_station_wifi.xml" obj-args="sta1" />

		<step no="15">
			<desc>
				-clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>
		
		<step no="pre.conn3.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn3.psk" type="special">
				echo ${ppsk.auto.value}
			</setvar>
		</step>

		<include prefix="16" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn3, sta1, ap1" />

		<step no="17" delay="10">
			<desc>
				-check the logging result
			</desc>
			<log-file>step17_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="200">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Station ${sta1.tif.mac} is authenticated to ${ap1.wifi03.mac} thru SSID ${ssid.name}3"</log-match>
			<log-match>-c -i "STA(${sta1.tif.mac}) login to SSID(wifi0.3) by user_name=userGroup0002"</log-match>
		</step>

		<step no="18">
			<desc>
				-sh ssid xxx st
			</desc>
			<log-file>step18_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name}3 station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}"</log-match>
		</step>

		<step no="18.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step18.1_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
		</step>

		<step no="18.2">
			<desc>
				- show auth
			</desc>
			<log-file>step18.2_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *1" -i "WPA2/TKIP" -i "userGroup0002" -i "done"</log-match>
		</step>
		
		<include prefix="19" file="subs/release_station_wifi.xml" obj-args="sta1" />

		<step no="20">
			<desc>
				-clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>
		
		<step no="pre.conn4.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn4.psk" type="special">
				echo ${ppsk.auto.value}
			</setvar>
		</step>

		<include prefix="22" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn4, sta1, ap1" />

		<step no="23" delay="10">
			<desc>
				-check the logging result
			</desc>
			<log-file>step23_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="200">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Station ${sta1.tif.mac} is authenticated to ${ap1.wifi04.mac} thru SSID ${ssid.name}4"</log-match>
			<log-match>-c -i "STA(${sta1.tif.mac}) login to SSID(wifi0.4) by user_name=userGroup0002"</log-match>
		</step>

		<step no="24">
			<desc>
				-sh ssid xxx st
			</desc>
			<log-file>step24_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name}4 station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}"</log-match>
		</step>

		<step no="24.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step24.1_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
		</step>

		<step no="24.2">
			<desc>
				- show auth
			</desc>
			<log-file>step24.2_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *1" -i "WPA2/CCMP" -i "userGroup0002" -i "done"</log-match>
		</step>
		
		<include prefix="25" file="subs/release_station_wifi.xml" obj-args="sta1" />

		<step no="26">
			<desc>
				-clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>
		
	</stage>
</testcase>