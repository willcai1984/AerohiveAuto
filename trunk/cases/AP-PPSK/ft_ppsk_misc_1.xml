<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check the default concurrent user limit for the same account.</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		Test Procedure:
		1. configure a PPSK SSID. Leave the user limit as default. [result 1]
		2. bind the PPSK SSID to an access interface.
		3. configure a user group, password auto generated.
		4. Configure some user accounts for the user group
		5. Try to connect to the SSID using the same user account. [result 2]
		6. Repeat the test, with a manually user group. [result 3]
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>

	<property name="default.psk" value="aerohive" />
	<property name="conn3.ssid" value="${ssid.name}" />
	<property name="conn3.proto" value="wpa-tkip-psk" />
	<property name="conn3.psk" value="ppskuser" />
	<property name="conn4.ssid" value="${ssid.name}" />
	<property name="conn4.proto" value="wpa-tkip-psk" />
	<property name="conn4.psk" value="ppskuser" />

	<stage>
		<step no="0">
			<desc>
				-Config ap1's vlan and native-vlan
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="0.1" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step0.1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="0.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="0.3">
			<desc>
				show ap1's interface wifi0 info
			</desc>
			<log-file>show_ap1_interface_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="0.4">
			<desc>
				get ap1's wifi0's mac address
			</desc>
			<setvar name="ap1.wifi0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_ap1_interface_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<step no="1">
			<desc>
				Configure a user group, password auto generated, without setting the time range.
			</desc>
			<telnet target="ap1">
				-v "_debug auth info"
				-v "clear log all"
				-v "user-group userGroup1"
				-v "user-group userGroup1 password-generation-method auto"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				-Configure and bind a PPSK SSID.
			</desc>
			<telnet target="ap1">
				-v "security-object ppsk"
				-v "security-object ppsk security protocol-suite wpa-tkip-psk ascii-key ${default.psk}"
				-v "security-object ppsk default-user-profile-attr 1"
				-v "security-object ppsk security private-psk"
				-v "user-profile ttt vlan-id ${tb.vlan1} attribute 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} user-group userGroup1"
				-v "ssid ${ssid.name} max-client 32"
				-v "ssid ${ssid.name} security-object ppsk"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 1"
				-v "user-group userGroup1 auto-generation index-range 1 3"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				show user-group
			</desc>
			<log-file>step1.2_show_user_group.log</log-file>
			<telnet target="ap1">
				-v "show user-group"
			</telnet>
			<log-match>-c -i "userGroup1" -p 6 -i "AP"</log-match>
		</step>

		<include prefix="2" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step2_show_logging_buffered.log" />

		<step no="3">
			<desc>
				check logging result
			</desc>
			<log-file>step2_show_logging_buffered.log</log-file>
			<log-match>-c -i "generated *for *user *(userGroup10001)"</log-match>
			<log-match>-c -i "generated *for *user *(userGroup10002)"</log-match>
			<log-match>-c -i "generated *for *user *(userGroup10003)"</log-match>
		</step>

		<step no="3.a">
			<desc>Get the ppsk value</desc>
			<setvar name="ppsk.auto.value" type="special">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step2_show_logging_buffered.log -p "password \((.*)\) generated for user \(userGroup10001\)" --script "m.group(1)" -s none -g0
			</setvar>
		</step>

		<step no="3.1">
			<desc>
				show user
			</desc>
			<log-file>step3.1_show_user.log</log-file>
			<telnet target="ap1">
				-v "show user"
			</telnet>
			<log-match>-c -i "userGroup10001" -i "Yes *userGroup"</log-match>
			<log-match>-c -i "userGroup10002" -i "Yes *userGroup"</log-match>
			<log-match>-c -i "userGroup10003" -i "Yes *userGroup"</log-match>
		</step>

		<step no="3.2">
			<desc>
				-show auth private-psk
			</desc>
			<log-file>step3.2_show_auth_private_psk.log</log-file>
			<telnet target="ap1">
				-v "show auth private-psk"
			</telnet>
			<log-match>-c -i "userGroup10001" -i "Yes"</log-match>
			<log-match>-c -i "userGroup10002" -i "Yes"</log-match>
			<log-match>-c -i "userGroup10003" -i "Yes"</log-match>
		</step>

		<step no="4">
			<desc>
				-show running-config
			</desc>
			<log-file>step4_show_run.log</log-file>
			<telnet target="ap1">
				-v "show running-config"
			</telnet>
			<log-match>-n -c -i "security-object ppsk security private-psk same-user-limit"</log-match>
		</step>

		<step no="pre.conn1.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn1.psk" type="special">
				echo ${ppsk.auto.value}
			</setvar>
		</step>

		<property name="conn1.ssid" value="${ssid.name}" />
		<property name="conn1.proto" value="wpa-tkip-psk" />

		<include prefix="5" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="pre.conn2.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn2.psk" type="special">
				echo ${ppsk.auto.value}
			</setvar>
		</step>

		<property name="conn2.ssid" value="${ssid.name}" />
		<property name="conn2.proto" value="wpa-tkip-psk" />

		<include prefix="6" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta2, ap1" />

		<step no="7">
			<desc>
				-check the logging result
			</desc>
			<log-file>step7_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="200">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Station ${sta1.tif.mac} is authenticated to ${ap1.wifi0.mac} thru SSID ${ssid.name}"</log-match>
			<log-match>-c -i "STA(${sta1.tif.mac}) login to SSID(wifi0.1) by user_name=userGroup10001"</log-match>
			<log-match>-c -i "Station ${sta2.tif.mac} is authenticated to ${ap1.wifi0.mac} thru SSID ${ssid.name}"</log-match>
			<log-match>-c -i "STA(${sta2.tif.mac}) login to SSID(wifi0.1) by user_name=userGroup10001"</log-match>
		</step>

		<step no="8" delay="5">
			<desc>
				-sh ssid xxx st
			</desc>
			<log-file>step8_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}"</log-match>
			<log-match>-c -i "${sta2.tif.mac} *${sta2.tif.ip}"</log-match>
		</step>

		<step no="8.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step8.1_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
			<log-match>-c -i "${sta2.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
		</step>

		<step no="8.2">
			<desc>
				- show auth
			</desc>
			<log-file>step8.2_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *1" -i "WPA/TKIP" -i "userGroup10001"</log-match>
			<log-match>-c -i "${sta2.tif.mac} *1" -i "WPA/TKIP" -i "userGroup10001"</log-match>
		</step>

		<include prefix="9" file="subs/release_station_wifi.xml" obj-args="sta1" />

		<include prefix="10" file="subs/release_station_wifi.xml" obj-args="sta2" />

		<step no="11">
			<desc>
				-create a user-group with manaul
				-create a user
				-create a password of user
				-bind the user to this group
			</desc>
			<telnet target="ap1">
				-v "user-group userGroup2"
				-v "user ppsk_user"
				-v "user ppsk_user password ppskuser"
				-v "user ppsk_user group userGroup2"
				-v "ssid ${ssid.name} user-group userGroup2"
				-v "clear log all"
			</telnet>
		</step>

		<step no="11.1">
			<desc>
				show user-group
			</desc>
			<log-file>step11.1_show_user_group.log</log-file>
			<telnet target="ap1">
				-v "show user-group"
			</telnet>
			<log-match>-c -i "userGroup1" -p 6 -i "AP"</log-match>
			<log-match>-c -i "userGroup2" -p 6 -i "MP"</log-match>
		</step>

		<step no="11.2">
			<desc>
				show user
			</desc>
			<log-file>step11.2_show_user.log</log-file>
			<telnet target="ap1">
				-v "show user"
			</telnet>
			<log-match>-c -i "userGroup10001" -i "Yes *userGroup"</log-match>
			<log-match>-c -i "userGroup10002" -i "Yes *userGroup"</log-match>
			<log-match>-c -i "userGroup10003" -i "Yes *userGroup"</log-match>
			<log-match>-c -i "ppsk_user *manual" -i "Yes *userGroup"</log-match>
		</step>

		<step no="11.3">
			<desc>
				-show auth private-psk
			</desc>
			<log-file>step11.3_show_auth_private_psk.log</log-file>
			<telnet target="ap1">
				-v "show auth private-psk"
			</telnet>
			<log-match>-c -i "userGroup10001 *userGroup1" -i "Yes"</log-match>
			<log-match>-c -i "userGroup10002 *userGroup1" -i "Yes"</log-match>
			<log-match>-c -i "userGroup10003 *userGroup1" -i "Yes"</log-match>
			<log-match>-c -i "ppsk_user *userGroup2" -i "Yes"</log-match>
		</step>

		<step no="12">
			<desc>
				-show running-config
			</desc>
			<log-file>step12_show_run.log</log-file>
			<telnet target="ap1">
				-v "show running-config"
			</telnet>
			<log-match>-n -c -i "security-object ppsk security private-psk same-user-limit"</log-match>
		</step>

		<include prefix="13" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn3, sta1, ap1" />

		<include prefix="14" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn4, sta2, ap1" />

		<step no="15">
			<desc>
				-check the logging result
			</desc>
			<log-file>step15_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="200">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Station ${sta1.tif.mac} is authenticated to ${ap1.wifi0.mac} thru SSID ${ssid.name}"</log-match>
			<log-match>-c -i "STA(${sta1.tif.mac}) login to SSID(wifi0.1) by user_name=ppsk_user"</log-match>
			<log-match>-c -i "Station ${sta2.tif.mac} is authenticated to ${ap1.wifi0.mac} thru SSID ${ssid.name}"</log-match>
			<log-match>-c -i "STA(${sta2.tif.mac}) login to SSID(wifi0.1) by user_name=ppsk_user"</log-match>
		</step>

		<step no="16" delay="5">
			<desc>
				-sh ssid xxx st
			</desc>
			<log-file>step16_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}"</log-match>
			<log-match>-c -i "${sta2.tif.mac} *${sta2.tif.ip}"</log-match>
		</step>

		<step no="16.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step16.1_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
			<log-match>-c -i "${sta2.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
		</step>

		<step no="16.2">
			<desc>
				- show auth
			</desc>
			<log-file>step16.2_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *1" -i "WPA/TKIP" -i "ppsk_user"</log-match>
			<log-match>-c -i "${sta2.tif.mac} *1" -i "WPA/TKIP" -i "ppsk_user"</log-match>
		</step>
	</stage>
</testcase>