<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check the PPSK can co-operated with mac-based auth</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-ssid with PPSK, user-group contain vlan-id, reauth-time
		-ssid with mac based auth, radius server push attribute

		Test Procedure:
		-Client connect to AP with a valid PPSK but a illegal mac address Check result 1
		-client connect to AP with a invalid PPSK but a legal mac address Check result 2
		-client connect to AP with a valid PPSK and a legal mac address Check result 3
	</description>
	<numofap>2</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<property name="default.psk" value="aerohive" />
	<property name="acct1.vlan" value="${tb.vlan2}" />
	<property name="acct1.session_time" value="600" />
	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn1.proto" value="wpa-tkip-psk" />
	<property name="conn1.psk" value="ppskuser" />
	<property name="conn1.auth_negative_test" value="true" />
	<property name="conn1.dhcp_negative_test" value="true" />
	<property name="conn2.ssid" value="${ssid.name}" />
	<property name="conn2.proto" value="wpa-tkip-psk" />
	<property name="conn2.psk" value="ppskuser${job.sid}" />
	<property name="conn2.auth_negative_test" value="true" />
	<property name="conn2.dhcp_negative_test" value="true" />
	<property name="conn3.ssid" value="${ssid.name}" />
	<property name="conn3.proto" value="wpa-tkip-psk" />
	<property name="conn3.psk" value="ppskuser" />

	<stage>
		<step no="0">
			<desc>ifconfig to show interface info</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1">
				-v "ifconfig ${sta1.tif.name} up"
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="0.1">
			<desc>Get sta1's mac</desc>
			<setvar name="sta1.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -m -dash -uppercase
			</setvar>
		</step>

		<include prefix="0.2" file="subs/ldap_add.xml" args="${sta1.mac}, ${sta1.mac}" obj-args="acct1" />

		<step no="0.3">
			<desc>ifconfig to show interface info</desc>
			<log-file>step0.3_ifconfig.log</log-file>
			<ssh target="sta2">
				-v "ifconfig ${sta2.tif.name} up"
				-v "ifconfig ${sta2.tif.name}"
			</ssh>
		</step>

		<step no="0.4">
			<desc>Get sta2's mac</desc>
			<setvar name="sta2.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.3_ifconfig.log -i ${sta2.tif.name} -m -dash -uppercase
			</setvar>
		</step>

		<step no="1">
			<desc>
				-Config ap1
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="1.1" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step1.1_show_interface_mgt0_info.log</log-file>
			<console target="ap1" timeout="200">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="1.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step1.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="1.3">
			<desc>
				-Config ap1
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "user-group userGroup"
				-v "user ppsk_user"
				-v "user ppsk_user password ppskuser"
				-v "user ppsk_user group userGroup"
				-v "user-group userGroup vlan-id ${tb.vlan1}"
				-v "user-group userGroup reauth-interval 600"
			</telnet>
		</step>

		<step no="2">
			<desc>
				-Config ap1
			</desc>
			<telnet target="ap1">
				-v "security-object ppsk"
				-v "security-object ppsk security protocol-suite wpa-tkip-psk ascii-key ${default.psk}"
				-v "security-object ppsk default-user-profile-attr 1"
				-v "security-object ppsk security private-psk"
				-v "security-object ppsk security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object ppsk security additional-auth-method mac-based-auth"
				-v "aaa mac-format case-sensitivity upper-case"
				-v "aaa mac-format delimiter dash"
				-v "aaa mac-format style five-delimiter"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				-Config ap1
			</desc>
			<telnet target="ap1">
				-v "user-profile ttt vlan-id ${tb.vlan1} attribute 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} user-group userGroup"
				-v "ssid ${ssid.name} max-client 32"
				-v "ssid ${ssid.name} security-object ppsk"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 1"
				-v "_debug auth all"
				-v "clear log all"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				show ap1's interface wifi0 info
			</desc>
			<log-file>show_ap1_interface_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="2.3">
			<desc>
				get ap1's wifi0's mac address
			</desc>
			<setvar name="ap1.wifi0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_ap1_interface_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta2, ap1" />

		<step no="4" delay="10">
			<desc>
				-check the logging result
			</desc>
			<log-file>step4_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<log-match>-c -i "MAC-based auth: RADIUS server send reject to station ${sta2.tif.mac}"</log-match>
			<log-match>-c -i "authentication FAILED, type RADIUS, username '${sta2.mac}'"</log-match>
			<log-match>-c -i "station ${sta2.tif.mac} MAC-base auth failed, disassociated from dev wifi0.1"</log-match>
			<log-match>-c -i "sta ${sta2.tif.mac} is disassociated from"</log-match>
		</step>

		<step no="5">
			<desc>
				-clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<include prefix="6" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta1, ap1" />

		<step no="7" delay="10">
			<desc>
				-check the logging result
			</desc>
			<log-file>step7_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<log-match>-c -i "invalid MIC in msg 2/4 of 4-Way Handshake"</log-match>
			<log-match>-c -i "sta ${sta1.tif.mac} is disassociated from"</log-match>
			<log-match>-c -i "MAC-based auth: RADIUS server send OK to station ${sta1.tif.mac}"</log-match>
			<log-match>-c -i "authentication OK, username '${sta1.mac}', service (unknown)"</log-match>
		</step>

		<step no="8">
			<desc>
				-clear log all
			</desc>
			<telnet target="ap1">
				-v "_debug auth all"
				-v "clear log all"
			</telnet>
		</step>

		<include prefix="9" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn3, sta1, ap1" />

		<step no="10" delay="5" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				-check the logging result
			</desc>
			<log-file>step10_show_logging_buffered_${loop_check.idx}.log</log-file>
			<telnet target="ap1" timeout="200">
				-v "show logging buffered"
			</telnet>
			<log-match>-c -i "STA(${sta1.tif.mac}) login to SSID(wifi0.1) by user_name=ppsk_user"</log-match>
			<log-match>-c -i "Station ${sta1.tif.mac} is authenticated to ${ap1.wifi0.mac} thru SSID ${ssid.name}"</log-match>
			<log-match>-c -i "MAC-based auth: RADIUS server send OK to station ${sta1.tif.mac}"</log-match>
			<log-match>-c -i "authentication OK, username '${sta1.mac}', service (unknown)"</log-match>
			<no-error-check />
		</step>

		<step no="10.b">
			<desc>
				show station on ap1
			</desc>
			<log-file>step10.b_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}" -i "${tb.vlan1} *Yes *1"</log-match>
		</step>

		<step no="10.c">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step10.c_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache mac ${sta1.tif.mac}"
			</telnet>
			<log-match>-c -i "Supplicant Address(SPA): *${sta1.tif.mac}"</log-match>
			<log-match>-c -i "Hops: *0"</log-match>
			<loh-match>-c -i "VLAN ID: ${tb.vlan1}"</loh-match>
			<log-match>-c -i "Authenticator Address: *MAC=${ap1.wifi0.mac}, *IP=${ap1.mgt0.ip}"</log-match>
			<log-match>-c -i "MAC based auth flag: *set"</log-match>
		</step>

		<step no="10.d">
			<desc>
				- show auth
			</desc>
			<log-file>step10.d_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *1" -i "WPA/TKIP" -i "ppsk_user" -p 7 -i "done"</log-match>
		</step>

		<step no="11">
			<desc>
				-Config ap2
			</desc>
			<console target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="11.1" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step11.1_show_interface_mgt0_info.log</log-file>
			<console target="ap2" timeout="200">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="11.2">
			<desc>Get ap2's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step11.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="11.3" type="loop-check" loop-max-times="15" loop-interval="5">
			<desc>
				show amrp neighbor
			</desc>
			<log-file>step11.3_show_amrp_neighbor_${loop_check.idx}.log</log-file>
			<telnet target="ap1" timeout="30">
				-v "show amrp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/mlinesearch.pl">-l "eth0:" -l "${ap2.mgt0.mac} *${ap2.mgt0.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="12" type="loop-check" loop-max-times="15" loop-interval="5">
			<desc>
				show amrp neighbor
			</desc>
			<log-file>step12_show_amrp_neighbor_${loop_check.idx}.log</log-file>
			<telnet target="ap2" timeout="30">
				-v "show amrp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/mlinesearch.pl">-l "eth0:" -l "${ap1.mgt0.mac} *${ap1.mgt0.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="13" type="loop-check" loop-max-times="15" loop-interval="5">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step13_show_roaming_cache_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${ap1.wifi0.mac}" -i "1 *YNNN"</log-match>
		</step>
	</stage>

	<post-process>
		<stage>

			<include prefix="delete_mac_account" file="subs/ldap_delete.xml" args="${sta1.mac}" />

		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>