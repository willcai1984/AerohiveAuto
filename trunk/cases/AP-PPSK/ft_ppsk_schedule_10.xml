<?xml version="1.0" encoding="UTF-8"?>
<testcase>
    <brief>Verify the function of a recurrent schedule with time range specified only-  one time range.</brief>
    <priority>Accept</priority>
    <automated>no</automated>
    <description>
        
		Pre-Condition:

			Change the system time zone to a non-default one, no DST setting.
			Configure and bind a PPSK SSID.
			Configure a user group, password auto generated, without setting the time 
			range.
			Set the user group to the PPSK SSID.

		Test Procedure:

			1.	Configure a PPSK schedule:
			Recurrent, without specifying time zone,
			Only one time range
			2.	Set the PPSK schedule to the user group
			3.	Generate some user accounts by specifying the index range.
			4.	Check the validity of the generated accounts before, in, after the schedule 
			range. [result 1]
			5.	Try to connect to the PPSK SSID using the generated accounts before, in, 
			after the schedule range. [result 2]
			6.	Check the [result 1] and [result 2] in consecutive 2 days. [result 3]
    </description>
    <numofap>1</numofap>
    <numofsta>1</numofsta>
    <tbtype>winlin</tbtype>
    <property name="" value=""/>
    <stage>
                <step no="1">
            <desc>
            
				Change the system time zone to a non-default one, no DST setting.
				Configure and bind a PPSK SSID.
				Configure a user group, password auto generated, without setting the time 
				range.
				Set the user group to the PPSK SSID.
            </desc>
            <log-file></log-file>
            <console target="ap1"></console>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>
        <step no="2">
            <desc>
            1.	Configure a PPSK schedule:
				Recurrent, without specifying time zone,
				Only one time range
            </desc>
            <log-file></log-file>
            <console target="ap1"></console>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>
        <step no="3">
            <desc>
            2.	Set the PPSK schedule to the user group
            </desc>
            <log-file></log-file>
            <console target="ap1"></console>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>
        <step no="4">
            <desc>
            3.	Generate some user accounts by specifying the index range.
            </desc>
            <log-file></log-file>
            <console target="ap1"></console>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>
        <step no="5">
            <desc>
            4.	Check the validity of the generated accounts before, in, after the schedule 
				range. [result 1]
            </desc>
            <log-file></log-file>
            <console target="ap1"></console>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>
        <step no="6">
            <desc>
            5.	Try to connect to the PPSK SSID using the generated accounts before, in, 
				after the schedule range. [result 2]
            </desc>
            <log-file></log-file>
            <console target="ap1"></console>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>
        <step no="7">
            <desc>
            6.	Check the [result 1] and [result 2] in consecutive 2 days. [result 3]
            </desc>
            <log-file></log-file>
            <console target="ap1"></console>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>

    </stage>
    <failed-process>
        <step no="1..n">
            .. process
	</step>
    </failed-process>
</testcase>
