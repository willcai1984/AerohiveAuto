<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify that revoking an auto generated user account deletes it.</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Configure and bind a PPSK SSID.
		Configure a user group, password auto generated, without setting the time range.
		Set the user group to the PPSK SSID.

		Test Procedure:
		1. Config a user group: password auto generated
		2. Generate some user for the user group
		3. 'revoke' one of the generated user accounts
		#user-group ug auto-generation revoke-user 4
		4. Check the user accounts. [result 1]
		5. Try to connect to the PPSK SSID using the 'revoked' user accounts. [result 2]
		6. Try to connect to the PPSK SSID using an account that is still in the list.[result 3]
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>

	<property name="default.psk" value="aerohive" />

	<stage>
		<step no="0">
			<desc>
				config vlan and native-vlan
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "_debug auth info"
				-v "clear log all"
			</console>
		</step>

		<step no="0.1" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step0.1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="0.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="1">
			<desc>
				-Configure and bind a PPSK SSID.
				-Configure a user group, password auto generated, without setting the time range.
				-Set the user group to the PPSK SSID.
			</desc>
			<telnet target="ap1">
				-v "user-group userGroup"
				-v "user-group userGroup password-generation-method auto"
				-v "user-group userGroup auto-generation index-range 1 3"
				-v "security-object ppsk"
				-v "security-object ppsk security protocol-suite wpa-tkip-psk ascii-key ${default.psk}"
				-v "security-object ppsk default-user-profile-attr 1"
				-v "security-object ppsk security private-psk"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} user-group userGroup"
				-v "ssid ${ssid.name} max-client 32"
				-v "ssid ${ssid.name} security-object ppsk"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 1"
				-v "user-profile ttt vlan-id ${tb.vlan1} attribute 1"
			</telnet>
		</step>

		<include prefix="2" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step2_show_logging_buffered.log" />

		<step no="3">
			<desc>Get the ppsk value</desc>
			<setvar name="ppsk.valid.value">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step2_show_logging_buffered.log -p "password \((.*)\) generated for user \(userGroup0001\)" --script "m.group(1)" -s none -g0
			</setvar>
		</step>

		<step no="3.1">
			<desc>Get the ppsk value</desc>
			<setvar name="ppsk.revoke.value">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step2_show_logging_buffered.log -p "password \((.*)\) generated for user \(userGroup0003\)" --script "m.group(1)" -s none -g0
			</setvar>
		</step>

		<step no="4">
			<desc>
				show user
			</desc>
			<log-file>step4_show_user.log</log-file>
			<telnet target="ap1">
				-v "show user"
			</telnet>
			<log-match>-c -i "userGroup0001" -i "Yes *userGroup"</log-match>
			<log-match>-c -i "userGroup0002" -i "Yes *userGroup"</log-match>
			<log-match>-c -i "userGroup0003" -i "Yes *userGroup"</log-match>
		</step>

		<step no="5">
			<desc>
				3. 'revoke' one of the generated user accounts
				#user-group ug auto-generation revoke-user 4
			</desc>
			<telnet target="ap1">
				-v "user-group userGroup auto-generation revoke-user 3"
			</telnet>
		</step>

		<step no="5.1">
			<desc>
				show user
			</desc>
			<log-file>step5.1_show_user.log</log-file>
			<telnet target="ap1">
				-v "show user"
			</telnet>
			<log-match>-c -i "userGroup0001" -i "Yes *userGroup"</log-match>
			<log-match>-c -i "userGroup0002" -i "Yes *userGroup"</log-match>
			<log-match>-c -i "userGroup0003" -i "No *userGroup"</log-match>
		</step>

		<step no="pre.conn1.psk">
			<desc>set value of psk</desc>
			<setvar name="conn1.psk">
				echo "${ppsk.revoke.value}"
			</setvar>
		</step>

		<property name="conn1.ssid" value="${ssid.name}" />
		<property name="conn1.proto" value="wpa-tkip-psk" />
		<property name="conn1.auth_negative_test" value="true" />
		<property name="conn1.dhcp_negative_test" value="true" />

		<include prefix="6" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="pre.conn2.psk">
			<desc>set value of psk</desc>
			<setvar name="conn2.psk">
				echo "${ppsk.valid.value}"
			</setvar>
		</step>

		<property name="conn2.ssid" value="${ssid.name}" />
		<property name="conn2.proto" value="wpa-tkip-psk" />

		<include prefix="7" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta2, ap1" />

		<step no="8" delay="5">
			<desc>
				- sh ssid xxx st
			</desc>
			<log-file>step8_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac}" -i "${tb.vlan1} *Yes *1"</log-match>
			<log-match>-c -i "${sta2.tif.mac} *${sta2.tif.ip}" -i "${tb.vlan1} *Yes *1"</log-match>
		</step>

		<step no="9">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step9_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac}" -i "YNNN"</log-match>
			<log-match>-c -i "${sta2.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
		</step>

		<step no="10">
			<desc>
				- show auth
			</desc>
			<log-file>step10_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac} *1" -i "WPA/TKIP" -i "userGroup0003" -p 7 -i "done"</log-match>
			<log-match>-c -i "${sta2.tif.mac} *1" -i "WPA/TKIP" -i "userGroup0001" -p 7 -i "done"</log-match>
		</step>
	</stage>
</testcase>