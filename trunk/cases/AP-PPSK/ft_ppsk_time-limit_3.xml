<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check the expired-time of user-group works</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-config the password-generation-method to auto

		Test Procedure:
		-config a group with expired-time 2010-12-31/00:00:00
		-check result 1
		-bind this group to ssid
		-bind this ssid to wifi0
		Check result 2
		-set AP clock before expired-time
		-client connect to AP with PPSK
		-check result 3
		-client connect to AP with default PSK
		-check result 4
		-waiting for expired-time is up
		-check result 5
		-client connect to AP with PPSK
		-check result 6
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>

	<property name="default.psk" value="aerohive" />
	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn1.proto" value="wpa-tkip-psk" />
	<property name="conn1.psk" value="aerohive" />

	<stage>
		<step no="0">
			<desc>
				config vlan and native-vlan
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="0.1" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step0.1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="0.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="1">
			<desc>
				-Configure and bind a PPSK SSID.
				-Configure a user group, password auto generated
				-Set the user group to the PPSK SSID.
			</desc>
			<telnet target="ap1">
				-v "_debug auth info"
				-v "clear log all"
				-v "user-group userGroup"
				-v "user-group userGroup password-generation-method auto"
				-v "security-object ppsk"
				-v "security-object ppsk security protocol-suite wpa-tkip-psk ascii-key ${default.psk}"
				-v "security-object ppsk default-user-profile-attr 1"
				-v "security-object ppsk security private-psk"
				-v "user-profile ttt vlan-id ${tb.vlan1} attribute 1"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				-config a group with expired-time 2010-12-31/00:00:00
				-set AP clock before expired-time
			</desc>
			<telnet target="ap1">
				-v "clock date-time 2012-10-27 10:53:00"
				-v "user-group userGroup expired-time 2012-10-27/11:00:00"
				-v "user-group userGroup auto-generation index-range 1 3"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} user-group userGroup"
				-v "ssid ${ssid.name} max-client 32"
				-v "ssid ${ssid.name} security-object ppsk"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 1"
			</telnet>
		</step>

		<step no="2.1">
			<desc>show log buffer</desc>
			<log-file>step2.1_show_logging_buffered.log</log-file>
			<ssh target="ap1">
				-v "show log b"
			</ssh>
		</step>

		<step no="3">
			<desc>Get the ppsk value</desc>
			<setvar name="ppsk.valid.value" type="special">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step2_show_logging_buffered.log -p "password \((.*)\) generated for user \(userGroup0001\)" --script "m.group(1)" -s none -g0
			</setvar>
		</step>

		<step no="4">
			<desc>
				show user
			</desc>
			<log-file>step4_show_user.log</log-file>
			<telnet target="ap1">
				-v "show user"
			</telnet>
			<log-match>-c -i "userGroup0001" -i "Yes *userGroup"</log-match>
			<log-match>-c -i "userGroup0002" -i "Yes *userGroup"</log-match>
			<log-match>-c -i "userGroup0003" -i "Yes *userGroup"</log-match>
		</step>

		<step no="4.1">
			<desc>
				show user-group
			</desc>
			<log-file>step4.1_show_user_group.log</log-file>
			<telnet target="ap1">
				-v "show user-group"
			</telnet>
			<log-match>-c -i "userGroup" -i "AP *M *n/a *2012-10-27 *11:00:00"</log-match>
		</step>

		<step no="4.2">
			<desc>
				show run users
			</desc>
			<log-file>step4.2_show_run_user.log</log-file>
			<telnet target="ap1">
				-v "show run users"
			</telnet>
		</step>

		<step no="4.3">
			<desc>
				-show auth private-psk
			</desc>
			<log-file>step4.3_show_auth_private_psk.log</log-file>
			<telnet target="ap1">
				-v "show auth private-psk"
			</telnet>
			<log-match>-c -i "PPSK-enabled=yes"</log-match>
			<log-match>-c -i "userGroup0001" -i "Yes"</log-match>
			<log-match>-c -i "userGroup0002" -i "Yes"</log-match>
			<log-match>-c -i "userGroup0003" -i "Yes"</log-match>
		</step>

		<step no="pre.conn2.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn2.psk" type="special">
				echo ${ppsk.valid.value}
			</setvar>
		</step>

		<property name="conn2.ssid" value="${ssid.name}" />
		<property name="conn2.proto" value="wpa-tkip-psk" />

		<include prefix="5" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta1, ap1" />

		<step no="6">
			<desc>
				- sh ssid xxx st
			</desc>
			<log-file>step6_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}"</log-match>
		</step>

		<step no="6.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step6.1_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
		</step>

		<step no="6.2">
			<desc>
				- show auth
			</desc>
			<log-file>step6.2_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *1" -i "WPA/TKIP" -i "userGroup0001" -p 7 -i "done"</log-match>
		</step>

		<include prefix="7" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta2, ap1" />

		<step no="8">
			<desc>
				- sh ssid xxx st
			</desc>
			<log-file>step8_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta2.tif.mac} *${sta2.tif.ip}"</log-match>
		</step>

		<step no="8.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step8.1_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta2.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
		</step>

		<step no="8.2">
			<desc>
				- show auth
			</desc>
			<log-file>step8.2_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "${sta2.tif.mac} *1" -i "WPA/TKIP" -p 7 -i "done"</log-match>
		</step>

		<include prefix="9" file="subs/release_station_wifi.xml" obj-args="sta1" />

		<include prefix="10" file="subs/release_station_wifi.xml" obj-args="sta2" />

		<step no="11" delay="100" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				-show auth private-psk
			</desc>
			<log-file>step11_show_auth_private_psk_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show auth private-psk"
			</telnet>
			<log-match>-c -i "PPSK-enabled=yes"</log-match>
			<log-match>-c -i "userGroup0001" -i "No"</log-match>
			<log-match>-c -i "userGroup0002" -i "No"</log-match>
			<log-match>-c -i "userGroup0003" -i "No"</log-match>
		</step>

		<step no="pre.conn3.psk" var-type="s1">
			<desc>set value of psk</desc>
			<setvar name="conn3.psk" type="special">
				echo ${ppsk.valid.value}
			</setvar>
		</step>

		<property name="conn3.ssid" value="${ssid.name}" />
		<property name="conn3.proto" value="wpa-tkip-psk" />
		<property name="conn3.auth_negative_test" value="true" />
		<property name="conn3.dhcp_negative_test" value="true" />

		<include prefix="12" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta2, ap1" />

		<include prefix="13" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn3, sta1, ap1" />

		<step no="14">
			<desc>
				- sh ssid xxx st
			</desc>
			<log-file>step14_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta2.tif.mac} *${sta2.tif.ip}"</log-match>
			<log-match>-n -c -i "${sta1.tif.mac} *${sta2.tif.ip}"</log-match>
		</step>

		<step no="14.1">
			<desc>
				- sh roa ca
			</desc>
			<log-file>step14.1_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac}" -i "YNNN"</log-match>
			<log-match>-c -i "${sta2.tif.mac}" -p 5 -i "1" -i "0 *YNNN"</log-match>
		</step>

		<step no="14.2">
			<desc>
				- show auth
			</desc>
			<log-file>step14.2_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac} *1" -p 7 -i "done"</log-match>
			<log-match>-c -i "${sta2.tif.mac} *1" -i "WPA/TKIP" -p 7 -i "done"</log-match>
		</step>
	</stage>
</testcase>