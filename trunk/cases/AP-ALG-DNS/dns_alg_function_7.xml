<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>DNS packet can be passed to DNS ALG before l3tunnel</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		Test Procedure:

		1)The DNS packet can be passed to DNS ALG before l3tunnel.
		2)The invalid DNS packet will be dropped before l3tunnel.

	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<property name="ftp_test_file_local_dir" value="/tmp" />

	<stage>

		<step no="1.1">
			<desc>
				-Configure AP1 via console
			</desc>
			<console target="ap1">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${ap.def.passwd}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi1 radio channel 165"
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "mobility-policy l3roaming dnxp"
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy l3roaming attribute 1"
				-v "ip-policy fw"
				-v "ip-policy fw service dns action permit"
				-v "ip-policy fw service icmp action permit"
				-v "ip-policy fw service dhcp-server action permit"
				-v "ip-policy fw service dhcp-client action permit"
				-v "user-profile ${ssid.name} security ip-policy from-access fw to-access fw"
				-v "no bonjour-gateway enable"
				-v "alg dns enable"
			</console>
		</step>
		
		<include prefix="1.2.0" file="subs/get_ap_ip_mac.xml" rargs="ap1" />

		<step no="1.2">
			<desc>
				-Show ap1's interface
			</desc>
			<log-file>step1.2_ap1_interface_info.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				-Gain ap1's eth0's mac address
			</desc>
			<setvar name="ap1_eth0_mac">
				${bin.dir}/getstring.pl -k "Eth0" -p 2 -f ${log.dir}/step1.2_ap1_interface_info.log
			</setvar>
		</step>

		<step no="2.1">
			<desc>
				-Laptop1 has been associated with AP1 and assigned an ip addres
				-Create config file of wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "echo \"ctrl_interface=/var/run/wpa_supplicant\" > /tmp/wpa_supplicant.cfg"
				-v "ifconfig ${sta1.tif.name} down"
				-v "ifconfig ${sta1.tif.name} up"
			</ssh>
		</step>

		<step no="2.2">
			<desc>
				-Start wpa_supplicant
			</desc>
			<ssh target="sta1" delay="5">
				-v "killall wpa_supplicant"
				-v "wpa_supplicant -i ${sta1.tif.name} ${sta1.wpa_flag} -c /tmp/wpa_supplicant.cfg -B"
			</ssh>
		</step>

		<step no="2.3">
			<desc>
				-Laptop connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<step no="2.4" delay="10" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				-Check if the client was associated successfully
			</desc>
			<log-file>step2.3_wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>
		<step no="2.4.1">
			<desc>
				-Show laptop1's dns info
			</desc>
			<log-file>sta1.dns.log</log-file>
			<ssh target="sta1" timeout="80">
				-v " echo \" \" >  /var/lib/dhclient/dhclient.leases"
			</ssh>
		</step>
		
		<step no="2.5">
			<desc>
				-Client gets IP by dhclient
			</desc>
			<ssh target="sta1">
				-v "dhclient ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="2.6" delay="10">
			<desc>
				-Ifconfig to show the ip address
			</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="2.7">
			<desc>
				-Get laptop1's ip
			</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.8">
			<desc>
				-Get laptop1's mac
			</desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -m -width | awk '{print tolower($0)}'
			</setvar>
		</step>

		<step no="2.9">
			<desc>
				-Show laptop1's dns info
			</desc>
			<log-file>sta1.dns.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "cat /var/lib/dhclient/dhclient.leases"
			</ssh>
		</step>

		<step no="2.10">
			<desc>
				-Get laptop1's dns IP
			</desc>
			<setvar name="sta1.dns.ip">
				awk '/option domain-name-servers/ {print $3}' ${log.dir}/sta1.dns.log | awk 'NR==1' | sed 's/;//'
			</setvar>
		</step>

		<step no="3.1">
			<desc>
				-Configure ap2 via console
			</desc>
			<console target="ap2">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${ap.def.passwd}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi1 radio channel 165"
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
				-v "interface mgt0 vlan ${tb.vlan2}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "mobility-policy l3roaming dnxp"
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy l3roaming attribute 1"
				-v "ip-policy fw"
				-v "ip-policy fw service dns action permit"
				-v "ip-policy fw service icmp action permit"
				-v "ip-policy fw service dhcp-server action permit"
				-v "ip-policy fw service dhcp-client action permit"
				-v "user-profile ${ssid.name} security ip-policy from-access fw to-access fw"
				-v "no bonjour-gateway enable"
				-v "alg dns enable"
			</console>
		</step>

		<step no="3.2">
			<desc>
				-Renew ap2's mgt0 IPaddr
			</desc>
			<console target="ap2">
				-v "no interface mgt0 dhcp client"
				-v "interface mgt0 dhcp client"
			</console>
		</step>

		<step no="3.3">
			<desc>
				-Show ap2's mgt0
			</desc>
			<log-file>step3.3_show_ap2_mgt0.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="3.4">
			<desc>
				-Get ap2's mgt0
			</desc>
			<setvar name="ap2.mgt0.ip">
				${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -t str -f ${log.dir}/step3.3_show_ap2_mgt0.log
			</setvar>
		</step>

		<step no="3.5">
			<desc>
				-Show ap2's interface
			</desc>
			<log-file>step3.5_ap2_interface_info.log</log-file>
			<telnet target="ap2">
				-v "show interface"
			</telnet>
		</step>

		<step no="3.6">
			<desc>
				-Gain ap2's eth0's mac address
			</desc>
			<setvar name="ap2_eth0_mac">
				${bin.dir}/getstring.pl -k "Eth0" -p 2 -f ${log.dir}/step3.5_ap2_interface_info.log
			</setvar>
		</step>

		<step no="3.7" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				-Check amrp neighbor status on ap1
			</desc>
			<log-file>step.3.7_amrp_neighbor_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2_eth0_mac}\s+${ap2.mgt0.ip}" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.8" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				-Check amrp dnxp neighbor status on ap2
			</desc>
			<log-file>step.3.8_amrp_dnxp_neighbor_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap1_eth0_mac}\s+${ap1.mgt0.ip}" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4">
			<desc>
				-Confirm station state on ap1
			</desc>
			<log-file>step.ap1.roaming.ap2.first.1_show_station.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-e "${sta1.tif.ip}"</log-match>
		</step>

		<step no="5">
			<desc>
				-Shutdown ssid on ap1
			</desc>
			<telnet target="ap1">
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="l3roaming.log.check1" delay="10">
			<desc>
				-Show l3roaming log on ap1
			</desc>
			<log-file>l3roaming.log.check1_show_log.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="l3roaming.log.check2">
			<desc>
				-Show l3roaming log on ap2
			</desc>
			<log-file>l3roaming.log.check2_show_log.log</log-file>
			<telnet target="ap2">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="6.1" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				-Check l3 roaming status on ap1
			</desc>
			<log-file>step6.1_l3_roaming_ap1_log.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-i "mgt0" -i "LTO" </log-match>
		</step>

		<step no="6.2" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				-Check l3 roaming status on ap2
			</desc>
			<log-file>step6.2_l3_roaming_ap2_log.log</log-file>
			<telnet target="ap2">
				-v "show route"
			</telnet>
			<log-match>-i "wifi0.1" -i "LTO"</log-match>
		</step>

		<step no="7.1">
			<desc>
				-Open debug switch on ap2 and clear log buffer
			</desc>
			<telnet target="ap2">
				-v "_ff id 1 dst-port 53 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_debug fed alg_dns_info"
				-v "_debug fed alg_dns_pkt"
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="7.2">
			<desc>
				-Laptop send DNS request packet to dns server
			</desc>
			<ssh target="sta1">
				-v "ping hztb-ip2 -c 1"
			</ssh>
		</step>

		<step no="7.3">
			<desc>
				-Check log if the DNS packets get to ALG
			</desc>
			<log-file>step7.3_DNS_request_log.log</log-file>
			<telnet target="ap2">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p ".*\[fed_alg_dns_pkt\]: Received packet.*src ip:${sta1.tif.ip}.*dst ip:${sta1.dns.ip}.*dst port:53, protocol:17" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7.4">
			<desc>
				-Disable alg_dns debug on ap2 and clear log buffer
			</desc>
			<telnet target="ap2">
				-v "no _debug fed alg_dns_info"
				-v "no _debug fed alg_dns_pkt"
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="7.5">
			<desc>
				-Laptop send DNS request packet to dns server
			</desc>
			<ssh target="sta1">
				-v "ping hztb-ip2 -c 1"
			</ssh>
		</step>

		<step no="7.6">
			<desc>
				-Check log if the DNS packets get to ALG
			</desc>
			<log-file>step7.6_DNS_request_log.log</log-file>
			<telnet target="ap2">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="7.7">
			<desc>
				-Get the log of DNS packets
			</desc>
			<log-file>step7.7_DNS_request_log.log</log-file>
			<script>
				grep 'i.* wifi0.1 ${sta1.tif.ip}->${sta1.dns.ip}.*->53 ' -B 30 ${log.dir}/step7.6_DNS_request_log.log -n -m 1 > ${log.dir}/${log.file}
			</script>
		</step>

		<step no="7.8">
			<desc>
				-Get the alg packet line num
			</desc>
			<setvar name="alg.line.num">
				${bin.dir}/getbyrexp.py -p "^(\d+)-.*debug.*\[fe\]: send ALG control" -f ${log.dir}/step7.7_DNS_request_log.log
			</setvar>
		</step>

		<step no="7.9">
			<desc>
				-Get the tunnel line num
			</desc>
			<setvar name="tunnel.line.num">
				${bin.dir}/getbyrexp.py -p "^(\d+)-.*debug.*\(i\) mgt0 ${ap2.mgt0.ip}->${ap1.mgt0.ip}" -f ${log.dir}/step7.7_DNS_request_log.log
			</setvar>
		</step>

		<step no="7.10">
			<desc>
				-Confirm alg packet line num is greater tunnel line num
			</desc>
			<script>
				if [ ${alg.line.num} -gt ${tunnel.line.num} ]; then exit 0; else exit 1; fi
			</script>
		</step>

	</stage>

</testcase>
