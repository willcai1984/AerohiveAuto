<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>The dns packet will be removed from DNS ALG when the corresponding mac- session or ip-session is removed.</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:
		-Configure on AP
		“security-object cw-330-1”
		“security-object cw-330-1 security protocol-suite wpa-auto-psk ascii-key 12345678”
		“security-object cw-330-1 default-user-profile-attr 1”
		“ssid cw-330-1”
		“ssid cw-330-1 security-object cw-330-1”
		“interface wifi0 ssid cw-330-1”
		“interface wifi1 ssid cw-330-1”
		“user-profile cw-330-1 qos-policy def-user-qos vlan-id 1 attribute 1”
		“alg dns enable”

		Test Procedure:
		1.Open debug switch
		“_debug fed alg_dns_info”
		2.Laptop send a dns packet(such as ping www.baidu.com)
		3.Clear Mac-sessions
		4.Laptop send a dns packet(such as ping www.baidu.com)
		5.Clear IP-sessions

	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<stage>

		<step no="1">
			<desc>
				-Configure AP1 via console
			</desc>
			<ssh target="ap1">
				-v "ssid ${ssid.name}"
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "ip-policy fw"
				-v "ip-policy fw service dns action permit"
				-v "ip-policy fw service dhcp-client action permit"
				-v "ip-policy fw service dhcp-server action permit"
				-v "ip-policy fw service icmp action permit"
				-v "user-profile ${ssid.name} security ip-policy from-access fw to-access fw"
				-v "alg dns enable"
				-v "save config"
			</ssh>
		</step>

		<step no="1.2">
			<desc>
				Configure sta connect parameters
			</desc>
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>

		<include prefix="1.3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />


		<step no="2.9">
			<desc>
				-Show laptop1's dns info
			</desc>
			<log-file>sta1.dns.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "cat /var/lib/dhclient/dhclient.leases"
			</ssh>
		</step>

		<step no="2.10">
			<desc>
				-Get laptop1's dns IP
			</desc>
			<setvar name="sta1.dns.ip">
				awk '/option domain-name-servers/ {print $3}' ${log.dir}/sta1.dns.log | awk 'NR==1' | sed 's/;//'
			</setvar>
		</step>

		<include prefix="3.1.0" file="subs/get_ap_ip_mac.xml" rargs="ap1" />

		<step no="3.1">
			<desc>
				-Open alg debug switch and clear log buffer mac/ip session
			</desc>
			<ssh target="ap1">
				-v "_debug fed alg_dns_info"
				-v "_debug fed alg_dns_pkt"
				-v "clear log buffered"
			</ssh>
		</step>

		<step no="3.2">
			<desc>
				-Laptop send DNS request packet to dns server
			</desc>
			<ssh target="sta1">
				-v "ping hztb-ip2 -c 1"
			</ssh>
		</step>

		<step no="3.3">
			<desc>
				-Check log if the DNS packets get to ALG
			</desc>
			<log-file>step3.3_DNS_request_log.log</log-file>
			<ssh target="ap1">
				-v "show logging buffered"
			</ssh>
			<no-error-check />
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p ".*\[fed_alg_dns_pkt\]: Received packet.*src ip:${sta1.tif.ip}.*dst ip:${sta1.dns.ip}.*dst port:53, protocol:17" -f ${log.dir}/${log.file}</log-match> -->
		</step>

		<step no="3.4">
			<desc>
				-Clear mac-sessions
			</desc>
			<ssh target="ap1">
				-v "clear forwarding-engine mac-sessions"
			</ssh>
		</step>

		<step no="3.5">
			<desc>
				-Get the ALG cookie id
			</desc>
			<setvar name="ap1.macalg.cookie.id">
				${bin.dir}/getbyrexp.py -p ".*\[fed_alg_dns_pkt\].*cookie:(\d+),.*src ip:${sta1.tif.ip}.*dst ip:${sta1.dns.ip}.*dst port:53, protocol:17" -t str -f ${log.dir}/step3.3_DNS_request_log.log | awk -F',' '{ print $NF }'
			</setvar>
		</step>

		<step no="3.6">
			<desc>
				-Check log if corresponding dns packet is removed from alg
			</desc>
			<log-file>step3.6_DNS_alg_remove_log.log</log-file>
			<ssh target="ap1">
				-v "show logging buffered"
			</ssh>
			<no-error-check />
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p ".*\[fed_alg_dns_info\]: Delete the cookie\(${ap1.macalg.cookie.id}\)" -c 1 -f ${log.dir}/${log.file}</log-match> -->
		</step>

		<step no="4.1">
			<desc>
				-clear mac/ip sessions and log buffer
			</desc>
			<ssh target="ap1">
				-v "clear forwarding-engine ip-sessions"
				-v "clear forwarding-engine mac-sessions"
				-v "clear log buffered"
			</ssh>
		</step>

		<step no="4.2">
			<desc>
				-Laptop send DNS request packet to dns server
			</desc>
			<ssh target="sta1">
				-v "ping hztb-ip2 -c 1"
			</ssh>
		</step>

		<step no="4.3">
			<desc>
				-Check log if the DNS packets get to ALG
			</desc>
			<log-file>step4.3_DNS_request_log.log</log-file>
			<ssh target="ap1">
				-v "show logging buffered"
			</ssh>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p ".*\[fed_alg_dns_pkt\]: Received packet.*src ip:${sta1.tif.ip}.*dst ip:${sta1.dns.ip}.*dst port:53, protocol:17" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.4">
			<desc>
				-Get the ALG cookie id
			</desc>
			<setvar name="ap1.ipalg.cookie.id">
				${bin.dir}/getbyrexp.py -p ".*\[fed_alg_dns_pkt\].*cookie:(\d+),.*src ip:${sta1.tif.ip}.*dst ip:${sta1.dns.ip}.*dst port:53, protocol:17" -t str -f ${log.dir}/step4.3_DNS_request_log.log | awk -F',' '{ print $NF }'
			</setvar>
		</step>

		<step no="4.5">
			<desc>
				-Clear ip-sessions
			</desc>
			<ssh target="ap1">
				-v "clear forwarding-engine ip-sessions"
			</ssh>
		</step>

		<step no="4.6">
			<desc>
				-Check log if corresponding dns packet is removed from alg
			</desc>
			<log-file>step3.6_DNS_alg_remove_log.log</log-file>
			<ssh target="ap1">
				-v "show logging buffered"
			</ssh>
			<no-error-check />
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p ".*\[fed_alg_dns_info\]: Delete the cookie\(${ap1.ipalg.cookie.id}\)" -c 1 -f ${log.dir}/${log.file}</log-match> -->
		</step>

	</stage>

</testcase>
