<testcase>
	<brief>Recover mechanism: AP losses connections, access console SSID be enabled, connections recover, check access console SSID</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		TOPO:
		AP1------SW------DHCP server

		Description:
		Recover mechanism: AP losses connections, access console SSID be enabled, connections recover, check access console SSID

		Pre-condition:
		Login AP1 via console
		Interface wifi1 with access mode
		Access console with auto mode and track action enable-access-console and track ip be set

		Test procedure:
		1. Shutdown interface eth0(11n box, only eth0 connect to switch), or shutdown port in switch which connect to eth0(a/b/g box )
		2. Check track result by show track xxx
		3. Check access console state by show access console _
		4. Up interface eth0
		5. Check track result by show track xxx
		6. Check access console state by show access console _

		Expect result:
		1. Show interface can see eth0 with state “D”
		2. Track result: targets unreachable
		3. Access console with running state
		4. Show interface can see eth0 with state “U”
		5. Track result: targets reachable
		6. Access console with monitoring state

	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>

		<step no="1">
			<desc>Set track config for AP1 via console</desc>
			<console target="ap1" timeout="60">
				-v "track ${tb.name} enable "
				-v "track ${tb.name} action enable-access-console"
				-v "track ${tb.name} default-gateway"
				-v "save config"
			</console>
		</step>

		<step no="2" delay="30">
			<desc>Check track result on AP1 via console</desc>
			<console target="ap1" timeout="60">
				-v "show track "
			</console>
			<log-match>-c -i "${tb.name} *Reachable"</log-match>
		</step>

		<step no="3">
		  <if>"${ap1.wifi1.existed}" =="true"</if>
			<desc>Set interface wifi1 to access mode by CLI on AP1 via console</desc>
			<console target="ap1" timeout="80">
				-v "interface wifi1 mode access"
				-v "save config"
			</console>
		</step>

		<step no="4">
			<desc>Shutdown interface eth0 and eth1 by CLI on AP1 via console</desc>
			<console target="ap1" timeout="80">
				-v "interface eth0 shutdown"
				-v "save config"
			</console>
		</step>
		
		<step no="4.a">
		  <if>"${ap1.eth1.existed}" =="true"</if>
			<desc>Shutdown interface eth0 and eth1 by CLI on AP1 via console</desc>
			<console target="ap1" timeout="80">
				-v "interface eth1 shutdown"
				-v "save config"
			</console>
		</step>

		<step no="5">
			<desc>Check interface eth0 on AP1</desc>
			<console target="ap1" timeout="60">
				-v "show interface eth0"
			</console>
			<log-match>-c -i "Operational state=down"</log-match>
		</step>

		<step no="6">
		  <if>"${ap1.eth1.existed}" =="true"</if>
			<desc>Check interface eth1 on AP1</desc>
			<console target="ap1" timeout="60">
				-v "show interface eth1"
			</console>
			<log-match>-c -i "Operational state=down"</log-match>
		</step>

		<step no="7" delay="30">
			<desc>Check track result by CLI via console on AP1</desc>
			<console target="ap1" timeout="60">
				-v "show track "
			</console>
			<log-match>-c -i "${tb.name} *Unreachable"</log-match>
		</step>

		<step no="8" delay="30">
			<desc>Check access console state of AP1</desc>
			<log-file>step8_show_acc_console.log</log-file>
			<console target="ap1" timeout="60">
				-v "show access-console _"
			</console>
			<log-match>-c -i "Current state: *running"</log-match>
		</step>

		<step no="9">
			<desc>Get access console SSID</desc>
			<setvar name="conn1.ssid">
				cat ${log.dir}/step8_show_acc_console.log | awk -F ':' '/Selected SSID/{split($2,a," "); print a[1]}'
			</setvar>
		</step>

		<step no="10">
			<desc>Show interface wifi0.1 of AP1</desc>
			<console target="ap1" timeout="60">
				-v "show interface wifi0.1"
			</console>
			<log-match>-c -i "SSID=\\\&quot;${conn1.ssid}\\\&quot;"</log-match>
		</step>

		<step no="11">
		  <if>"${ap1.wifi1.existed}" =="true"</if>
			<desc>Show interface wifi1.1 of AP1</desc>
			<console target="ap1" timeout="60">
				-v "show interface wifi1.1"
			</console>
			<log-match>-c -i "SSID=\\\&quot;${conn1.ssid}\\\&quot;"</log-match>
		</step>

		<step no="12">
			<desc>Up interface eth0 and eth1 by CLI on AP1 via console</desc>
			<console target="ap1" timeout="80">
				-v "no interface eth0 shutdown"
				-v "save config"
			</console>
		</step>

    <step no="12.a">
      <if>"${ap1.eth1.existed}" =="true"</if>
			<desc>Up interface eth0 and eth1 by CLI on AP1 via console</desc>
			<console target="ap1" timeout="80">
				-v "no interface eth1 shutdown"
				-v "save config"
			</console>
		</step>

		<step no="13" delay="60">
			<desc>Check track result by CLI via console on AP1</desc>
			<console target="ap1" timeout="60">
				-v "show track "
			</console>
			<log-match>-c -i "${tb.name} *Reachable"</log-match>
		</step>

		<step no="14" delay="30">
			<desc>Check access console state of AP1</desc>
			<console target="ap1" timeout="60">
				-v "show access-console _"
			</console>
			<log-match>-c -i "Current state: *monitoring"</log-match>
		</step>
	</stage>
</testcase>