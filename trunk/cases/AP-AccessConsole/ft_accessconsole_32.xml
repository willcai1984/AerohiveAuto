<testcase>
	<brief>Reboot AP, check access console SSID(loss connections)</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-condition:
		Login AP2 via console
		Track action and track ip be set in AP2 and save config
		AP2 loss backhaul connection and access console with running state
		Laptop connect to access console SSID
		Can login AP2 via SSH from laptop
		Reboot AP2 via console login

		Test procedure:
		1. Check track result by show track xxx
		2. Check access console state by show access console _

		Expect result:
		1. Track result: unreachable
		2. Access console with running state
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.proto" value="wpa-aes-psk" />
	<property name="conn1.psk" value="aerohive" />

	<stage>
		<step no="1">
			<desc>Set track config for AP1 via console</desc>
			<telnet target="ap1" timeout="60">
				-v "track ${tb.name} enable "
				-v "track ${tb.name} action enable-access-console"
				-v "track ${tb.name} ip ${mpc.tif.ip}"
			</telnet>
		</step>

		<step no="2" delay="30">
			<desc>Check track result on AP1 via console</desc>
			<log-file>step2_show_track.log</log-file>
			<telnet target="ap1" timeout="60">
				-v "show track ${tb.name}"
			</telnet>
			<log-match>-c -i "Tracking through Ethernet and wireless interfaces: Active - targets reachable"</log-match>
		</step>

		<step no="3">
			<desc>Set interface wifi1 to access mode by CLI on AP1 via console</desc>
			<if>"${ap1.wifi1.existed}" =="true"</if>
			<telnet target="ap1" timeout="80">
				-v "interface wifi1 mode access"
			</telnet>
		</step>

		<step no="3.1">
			<desc>Shutdown interface eth0 and eth1 by CLI on AP1 via console</desc>
			<console target="ap1" timeout="80">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<step no="4">
			<desc>Shutdown interface eth1</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<console target="ap1" timeout="60">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="5" delay="30" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>Check track result by CLI via console on AP1</desc>
			<log-file>step5_show_track_${loop_check.idx}.log</log-file>
			<console target="ap1" timeout="60">
				-v "show track"
			</console>
			<log-match>-c -i "${tb.name} *Unreachable"</log-match>
		</step>

		<step no="6" delay="30">
			<desc>Check access console state of AP1</desc>
			<log-file>step6_show_acc_console.log</log-file>
			<console target="ap1" timeout="60">
				-v "show access-console _"
			</console>
			<log-match>-c -i "Current state: *running"</log-match>
		</step>

		<step no="7">
			<desc>Get access console SSID</desc>
			<setvar name="conn1.ssid">
				cat ${log.dir}/step6_show_acc_console.log | awk -F ':' '/Selected SSID/{split($2,a," "); print a[1]}'
			</setvar>
		</step>

		<include prefix="8" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="9">
			<desc>ssh to AP1 from the laptop1</desc>
			<ssh target="sta1" prompt=".*#" timeout="120">
				-v "rm -rf /root/.ssh/known_hosts"
				-v 'echo "nohup clicfg.pl -i 22 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"${ap.def.prompt}\" -n -z ${job.id}.log -l /tmp/ -v \"show admin active\" &gt; null &amp;" > /tmp/tmp.sh'
				-v "sh /tmp/tmp.sh"
				-v ""
				-v ""
				-v ""
				-v "sleep 60"
				-v "tail /tmp/${job.id}.log"
				-v "rm -f /tmp/${job.id}.log"
			</ssh>
			<no-error-check />
		</step>

		<step no="10">
			<desc>reboot</desc>
			<console target="ap1" timeout="500">
				-v "save config"
				-v "reboot"
			</console>
		</step>

		<step no="11" delay="30" type="loop-check" loop-max-times="15" loop-interval="5">
			<desc>Check track result by show track xxx</desc>
			<log-file>step11_show_track_${loop_check.idx}.log</log-file>
			<console target="ap1" timeout="60">
				-v "show track ${tb.name}"
			</console>
			<log-match>-c -i "Destination Address: ${mpc.tif.ip}"</log-match>
		</step>

		<step no="12" delay="30">
			<desc>Check access console state of AP1</desc>
			<log-file>step12_show_acc_console.log</log-file>
			<console target="ap1" timeout="60">
				-v "show access-console _"
			</console>
			<log-match>-c -i "Current state: *running"</log-match>
		</step>

		<step no="13" delay="5">
			<desc>Show interface wifi0.1 of AP1</desc>
			<log-file>step13_show_int_wifi0.1</log-file>
			<console target="ap1" timeout="60">
				-v "show interface wifi0.1"
			</console>
			<log-match>-c -i "SSID=\\\&quot;${conn1.ssid}\\\&quot;"</log-match>
		</step>
	</stage>
</testcase>