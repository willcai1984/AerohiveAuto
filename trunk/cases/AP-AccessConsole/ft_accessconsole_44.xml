<testcase>
	<brief>The Fourty-four test case of Access Console</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-condition:
		Login AP1 via console:
		Config manage-ip(internal ip not be included)
		Set access console with auto mode
		Set track action enable-access-console and set track default-gateway
		Shutdown interface eth0

		Test procedure:
		1. Check track status
		2. Check access console state
		3. Use a laptop to connect to access console SSID
		4. Login AP via access console from laptop
		Expect result
		1. track status: unreachable
		2. Access console with running state
		3. Laptop connect to access console SSID and obtain a ip address
		4. Login AP successful
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.proto" value="wpa-aes-psk" />
	<property name="conn1.psk" value="aerohive" />

	<stage>
		<step no="0">
			<desc>Set interface wifi1 to access mode and set track config for AP1 via console to ${ap1.mgt0.ip}</desc>
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<telnet target="ap1" timeout="60">
				-v "interface wifi1 mode access"
			</telnet>
		</step>

		<step no="1">
			<desc>Set interface wifi1 to access mode and set track config for AP1 via console to ${ap1.mgt0.ip}</desc>
			<telnet target="ap1" timeout="60">
				-v "track ${tb.name} enable "
				-v "track ${tb.name} action enable-access-console"
				-v "track ${tb.name} ip ${ap1.mgt0.gw}"
			</telnet>
		</step>

		<step no="2">
			<desc>Shutdown interface eth1</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<telnet target="ap1" timeout="60">
				-v "interface eth1 shutdown"
			</telnet>
		</step>

		<step no="3">
			<desc>Set manage IP to AP1</desc>
			<console target="ap1" timeout="60">
				-v "admin manager-ip ${ap1.mgt0.ip}/32"
			</console>
		</step>

		<step no="3.1">
			<desc>Shutdown interface eth0</desc>
			<console target="ap1" timeout="60">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<step no="4" delay="30" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>After interface shutdown, check track result</desc>
			<log-file>step4_show_track_${loop_check.idx}.log</log-file>
			<console target="ap1" timeout="60">
				-v "show track"
			</console>
			<log-match>-c -i "${tb.name} *Unreachable"</log-match>
		</step>

		<step no="5" delay="30">
			<desc>Check access console state</desc>
			<log-file>step5_show_access_console.log</log-file>
			<console target="ap1" timeout="60">
				-v "show access-console _"
			</console>
			<log-match>-c -i "Current state: *running"</log-match>
		</step>

		<step no="6">
			<desc>Get access console SSID</desc>
			<setvar name="conn1.ssid">
				cat ${log.dir}/step5_show_access_console.log | awk -F ':' '/Selected SSID/{split($2,a," "); print a[1]}'
			</setvar>
		</step>

		<step no="7" delay="5">
			<desc>Show interface wifi0.1</desc>
			<log-file>step7_show_interface.log</log-file>
			<console target="ap1" timeout="60">
				-v "show interface wifi0.1"
			</console>
			<log-match>-c -i "SSID=\\\&quot;${conn1.ssid}\\\&quot;"</log-match>
		</step>

		<step no="8" delay="5">
			<desc>Show interface wifi1.1</desc>
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<log-file>step8_show_interface.log</log-file>
			<console target="ap1" timeout="60">
				-v "show interface wifi1.1"
			</console>
			<log-match>-c -i "SSID=\\\&quot;${conn1.ssid}\\\&quot;"</log-match>
		</step>
    

		<property name="conn1.proto" value="wpa-aes-psk" />
		<property name="conn1.psk" value="aerohive" />
		<include prefix="9" file="subs/sta_wifi_connect_${tb.os}_new.xml" obj-args="conn1, sta1, ap1" />


		<step no="10">
			<desc>ssh to AP1 from the laptop1</desc>
			<log-file>step10_sta_telnet_ap.log</log-file>
			<ssh target="sta1" prompt=".*#" timeout="150">
				-v "rm -rf /root/.ssh/known_hosts"
				-v 'echo "nohup clicfg.pl -i 23 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"${ap.def.prompt}\" -n -z ${job.id}.log -l /tmp/ -v \"show admin active\" &gt; null &amp;" > /tmp/tmp.sh'
				-v "sh /tmp/tmp.sh"
				-v ""
				-v ""
				-v ""
				-v "sleep 60"
				-v "tail /tmp/${job.id}.log"
				-v "rm -f /tmp/${job.id}.log"
			</ssh>
			<log-match>-c -i "${ap.def.user} *pts/0"</log-match>
			<no-error-check />
		</step>
	</stage>
</testcase>