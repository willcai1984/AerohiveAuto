<testcase>
	<brief>AP with default setting and can not obtain ip address from DHCP server, access console is enabled, then obtain ip address from DHCP server, verify if access console can recover</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		TOPO:
		AP1------SW------DHCP server
		Description:
		AP with default setting and can not obtain ip address from DHCP server, access console is enabled, then obtain ip address from DHCP server, verify if access console can recover
		Pre-condition:
		DHCP server is disabled
		After reset config, AP with default factory setting and cannâ€™t obtain ip address from DHCP server, access console is enabled and with running state

		Test procedure:
		1. Enable DHCP server, verify if AP can obtain ip address from DHCP server by show interface mgt0 dhcp client
		2. Verify access console state

		Expect result:
		1. AP obtain ip address from DHCP server
		2. Access console recover and with monitoring state


	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>winlin</tbtype>
  
  <stage>
		<if>"${ap1.eth1.existed}" == "true"</if>

		<include prefix="modify.eth1.vlan" file="subs/l2swcfg_port_vlan.xml" args="${ap1.eth1.swport}, ${tb.vlan7}, ${tb.vlan7}" />

	</stage>
	
  
	<stage>
	
	<include prefix="modify.eth0.vlan" file="subs/l2swcfg_port_vlan.xml" args="${ap1.eth0.swport}, ${tb.vlan7}, ${tb.vlan7}" />

		<step no="2" delay="30">
			<desc>Reset config of AP1</desc>
			<console target="ap1" timeout="80">
				-v "reset config"
			</console>
		</step>

		<step no="5">
			<desc>Show interface mgt0 dhcp client on AP1</desc>
			<console target="ap1" timeout="60">
				-v "show interface mgt0 dhcp client"
			</console>
			<log-match>-i "Get IP address 0.0.0.0 from the server 0.0.0.0" -c</log-match>
		</step>

		<step no="7">
			<desc>Check access console state on AP1</desc>
			<log-file>ac_state_7.log</log-file>
			<console target="ap1" timeout="60">
				-v "show access-console _"
			</console>
			<log-match>-i "Current state" -i "running" -c</log-match>
		</step>

		<step no="9">
			<desc>Get access console SSID of AP1</desc>
			<setvar name="ac.ssid">
				cat ${log.dir}/ac_state_7.log | awk -F ':' '/Selected SSID/{split($2,a," "); print a[1]}'
			</setvar>
		</step>
		
		<step no="10">
			<desc>Show interface wifi0.1 on AP1</desc>
			<console target="ap1" timeout="60">
				-v "show interface wifi0.1"
			</console>
			<log-match>-i "SSID=" -i "${ac.ssid}" -c</log-match>
		</step>
  </stage>


  <stage>
	  <if>"${ap1.eth1.existed}" == "true"</if>
	  <include prefix="recover.eth1.vlan" file="subs/l2swcfg_port_vlan.xml" args="${ap1.eth1.swport}, ${tb.nvlan}, ${tb.vlans}" />
	</stage>
		
	<stage>
		<include prefix="recover.eth0.vlan" file="subs/l2swcfg_port_vlan.xml" args="${ap1.eth0.swport}, ${tb.nvlan}, ${tb.vlans}" />

		
		<step no="13">
			<desc>Enable dhcp client to obtain ip address on AP1</desc>
			<console target="ap1" timeout="60">
				-v "interface mgt0 dhcp client"
			</console>
		</step>
		
		<step no="14" delay="30">
			<desc>Show interface mgt0 dhcp client on AP1</desc>
			<console target="ap1" timeout="60">
				-v "show interface mgt0 dhcp client"
			</console>
			<log-match>-n -i "Get IP address 0.0.0.0 from the server 0.0.0.0" -c</log-match>
		</step>
		
		<step no="16" delay="30">
			<desc>Check access console state on AP1</desc>
			<console target="ap1" timeout="60">
				-v "show access-console _"
			</console>
			<log-match>-i "Current state" -i "monitoring" -c</log-match>
		</step>

		<step no="18">
			<desc>Show interface wifi0.1 on AP1</desc>
			<console target="ap1" timeout="60">
				-v "show interface wifi0.1"
			</console>
			<log-match>-n -i "${ac.ssid}" -c</log-match>
		</step>
	</stage>
</testcase>