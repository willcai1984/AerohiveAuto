<testcase>
	<brief>The thirtieth test case of Access Console</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Description: Set access console to enable mode, kill dhcpd process, verify if process can recover, use a laptop to connect to access console SSID, verify if can obtain correct ip address
		Pre-condition
		Set access console with enable mode
		No-hide access console SSID
		Save config
		Test procedure
		1. Use a laptop to connect to access console SSID, verify if can obtain ip address
		2. Kill dhcpd process in shell, wait a moment, verify if process recover
		3. Verify if config exist
		4. Use a laptop connect to access console SSID, verify if can obtain correct ip address
		5. Reboot, use a laptop to connect to access console SSID ,verify if can obtain ip address
		Expect result
		1. Can obtain ip address
		2. Process recover
		3. Config exist
		4. Laptop can obtain ip address
		5. Laptop can obtain ip address
		Test result
		1. Can obtain ip address
		2. Process can recover
		3. Config exist
		4. Can obtain correct ip address
		5. Can obtain ip address
		TOPO:
		AP1------SW------DHCP server
		|
		AP2

	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>

	<property name="conn1.proto" value="wpa-aes-psk" />
	<property name="conn1.psk" value="aerohive" />

	<stage>
		<step no="1">
			<desc>Set access console with enable mode in AP1</desc>
			<telnet target="ap1">
				-v "access-console mode enable"
				-v "no access-console hide-ssid"
				-v "save config"
			</telnet>
		</step>

		<step no="2" delay="10">
			<desc>Check access console state of AP1</desc>
			<log-file>step2_show_acc_console.log</log-file>
			<telnet target="ap1" timeout="60">
				-v "show access-console _"
			</telnet>
			<log-match>-c -i "Current state: *running"</log-match>
		</step>

		<step no="3">
			<desc>Get access console SSID</desc>
			<setvar name="conn1.ssid">
				cat ${log.dir}/step2_show_acc_console.log | awk -F ':' '/Selected SSID/{split($2,a," "); print a[1]}'
			</setvar>
		</step>

		<step no="4.1">
			<desc>
				kill dhcpd
			</desc>
			<console target="ap1" prompt="AH.*#|$" slow="true">
				-b -sp "${ap1.shellpwd}"
				-v "_shell"
				-v ""
				-v ""
				-v "killall -9 dhcpd"
				-v "exit"
			</console>
		</step>

		<step no="4.2" delay="10">
			<desc>
				check if dhcpd recover
			</desc>
			<log-file>check_dhcpd_recover.log</log-file>
			<console target="ap1" prompt="AH.*#|$" slow="true">
				-b -sp "${ap1.shellpwd}"
				-v "_shell"
				-v ""
				-v ""
				-v "ps"
				-v "exit"
			</console>
			<log-match>-c -i "dhcpd"</log-match>
		</step>

		<step no="4.3">
			<desc>show run</desc>
			<log-file>step4_show_run.log</log-file>
			<telnet target="ap1" timeout="60">
				-v "show running-config"
			</telnet>
			<log-match>-c -i "access-console mode enable"</log-match>
		</step>

		<include prefix="5" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="6">
			<desc>show run</desc>
			<console target="ap1" timeout="60">
				-v "reboot"
			</console>
		</step>

		<step no="6.1">
			<desc>show run</desc>
			<log-file>step6_show_run.log</log-file>
			<console target="ap1" timeout="60">
				-v "show running-config"
			</console>
			<log-match>-c -i "access-console mode enable"</log-match>
		</step>

		<include prefix="7" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta2, ap1" />

	</stage>
</testcase>