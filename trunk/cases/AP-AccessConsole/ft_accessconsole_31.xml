<testcase>
	<brief>The thirty-one test case of Access Console</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Description: Set access console to enable mode, enable telnet, kill telnetd process, verify if process can recover, use a laptop to connect to access console SSID, verify if can telnet AP via access console
		Pre-condition
		Set access console with enable mode
		No-hide access console ssid
		Enable telnet of access console(default telnet is enabled now)
		Save config
		Use a laptop connect to access console SSID
		Test procedure
		1. Telnet to AP from connected laptop then exit
		2. Kill telnetd process in shell, wait a moment, verify if process recover, verify if config exist
		3. Telnet to AP from connected laptop
		4. Reboot, then use a laptop connect to access console SSID, telnet to AP from laptop
		Expect result
		1. Can telnet to AP
		2. Process recover? config exist
		3. Can telnet to AP
		4. Still works normal
		Test result
		1. Can telnet to AP
		2. This process not be monitored by PM, so it can’t recover, config exist
		3. Can’t telnet to AP
		4. After reboot, telnetd process be restarted, it works normal
		TOPO:
		AP1------SW------DHCP server
		|
		AP2

	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.proto" value="wpa-aes-psk" />
	<property name="conn1.psk" value="aerohive" />

	<stage>
		<step no="1">
			<desc>Set access console with enable mode in AP1</desc>
			<telnet target="ap1">
				-v "access-console mode enable"
				-v "no access-console hide-ssid"
				-v "save config"
			</telnet>
		</step>

		<step no="2" delay="10">
			<desc>Check access console state of AP1</desc>
			<log-file>step2_show_acc_console.log</log-file>
			<telnet target="ap1" timeout="60">
				-v "show access-console _"
			</telnet>
			<log-match>-c -i "Current state: *running"</log-match>
		</step>

		<step no="3">
			<desc>Get access console SSID</desc>
			<setvar name="conn1.ssid">
				cat ${log.dir}/step2_show_acc_console.log | awk -F ':' '/Selected SSID/{split($2,a," "); print a[1]}'
			</setvar>
		</step>

		<include prefix="4" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="5">
			<desc>Telnet to AP1 from the laptop1</desc>
			<log-file>sta_telnet_ap1.log</log-file>
			<ssh target="sta1" prompt=".*#" timeout="150">
				-v "rm -rf /root/.ssh/known_hosts"
				-v 'echo "nohup clicfg.pl -i 23 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"${ap.def.prompt}\" -n -z ${job.id}.log -l /tmp/ -v \"show admin active\" &gt; null &amp;" > /tmp/tmp.sh'
				-v "sh /tmp/tmp.sh"
				-v ""
				-v ""
				-v ""
				-v "sleep 60"
				-v "tail /tmp/${job.id}.log"
				-v "rm -f /tmp/${job.id}.log"
			</ssh>
			<log-match>-c -i "${ap.def.user} *pts/0"</log-match>
			<no-error-check />
		</step>

		<step no="6.1">
			<desc>
				kill telnetd
			</desc>
			<console target="ap1" prompt="AH.*#|$" slow="true">
				-b -sp "${ap1.shellpwd}"
				-v "_shell"
				-v ""
				-v ""
				-v "ps"
				-v "killall -9 telnetd"
				-v "exit"
			</console>
		</step>

		<step no="6.2" delay="20">
			<desc>
				check if telnetd recover
			</desc>
			<log-file>check_telnetd_recover.log</log-file>
			<console target="ap1" prompt="AH.*#|$" slow="true">
				-b -sp "${ap1.shellpwd}"
				-v "_shell"
				-v ""
				-v ""
				-v "ps"
				-v "exit"
			</console>
			<log-match>-n -c -i "telnetd"</log-match>
		</step>

		<step no="6.3">
			<desc>Telnet to AP1 from the laptop1</desc>
			<log-file>sta_telnet_ap2.log</log-file>
			<ssh target="sta1" prompt=".*#" timeout="150">
				-v "rm -rf /root/.ssh/known_hosts"
				-v 'echo "nohup clicfg.pl -i 23 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"${ap.def.prompt}\" -n -z ${job.id}.log -l /tmp/ -v \"show admin active\" &gt; null &amp;" > /tmp/tmp.sh'
				-v "sh /tmp/tmp.sh"
				-v ""
				-v ""
				-v ""
				-v "sleep 60"
				-v "tail /tmp/${job.id}.log"
				-v "rm -f /tmp/${job.id}.log"
			</ssh>
			<no-error-check />
			<log-match>-n -c -i "${ap.def.user} *pts/0"</log-match>
		</step>

		<step no="7">
			<desc>show run</desc>
			<console target="ap1" timeout="60">
				-v "reboot"
			</console>
		</step>

		<step no="7.1">
			<desc>delay for reboot</desc>
			<console target="ap1" timeout="60">
				-v ""
			</console>
		</step>

		<step no="8">
			<desc>
				check if telnetd recover
			</desc>
			<log-file>check_telnetd_recover2.log</log-file>
			<console target="ap1" prompt="AH.*#|$" slow="true">
				-b -sp "${ap1.shellpwd}"
				-v "_shell"
				-v ""
				-v ""
				-v "ps"
				-v "exit"
			</console>
			<log-match>-c -i "telnetd"</log-match>
		</step>

		<include prefix="9" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="10">
			<desc>Telnet to AP1 from the laptop1</desc>
			<log-file>sta_telnet_ap3.log</log-file>
			<ssh target="sta1" prompt=".*#" timeout="150">
				-v "rm -rf /root/.ssh/known_hosts"
				-v 'echo "nohup clicfg.pl -i 23 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"${ap.def.prompt}\" -n -z ${job.id}.log -l /tmp/ -v \"show admin active\" &gt; null &amp;" > /tmp/tmp.sh'
				-v "sh /tmp/tmp.sh"
				-v ""
				-v ""
				-v ""
				-v "sleep 60"
				-v "tail /tmp/${job.id}.log"
				-v "rm -f /tmp/${job.id}.log"
			</ssh>
			<log-match>-c -i "${ap.def.user} *pts/0"</log-match>
			<no-error-check />
		</step>
	</stage>
</testcase>