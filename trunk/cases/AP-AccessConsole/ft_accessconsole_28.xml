<testcase>
	<brief>The twenty-eight test case of Access Console</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Description: When bind 8 SSIDs to interface wifi0, after access console be enabled, verify if access console SSID be bound to interface wifi0
		Pre-condition
		AP120 or 110 or 340 or 320
		Create 8 SSID and bind them to interface wifi0
		Test procedure
		1.Set access console mode to enable, verify if access console SSID be bound to interface wifi0, check if generate any error message
		2.Use a laptop connect to access console SSID, verify if can obtain ip address
		Expect result
		1.Access console SSID be bound to interface wifi0, no error message
		2.Can obtain ip address
		Test result
		Before only can bind 8 SSIDs to interface wifi0, now can bind 16 SSIDs to interface wifi0, this case is for check if will generate error after bind 8 SSIDs to interface wifi0, then access console SSID be bind to interface wifi0

		TOPO:
		AP1------SW------DHCP server
		|
		AP2

	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>winlin</tbtype>

	<property name="conn1.proto" value="wpa-aes-psk" />
	<property name="conn1.psk" value="aerohive" />

	<stage>
		<step no="0">
			<desc>Create 8 SSID and bind them to interface wifi0 for AP1</desc>
			<console target="ap1" timeout="60">
				-v "ssid ${ssid.name}1"
				-v "ssid ${ssid.name}2"
				-v "ssid ${ssid.name}3"
				-v "ssid ${ssid.name}4"
				-v "ssid ${ssid.name}5"
				-v "ssid ${ssid.name}6"
				-v "ssid ${ssid.name}7"
				-v "ssid ${ssid.name}8"
				-v "ssid ${ssid.name}9"
				-v "ssid ${ssid.name}10"
				-v "ssid ${ssid.name}11"	
				-v "ssid ${ssid.name}12"
				-v "ssid ${ssid.name}13"
				-v "ssid ${ssid.name}14"	
				-v "ssid ${ssid.name}15"		
				-v "interface wifi0 ssid ${ssid.name}1"
				-v "interface wifi0 ssid ${ssid.name}2"
				-v "interface wifi0 ssid ${ssid.name}3"
				-v "interface wifi0 ssid ${ssid.name}4"
				-v "interface wifi0 ssid ${ssid.name}5"
				-v "interface wifi0 ssid ${ssid.name}6"
				-v "interface wifi0 ssid ${ssid.name}7"
				-v "interface wifi0 ssid ${ssid.name}8"
				-v "interface wifi0 ssid ${ssid.name}9"
				-v "interface wifi0 ssid ${ssid.name}10"
				-v "interface wifi0 ssid ${ssid.name}11"
				-v "interface wifi0 ssid ${ssid.name}12"
				-v "interface wifi0 ssid ${ssid.name}13"
				-v "interface wifi0 ssid ${ssid.name}14"
				-v "interface wifi0 ssid ${ssid.name}15"
			</console>
		</step>

		<step no="1">
			<desc>Set access console with enable mode in AP1</desc>
			<telnet target="ap1">
				-v "access-console mode enable"
			</telnet>
		</step>

		<step no="2" delay="10">
			<desc>Check access console state of AP1</desc>
			<log-file>step2_show_acc_console.log</log-file>
			<telnet target="ap1" timeout="60">
				-v "show access-console _"
			</telnet>
			<log-match>-c -i "Current state: *running"</log-match>
		</step>

		<step no="3">
			<desc>Get access console SSID</desc>
			<setvar name="conn1.ssid">
				cat ${log.dir}/step2_show_acc_console.log | awk -F ':' '/Selected SSID/{split($2,a," "); print a[1]}'
			</setvar>
		</step>

		<step no="4" delay="5">
			<desc>Show interface wifi0.17 of AP1</desc>
			<log-file>show_interface_wifi0.17.log</log-file>
			<telnet target="ap1" timeout="60">
				-v "show interface"
				-v "show interface wifi0.16"
			</telnet>
			<log-match>-c -i "SSID=\\\&quot;${conn1.ssid}\\\&quot;"</log-match>
		</step>

  
		<property name="conn1.proto" value="wpa-aes-psk" />
		<property name="conn1.psk" value="aerohive" />
		<include prefix="5" file="subs/sta_wifi_connect_${tb.os}_new.xml" obj-args="conn1, sta1, ap1" />
   

	</stage>
</testcase>