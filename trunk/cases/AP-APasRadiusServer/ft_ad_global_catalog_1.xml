<testcase>
	<brief>Global catalog support in single forest,basic function check</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<description>
		Topology to use
		Topology 1
		Description
		Global catalog support in single forest,basic function check
		Pre-condition
		-config a windows domain forest
		-here we have one example:
		-aerohive-hz.cn,qa.aerohive-hz.cn,qa2008.aerohive-hz.cn
		-enable global catalog on one of the domain controllers,here we choose the root domain,aerohive-hz
		-config a default domain on hive AP,we choose aerohive-hz.cn
		-binddn
		-use local radius on AP
		-enable global catalog domain on HIVE AP
		-set up a ssid with 802.1x auth using the local radius service
		-enable cache on local radius server
		Test procedure
		-client connects to the ssid,use account in default domain to do auth
		Expect result
		1.Check config is correct,specially pay attention to the global catalog state
		2.Check client can pass auth successfully by using the account in default domain
		3.Make sure we can use the account in other domain to do auth successfully
		4.Check attributes returned correctly
		5.Check the cache is correct
	</description>
	<stage>
		<include prefix="1" file="subs/ssid_and_so_create.xml" args="ap1, wpa-auto-8021x" />

		<step no="ex.hive">
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="2">
			<desc>set security-object parameters</desc>
			<telnet target="ap1">
				-v "security-object autoap security aaa radius primary ${ap1.forwards.ip}"
				-v "aaa radius-server local db-type active-directory primary server ${pub.ad1.ip}"
				-v "aaa radius-server local db-type active-directory primary domain ${pub.ad1.domain} fullname ${pub.ad1.realm} default"
				-v "aaa radius-server local db-type active-directory primary domain ${pub.ad1.domain} binddn ${pub.ad1.binddn} password ${pub.ad1.passwd}"
				-v "aaa radius-server local db-type active-directory primary login admin-user ${pub.ad1.admin} password ${pub.ad1.passwd}"
				-v "aaa radius-server local db-type active-directory primary global-catalog"
				-v "aaa radius-server local en"
				-v "save config"
			</telnet>
		</step>

		<include prefix="3" file="subs/ssid_bind_and_check.xml" args="ap1, wpa-auto-8021x" />

		<step no="ex.aaa-chk">
			<desc>show status of radius server</desc>
			<log-file>show_rad_srv.log</log-file>
			<telnet target="ap1">
				-v "show aaa radius-server"
			</telnet>
			<log-match>-e "Enabled" -i "Local RADIUS" -p 3 -c</log-match>
			<log-match>-e "yes" -i "Global catalog" -p 3 -c</log-match>
			<log-match>-e "primary active-directory (active)" -c</log-match>
		</step>

		<include prefix="4" file="subs/wpa_supplicant_start.xml" args="sta1" />
		<step no="4.1">
			<telnet target="ap1">
				-v "_debug radiusd excessive"
				-v "clear log all"
			</telnet>
		</step>
		<step no="5">
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-f ft_ad_global_catalog_1_pc.cfg
				-v "set_network 0 identity \"${pub.radius1.username}\""
				-v "set_network 0 anonymous_identity \"${pub.radius1.username}\""
				-v "set_network 0 password \"${pub.radius1.passwd}\""
				-v "select_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<include prefix="6" file="subs/chk_conn_in_sta.xml" args="sta1" />
		<step no="6.1">
			<log-file>log_on_ap.log</log-file>
			<telnet target="ap1" timeout="200">
				-v "show logging buffered" ;exit 0
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "RADIUS: The RADIUS server accepted user \'${pub.radius1.username}\' through the NAS at ${ap1.forwards.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "bind as ${pub.ad1.binddn} to ${pub.ad1.ip}:3268" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Bind was successful" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>


		<include prefix="7" file="subs/chk_sta_conn_in_ap.xml" args="ap1, sta1, wpa2-aes-8021x, WPA2/CCMP, wpa2-8021x, aes" />

	</stage>
</testcase>
