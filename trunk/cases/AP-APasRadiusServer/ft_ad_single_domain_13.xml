<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>check the cache should be saved after a successful radius auth</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-a local radius server must be configed first
		-AP's clock should be sync to the AD server via a ntp server
		-setup a ssid using wpa2-tkip-802.1x,radius server is local
		-enable the radius cache

		Test Procedure:
		-config a minimal AD
		-we should try the format :user,domain\user,user@fullname
		-client do machine auth and user auth fail,check the cache
		-client do machine auth and user auth success,check the cache
		-remote server is unreachable,client do auth
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn1.proto" value="wpa2-tkip-8021x" />
	<property name="conn1.username" value="${pub.ad2.name}\\${pub.radius1.username}" />
	<property name="conn1.passwd" value="${pub.radius1.passwd}" />
	<property name="conn2.ssid" value="${ssid.name}" />
	<property name="conn2.proto" value="wpa2-tkip-8021x" />
	<property name="conn2.username" value="${pub.ad2.name}\\${pub.radius1.username}123" />
	<property name="conn2.passwd" value="${pub.radius1.passwd}" />
	<property name="conn2.auth_negative_test" value="true" />
	<property name="conn2.dhcp_negative_test" value="true" />
	<property name="conn3.proto" value="wpa2-tkip-8021x" />
	<property name="conn3.username" value="${pub.ad2.name}\\${pub.radius1.username}" />
	<property name="conn3.passwd" value="${pub.radius1.passwd}" />
	<property name="conn3.eap_type" value="TTLS" />
	<property name="conn4.proto" value="wpa2-tkip-8021x" />
	<property name="conn4.username" value="${pub.ad2.name}\\${pub.radius1.username}" />
	<property name="conn4.passwd" value="${pub.radius1.passwd}" />
	<property name="conn4.eap_type" value="PEAP" />
	<property name="conn5.proto" value="wpa2-tkip-8021x" />
	<property name="conn5.username" value="${pub.ad2.name}\\${pub.radius1.username}" />
	<property name="conn5.passwd" value="${pub.radius1.passwd}" />
	<property name="conn5.eap_type" value="TLS" />

	<stage>
		<include prefix="1" file="subs/ssid_and_so_create.xml" args="ap1, wpa2-tkip-8021x" />

		<step no="ex.hive">
			<desc>set hive and bind to interface mgt0</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="2">
			<desc>config radius server with db-type ad</desc>
			<telnet target="ap1">
				-v "ntp server ${pub.ntp}"
				-v "security-object autoap security aaa radius primary ${ap1.forwards.ip}"
				-v "aaa radius-server local db-type active-directory primary server ${pub.ad2.ip}"
				-v "aaa radius-server local db-type active-directory primary domain ${pub.ad2.name} fullname ${pub.ad2.realm} default"
				-v "aaa radius-server local db-type active-directory primary domain ${pub.ad2.name} binddn ${pub.ad2.binddn} password ${pub.ad2.bindpwd}"
				-v "aaa radius-server local db-type active-directory primary login admin-user ${pub.ad2.admin} password ${pub.ad2.adminpwd}"
				-v "aaa radius-server local enable"
				-v "aaa radius-server local cache"
				-v "user-profile aaa vlan-id 1 attribute 1"
				-v "save config"
			</telnet>
		</step>

		<include prefix="3" file="subs/ssid_bind_and_check.xml" args="ap1, wpa2-tkip-8021x" />

		<step no="4">
			<desc>show status of radius server on AP1</desc>
			<log-file>show_rad_srv.log</log-file>
			<telnet target="ap1">
				-v "show aaa radius-server"
			</telnet>
			<log-match>-i "Enabled" -i "Local RADIUS" -p 3</log-match>
			<log-match>-i "primary active-directory (active)"</log-match>
			<log-match>-c -i "Cache Lifetime: *86400"</log-match>
		</step>

		<step no="4.1">
			<desc>show running-config</desc>
			<log-file>step4.1_show_run.log</log-file>
			<telnet target="ap1">
				-v "show running-config"
			</telnet>
		</step>

		<step no="4.2">
			<desc>open debug and clear log all</desc>
			<telnet target="ap1">
				-v "_debug radiusd excessive"
				-v "clear log all"
			</telnet>
		</step>

		<step no="4.3">
			<desc>show cache of radius server on AP1</desc>
			<log-file>step4.3_show_rad_srv.log</log-file>
			<telnet target="ap1">
				-v "show aaa radius-server cache"
			</telnet>
			<log-match>-n -c -i "${pub.ad2.name}\\\\\${pub.radius1.username}"</log-match>
		</step>


		<include prefix="5" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<include prefix="6" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step6_show_logging_buffered.log" />

		<step no="6.1">
			<desc>check id radius server uodate the cache</desc>
			<log-file>step6_show_logging_buffered.log</log-file>
			<log-match>-c -i "update RADIUS cache for user ${pub.ad2.name}\\\\\${pub.radius1.username}"</log-match>
		</step>

		<include prefix="7" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta2, ap1" />

		<step no="8">
			<desc>show radius server cache</desc>
			<log-file>step11_show_rad_srv.log</log-file>
			<telnet target="ap1">
				-v "show aaa radius-server cache"
			</telnet>
			<log-match>-c -i "${pub.ad2.name}\\\\\${pub.radius1.username}"</log-match>
		</step>

		<include prefix="9" file="subs/release_station_wifi.xml" obj-args="sta1" />

		<include prefix="10" file="subs/release_station_wifi.xml" obj-args="sta2" />

		<step no="11">
			<desc>set ip route in order to make ad server unreachable</desc>
			<telnet target="ap1">
				-v "ip route host ${pub.ad1.ip} gateway ${tb.unreach.ip1} "
			</telnet>
			<no-error-check />
		</step>

		<include prefix="12" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn3, sta1, ap1" />

		<include prefix="13" file="subs/chk_sta_conn_in_ap.xml" args="ap1, sta1, wpa2-tkip-8021x, WPA2/TKIP, wpa2-8021x, tkip" />

		<include prefix="14" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn4, sta2, ap1" />

		<include prefix="15" file="subs/chk_sta_conn_in_ap.xml" args="ap1, sta2, wpa2-tkip-8021x, WPA2/TKIP, wpa2-8021x, tkip" />

		<include prefix="16" file="subs/release_station_wifi.xml" obj-args="sta1" />

		<step no="17">
			<desc>set sta-auth parameters</desc>
			<telnet target="ap1">
				-v "save radius-server-key radius-server tftp://${pub.tftp1.tip}:certs/cacert.pem"
				-v "save radius-server-key radius-server tftp://${pub.tftp1.tip}:certs/server_cert.pem"
				-v "save radius-server-key radius-server tftp://${pub.tftp1.tip}:certs/server_key.pem"
				-v "aaa radius-server local sta-auth ca-cert cacert.pem server-cert server_cert.pem private-key server_key.pem"
				-v "clear log all"
			</telnet>
		</step>

		<step no="17.1">
			<desc>transport 3 certificate files to sta1</desc>
			<ssh target="sta1">
				-v "cd /tmp"
				-v "tftp ${pub.tftp1.ip} -c get certs/cacert.pem"
				-v "tftp ${pub.tftp1.ip} -c get certs/${pub.radius1.username}_cert.pem"
				-v "tftp ${pub.tftp1.ip} -c get certs/${pub.radius1.username}_key.pem"
			</ssh>
		</step>

		<include prefix="18" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="19">
			<desc>configure ssid property on sta1</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt WPA-EAP"
				-v "set_network 0 proto RSN"
				-v "set_network 0 eap TLS"
				-v "set_network 0 phase2 \"auth=MSCHAPV2\""
				-v "set_network 0 identity \"${pub.ad2.name}\\${pub.radius1.username}\""
				-v "set_network 0 ca_cert \"/tmp/cacert.pem\""
				-v "set_network 0 client_cert \"/tmp/${pub.radius1.username}_cert.pem\""
				-v "set_network 0 private_key \"/tmp/${pub.radius1.username}_key.pem\""
				-v "set_network 0 private_key_passwd \"${pub.radius1.passwd}\""
				-v "set_network 0 priority 5"
				-v "select_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<include prefix="20" file="subs/chk_conn_in_sta.xml" args="sta1" />

		<include prefix="21" file="subs/chk_sta_conn_in_ap.xml" args="ap1, sta1, wpa2-tkip-8021x, WPA2/TKIP, wpa2-8021x, tkip" />
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>delete certificate files</desc>
				<ssh target="sta1">
					-v "rm -f /tmp/cacert.pem"
					-v "rm -f /tmp/${pub.radius1.username}_cert.pem"
					-v "rm -f /tmp/${pub.radius1.username}_key.pem"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>