<testcase>
	<brief>a minimal local radius server,basic function check</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<description>
		Pre-condition
		-config a local radius server
		-use default cert
		-db type is local
		-create a user-group manual
		-create a user,add it to the group
		-bind the group with radius server
		-leave other parameters default
		-enable the rardius server
		-create a ssid with wpa-802.1x,apply this radius server
		Test procedure
		-client connects to ssid,check the debug info, ‘_de radius verbose’
		Expect result
		1. Check the radius server’s state, ‘sh aaa radius-server’ to make sure
		2. ‘sh mem d’ to check the proccess radiusd exists
		3. radius server will send the access-accept when passing auth,check the attribute
		returned is correct
		4. Client can passes auth successfully
	</description>

	<stage>
		<include prefix="1" file="subs/ssid_and_so_create.xml" args="ap1, wpa-auto-8021x" />

		<step no="ex.hive">
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="2">
			<desc>set security-object parameters</desc>
			<telnet target="ap1">
				-v "security-object autoap security aaa radius primary ${ap1.mgt0.ip}"
				-v "save config"
			</telnet>
		</step>

		<step no="ex.user-group">
			<desc>Set radius service for DUT1 </desc>
			<ssh target="ap1">
				-v "user-group autotest"
				-v "user ${pub.radius1.username}"
				-v "user ${pub.radius1.username} pass ${pub.radius1.passwd}"
				-v "user ${pub.radius1.username} group autotest"
				-v "aaa rad lo db local"
				-v "aaa radius-server local user-group autotest"
				-v "aaa radius-server lo enable"
				-v "save config" 
				-v "save config users"
			</ssh>
		</step>

		<include prefix="3" file="subs/ssid_bind_and_check.xml" args="ap1, wpa-auto-8021x" />

		<step no="ex.aaa-chk">
			<desc>show status of radius server on AP1</desc>
			<log-file>show_rad_srv.log</log-file>
			<telnet target="ap1">
				-v "show aaa radius-server"
			</telnet>
			<log-match>-e "Enabled" -i "Local RADIUS" -p 3 -c</log-match>
			<log-match>-e "Enabled" -i "local database:" -p 3 -c</log-match>
		</step>

		<include prefix="4" file="subs/wpa_supplicant_start.xml" args="sta1" />
		<step no="ex.debug">
			<desc>enable radius debug</desc>
			<console target="ap1">
				-v "_debug radiusd excessive"
				-v "clear log all"
			</console>
		</step>

		<step no="5">
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-f ft_local_radius_1_pc.cfg
				-v "set_network 0 identity \"${pub.radius1.username}\""
				-v "set_network 0 anonymous_identity \"${pub.radius1.username}\""
				-v "set_network 0 password \"${pub.radius1.passwd}\""
				-v "select_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<include prefix="6" file="subs/chk_conn_in_sta.xml" args="sta1" />
		<step no="6.1">
			<log-file>log_on_ap.log</log-file>
			<telnet target="ap1" timeout="200">
				-v "show logging buffered" ;exit 0
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "RADIUS: The RADIUS server accepted user \'${pub.radius1.username}\' through the NAS at ${ap1.mgt0.ip}" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		<include prefix="7" file="subs/chk_sta_conn_in_ap.xml" args="ap1, sta1, wpa2-aes-8021x, WPA2/CCMP, wpa2-8021x, aes" />

	</stage>
</testcase>
