<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check the ppp state for ${br1.br.wan.int1} and usbmodem, primary-wan mode</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		1) Config usbmodem mode as primary-wan
		2) ${br1.br.wan.int1} WAN is working as PPPoE
		3) The 3g service is activated and available
		4) Configured the dialup username/ passwd/ number if the modem if necessary
		5) Ping through usbmodem WAN works well
		AH-218cc0#sh ru pppoe
		interface ${br1.br.wan.int1} pppoe username wcai password aerohive
		interface ${br1.br.wan.int1} pppoe enable
		AH-8c66c0#sh ru
		interface ${br1.br.wan.int1} mode wan
		interface eth1 mode bridge-access
		interface eth1 mac-learning enable
		interface eth4 mode bridge-access
		interface eth4 mac-learning enable
		interface eth3 mode bridge-access
		interface eth3 mac-learning enable
		interface eth4 mode bridge-access
		interface eth4 mac-learning enable
		interface mgt0 ip 192.168.85.1 255.255.255.0
		no interface mgt0 dhcp client
		interface mgt0 dhcp-server options default-gateway 192.168.85.1
		interface mgt0 dhcp-server options dns1 192.168.85.1
		interface mgt0 dhcp-server ip-pool 192.168.85.10 192.168.85.99
		interface mgt0 dhcp-server
		enable
		interface mgt0 dns-server enable
		usbmodem mode
		primary-wan
		usbmodem modem-id huawei_e220 apn ${apn.name}
		track-wan use-for-wan-${br1.br.wan.int1}
		track-wan use-for-wan-${br1.br.wan.int1} ip 8.8.8.8
		track-wan use-for-wan-${br1.br.wan.int1} interval 5
		track-wan use-for-wan-${br1.br.wan.int1} interface ${br1.br.wan.int1}
		track-wan use-for-wan-${br1.br.wan.int1} enable
		track-wan use-for-wan-usbnet0
		track-wan use-for-wan-usbnet0 ip 8.8.8.8
		track-wan use-for-wan-usbnet0 interval 5
		track-wan use-for-wan-usbnet0 interface usb0
		track-wan use-for-wan-usbnet0 enable

		Test Procedure:
		1) Trigger failover to ${br1.br.wan.int1} WAN via unplug usb modem
		no usbm en
		2) Continue ping process and check the WAN and usb modem status
		3) Trigger failback to usbmodem WAN via plug usb modem back
		usbm en
		4) Repeat step 3)
	</description>
	<numofbr>1</numofbr>
	<numofcvg>0</numofcvg>
	<tbtype>linux</tbtype>
	<br-opt-modem>1</br-opt-modem>

	<property name="apn.name" value="3gnet" />
	<property name="des.addr" value="0.0.0.0" />
	<property name="gw.addr" value="192.168.10.254" />
	<property name="br1.vpc1.mask" value="255.255.255.0" />
	<stage>
		<step no="init_env">
			<desc>
			</desc>
			<telnet host="${br1.br.wan.ip}">
				-v "track-wan use-for-wan-${br1.br.wan.int1}"
				-v "track-wan use-for-wan-${br1.br.wan.int1} ip ${gw.addr}"
				-v "track-wan use-for-wan-${br1.br.wan.int1} interface ${br1.br.wan.int1}"
				-v "track-wan use-for-wan-${br1.br.wan.int1} enable"
				-v "track-wan use-for-wan-usbnet0"
				-v "track-wan use-for-wan-usbnet0 ip ${gw.addr}"
				-v "track-wan use-for-wan-usbnet0 interface usbnet0"
				-v "track-wan use-for-wan-usbnet0 enable"
			</telnet>
			<no-error-check />
		</step>

		<step no="0" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				show usbmodem info
			</desc>
			<log-file>step0_show_usbmodem_info_${loop_check.idx}.log</log-file>
			<telnet host="${br1.br.wan.ip}">
				-v "show usbmodem info"
			</telnet>
			<log-match>-c -i "Manufacturer"</log-match>
			<log-match>-c -i "Model:"</log-match>
		</step>

		<step no="0.1">
			<desc>
				show usbmodem info
			</desc>
			<log-file>step0.1_show_usbmodem_info.log</log-file>
			<telnet host="${br1.br.wan.ip}">
				-v "show usbmodem info"
			</telnet>
			<log-match>-c -i "Manufacturer"</log-match>
			<log-match>-c -i "Model:"</log-match>
		</step>

		<step no="0.2">
			<desc>
				get dns server tshark process
			</desc>
			<setvar name="modem.name_1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step0.1_show_usbmodem_info.log -p "Manufacturer:\s+(\w+)" -t str
			</setvar>
		</step>

		<step no="0.3">
			<desc>
				get dns server tshark process
			</desc>
			<setvar name="modem.name_2">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step0.1_show_usbmodem_info.log -p "Model:\s+(\S+)" -t str
			</setvar>
		</step>

		<step no="0.4">
			<desc>
				get dns server tshark process
			</desc>
			<setvar name="modem.name">
				echo "${modem.name_1}_${modem.name_2}" | tr "A-Z" "a-z"
			</setvar>
		</step>

		<step no="2.1">
			<desc>configure mgt0.1 with dhcp service enable</desc>
			<telnet host="${br1.br.wan.ip}">
				-v "vlan ${br1.vpc1.vlan}"
				-v "interface vlan ${br1.vpc1.vlan}"
				-v "interface vlan${br1.vpc1.vlan} ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options netmask ${br1.vpc1.mask}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server enable"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				Set one user-profile and define the attribute x
				Bind the security-object to the port.
			</desc>
			<telnet host="${br1.br.wan.ip}">
				-v "interface ${br1.br.lan.int1} switchport mode access"
				-v "interface ${br1.br.lan.int1} switchport access vlan ${br1.vlan1} "
				-v "interface ${br1.br.lan.int1} switchport user-profile-attribute 1"
				-v "user-profile fw qos-policy def-user-qos vlan-id ${br1.vlan1} attribute 1"
			</telnet>
		</step>

		<step no="2.3">
			<desc>
				${br1.br.wan.int1} WAN is working as PPPoE
				Config parameters for usbmodem (mode, apn)
			</desc>
			<console target="br1.br" timeout="180">
				-v "no track-wan use-for-wan-${br1.br.wan.int1} ip ${gw.addr}"
				-v "no track-wan use-for-wan-usbnet0 ip ${gw.addr}"
				-v "track-wan use-for-wan-${br1.br.wan.int1} default-gateway"
				-v "track-wan use-for-wan-usbnet0 default-gateway"
				-v "no interface ${br1.br.wan.int1} dhcp client"
				-v "interface ${br1.br.wan.int1} pppoe username ${pub.pppoe1.username} password ${pub.pppoe1.passwd}"
				-v "interface ${br1.br.wan.int1} pppoe enable"
				-v "usbmodem mode primary-wan"
				-v "usbmodem modem-id ${modem.name} apn ${apn.name}"
				-v "usbmodem enable"
			</console>
		</step>

		<step no="3">
			<desc>
				get ip address
			</desc>
			<log-file>step3_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ifconfig ${br1.vpc1.tif.name} down"
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="3.1">
			<desc>get raw mac of vpc1</desc>
			<setvar name="br1.vpc1.tif.mac1">
				echo $(${bin.dir}/getbyrexp.py -p "HWaddr ([\da-fA-F:]+)" -f ${log.dir}/step3_ifconfig_vpc1_.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="3.2">
			<desc>get mac of br1.vpc1</desc>
			<setvar name="br1.vpc1.tif.mac">
				echo $(echo $(echo ${br1.vpc1.tif.mac1} | cut -d : -f1)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f2,3)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f4,5)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f6))
			</setvar>
		</step>

		<step no="3.3">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="4">
			<desc>
				Check the usbmodem status while WAN is ${br1.br.wan.int1} by default
			</desc>
			<log-file>step4_check_default_usbmodem.log</log-file>
			<console target="br1.br">
				-v "show usbmodem modem-id ${modem.name}"
			</console>
			<log-match>-c -i "Enabled: yes"</log-match>
			<log-match>-c -i "Mode: primary-wan"</log-match>
			<log-match>-c -i "APN: *${apn.name}"</log-match>
		</step>

		<step no="4.1" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>
				show interface ${br1.br.wan.int1} pppoe
			</desc>
			<log-file>step4.1_show_interface_pppoe_${loop_check.idx}.log</log-file>
			<console target="br1.br" timeout="300">
				-v "show interface ${br1.br.wan.int1} pppoe"
			</console>
			<log-match>-c -i "PPPoE status: enabled"</log-match>
			<log-match>-c -i "Connection status: connected"</log-match>
		</step>

		<step no="4.2" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>
				Check the usbmodem status
			</desc>
			<log-file>step4.2_check_usbmodem_status_${loop_check.idx}.log</log-file>
			<console target="br1.br" timeout="300">
				-v "show usbmodem status"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)PPP Interface Status:" -ps p "(?i)State: up" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.3">
			<desc>
				show wan interface
			</desc>
			<log-file>step4.3_show_wan_interface.log</log-file>
			<console target="br1.br">
				-v "show wan interface"
			</console>
			<!-- p "priority: 1" -->
			<log-match bin="${bin.dir}/searchblocks.py">-b "ifname: ppp1" -ps p "(?i)kifname: ppp1" p "is_wan: 1" p "is_default_wan: 0" -e "dft_ifmon_down_time" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "ifname: usbnet0" -ps p "(?i)kifname: ppp0" p "(?i)priority: 0" p "is_wan: 1" p "is_default_wan: 1" -e "dft_ifmon_down_time" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.4">
			<desc>
				show wan failover
			</desc>
			<log-file>step4.4_show_wan_failover.log</log-file>
			<console target="br1.br">
				-v "show wan failover"
			</console>
			<log-match>-c -i "curr_state: CONNECTED"</log-match>
		</step>

		<step no="4.5">
			<desc>
				show l3 interface
			</desc>
			<log-file>step4.5_show_l3_interface.log</log-file>
			<console target="br1.br">
				-v "show l3 interface"
			</console>
			<log-match>-c -p 1 -i "${br1.br.wan.int1}" -p 3 -i "wan" -p 6 -i "U"</log-match>
			<log-match>-c -p 1 -i "ppp1" -p 3 -i "wan" -p 6 -i "U"</log-match>
			<log-match>-c -p 1 -i "ppp0" -p 3 -i "wan" -p 6 -i "U"</log-match>
		</step>

		<step no="4.6">
			<desc>
				show ip route
			</desc>
			<log-file>step4.6_show_ip_route.log</log-file>
			<console target="br1.br">
				-v "show ip route"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "${des.addr}" p "1" p "ppp1" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "${des.addr}" p "0" p "ppp0" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.7" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				vpc ping dns
			</desc>
			<log-file>step4.7_vpc_ping_dns_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${pub.dns1.ip}" -i "ttl="</log-match>
		</step>

		<step no="5">
			<desc>
				no usbmodem enable
			</desc>
			<console target="br1.br">
				-v "no usbmodem enable"
			</console>
		</step>

		<step no="6.1" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>
				show interface ${br1.br.wan.int1} pppoe
			</desc>
			<log-file>step6.1_show_interface_pppoe_${loop_check.idx}.log</log-file>
			<console target="br1.br" timeout="300">
				-v "show interface ${br1.br.wan.int1} pppoe"
			</console>
			<log-match>-c -i "PPPoE status: enabled"</log-match>
			<log-match>-c -i "Connection status: connected"</log-match>
		</step>

		<step no="6.2" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>
				Check the usbmodem status
			</desc>
			<log-file>step6.2_check_usbmodem_status_${loop_check.idx}.log</log-file>
			<console target="br1.br" timeout="300">
				-v "show usbmodem status"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)PPP Interface Status:" -ps p "(?i)NONE" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6.3">
			<desc>
				show wan interface
			</desc>
			<log-file>step6.3_show_wan_interface.log</log-file>
			<console target="br1.br">
				-v "show wan interface"
			</console>
			<!-- p "priority: 1" -->
			<log-match bin="${bin.dir}/searchblocks.py">-b "ifname: ${br1.br.wan.int1}" -ps p "(?i)kifname: ppp1" p "is_wan: 1" p "is_default_wan: 1" -e "dft_ifmon_down_time" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "ifname: usbnet0" -ps p "(?i)kifname: ppp0" p "(?i)priority: 0" p "is_wan: 1" p "is_default_wan: 0" -e "dft_ifmon_down_time" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6.4">
			<desc>
				show wan failover
			</desc>
			<log-file>step6.4_show_wan_failover.log</log-file>
			<console target="br1.br">
				-v "show wan failover"
			</console>
			<log-match>-c -i "curr_state: FAILOVER"</log-match>
		</step>

		<step no="6.5">
			<desc>
				show l3 interface
			</desc>
			<log-file>step6.5_show_l3_interface.log</log-file>
			<console target="br1.br">
				-v "show l3 interface"
			</console>
			<log-match>-c -p 1 -i "${br1.br.wan.int1}" -p 3 -i "wan" -p 6 -i "U"</log-match>
			<log-match>-c -p 1 -i "ppp1" -p 3 -i "wan" -p 6 -i "U"</log-match>
		</step>

		<step no="6.6">
			<desc>
				show ip route
			</desc>
			<log-file>step6.6_show_ip_route.log</log-file>
			<console target="br1.br">
				-v "show ip route"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "${des.addr}" p "1" p "ppp1" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6.7" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				vpc ping dns
			</desc>
			<log-file>step6.7_vpc_ping_dns_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}" -i "ttl="</log-match>
		</step>

		<step no="7">
			<desc>
				usbmodem enable
			</desc>
			<console target="br1.br">
				-v "usbmodem enable"
			</console>
		</step>

		<step no="8.1" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>
				show interface ${br1.br.wan.int1} pppoe
			</desc>
			<log-file>step8.1_show_interface_pppoe_${loop_check.idx}.log</log-file>
			<console target="br1.br" timeout="300">
				-v "show interface ${br1.br.wan.int1} pppoe"
			</console>
			<log-match>-c -i "PPPoE status: enabled"</log-match>
			<log-match>-c -i "Connection status: connected"</log-match>
		</step>

		<step no="8.2" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>
				Check the usbmodem status
			</desc>
			<log-file>step8.2_check_usbmodem_status_${loop_check.idx}.log</log-file>
			<console target="br1.br" timeout="300">
				-v "show usbmodem status"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)PPP Interface Status:" -ps p "(?i)State: up" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="8.3">
			<desc>
				show wan interface
			</desc>
			<log-file>step8.3_show_wan_interface.log</log-file>
			<console target="br1.br">
				-v "show wan interface"
			</console>
			<!-- p "priority: 1" -->
			<log-match bin="${bin.dir}/searchblocks.py">-b "ifname: ppp1" -ps p "(?i)kifname: ppp1" p "is_wan: 1" p "is_default_wan: 0" -e "dft_ifmon_down_time" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "ifname: usbnet0" -ps p "(?i)kifname: ppp0" p "(?i)priority: 0" p "is_wan: 1" p "is_default_wan: 1" -e "dft_ifmon_down_time" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="8.4">
			<desc>
				show wan failover
			</desc>
			<log-file>step8.4_show_wan_failover.log</log-file>
			<console target="br1.br">
				-v "show wan failover"
			</console>
			<log-match>-c -i "curr_state: CONNECTED"</log-match>
		</step>

		<step no="8.5">
			<desc>
				show l3 interface
			</desc>
			<log-file>step8.5_show_l3_interface.log</log-file>
			<console target="br1.br">
				-v "show l3 interface"
			</console>
			<log-match>-c -p 1 -i "${br1.br.wan.int1}" -p 3 -i "wan" -p 6 -i "U"</log-match>
			<log-match>-c -p 1 -i "ppp1" -p 3 -i "wan" -p 6 -i "U"</log-match>
			<log-match>-c -p 1 -i "ppp0" -p 3 -i "wan" -p 6 -i "U"</log-match>
		</step>

		<step no="8.6">
			<desc>
				show ip route
			</desc>
			<log-file>step8.6_show_ip_route.log</log-file>
			<console target="br1.br">
				-v "show ip route"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "${des.addr}" p "1" p "ppp1" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "${des.addr}" p "0" p "ppp0" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="8.7" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				vpc ping dns
			</desc>
			<log-file>step8.7_vpc_ping_dns_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${pub.dns1.ip}" -i "ttl="</log-match>
		</step>
	</stage>
</testcase>
