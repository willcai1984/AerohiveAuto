<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>amrp of qos check</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
  
        add this cases for bug 34018
		Topology to use
		AP2-------AP1 ------ SW ------ Server


		Objective
		Amrp of qos check test.
		Pre-condition
		-AP1 and AP2 are in the same vlan
		-Laptop uses user-profile “FW”
		Test procedure
		1) Make sure AP1 and AP2 with same configures
		2) Change the radio power max on AP1
		“intface wifi[num] radio power 20”
		3)check amrp packet on ap1
		4) check amrp packet on ap2

		Expect result
		- amrp packet is qos=2
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<property name="ftp_test_file_local_dir" value="/tmp" />
	<stage>
		<step no="1.1">
			<desc>
				-Configure AP1 via console
			</desc>
			<console target="ap1">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${ap.def.passwd}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
				-v "interface wifi1 radio channel 161"

			</console>
		</step>

		<step no="1.2">
			<desc>
				-Show ap1's interface
			</desc>
			<log-file>step1.2_ap1_interface_info.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				-Gain ap1's eth0's mac address
			</desc>
			<setvar name="ap1_eth0_mac">
				${bin.dir}/getstring.pl -k "Eth0" -p 2 -f ${log.dir}/step1.2_ap1_interface_info.log
			</setvar>
		</step>
		<step no="1.4">
			<desc>
				-Gain ap1's wifi1's mac address
			</desc>
			<setvar name="ap1_wifi1.1_mac">
				${bin.dir}/getstring.pl -k "Wifi1.1" -p 2 -f ${log.dir}/step1.2_ap1_interface_info.log
			</setvar>
		</step>
		<step no="2.1">
			<desc>
				-Laptop1 has been associated with AP1 and assigned an ip addres
				-Create config file of wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "echo \"ctrl_interface=/var/run/wpa_supplicant\" > /tmp/wpa_supplicant.cfg"
				-v "ifconfig ${sta1.tif.name} down"
				-v "ifconfig ${sta1.tif.name} up"
			</ssh>
		</step>

		<step no="2.2" delay="5">
			<desc>
				-Start wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "killall wpa_supplicant"
				-v "wpa_supplicant -i ${sta1.tif.name} ${sta1.wpa_flag} -c /tmp/wpa_supplicant.cfg -B"
			</ssh>
		</step>

		<step no="2.3">
			<desc>
				-Laptop connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<step no="2.4" delay="10" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				-Check if the client was associated successfully
			</desc>
			<log-file>step2.3_wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="2.5">
			<desc>
				-Client gets IP by dhclient
			</desc>
			<ssh target="sta1">
				-v "dhclient ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="2.6" delay="10">
			<desc>
				-Ifconfig to show the ip address
			</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="2.7">
			<desc>
				-Get laptop1's ip
			</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.8">
			<desc>
				-Get laptop1's mac
			</desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -m -width | awk '{print tolower($0)}'
			</setvar>
		</step>

		<step no="3.1">
			<desc>
				-Configure ap2 via console
			</desc>
			<console target="ap2">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${ap.def.passwd}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
				-v "interface wifi1 radio channel 161"

			</console>
		</step>

		<step no="3.2">
			<desc>
				-Show ap2's interface
			</desc>
			<log-file>step3.2_ap1_interface_info.log</log-file>
			<telnet target="ap2">
				-v "show interface"
			</telnet>
		</step>

		<step no="3.3">
			<desc>
				-Gain ap2's eth0's mac address
			</desc>
			<setvar name="ap2_eth0_mac">
				${bin.dir}/getstring.pl -k "Eth0" -p 2 -f ${log.dir}/step3.2_ap1_interface_info.log
			</setvar>
		</step>
		<step no="3.3a">
			<desc>
				-Gain ap2's wifi1.1's mac address
			</desc>
			<setvar name="ap2_wifi1.1_mac">
				${bin.dir}/getstring.pl -k "Wifi1.1" -p 2 -f ${log.dir}/step3.2_ap1_interface_info.log
			</setvar>
		</step>
		<step no="3.4" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				-Check amrp neighbor status on ap1
			</desc>
			<log-file>step.3.4_amrp_neighbor_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show amrp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2_wifi1.1_mac}\s+${ap2.mgt0.ip}\s+TWO-WAY" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.5" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				-Check amrp neighbor status on ap2
			</desc>
			<log-file>step.3.5_amrp_neighbor_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show amrp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap1_wifi1.1_mac}\s+${ap1.mgt0.ip}\s+TWO-WAY" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.1">
			<desc>
				-Confirm station state on ap1
			</desc>
			<log-file>step.ap1.roaming.ap2.1_show_station.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-e "${sta1.tif.ip}"</log-match>
		</step>

		<step no="ap1.amrp.debug">
			<desc>
				-Open debug switch on ap1 and clear log buffer
			</desc>
			<telnet target="ap1">
				-v "_debug amrp wifi basic"
				-v "_ff id 1 src-mac ${ap1_wifi1.1_mac} b"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered "
			</telnet>
		</step>

		<step no="ap2.amrp.debug">
			<desc>
				-Open debug switch on ap2 and clear log buffer
			</desc>
			<telnet target="ap2">
				-v "_debug amrp wifi basic"
				-v "_ff id 1 src-mac ${ap2_wifi1.1_mac} b"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered "
			</telnet>
		</step>


		<step no="ap1.roaming.ap2.5.1" delay="10">
			<desc>
				-Look up log info on ap1
			</desc>
			<log-file>step.ap1.roaming.ap2.5.1_ap1_log.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchblocks.py"> -b "QoS: host pkt fwd\(wifi1.1\) qos=5 profile=0" -ps p "\(u\) wifi1.1 ${ap2_wifi1.1_mac}-&gt;${ap1_wifi1.1_mac} LLC\(ah-AMRP_WIFI_NDP\) \d+ bytes" -e "\(u\) wifi1.1 ${ap2_wifi1.1_mac}-&gt;${ap1_wifi1.1_mac} LLC\(ah-AMRP_WIFI_NDP\) \d+ bytes" -f ${log.dir}/${log.file}</log-match>

			<log-match bin="${bin.dir}/searchblocks.py"> -b "QoS: ingress pkt fwd\(wifi1.1\) profile=4096 qos=5" -ps p "\(i\) wifi1.1 ${ap2_wifi1.1_mac}-&gt;${ap1_wifi1.1_mac} LLC\(ah-AMRP_WIFI_NDP\) \d+ bytes" -e "\(i\) wifi1.1 ${ap2_wifi1.1_mac}-&gt;${ap1_wifi1.1_mac} LLC\(ah-AMRP_WIFI_NDP\) \d+ bytes" -f ${log.dir}/${log.file}</log-match>

			<log-match bin="${bin.dir}/searchblocks.py"> -b "QoS: pkt forwarded \(wifi1.1\) qos=5 profile=0, vid=\d+" -ps p "\(o\) wifi1.1 ${ap1_wifi1.1_mac}-&gt;${ap2_wifi1.1_mac} LLC\(ah-AMRP_WIFI_NDP\) \d+ bytes" -e "\(o\) wifi1.1 ${ap1_wifi1.1_mac}-&gt;${ap2_wifi1.1_mac} LLC\(ah-AMRP_WIFI_NDP\) \d+ bytes" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.5.2">
			<desc>
				-Look up log info on ap2
			</desc>
			<log-file>step.ap1.roaming.ap2.5.2_ap2_log.log</log-file>
			<telnet target="ap2">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchblocks.py"> -b "QoS: host pkt fwd\(wifi1.1\) qos=5 profile=0" -ps p "\(u\) wifi1.1 ${ap1_wifi1.1_mac}-&gt;${ap2_wifi1.1_mac} LLC\(ah-AMRP_WIFI_NDP\) \d+ bytes" -e "\(u\) wifi1.1 ${ap1_wifi1.1_mac}-&gt;${ap2_wifi1.1_mac} LLC\(ah-AMRP_WIFI_NDP\) \d+ bytes" -f ${log.dir}/${log.file}</log-match>

			<log-match bin="${bin.dir}/searchblocks.py"> -b "QoS: ingress pkt fwd\(wifi1.1\) profile=4096 qos=5" -ps p "\(i\) wifi1.1 ${ap1_wifi1.1_mac}-&gt;${ap2_wifi1.1_mac} LLC\(ah-AMRP_WIFI_NDP\) \d+ bytes" -e "\(i\) wifi1.1 ${ap1_wifi1.1_mac}-&gt;${ap2_wifi1.1_mac} LLC\(ah-AMRP_WIFI_NDP\) \d+ bytes" -f ${log.dir}/${log.file}</log-match>

			<log-match bin="${bin.dir}/searchblocks.py"> -b "QoS: pkt forwarded \(wifi1.1\) qos=5 profile=0, vid=\d+" -ps p "\(o\) wifi1.1 ${ap2_wifi1.1_mac}-&gt;${ap1_wifi1.1_mac} LLC\(ah-AMRP_WIFI_NDP\) \d+ bytes" -e "\(o\) wifi1.1 ${ap2_wifi1.1_mac}-&gt;${ap1_wifi1.1_mac} LLC\(ah-AMRP_WIFI_NDP\) \d+ bytes" -f ${log.dir}/${log.file}</log-match>
		</step>


	</stage>

</testcase>
	