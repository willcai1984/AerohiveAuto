<include>
	<step no="1">
		<desc>kill iperf on sta1</desc>
		<ssh target="sta1">
			-v "killall iperf"; sleep 4; exit 0;
		</ssh>
		<no-error-check />
	</step>

	<step no="2">
		<desc>remove nohup.out from iperf server sta1</desc>
		<ssh target="sta1">
			-v "rm -f /root/nohup.out"
			-v "ll -ls"; exit 0;
		</ssh>
		<no-error-check />
	</step>

	<step no="3">
		<desc>launch sta1 to start iperf server</desc>
		<log-file>iperf_server_sta1.log</log-file>
		<ssh target="sta1">
			-v "nohup iperf -s -u -p 65530 -fk -i 1 &amp;"
		</ssh>
		<no-error-check />
	</step>

	<step no="4">
		<desc>get iperf server's process id from step3's log</desc>
		<setvar name="iperf.sta1.pid">
			cat ${log.dir}/iperf_server_sta1.log | awk '/\[1\]/ {print $2}'
		</setvar>
	</step>

	<step no="5">
		<desc>launch sta1 to check iperf server started or not</desc>
		<log-file>iperf_check.log</log-file>
		<ssh target="sta1">
			-v "ps aux | grep iperf"
		</ssh>
		<no-error-check />
	</step>

	<step no="6">
		<desc>get iperf server's process id from ps checking of step5</desc>
		<setvar name="iperf.sta1.check.pid">
			cat ${log.dir}/iperf_check.log | awk '/iperf.+-s.+-u/ {print $2}'
		</setvar>
	</step>

	<step no="7">
		<desc>compare iperf.sta1.pid and iperf.sta1.check.pid</desc>
		<script>
		echo "${iperf.sta1.pid} != ${iperf.sta1.check.pid}"
		if [ "${iperf.sta1.pid}" != "${iperf.sta1.check.pid}" ]
		then
		exit 1
		fi
		</script>
	</step>

	<step no="8">
		<desc>launch mpc to generate traffic with related data rate</desc>
		<log-file>iperf_client_mpc.log</log-file>
		<script delay="10" timeout="30">
			iperf -c ${sta1.tif.ip} -u -p 65530 -b 10M -t 10 -i 1 -P 10 -fk > ${log.dir}/${log.file}
		</script>
		<no-error-check />
	</step>
</include>
