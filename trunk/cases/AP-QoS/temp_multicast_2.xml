<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Broadcast from laptop1 on same ssid.</brief>
	<priority>high</priority>
	<automated>yes</automated>
	<description>
		Description:
		Broadcast from laptop1 on same ssid.

		Pre-condition:
		-laptop1 and laptop2 connect with ssid1 on AP, pass authentication
		-PC connect with switch
		-all laptops and PC are in same vlan
		-inter-station-traffic is disabled on ssid1.
		- no forwarding-engine proxy-arp enable
		Laptop1(001d:e02a:be91) Laptop2(0014:a5b1:0e9c) PC(0019:e002:2be0)

		Test procedure:
		-disable IST on AP
		AH-000120#no ssid ssid1 inter-station-traffic
		-laptop1 sends broadcast(laptop1 ping a unexist ip address with the same subnet) R1
		-PC send broadcast (PC ping a unexist ip address with the same subnet) R2

		Expect result:
		R1: The broadcast should not flood on access interface, only flood to backhaul interfaces.
		R2: The broadcast should flood on all interfaces.
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<!-- <numofbpc>1</numofbpc> -->
	<tbtype>linux</tbtype>

	<property name="conn1.ssid" value="${job.sid}-1" />

	<stage>
		<if>"${tb.bridge_support}" == "true" &amp;&amp; "${ap1.eth1.existed}" =="true"</if>

		<include prefix="0" file="subs/bpc_init.xml" obj-args="ap1.bpc" />

		<step no="1">
			<desc>
				AP config ssid1
			</desc>
			<telnet target="ap1">
				-v "ssid ${conn1.ssid}"
				-v "security-object ${conn1.ssid}"
				-v "ssid ${conn1.ssid} security-object ${conn1.ssid}"
				-v "security-object ${conn1.ssid} default-user-profile-attr 1"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "interface eth1 mac-learning enable"
				-v "user-profile ${conn1.ssid} qos-policy def-user-qos vlan-id 1 attribute 1"
			</telnet>
		</step>

		<include prefix="2" file="subs/bpc_wired_connect_${tb.os}.xml" obj-args="ap1.bpc" />

		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />



		<step no="3">
			<desc>
				open port 65528 for tcp,and station1 as service
			</desc>
			<log-file>step3_openport_staion1_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "killall iperf"
				-v "touch /tmp${log.dir}/step3_openport-${job.id}.log "
				-v "nohup iperf -s -p 65528 &amp; > /tmp${log.dir}/step3_openport-${job.id}.log 2>&amp;1 &amp;"

			</ssh>
		</step>



		<step no="9">
			<desc>config 1000Kbps value of rate-limit on ap</desc>
			<ssh target="ap1">
				-v "interface eth1 rate-limit unicast enable"
				-v "interface eth1 rate-limit unicast 1000"
			</ssh>
		</step>

		<step no="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>check staf ping status</desc>
			<script>
				ping ${ap1.bpc.tif.ip} -c 4
			</script>
			<log-match> -c -i "${ap1.bpc.tif.ip}" -i "ttl"  </log-match>
		</step>
	</stage>
	<stage loop-values="1..5" var-name="country_code" loop-passed-break="true">
		<step no="11" delay="10">
			<desc>start iperf client in tb.server1</desc>
			<log-file>win7_iperf_client.log</log-file>
			<ssh host="${ap1.bpc.mif.ip}" timeout="120">
				-v "killall iperf"
				-v "ping ${sta1.tif.ip} -c 4"
				-v "iperf -c${sta1.tif.ip} -t 20 -f m -i 4 -p 65528 -P 1 > /tmp/iprtf-${job.id}.log 2>&amp;1 &amp;"
			</ssh>
		</step>


		<step no="11.a" delay="30">
			<desc>check</desc>
			<log-file>win11.a_iperf_service.log</log-file>
			<ssh host="${ap1.bpc.mif.ip}" timeout="120">
				-v "cat /tmp/iprtf-${job.id}.log "
			</ssh>

		</step>




		<step no="11.b">
			<desc>check ,get aa value,the rate-limit unicast is 1000Kbps </desc>
			<setvar name="aa">
				echo $(grep 8.0-12.0 ${log.dir}/win11.a_iperf_service.log | awk '{print $7}')
			</setvar>
		</step>

		<step no="11.c">
			<desc> ratioffest  </desc>
			<script>
				echo ${aa} 1 | awk '{
				if ( $1 &gt; $2 )
				{exit(0);}
				else
				{exit(1);}
				}'
			</script>
		</step>

		<step no="11.d">
			<desc> ratioffest  </desc>
			<script>
				echo ${aa} 1.2 | awk '{
				if ( $1 &lt; $2 )
				{exit(0);}
				else
				{exit(1);}
				}'
			</script>
		</step>
	</stage>


	<stage>
		<step no="12">
			<desc>config 5000 Kbps value of rate-limit on ap</desc>
			<ssh target="ap1">

				-v "interface eth1 rate-limit unicast 2000"
			</ssh>
		</step>



		<step no="13" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>check staf ping status</desc>
			<script>
				ping ${ap1.bpc.tif.ip} -c 4
			</script>
			<log-match> -c -i "${ap1.bpc.tif.ip}" -i "ttl"  </log-match>
		</step>
	</stage>
	<stage loop-values="1..5" var-name="country_code" loop-passed-break="true">
		<step no="14" delay="10">
			<desc>start iperf client in tb.server1</desc>
			<log-file>win14_iperf_client.log</log-file>
			<ssh host="${ap1.bpc.mif.ip}" timeout="120">
				-v "killall iperf"
				-v "ping ${sta1.tif.ip} -c 4"
				-v "iperf -c${sta1.tif.ip} -t 20 -i 4 -p 65528 -P 1 > /tmp/iprtf-${job.id}.log 2>&amp;1 &amp;"
			</ssh>
		</step>


		<step no="14.a" delay="30">
			<desc>check</desc>
			<log-file>win14.a_iperf_service.log</log-file>
			<ssh host="${ap1.bpc.mif.ip}" timeout="120">
				-v "cat /tmp/iprtf-${job.id}.log "
			</ssh>

		</step>




		<step no="14.b">
			<desc>check ,get aa value, rate-limit unicast 5000</desc>
			<setvar name="aa">
				echo $(grep 8.0-12.0 ${log.dir}/win14.a_iperf_service.log | awk '{print $7}')
			</setvar>
		</step>

		<step no="14.c">
			<desc> ratioffest  </desc>
			<script>
				echo ${aa} 2 | awk '{
				if ( $1 &gt; $2 )
				{exit(0);}
				else
				{exit(1);}
				}'
			</script>
		</step>

		<step no="14.d">
			<desc> ratioffest  </desc>
			<script>
				echo ${aa} 3 | awk '{
				if ( $1 &lt; $2 )
				{exit(0);}
				else
				{exit(1);}
				}'
			</script>
		</step>
	</stage>
	<stage>
		<step no="15">
			<desc>kill iperf client</desc>
			<ssh host="${ap1.bpc.mif.ip}" timeout="120">
				-v "killall iperf"

			</ssh>
		</step>
		<step no="16">
			<desc>kill iperf server in cvg.vpc1</desc>
			<ssh host="${sta1.mif.ip}">
				-v "killall iperf"
			</ssh>
		</step>

	</stage>

	<post-process>
		<stage>
			<step no="1">
				<desc>kill iperf client</desc>
				<ssh host="${ap1.bpc.mif.ip}" timeout="120">
					-v "killall iperf"

				</ssh>
			</step>
			<step no="2">
				<desc>kill iperf server in cvg.vpc1</desc>
				<ssh host="${sta1.mif.ip}">
					-v "killall iperf"
				</ssh>
			</step>


			<include prefix="sta1.rbt" file="subs/sta_reboot_${tb.os}.xml" obj-args="sta1" />


		</stage>
		<include prefix="def_post" file="include/default_post_process.xml" />
		<include prefix="sta1.rbt" file="subs/sta_reboot_${tb.os}.xml" obj-args="sta1" />
		<include prefix="ap1.bpc.rbt" file="subs/sta_reboot_${tb.os}.xml" obj-args="ap1.bpc" />
	</post-process>
</testcase>