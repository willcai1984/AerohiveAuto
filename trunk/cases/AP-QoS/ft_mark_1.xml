<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Test marking, aerohive class0 mapping to 8021p(0) Ethernet interface Test topology Top1 Device Configuration Ssid DeathKnight Interface wifi0 ssid DeathKnight qos marker-profile 8021p 8021p interface eth0 qos-marker 8021p qos marker-map 8021p 0 0</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:
		1. create ssid ${ssid.name}, binding to wifi0;
		2. set qos classifier-profile, and apply it on eth0
		-v "qos marker-profile 8021p 8021p"
		-v "interface eth0 qos-marker 8021p"
		-v "qos marker-map 8021p 0 0"

		Test Procedure:
		1. sta1 connects to ssid ${ssid.name}, and obtained ip
		2. as ping packet incoming from sta1, is classified on "def-ap-cls",in order to mark the incoming packet to Aerohive qos class "0",so set with:
		-v "qos classifier-map service icmp qos 0"

		3. set debug filter
		-v "_ff id 1 src-mac sta1â€™s mac bidirectional"
		-v "_kdebug fe basic"
		-v "_kdebug fe detail"
		-v "_kdebug eth vlan"
		-v "_kdebug qos mark"
		4. sta1 ping master pc, check qos marker after "show log buff"

	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<stage>
		<step no="1">
			<desc>create ssid, binding wifi0</desc>
			<log-file>ssid_wifi0.log</log-file>
			<console target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</console>
		</step>

		<step no="2">
			<desc>create a wpa_supplicant configuration file on Station</desc>
			<ssh target="sta1">
				-v "echo \"ctrl_interface=/var/run/wpa_supplicant\" > /tmp/wpa_supplicant.cfg"
				-v "ifconfig ${sta1.tif.name} down"
			</ssh>
		</step>

		<step no="3">
			<desc>kill the wpa_supplicant on client side</desc>
			<ssh target="sta1">
				-v "ifconfig ${sta1.tif.name} up"
				-v "killall wpa_supplicant";
			</ssh>
		</step>

		<step no="4" delay="5">
			<desc>start the wpa_supplicant on client side</desc>
			<ssh target="sta1">
				-v "wpa_supplicant -i ${sta1.tif.name} ${sta1.wpa_flag} -c /tmp/wpa_supplicant.cfg -B"
			</ssh>
		</step>

		<step no="5">
			<desc>config the laptop to apply the ssid profile,then start to associate </desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<step no="6" delay="15" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>check if the client was associated successfully</desc>
			<log-file>wpa_stat_sta1_loop-check.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="7">
			<desc>client gets IP by dhclient</desc>
			<ssh target="sta1" slow="true">
				-v "dhclient ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="10">
			<desc>get wireless IP from remote linux host sta1</desc>
			<setvar name="sta1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="11">
			<desc>get mpc IP from remote linux host mpc</desc>
			<setvar name="mpc.tif.ip">
				${bin.dir}/getrmtip.pl -d ${mpc.mif.ip} -u ${mpc.user} -p ${mpc.passwd} -i ${mpc.tif.name} -nomask
			</setvar>
		</step>

		<step no="12">
			<desc>set qos maker, and user it on eth0</desc>
			<log-file>marker_8021p_eth0.log</log-file>
			<console target="ap1">
				-v "qos marker-profile 8021p 8021p"
				-v "interface eth0 qos-marker 8021p"
				-v "qos marker-map 8021p 0 0"
			</console>
		</step>

		<!-- incoming ping packet from wireless host sta1, is classified by service/dscp, so simplily set classifer-map on service can make the ping packet goes into aerohive qos class 0,otherwise the maker profile won't take effect of default -->
		<step no="13">
			<desc>set qos classifier-map on diffserv</desc>
			<console target="ap1">
				-v "qos classifier-map service icmp qos 0"
			</console>
		</step>

		<step no="14">
			<desc>show qos-classifer service, and check service icmp mapping to aerohive qos class 0</desc>
			<log-file>show_class_service.log</log-file>
			<console target="ap1">
				-v "show qos classifier-map service"
			</console>
			<log-match>-i "0" -i "icmp" -p 3</log-match>
		</step>


		<step no="15">
			<desc>set debug </desc>
			<log-file>qos_kdebug.log</log-file>
			<console target="ap1">
				-v "clear log buffered"
				-v "_ff id 1 src-ip ${sta1.tif.ip} protocol 1 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_kdebug qos mark"
			</console>
		</step>

		<step no="16">
			<desc>Sta1 ping master pc to check qos marker </desc>
			<log-file>sta1_ping_mc.log</log-file>
			<ssh target="sta1">
				-v "ping ${mpc.tif.ip} -c 5"
			</ssh>
		</step>

		<step no="17">
			<desc>show log buffered </desc>
			<log-file>mark_1_log_buffer.log</log-file>
			<console target="ap1">
				-v "show logging buffered"
			</console>
			<log-match>-i "${sta1.tif.ip}-&gt;${mpc.tif.ip}" -i "icmp-echo-req" -i "(o) eth0"</log-match>
			<log-match>-i "qos=0&lt;-&gt;0" -i "Marking 802.1p"</log-match>
		</step>
		<no-error-check />
	</stage>
</testcase>
