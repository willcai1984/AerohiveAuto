<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Test classification, Incoming pkt base on oui , action permit/log Ethernet interface Test topology Top1 Device Configuration Portal: ssid DeathKnight interface wifi0 ssid DeathKnight qos classifier-profile mac mac interface eth0 qos-classifer mac qos classifier-map mac 0016d4 qos 0 action permit qos classifier-map mac 0016d4 action log notice 0016d4 is STA1's oui</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		Test Procedure:

		portal:
		- Set "_kdebug qos classifi"on CLI
		- Set "_ff id 1 src-mac sta1's mac"
		- Set "_kdebug fe basic"
		- STA1generates traffic,then send to STA2.
		Expected output
		- Sniffering the traffic from STA1 incoming mac
		- look over kdebug message
		1970-01-02 07:50:57 debug [fe]: (i) eth0
		18.18.21.45-&gt;18.18.21.12(41) ttl(64) UDP 2843-&gt;10000 46
		bytes
		1970-01-02 07:50:57 debug [fe]: MAC session (id [5])
		found
		1970-01-02 07:50:57 debug [qos]: 001d:0f0a:0c28 -&gt;
		000f:b59c:8954 qos=0 action=5
		1970-01-02 07:50:57 debug [fe]: QoS: ingress pkt
		fwd(eth0) profile=0 qos=0
		1970-01-02 07:50:57 debug [fe]: wifi1.1 Tx
		0016:d432:9159 -&gt; 000f:b59c:8954 type 0x0800 60 bytes
		1970-01-02 07:50:57 debug [fe]: (o) wifi1.1
		18.18.21.45-&gt;18.18.21.12(41) ttl(64) UDP 2843-&gt;10000 60
		bytes
		1970-01-02 07:50:57 debug [fe]: QoS: pkt queued
		1970-01-02 07:50:57 debug [fe]: Tx:wifi1.1&gt;
		0016:d432:9159-&gt;000f:b59c:8954 profile idx=0 pkt_len=60
		q_len=0 QoS buf=0
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="test.filename" value="${job.id}" />

	<stage>
		<step no="create.ssid">
			<desc>
				create ssid
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<include prefix="pre1" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="pre2">
			<desc>
				Transfer a file to directory tftpboot in tftp server
			</desc>
			<ssh host="${tb.tftp}" prompt=">|.*#">
				-v "echo \"12345\" &gt; /var/lib/tftpboot/${test.filename}"
				-v "chmod 777 /var/lib/tftpboot/${tb.ftp.file3_small}"
			</ssh>
		</step>

		<step no="pre3">
			<desc>
				get sta mac
			</desc>
			<script>
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m | tr '[A-F]' '[a-f]' &gt; ${log.dir}/staoui.log
			</script>
		</step>

		<step no="pre4">
			<desc>get sta oui</desc>
			<setvar name="sta.oui">
				${bin.dir}/getbyrexp.py -p "(.*?:.*?:.*?):.*?:.*?:.*?" -f ${log.dir}/staoui.log -t str
			</setvar>
		</step>

		<step no="1">
			<desc>
				config qos
			</desc>
			<telnet target="ap1">
				-v "qos classifier-profile mac mac"
				-v "interface eth0 qos-classifier mac"
				-v "qos classifier-map oui ${sta.oui} qos 2 action permit"
				-v "qos classifier-map oui ${sta.oui} action log"
			</telnet>
		</step>

		<step no="2">
			<desc>set debug filter</desc>
			<telnet target="ap1">
				-v "clear log buffered"
				-v "_ff id 1 src-ip ${sta1.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_kdebug qos classify"
			</telnet>
		</step>

		<step no="3">
			<desc>
				sta send udp paket
			</desc>
			<ssh target="sta1">
				-v "tftp ${tb.tftp} -c get ${test.filename}"
			</ssh>
		</step>

		<step no="4" delay="30">
			<desc>show logging buffer to check debug</desc>
			<log-file>show_log_buffered.log</log-file>
			<telnet target="ap1" timeout="300">
				-v "show logging buffered"
			</telnet>
			<log-match>-c -i "QoS: pkt forwarded (eth0) qos=2 profile=0"</log-match>
			<log-match>-c -i "Classifier(wifi0.1:DSCP) DSCP=0" -i "qos=2"</log-match>
			<log-match>-c -i "QoS: pkt queued"</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(o\) wifi0.1 ${tb.tftp}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) UDP" -ps p "QoS: ingress pkt fwd\(eth0\) profile=\d+ qos=2" -e "\(i\) eth0 ${tb.tftp}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) UDP" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(o\) eth0 ${sta1.tif.ip}-&gt;${tb.tftp}\(\d+\) ttl\(\d+\) UDP" -ps p "QoS: ingress pkt fwd\(wifi0.1\) profile=\d+ qos=2" -e "\(i\) wifi0.1 ${sta1.tif.ip}-&gt;${tb.tftp}\(\d+\) ttl\(\d+\) UDP" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="1">
				<desc>
					rm test file
				</desc>
				<ssh host="${tb.tftp}" prompt=">|.*#">
					-v "rm -f /var/lib/tftpboot/${test.filename}"
				</ssh>
			</step>

			<step no="2">
				<desc>
					rm tmp file
				</desc>
				<ssh target="sta1">
					-v "rm -f /tftpboot/${test.filename}"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>