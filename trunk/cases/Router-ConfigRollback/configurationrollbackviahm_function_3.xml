<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>When change capwap client server port in HM and upload delta config or complete config, will generate rollback command automatically</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		AP connect with HM
		AP with default setting in HM
		Create a WLAN Policy in HM and with default setting
		Execute the following command in AP:
		capwap client server name 192.168.20.200
		capwap client dtls hm-defined-passphrase *** key-id 1
		capwap client vhm-name home
		no capwap client dtls negotiation enable

		Test Procedure:

		Change capwap client server port in HM, then select AP and
		upload delta config or complete config, verify if rollback command
		be generated
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>windows</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />

	<stage>
		<include prefix="start_selenium_server" file="subs/start_selenium_server.xml" args="${sta1.mif.ip}, ${job_selenium_dir}, ${job_selenium_jar}, ${job_selenium_workload}" />

		<step no="1">
			<desc>
				AP connect with HM
				AP with default setting in HM
				Create a WLAN Policy in HM and with default setting
				Execute the following command in AP:
				capwap client server name 192.168.20.200
				capwap client dtls hm-defined-passphrase *** key-id 1
				capwap client vhm-name home
				no capwap client dtls negotiation enable
				Change capwap client server port in HM, then select AP and
				upload delta config or complete config, verify if rollback command
				be generated
			</desc>
			<telnet target="ap1">
				-v "capwap client enable"
				-v "capwap client server name ${pub.hm1.ip}"
				-v "capwap client vhm-name home"
				-v "no capwap client dtls negotiation enable"
			</telnet>
		</step>

		<step no="1.1">
			<desc>config ap2</desc>
			<telnet target="ap2">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="1.2" delay="200">
			<desc>
				check the capwap client state
			</desc>
			<log-file>configurationRollbackviaHM_Function_3_check_capwap.log</log-file>
			<telnet target="ap1">
				-v "show capwap client"
			</telnet>
			<log-match>-c -i "RUN state: Connected securely to the CAPWAP server"</log-match>
		</step>

		<include prefix="1.3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap2" />

		<step no="1.3">
			<desc>
				change capwap client server port
			</desc>
			<log-file>change_port.log</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/hm/hm_service.py -r http://${sta1.mif.ip}:4444/wd/hub -t ff -f ${log.dir}/${log.file} -l debug --parameters service.name=capwap_server capwap_server.udp_port=12002
			</script>
		</step>

		<step no="2">
			<desc>
				1.select AP and upload delta config or complete config, verify if rollback
				command be generated
			</desc>
			<log-file>configurationrollback_upload_delta_config.log</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/hm/upload_config1.py -r http://${sta1.mif.ip}:4444/wd/hub -t ff -f ${log.dir}/${log.file} -l debug --parameters upload.type=compare_running_ap_config ap.mgt0_ip=${ap1.mgt0.ip}
			</script>
		</step>

		<step no="3">
			<desc>
				check delta config
			</desc>
			<log-file>check_delta_config.log</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/hm/tools.py -r http://${sta1.mif.ip}:4444/wd/hub -t ff -f ${log.dir}/${log.file} -l debug --parameters tool.name=view_config ap.mgt0_ip=${ap1.mgt0.ip}
			</script>
		</step>

		<step no="4">
			<desc>
				recover capwap client server port
			</desc>
			<log-file>change_port1.log</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/hm/hm_service.py -r http://${sta1.mif.ip}:4444/wd/hub -t ff -f ${log.dir}/${log.file} -l debug --parameters service.name=capwap_server capwap_server.udp_port=12222
			</script>
		</step>
	</stage>

	<post-process>
		<stage>
			<include prefix="stop_selenium_server" file="subs/stop_selenium_server.xml" args="${sta1.mif.ip}, ${job_selenium_workload}" />
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>
