<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>PPPoE save commands test</brief>
	<priority>Low</priority>
	<automated>yes</automated>
	<description>
		Priority	Low	Automation Flag	No
		Topology to use	                         Topolopy1
		Description	PPPoE save commands test
		Pre-condition	
		Test procedure	1) Config PPPoE
		“interface eth0 pppoe username admin password aerohive”
		“interface eth0 pppoe auth-method any”
		“interface eth0 enable”
		2) Save config
		“save config”
		3) Reboot ap and show PPPoE status/config
		“show running-config”
		“show interface eth0 pppoe”
		4) Config PPPoE
		“interface eth0 pppoe username admin password aerohive”
		“interface eth0 pppoe auth-method any”
		“interface eth0 enable”
		5) Save PPPoE config
		“save config pppoe”
		6) Reboot ap and show PPPoE status/config
		“show running-config”
		“show interface eth0 pppoe”
		Expect result	3) No PPPoE status/config can be displayed 
		6) PPPoE status/config can be displayed correctly 
	</description>
	<numofbr>1</numofbr>
	<numofcvg>0</numofcvg>
	<tbtype>linux</tbtype>

	<stage>
		<step no="1">
			<desc>
				config PPPOE, Set one user-profile and define the attribute x
				Bind the security-object to the port, save config
			</desc>
			<console target="br1.br">
				-v "_debug brd ppp"
				-v "_debug brd pppdebug"
				-v "_debug brd pppoe"
				-v "no interface ${br1.br.wan.int1} dhcp client"
				-v "interface ${br1.br.wan.int1} pppoe username ${pub.pppoe1.username} password ${pub.pppoe1.passwd}"
				-v "interface ${br1.br.wan.int1} pppoe auth-method any"
				-v "interface ${br1.br.wan.int1} pppoe enable"
				-v "save config"
			</console>
		</step>

		<step no="2.1">
			<desc>show running-config</desc>
			<console target="br1.br">
				-v "show running-config"
			</console>
			<log-match>-e "pppoe" -n</log-match>
		</step>
		<step no="2.2">
			<desc>
				show running-config pppoe
			</desc>
			<console target="br1.br">
				-v "show running-config pppoe"
			</console>
			<log-match>-e "interface ${br1.br.wan.int1} pppoe username ${pub.pppoe1.username} password"</log-match>
			<log-match>-e "interface ${br1.br.wan.int1} pppoe enable"</log-match>
		</step>
		<step no="2.3" delay="10" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>show interface eth0 pppoe</desc>
			<log-file>show_interface_pppoe_${loop_check.idx}.log</log-file>
			<console target="br1.br">
				-v "show interface ${br1.br.wan.int1} pppoe"
			</console>
			<log-match>-c -i "Remote IP: ${pppoe.Remote.ip}"</log-match>
			<log-match>-c -i "PPPoE status: enabled"</log-match>
			<log-match>-c -i "Username: ${pub.pppoe1.username}"</log-match>
			<log-match>-c -i "Connection status: connected"</log-match>
		</step>
		<step no="2.4">
			<desc>
				-show logging buffered
			</desc>
			<log-file>show_logging_buffered1.log</log-file>
			<console target="br1.br" timeout="500">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-c -e "CHAP authentication succeeded: Access granted"</log-match>
		</step>
		<step no="3">
			<console target="br1.br" timeout="120">
				-v "reboot"
			</console>
		</step>
		<step no="4.1">
			<desc>
				show running-config
			</desc>
			<console target="br1.br">
				-v "show running-config"
			</console>
			<log-match>-e "pppoe" -n</log-match>
		</step>
		<step no="4.2">
			<desc>
				show running-config pppoe
			</desc>
			<console target="br1.br">
				-v "show running-config pppoe"
			</console>
			<log-match>-e "interface ${br1.br.wan.int1} pppoe username ${pub.pppoe1.username} password" -n</log-match>
			<log-match>-e "interface ${br1.br.wan.int1} pppoe enable" -n</log-match>
		</step>
		<step no="4.3" delay="10">
			<desc>
				-show logging buffered
			</desc>
			<log-file>show_logging_buffered2.log</log-file>
			<console target="br1.br" timeout="500">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-c -i "PPPoE request to start:" -i "user ${pub.pppoe1.username} password ${pub.pppoe1.passwd}" -n</log-match>
		</step>
		<step no="4.4" delay="10" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				show interface eth0 pppoe
			</desc>
			<log-file>show_interface_pppoe2_${loop_check.idx}.log</log-file>
			<console target="br1.br">
				-v "show interface ${br1.br.wan.int1} pppoe"
			</console>
			<log-match>-c -i "Remote IP: ${pppoe.Remote.ip}" -n</log-match>
			<log-match>-c -i "PPPoE status: enabled" -n</log-match>
			<log-match>-c -i "Username: ${pub.pppoe1.username}" -n </log-match>
			<log-match>-c -i "Connection status: connected" -n</log-match>
		</step>
		<step no="5">
			<desc>
				config PPPOE, Set one user-profile and define the attribute x
				Bind the security-object to the port, save config
			</desc>
			<console target="br1.br">
				-v "_debug brd ppp"
				-v "_debug brd pppdebug"
				-v "_debug brd pppoe"
				-v "interface ${br1.br.wan.int1} mode wan"
				-v "interface ${br1.br.wan.int1} pppoe username ${pub.pppoe1.username} password ${pub.pppoe1.passwd}"
				-v "interface ${br1.br.wan.int1} pppoe auth-method any"
				-v "interface ${br1.br.wan.int1} pppoe enable"
				-v "save config pppoe"
			</console>
		</step>

		<step no="6">
			<desc>show running-config</desc>
			<console target="br1.br">
				-v "show running-config pppoe"
			</console>
		</step>
		<step no="7">
			<console target="br1.br" timeout="120">
				-v "reboot"
			</console>
		</step>
		<step no="8.1">
			<desc>
				show running-config
			</desc>
			<console target="br1.br">
				-v "show running-config pppoe"
			</console>
			<log-match>-e "interface ${br1.br.wan.int1} pppoe username ${pub.pppoe1.username} password"</log-match>
			<log-match>-e "interface ${br1.br.wan.int1} pppoe enable"</log-match>
		</step>
		
		<step no="8.2" delay="10" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				show interface eth0 pppoe
			</desc>
			<log-file>show_interface_pppoe3_${loop_check.idx}.log</log-file>
			<console target="br1.br">
				-v "show interface ${br1.br.wan.int1} pppoe"
			</console>
			<log-match>-c -i "Remote IP: ${pppoe.Remote.ip}"</log-match>
			<log-match>-c -i "PPPoE status: enabled"</log-match>
			<log-match>-c -i "Username: ${pub.pppoe1.username}"</log-match>
			<log-match>-c -i "Connection status: connected"</log-match>
		</step>
		<step no="8.3">
			<desc>
				-show logging buffered
			</desc>
			<log-file>show_logging_buffered3.log</log-file>
			<console target="br1.br" timeout="500">
				-v "show logging buffered"
			</console>
			<no-error-check />
		</step>
	</stage>
</testcase>
