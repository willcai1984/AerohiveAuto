<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Eth mode change test</brief>
	<priority>Middle</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		Test Procedure:
		1) BR connects to PPPoE server successfully
		2) Modify eth0 mode to wan (dhcp client)
		3) Recover(PPPoE client)
		4) Laptop connects to any web site(such as google)
		5) Modify eth0 mode to backhaul
		6) Recover(PPPoE client)
		7) Laptop connects to any web site(such as google)
		8) Modify eth0 mode to backhaul
		9) Recover(PPPoE client)
		10) Laptop connects to any web site(such as google)
		11) Repeat step 2-10 5 times
	</description>
	<numofbr>1</numofbr>
	<numofcvg>0</numofcvg>
	<tbtype>winlin</tbtype>

	<property name="pppoe.Remote.ip" value="10.0.10.22" />

	<stage>
		<step no="0">
			<desc>
				-set pppoe server
			</desc>
			<console target="br1.br">
				-v "interface ${br1.br.wan.int1} pppoe username ${pub.pppoe1.username} password ${pub.pppoe1.passwd}"
				-v "interface ${br1.br.wan.int1} pppoe enable"
				-v "console page 0"
			</console>
		</step>

		<step no="0.1" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>
				-show interface eth0 pppoe
			</desc>
			<log-file>step0.1_show_interface_pppoe_${loop_check.idx}.log</log-file>
			<console target="br1.br">
				-v "show interface ${br1.br.wan.int1} pppoe"
			</console>
			<log-match>-c -i "Remote IP: ${pppoe.Remote.ip}"</log-match>
			<log-match>-c -i "PPPoE status: enabled"</log-match>
			<log-match>-c -i "Username: ${pub.pppoe1.username}"</log-match>
			<log-match>-c -i "Connection status: connected"</log-match>
		</step>

		<step no="0.2">
			<desc>
				-ping pub.dns
			</desc>
			<log-file>step0.2_ping.log</log-file>
			<console target="br1.br">
				-v "ping ${pub.dns1.ip} count 5"
			</console>
			<log-match>-c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>
	</stage>

	<stage loop-values="1,2" var-name="count_tm">
		<step no="${count_tm}.1">
			<desc>
				Modify eth0 mode to wan
			</desc>
			<log-file>step${count_tm}.1_set_mode.log</log-file>
			<console target="br1.br">
				-v "interface ${br1.br.wan.int1} mode wan"
				-v ""
				-v ""
				-v "show interface"
			</console>
			<log-match>-c -i "${br1.br.wan.int1}" -i "wan"</log-match>			
		</step>

		<step no="${count_tm}.2">
			<desc>
				-ping pub.dns
			</desc>
			<log-file>step${count_tm}.2_ping.log</log-file>
			<console target="br1.br">
				-v "ping ${pub.dns1.ip} count 5"
			</console>
			<log-match>-c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>

		<step no="${count_tm}.3">
			<desc>
				-change eth0's mode
			</desc>
			<log-file>step${count_tm}.3_set_mode.log</log-file>
			<console target="br1.br">
				-v "interface ${br1.br.wan.int1} switchport mode access"
				-v ""
				-v ""
				-v "show interface"
			</console>
			<log-match>-c -i "${br1.br.wan.int1}" -i "access"</log-match>
		</step>

		<step no="${count_tm}.4">
			<desc>
				-change eth0's mode
			</desc>
			<log-file>step${count_tm}.4_set_mode.log</log-file>
			<console target="br1.br">
				-v "interface ${br1.br.wan.int1} mode wan"								
				-v ""
				-v "show interface"
			</console>
			<log-match>-c -i "${br1.br.wan.int1}" -i "wan"</log-match>
		</step>
		
		<step no="${count_tm}.4.a">
			<desc>
				-set pppoe server
			</desc>
			<console target="br1.br">
				-v "interface ${br1.br.wan.int1} pppoe username ${pub.pppoe1.username} password ${pub.pppoe1.passwd}"
				-v "interface ${br1.br.wan.int1} pppoe enable"
				-v "console page 0"
			</console>
		</step>

		<step no="${count_tm}.4.b" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>
				-show interface eth0 pppoe
			</desc>
			<log-file>step4.b_show_interface_pppoe_${loop_check.idx}.log</log-file>
			<console target="br1.br">
				-v "show interface ${br1.br.wan.int1} pppoe"
			</console>
			<log-match>-c -i "Remote IP: ${pppoe.Remote.ip}"</log-match>
			<log-match>-c -i "PPPoE status: enabled"</log-match>
			<log-match>-c -i "Username: ${pub.pppoe1.username}"</log-match>
			<log-match>-c -i "Connection status: connected"</log-match>
		</step>

		<step no="${count_tm}.4b">
			<desc>
				-ping pub.dns
			</desc>
			<log-file>step${count_tm}.4b_ping.log</log-file>
			<console target="br1.br">
				-v "ping ${pub.dns1.ip} count 5"
			</console>
			<log-match>-c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>
		
		<step no="${count_tm}.5">
			<desc>
				-change eth0's mode
			</desc>
			<log-file>step${count_tm}.5_set_mode.log</log-file>
			<console target="br1.br">
				-v "interface ${br1.br.wan.int1} switchport mode trunk"
				-v ""
				-v ""
				-v "show interface"
			</console>
			<log-match>-c -i "${br1.br.wan.int1}" -i "trunk"</log-match>
		</step>

		<step no="${count_tm}.6">
			<desc>
				-change eth0's mode
			</desc>
			<log-file>step${count_tm}.6_set_mode.log</log-file>
			<console target="br1.br">
				-v "interface ${br1.br.wan.int1} mode wan"				
				-v ""
				-v "show interface"
			</console>
			<log-match>-c -i "${br1.br.wan.int1}" -i "wan"</log-match>
		</step>
		
		<step no="${count_tm}.6.a">
			<desc>
				-set pppoe server
			</desc>
			<console target="br1.br">
				-v "interface ${br1.br.wan.int1} pppoe username ${pub.pppoe1.username} password ${pub.pppoe1.passwd}"
				-v "interface ${br1.br.wan.int1} pppoe enable"
				-v "console page 0"
			</console>
		</step>

		<step no="${count_tm}.6.b" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>
				-show interface eth0 pppoe
			</desc>
			<log-file>step6.b_show_interface_pppoe_${loop_check.idx}.log</log-file>
			<console target="br1.br">
				-v "show interface ${br1.br.wan.int1} pppoe"
			</console>
			<log-match>-c -i "Remote IP: ${pppoe.Remote.ip}"</log-match>
			<log-match>-c -i "PPPoE status: enabled"</log-match>
			<log-match>-c -i "Username: ${pub.pppoe1.username}"</log-match>
			<log-match>-c -i "Connection status: connected"</log-match>
		</step>

		<step no="${count_tm}.6b">
			<desc>
				-ping pub.dns
			</desc>
			<log-file>step${count_tm}.6b_ping.log</log-file>
			<console target="br1.br">
				-v "ping ${pub.dns1.ip} count 5"
			</console>
			<log-match>-c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>
	</stage>
</testcase>