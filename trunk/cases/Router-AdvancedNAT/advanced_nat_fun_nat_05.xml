<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>2 pairs 1:1NAT on 2 tunnel over eth0 Platform Dependence BR100,BR200,BRAP330,BRAP350</brief>
	<priority>middle</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		1. establish vpn tunnel0 between eth0 of BR and CVG1
		1. establish vpn tunnel1 between eth0 of BR and CVG2
		2. pc1 connect to non-routable subnet1
		3. pc2 connect to non-routable subnet2

		Test Procedure:
		1. Configure 2 non-routable subnet on br
		2. Configure 2 routable subnet on br
		3. Configure 2 1:1 nat policy on br
		ip nat-policy 1
		ip nat-policy 2
		ip nat-policy 1 type match-net inside &lt;ip_addr/mask&gt; outside
		&lt;ip_addr/mask&gt;
		ip nat-policy 2 type match-net inside &lt;ip_addr/mask&gt; outside<!-- -->
		&lt;ip_addr/mask&gt;
		4. apply one 1:1 nat policy on each tunnel over eth0
		vpn ipsec-tunnel tunnel0 nat-policy 1
		vpn ipsec-tunnel tunnel1 nat-policy 2
		5. pc1 send traffic to vpn network inside CVG1, check result1
		6. pc1 send traffic to vpn network inside CVG2, check result3
		7. pc2 send traffic to vpn network inside CVG2, check result2
		8. pc2 send traffic to vpn network inside CVG1, check result4
		9. pc1 send traffic to internet ,check result 5
		10. pc2 send traffic to internet ,check result
		5
		11. no a 1:1 nat policy on tunnel0 over eth0
		no vpn ipsec-tunnel tunnel0 nat-policy 1
		12. pc1 send traffic to vpn network inside CVG1, check result3
		13. pc2 send traffic to vpn network inside CVG2, check result2
		14. no another 1:1 nat policy on tunnel1 over eth0
		no vpn ipsec-tunnel tunnel1 nat-policy 2
		15. pc1 send traffic to vpn network inside CVG1, check result3
		16. pc2 send traffic to vpn network inside CVG1, check result3
	</description>
	<numofbr>1</numofbr>
	<numofcvg>2</numofcvg>
	<cvg-opt-same-backnet>no</cvg-opt-same-backnet>
	<tbtype>winlin</tbtype>

	<property name="vpc1.outside.subnet" value="101.1.1.0" />
	<!--<property name="vpc1.outside.ip" value="101.1.1.2" />-->
	<property name="vpc4.outside.subnet" value="102.1.1.0" />
	<!--<property name="vpc4.outside.ip" value="102.1.1.2" />-->
	<property name="br.route.netmask" value="255.255.255.0" />

	<stage>
		<step no="1">
			<desc>
				Enable 2 dhcp server（mgt0.1 mgt0.2）
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface eth0 mode wan"
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/24"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.2 vlan ${br1.vpc2.vlan}"
				-v "interface mgt0.2 ip ${br1.br.mgt0.2.ip}/24"
				-v "interface mgt0.2 dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface mgt0.2 dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server enable"
				-v "interface mgt0.2 dhcp-server enable"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				-set eth1/eth4's mode and permit mac-learning
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${br.mgt0.supermask}"
				-v "routing internal-sub-network ${br1.br.mgt0.2.ip}/${br.mgt0.supermask}"
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "interface eth1 mac-learning enable"
				-v "user-profile lan2 qos-policy def-user-qos vlan-id ${br1.vpc2.vlan} attribute 2"
				-v "interface eth4 mode bridge-access user-profile-attribute 2"
				-v "interface eth4 mac-learning enable"
			</telnet>
		</step>

		<include prefix="2" file="subs/vpn_setup_two.xml" obj-args="cvg1, cvg2, br1" />

		<step no="3">
			<desc>br1.vpc1 get ip addr from dhcp server of mgt0.1</desc>
			<log-file>step3_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient -r ${br1.vpc1.tif.name}"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="3.1">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="3.2">
			<multi-setvar>
				echo "vpc1.inside.subnet=$(echo ${br1.vpc1.tif.ip} | cut -d. -f1,2,3).0"
				echo "vpc1.outside.ip=101.1.1.$(echo ${br1.vpc1.tif.ip} | cut -d'.' -f4)"
			</multi-setvar>
		</step>

		<step no="3.3">
			<desc>br1.vpc4 get ip addr from dhcp server of mgt0.2</desc>
			<log-file>step3.3_ifconfig_vpc4_.log</log-file>
			<ssh target="br1.vpc4" timeout="120">
				-v "dhclient -r ${br1.vpc4.tif.name}"
				-v "dhclient ${br1.vpc4.tif.name}"
				-v "ifconfig ${br1.vpc4.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="3.4">
			<desc>set br1.vpc4.tif.ip var for vpc4 on BR side</desc>
			<setvar name="br1.vpc4.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc4.mif.ip} -u ${br1.vpc4.user} -p ${br1.vpc4.passwd} -i ${br1.vpc4.tif.name} -nomask
			</setvar>
		</step>

		<step no="3.5">
			<multi-setvar>
				echo "vpc4.inside.subnet=$(echo ${br1.vpc4.tif.ip} | cut -d. -f1,2,3).0"
				echo "vpc4.outside.ip=102.1.1.$(echo ${br1.vpc4.tif.ip} | cut -d'.' -f4)"
			</multi-setvar>
		</step>

		<step no="4">
			<desc>
				Configure 2 1:1 nat policy on br
			</desc>
			<telnet target="${br1.br.wan.ip}" timeout="300">
				-v "ip nat-policy n1 type match-net inside ${vpc1.inside.subnet}/${br.lan.netmask} outside ${vpc1.outside.subnet}/${br.lan.netmask}"
				-v "ip nat-policy n2 type match-net inside ${vpc4.inside.subnet}/${br.lan.netmask} outside ${vpc4.outside.subnet}/${br.lan.netmask}"
				-v "routing internal-sub-network ${vpc1.outside.subnet}/${br.lan.netmask}"
				-v "routing internal-sub-network ${vpc4.outside.subnet}/${br.lan.netmask}"
			</telnet>
		</step>

		<step no="4.1">
			<desc>
				apply 2 1:1 nat policy on tunnel over eth0
			</desc>
			<log-file>step4.1_show_gre_tunnel_br.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="300">
				-v "vpn ipsec-tunnel ${br1.tunnel.name} nat-policy n1"
				-v "vpn ipsec-tunnel ${br1.tunnel2.name} nat-policy n2"
				-v "show vpn layer-3-tunnel"
			</telnet>
		</step>
		
		<step no="set_lan_info">
			<multi-setvar>
				echo "cvg1.vpc1.route=$(echo ${cvg1.vpc1.tif.ip} | cut -d. -f1,2,3).0"
				echo "cvg2.vpc1.route=$(echo ${cvg2.vpc1.tif.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>
		
		<step no="get_tunnel.id_BR">
			<desc>get br second tunnel id</desc>
			<setvar name="br1.tunnel.id2">
				${bin.dir}/getbyrexp.py -p "(tunnel\d+)[\t ]*gre/ipsec[\t ]*${cvg2.cvg.wan.ip}[\t ]*${br1.br.mgt0.ip}[\t ]*\d+[\t ]*${cvg2.cvg.tunnel.ip}" -f ${log.dir}/step4.1_show_gre_tunnel_br.log -t str
			</setvar>
		</step>
		

		<step no="4.2" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				check the ip route on BR1,add the route from cvg1 and cvg2 
			</desc>
			<log-file>step4.2_show_route.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="300">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${cvg1.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg2.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id2}"</log-match>
		</step>

		<step no="open.debug">
			<desc>
				open debug switch
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "_ff id 1 src-ip ${br1.vpc1.tif.ip} bidirectional"
				-v "_ff id 2 src-ip ${br1.vpc4.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="5" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				pc1 send traffic to vpn network cvg1,ping is successful
			</desc>
			<log-file>step5_br1.vpc1_ping_cvg1.vpc1.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${cvg1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="5.1" delay="20">
			<desc>
				show logging buffered,the ping traffic is forwarded on tunnel0 and there are 1:1 nat
			</desc>
			<log-file>step5.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg1.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${vpc1.outside.ip}\(&lt;NULL&gt;\)-&gt;${cvg1.vpc1.tif.ip}\(tunnel0\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth1 ${br1.vpc1.tif.ip}-&gt;${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
		</step>
		
		<step no="5.2a" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				check the ip route on BR1,there are  the route from cvg1 and cvg2 
			</desc>
			<log-file>step5.2a_show_route.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="300">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${cvg1.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg2.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id2}"</log-match>
		</step>

		<step no="5.2"  >
			<desc>
				pc1 send traffic to vpn network cvg2,ping is failed
			</desc>
			<log-file>step5.2_br1.vpc1_ping_cvg2.vpc1.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg2.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${cvg2.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="5.3" delay="20">
			<desc>
				show logging buffered.the ping traffic is forwarded on tunnel1 but there are not 1:1 nat
			</desc>
			<log-file>step5.3_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg2.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${br1.vpc1.tif.ip}\(&lt;NULL&gt;\)-&gt;${cvg2.vpc1.tif.ip}\(tunnel1\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth1 ${br1.vpc1.tif.ip}-&gt;${cvg2.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6" delay="5">
			<desc>
				pc2 send traffic to vpn network cvg1,ping is failed
			</desc>
			<log-file>step6_br1.vpc4_ping_cvg1.vpc1.log</log-file>
			<ssh target="br1.vpc4" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${cvg1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="6.1" delay="20">
			<desc>
				show logging buffered,the ping traffic is forwarded on tunnel0 but there are not 1:1 nat
			</desc>
			<log-file>step6.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg1.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${br1.vpc4.tif.ip}\(&lt;NULL&gt;\)-&gt;${cvg1.vpc1.tif.ip}\(tunnel0\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth4 ${br1.vpc4.tif.ip}-&gt;${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6.2" delay="5">
			<desc>
				pc2 send traffic to vpn network cvg2,ping is successful
			</desc>
			<log-file>step6.2_br1.vpc4_ping_cvg2.vpc1.log</log-file>
			<ssh target="br1.vpc4" timeout="120">
				-v "ping ${cvg2.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match> -c -i "from ${cvg2.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="6.3" delay="20">
			<desc>
				show logging buffered,the ping traffic is forwarded on tunnel2 and there are 1:1 nat
			</desc>
			<log-file>step6.3_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg2.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${vpc4.outside.ip}\(&lt;NULL&gt;\)-&gt;${cvg2.vpc1.tif.ip}\(tunnel1\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth4 ${br1.vpc4.tif.ip}-&gt;${cvg2.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7">
			<desc>
				pc1 send traffic to internet,ping is successful
			</desc>
			<log-file>step7_br1.vpc1_ping_ftp_server.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.ftp1.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.ftp1.ip}" -i "ttl="</log-match>
		</step>

		<step no="7.1" delay="20">
			<desc>
				show logging buffered,the ping traffic is forwarded on wan interface
			</desc>
			<log-file>step7.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "(o) eth0 ${br1.br.wan.ip}-&gt;${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth1 ${br1.vpc1.tif.ip}-&gt;${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) eth1 ${pub.ftp1.ip}-&gt;${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(i) mgt0.1 ${pub.ftp1.ip}-&gt;${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
		</step>

		<step no="8">
			<desc>
				pc4 send traffic to internet,ping is successful
			</desc>
			<log-file>step8_br1.vpc4_ping_ftp_server.log</log-file>
			<ssh target="br1.vpc4" timeout="120">
				-v "ping ${pub.ftp1.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.ftp1.ip}" -i "ttl="</log-match>
		</step>

		<step no="8.1" delay="20">
			<desc>
				show logging buffered,the ping traffic is forwarded on wan interface
			</desc>
			<log-file>step8.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "(o) eth0 ${br1.br.wan.ip}-&gt;${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth4 ${br1.vpc4.tif.ip}-&gt;${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) eth4 ${pub.ftp1.ip}-&gt;${br1.vpc4.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(i) mgt0.2 ${pub.ftp1.ip}-&gt;${br1.vpc4.tif.ip}" -i "icmp-echo-reply"</log-match>
		</step>

		<step no="9">
			<desc>
				no the n1 1:1 nat policy on tunnel over eth0
			</desc>
			<telnet target="${br1.br.wan.ip}" timeout="300">
				-v "no vpn ipsec-tunnel ${br1.tunnel.name} nat-policy n1"
				-v "clear log all"
			</telnet>
		</step>

		<step no="10" delay="5">
			<desc>
				pc1 send traffic to vpn network cvg1,ping is failed
			</desc>
			<log-file>step10_br1.vpc1_ping_cvg1.vpc1.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match> -n -c -i "from ${cvg1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="10.1" delay="20">
			<desc>
				show logging buffered,the ping traffic is forwarded on tunnel0 but there are not 1:1nat
			</desc>
			<log-file>step10.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg1.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${br1.vpc1.tif.ip}\(&lt;NULL&gt;\)-&gt;${cvg1.vpc1.tif.ip}\(tunnel0\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth1 ${br1.vpc1.tif.ip}-&gt;${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="11" delay="5">
			<desc>
				pc4 send traffic to vpn network cvg2,ping is successful
			</desc>
			<log-file>step11_br1.vpc4_ping_cvg2.vpc1.log</log-file>
			<ssh target="br1.vpc4" timeout="120">
				-v "ping ${cvg2.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match> -c -i "from ${cvg2.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="11.1" delay="20">
			<desc>
				show logging buffered,the ping traffic is forwarded on tunnel1 and there are 1:1nat
			</desc>
			<log-file>step11.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg2.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${vpc4.outside.ip}\(&lt;NULL&gt;\)-&gt;${cvg2.vpc1.tif.ip}\(tunnel1\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth4 ${br1.vpc4.tif.ip}-&gt;${cvg2.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
		</step>
		<step no="12">
			<desc>
				no the  n2 1:1 nat policy on tunnel over eth0
			</desc>
			<telnet target="${br1.br.wan.ip}" timeout="300">
				-v "no vpn ipsec-tunnel ${br1.tunnel2.name} nat-policy n2"
				-v "clear log all"
			</telnet>
		</step>

		<step no="13" delay="5">
			<desc>
				pc1 send traffic to vpn network cvg1,ping is failed
			</desc>
			<log-file>step13_br1.vpc1_ping_cvg1.vpc1.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${cvg1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="13.1" delay="20">
			<desc>
				show logging buffered,ping traffic is forwarded on tunnel0 but there are not 1:1 nat
			</desc>
			<log-file>step13.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg1.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${br1.vpc1.tif.ip}\(&lt;NULL&gt;\)-&gt;${cvg1.vpc1.tif.ip}\(tunnel0\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth1 ${br1.vpc1.tif.ip}-&gt;${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="14" delay="5">
			<desc>
				pc2 send traffic to vpn network cvg2,ping is failed
			</desc>
			<log-file>step14_br1.vpc4_ping_cvg2.vpc1.log</log-file>
			<ssh target="br1.vpc4" timeout="120">
				-v "ping ${cvg2.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match> -n -c -i "from ${cvg2.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="14.1" delay="20">
			<desc>
				show logging buffered,the ping traffic is forwarded on tunnel1 but there are not 1:1nat
			</desc>
			<log-file>step14.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg2.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${br1.vpc4.tif.ip}\(&lt;NULL&gt;\)-&gt;${cvg2.vpc1.tif.ip}\(tunnel1\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth4 ${br1.vpc4.tif.ip}-&gt;${cvg2.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>
</testcase>