<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>One pair 1:1NAT on multiple tunnels</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Topology to use	Topo5
		Description	One pair 1:1NAT on multiple tunnels
		Platform Dependence	BR100,BR200,BRAP330,BRAP350
		Pre-condition	
		1.	establish vpn tunnel0 between eth0 of BR and CVG1
		2.	 establish vpn tunnel1 between eth0 of BR and CVG2
		Test procedure	
		1.	Configure non-routable subnet on  br
		2.	Configure routable subnet on  br
		3.	Configure a 1:1 nat policy on br
		4.	apply the 1:1 nat policy on tunnel0 over eth0
		5.	apply the 1:1 nat policy on tunnel1 over eth0
		6.	pc connect to the br lan interface
		7.	pc send traffic to  vpn network inside CVG1, check   result1
		8.	pc send traffic to  vpn network inside CVG2, check   result1
		9.	pc send traffic to internet ,check        result 2
		10.	no the 1:1 nat policy on tunnel0 over eth0
		11.	pc send traffic to  vpn network inside CVG1, check   result3
		12.	pc send traffic to  vpn network inside CVG2, check   result1
		13.	no the 1:1 nat policy on tunnel1 over eth0
		14.	pc send traffic to  vpn network inside CVG1, check   result3
		15.	pc send traffic to  vpn network inside CVG2, check   result3
		Expect result	1.	traffic to vpn network via tunnel, the traffic are 1:1 nat translation before through VPN tunnel. source ip address is non-routable ip at first, then 1:1 nat translation to routable ip .pc can connect to vpn network
		2.	traffic to internet via eth0, the traffic are  nat translation before through eth0. source ip address is non-routable ip  at first, then nat translation eth0 interface ip .pc can connect to internet.
		3.	traffic to vpn network via tunnel, the traffic can’t be any type nat  transfer before through VPN tunnel. 
	</description>
	<numofbr>1</numofbr>
	<numofcvg>2</numofcvg>
	<cvg-opt-same-backnet>no</cvg-opt-same-backnet>
	<tbtype>winlin</tbtype>
	<stage>
		<property name="br.route.netmask" value="255.255.255.0" />
		<step no="1">
			<desc>get netmask of br lan</desc>
			<setvar name="br1.br.lan.nm">
				echo `ipcalc ${br1.br.mgt0.1.ip}/${br.lan.netmask} -m| cut -d= -f2`
			</setvar>
		</step>
		<step no="2">
			<desc>
				set eth1 with access mode
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "user-profile auto1"
				-v "user-profile auto1 vlan-id ${br1.vlan1} attribute 1"
				-v "security-object lan1"
				-v "security-object lan1 default-user-profile-attr 1"
				-v "interface ${br1.br.lan.int1} mode bridge-access user-profile-attribute 1"
				-v "interface ${br1.br.lan.int1} security-object lan1"
				-v "int ${br1.br.lan.int1} mac-learning enable"
			</telnet>
		</step>
		<step no="3">
			<desc>
				configure mgt0.1 with dhcp service enable
			</desc>
			<telnet host="${br1.br.wan.ip}" timeout="300">
				-v "interface mgt0.1 vlan ${br1.vlan1}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask ${br1.br.lan.nm}"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>
		
		<include prefix="4" file="subs/vpn_setup_two.xml" obj-args="cvg1, cvg2, br1" />
		

		<step no="5.1">
			<desc>
				1.	Configure 1 1:1nat  nat policy  on br
			</desc>
			<telnet target="${br1.br.wan.ip}" timeout="300">
				-v "ip nat-policy auto${job.id} type match-net inside ${br1.br.mgt0.1.ip}/${br.lan.netmask} outside ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
				-v "vpn ipsec-tunnel ${br1.tunnel.name} nat-policy auto${job.id}"
				-v "vpn ipsec-tunnel ${br1.tunnel2.name} nat-policy auto${job.id}"
				-v "routing internal-sub-network ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
			</telnet>
			<no-error-check />
		</step>
		<step no="5.2">
			<desc>check the nat policy on br</desc>
			<telnet target="${br1.br.wan.ip}" timeout="300">
				-v "show ip nat-policy"
				-v "show ip nat-policy auto${job.id}"
				-v "show ip nat-policy service-port-list"
			</telnet>
		</step>
		<step no="6.1">
			<desc>get the network addr</desc>
			<multi-setvar>
				echo "br.br1.mgt0.1.netaddr=$(ipcalc -4 -n ${br1.br.mgt0.1.ip}/${br.lan.netmask} | cut -d= -f2)"	
				echo "br.br1.mgt0.2.netaddr=$(ipcalc -4 -n ${br1.br.mgt0.2.ip}/${br.lan.netmask} | cut -d= -f2)"
				echo "cvg1.vpc1.route=$(echo ${cvg1.vpc1.tif.ip} | cut -d. -f1,2,3).0"
				echo "cvg2.vpc1.route=$(echo ${cvg2.vpc1.tif.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>
		<step no="6.2" delay="30">
			<desc>check ip routing table on cvg1,the cvg1 will add the route from br </desc>
			<telnet host="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "sh ip route"
				-v "sh routing internal-sub-network"
			</telnet>
			<log-match>-e "${br.br1.mgt0.1.netaddr}.*tunnel0" -n</log-match>
			<log-match>-e "${br.br1.mgt0.2.netaddr}.*tunnel0"</log-match>
		</step>
		<step no="6.3" delay="30">
			<desc>check ip routing table on cvg2,the cvg2 will add the route from br  </desc>
			<telnet host="${cvg2.cvg.cons_ip}" port="${cvg2.cvg.cons_port}" timeout="5">
				-v "sh ip route"
				-v "sh routing internal-sub-network"
			</telnet>
			<log-match>-e "${br.br1.mgt0.1.netaddr}.*tunnel0" -n</log-match>
			<log-match>-e "${br.br1.mgt0.2.netaddr}.*tunnel0"</log-match>
		</step>	
		<step no="6.4" type="loop-check" loop-interval="10" loop-max-times="10">
			<desc>check ip routing table on br</desc>
			<telnet host="${br1.br.wan.ip}">
				-v "sh ip route"
				-v "sh routing internal-sub-network"
			</telnet>
			<log-match>-p 1 -i "${cvg1.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg2.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id2}"</log-match>
		</step>
		<step no="7.1">
			<desc>
				br.vpc1 gets ip addr from br mgt0.1
			</desc>
			<log-file>vpc1_get_ip.log</log-file>
			<ssh host="${br1.vpc1.mif.ip}" timeout="300">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<no-error-check />
		</step>
		<step no="7.2">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>
		<step no="7.3">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.mapped.ip">
				echo `echo ${br1.br.mgt0.2.ip}|cut -d\. -f1,2,3`.`echo ${br1.vpc1.tif.ip}|cut -d\. -f4`
			</setvar>
		</step>
		<step no="8">
			<desc>enable fe debug on br</desc>
			<telnet host="${br1.br.wan.ip}" timeout="300">
				-v "_ff id 1 src-ip ${br1.vpc1.tif.ip} protocol 1 bidirectional"
				-v "_ff id 2 protocol 47 bidirectional"
				-v "_ff id 3 protocol 50 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</telnet>
			<no-error-check />
		</step>
	
		<step no="9.1" type="loop-check" loop-interval="10" loop-max-times="5">
			<desc>PC1 ping vpc1 to vpn network1,ping is successful</desc>
			<log-file>ping_check${loop_check.idx}.log</log-file>
			<ssh host="${br1.vpc1.mif.ip}" timeout="300">
				-v "ping ${cvg1.vpc1.tif.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${cvg1.vpc1.tif.ip}: " -i "ttl="</log-match>
			<no-error-check />
		</step>
		<step no="9.2">
			<desc>show log buffer,the ping traffic is forwarded on tunnel0</desc>
			<log-file>show_log_buf1.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v ""
				-v "show log buff"
				-v "clear log buff"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg1.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)iptables POST_ROUTING pkt ${br1.vpc1.mapped.ip}\(&lt;NULL&gt;\)-&gt;${cvg1.vpc1.tif.ip}\(tunnel0\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) ${br1.br.lan.int1} ${br1.vpc1.tif.ip}-&gt;${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		<step no="10.1">
			<desc>PC1 ping vpc1 to vpn network2,ping is successful</desc>
			<ssh host="${br1.vpc1.mif.ip}" timeout="300">
				-v "ping ${cvg2.vpc1.tif.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${cvg2.vpc1.tif.ip}: " -i "ttl="</log-match>
			<no-error-check />
		</step>
		<step no="10.2">
			<desc>show log buffer,the ping traffic is forwarded on tunnel1</desc>
			<log-file>show_log_buf2.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v ""
				-v "show log buff"
				-v "clear log buff"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg2.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)iptables POST_ROUTING pkt ${br1.vpc1.mapped.ip}\(&lt;NULL&gt;\)-&gt;${cvg2.vpc1.tif.ip}\(tunnel1\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) ${br1.br.lan.int1} ${br1.vpc1.tif.ip}-&gt;${cvg2.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		<step no="11">
			<desc>br1.vcp1 ping local internet ,ping is successful</desc>
			<ssh host="${br1.vpc1.mif.ip}" timeout="300">
				-v "ping ${pub.ftp1.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.ftp1.ip}" -i "ttl="</log-match>
			<no-error-check />
		</step>
		<step no="12">
			<desc>show log buffer,ping traffic is forwarded on wan interface</desc>
			<log-file>show_log_buf3.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v ""
				-v "show log buff"
				-v "clear log buff"
			</telnet>
			<log-match>-c -i "(o) eth0 ${br1.br.wan.ip}-&gt;${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth1 ${br1.vpc1.tif.ip}-&gt;${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) eth1 ${pub.ftp1.ip}-&gt;${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(i) mgt0.1 ${pub.ftp1.ip}-&gt;${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<no-error-check />
		</step>
		
		<step no="13">
			<desc>
				no the 1:1 nat on the tunnel0
			</desc>
			<telnet target="${br1.br.wan.ip}" timeout="300">
				-v "no vpn ipsec-tunnel ${br1.tunnel.name} nat-policy auto${job.id}"
			</telnet>
			<no-error-check />
		</step>
		
		 
              <step no="14" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				vpc1 send traffic to vpn network cvg1,ping is forwarded on tunnel but there are not  the  1:1nat
			</desc>
			<log-file>step14_br1.vpc1_ping_cvg1.vpc1.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-n -i "from ${cvg1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>
		
		
		<step no="14.1" delay="20">
			<desc>
				show logging buffered,ping is forwarded on tunnel and there are  not the 1:1nat
			</desc>
			<log-file>step14.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg1.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${br1.vpc1.tif.ip}\(&lt;NULL&gt;\)-&gt;${cvg1.vpc1.tif.ip}\(tunnel0\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth1 ${br1.vpc1.tif.ip}-&gt;${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
		</step>
		
		<step no="15.1">
			<desc>PC1 ping vpc1 to vpn network2,ping is successful</desc>
			<ssh host="${br1.vpc1.mif.ip}" timeout="300">
				-v "ping ${cvg2.vpc1.tif.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${cvg2.vpc1.tif.ip}: " -i "ttl="</log-match>
			<no-error-check />
		</step>
		<step no="15.2">
			<desc>show log buffer,the ping traffic is forwarded on tunnel1</desc>
			<log-file>show_log_buf2.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v ""
				-v "show log buff"
				-v "clear log buff"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg2.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)iptables POST_ROUTING pkt ${br1.vpc1.mapped.ip}\(&lt;NULL&gt;\)-&gt;${cvg2.vpc1.tif.ip}\(tunnel1\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) ${br1.br.lan.int1} ${br1.vpc1.tif.ip}-&gt;${cvg2.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		
		<step no="16">
			<desc>
				no the 1:1 nat on the tunnel1
			</desc>
			<telnet target="${br1.br.wan.ip}" timeout="300">
				-v "no vpn ipsec-tunnel ${br1.tunnel2.name} nat-policy auto${job.id}"
			</telnet>
			<no-error-check />
		</step>
		
		  <step no="17" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				vpc1 send traffic to vpn network cvg1,ping is forwarded on tunnel but there are not  the  1:1nat
			</desc>
			<log-file>step14_br1.vpc1_ping_cvg1.vpc1.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-n -i "from ${cvg1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>
		
		
		<step no="17.1" delay="20">
			<desc>
				show logging buffered,ping is forwarded on tunnel and there are  not the 1:1nat
			</desc>
			<log-file>step14.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg1.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${br1.vpc1.tif.ip}\(&lt;NULL&gt;\)-&gt;${cvg1.vpc1.tif.ip}\(tunnel0\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth1 ${br1.vpc1.tif.ip}-&gt;${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
		</step>
		
		  <step no="18" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				vpc1 send traffic to vpn network cvg2,ping is forwarded on tunnel but there are not  the  1:1nat
			</desc>
			<log-file>step18_br1.vpc1_ping_cvg2.vpc1.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg2.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-n -i "from ${cvg2.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>
		
		
		<step no="18.1" delay="20">
			<desc>
				show logging buffered,ping is forwarded on tunnel and there are  not the 1:1nat
			</desc>
			<log-file>step18.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg2.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${br1.vpc1.tif.ip}\(&lt;NULL&gt;\)-&gt;${cvg2.vpc1.tif.ip}\(tunnel1\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth1 ${br1.vpc1.tif.ip}-&gt;${cvg2.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
		</step>
		
	</stage>
</testcase>
