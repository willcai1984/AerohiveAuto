<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Route update testing</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		After OSPF enable, GW can establish neighbors with DR/BDR, VPN tunnel
		establish

		Test Procedure:

		1. Enable OSPF on GW, Enable OSPF advertise on lan, change the backhaul
		networking under DR or other routers, such as add/delete subnets, result 1
		2.Add or delete mgt0.x on BR, result 2
		2.Disable OSPF on GW, result 3
	</description>
	<numofcvg>1</numofcvg>
	<numofbr>1</numofbr>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>winlin</tbtype>

	<property name="vpn.client.list" value="clientList1" />
	<property name="vpn.server.name" value="vpnServer1" />

	<stage>

		<step no="1">
			<desc>Establish VPN tunnel</desc>
		</step>

		<step no="1.1">
			<desc>Enable DHCP server on interface mgt0.1</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "vlan ${br1.vpc1.vlan}"
				-v "interface vlan ${br1.vpc1.vlan}"
				-v "interface vlan${br1.vpc1.vlan} ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options netmask 255.255.255.0"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options dns1 ${br1.br.mgt0.1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server enable"
			</telnet>
		</step>

		<step no="1.2">
			<desc>config CVG act as l3 VPN server</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="30">
				-v "save vpn ee-cert tftp://${pub.tftp1.tip}:certs/server_cert.pem"
				-v "save vpn private-key tftp://${pub.tftp1.tip}:certs/server_key.pem"
				-v "vpn xauth-client-list ${vpn.client.list} local"
				-v "vpn xauth-client-list ${vpn.client.list} client-name ${br1.br.name} password aerohive"
				-v "vpn server-ipsec-tunnel ${vpn.server.name} vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${vpn.server.name} client-list ${vpn.client.list}"
				-v "vpn tunnel-policy vpn_tunnel_policy server ipsec-tunnel ${vpn.server.name}"
				-v "routing internal-sub-network ${br1.br.mgt0.ip}/${br.mgt0.supermask}"
				-v ""
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${br.mgt0.supermask}"
				-v ""
				-v ""
			</telnet>
		</step>

		<step no="1.3">
			<desc>config BR as l3 VPN client</desc>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "save vpn ca-cert tftp://${pub.tftp1.tip}:certs/cacert.pem"
				-v "vpn client-ipsec-tunnel ${br1.br.name}_ipsec_1 vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${br1.br.name}_ipsec_1 gateway ${cvg1.cvg.tunnel.ip} client-name ${br1.br.name} password aerohive"
				-v "vpn tunnel-policy vpn_tunnel_policy client ipsec-tunnel ${br1.br.name}_ipsec_1 primary"
				-v "routing route-request enable"
				-v ""
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v ""
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.ip}/${br.lan.netmask}"
				-v ""
				-v ""
			</telnet>
		</step>

		<step no="1.4a" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on BR side
				destination to CVG public address
			</desc>
			<log-file>ike_sa_br_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>
		</step>

		<step no="1.4b" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on CVG side
				destionation to BR public address
			</desc>
			<log-file>ike_sa_cvg${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="5">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-re -i "${br1.br_fw.ip}\[\d+\] *\w+:\w+ *9 *R"</log-match>
		</step>

		<step no="1.4c">
			<desc>
				check gre tunnel on br side
				remote to CVG wan address, local mgt0 address ,gateway CVG public address
			</desc>
			<log-file>show_gre_tunnel_br_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "${cvg1.cvg.wan.ip}" -p 4 -i "${br1.br.mgt0.ip}" -p 6 -i "${cvg1.cvg.tunnel.ip}"</log-match>
		</step>

		<step no="1.4d">
			<desc>
				check gre tunnel on cvg side
				local to CVG wan address
			</desc>
			<log-file>show_gre_tunnel_cvg.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "any" -p 4 -i "${cvg1.cvg.wan.ip}" -p 6 -i "anonymous"</log-match>
		</step>

		<step no="set_lan_info">
			<multi-setvar>
				echo "cvg1.cvg.lan.route=$(echo ${cvg1.cvg.lan.ip} | cut -d. -f1,2,3).0"
				echo "cvg1.cvg.lan.route1=$(echo ${cvg1.vpc1.tif.ip} | cut -d. -f1,2,3).0"
				echo "cvg1.dns1.route=$(echo ${cvg1.dns1.ip} | cut -d. -f1,2,3).0"
				echo "cvg1.cvg.lan2.route=$(echo ${cvg1.cvg.lan2.gateway} | cut -d. -f1,2,3).0"
				echo "br1.br.mgt0.1.route=$(echo ${br1.br.mgt0.1.ip} | cut -d. -f1,2,3).0"
				echo "br1.br.mgt0.2.route=$(echo ${br1.br.mgt0.2.ip} | cut -d. -f1,2,3).0"
				echo "br1.br.mgt0.4.route=$(echo ${br1.br.mgt0.4.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<step no="2.1a">
			<desc>enable debug on CVG</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "_debug brd basic"
				-v "clear log buffer"
			</telnet>
		</step>

		<step no="2.1b">
			<desc>
				Enable OSPF on GW, Enable OSPF advertise on lan, change the backhaul
				networking under DR or other routers, such as add/delete subnets, result 1:
				OSPF is enabled on GW, GW will update the routes’ status while receive the update message.
			</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "routing protocol ospf advertise eth1"
				-v "routing protocol ospf router-id ${cvg1.cvg.lan.ip}"
				-v "routing protocol type ospf"
				-v "routing protocol enable"
			</telnet>
		</step>

		<step no="2.2a" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc> On BR, all subnets get from GW will be tunneled</desc>
			<log-file>2.2a.show_route_br_01_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${cvg1.cvg.lan.route}" -p 3 -i "255.255.255.0" -p 8 -i "tunnel0"</log-match>
		</step>

		<step no="2.2b" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>
				On GW, all subnets get from BR will be tunneled,
				GW will update the routes’ status while receive the update message
			</desc>
			<log-file>2.2b.show_route_cvg_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${br1.br.mgt0.1.route}" -p 8 -i "tunnel0"</log-match>
			<log-match>-p 1 -i "${cvg1.cvg.lan.route1}" -p 8 -i "eth1"</log-match>
		</step>

		<include prefix="2.2c" file="${case.dir}/subs/save_cvg_log_buff.xml" obj-args="cvg1" args="show log buffer, step2.2c.ospfd_debug_info.log" />

		<step no="2.2d">
			<desc>Check log</desc>
			<log-file>2.2d.match_saved_cvg_log.log</log-file>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "Route[\t ]*add[\t ]*${cvg1.dns1.route}/${cvg1.cvg.lan.netmask}[\t ]*nexthop[\t ]*${cvg1.cvg_lan.gw}" -f ${log.dir}/step2.2c.ospfd_debug_info.log</log-match>
		</step>


		<include prefix="2.3" file="${case.dir}/subs/cvg_l3sw_vlan_cfg.xml" obj-args="cvg1" />

		<step no="2.3b" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>On BR, will add the tunnel routes according to CVG's modification </desc>
			<log-file>2.3b.show_route_br_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${cvg1.cvg.lan2.route}" -p 8 -i "tunnel0"</log-match>
		</step>

		<include prefix="2.3c" file="${case.dir}/subs/save_cvg_log_buff.xml" obj-args="cvg1" args="show log buffer, step2.3c.ospfd_debug_info.log" />

		<step no="2.3d">
			<desc>Check log</desc>
			<log-file>2.3d.match_saved_cvg_log.log</log-file>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "Route[\t ]*add[\t ]*${cvg1.cvg.lan2.route}/${cvg1.cvg.lan.netmask}[\t ]*nexthop[\t ]*${cvg1.cvg_lan.gw}" -f ${log.dir}/step2.3c.ospfd_debug_info.log</log-match>
		</step>

		<include prefix="2.4" file="${case.dir}/subs/cvg_l3sw_vlan_undo.xml" obj-args="cvg1" />

		<step no="2.4b" type="loop-check" loop-max-times="20" loop-interval="30">
			<desc>On BR, will delete the tunnel routes according to CVG's modification </desc>
			<log-file>2.4b.show_route_br_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-n -p 1 -i "${cvg1.cvg.lan2.route}" -p 8 -i "tunnel0"</log-match>
		</step>

		<include prefix="2.4c" file="${case.dir}/subs/save_cvg_log_buff.xml" obj-args="cvg1" args="show log buffer, step2.4c.ospfd_debug_info.log" />

		<step no="2.4d">
			<desc>Check log</desc>
			<log-file>2.4d.match_saved_cvg_log.log</log-file>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "Route[\t ]*delete[\t ]*${cvg1.cvg.lan2.route}/${cvg1.cvg.lan.netmask}[\t ]*nexthop[\t ]*${cvg1.cvg_lan.gw}" -f ${log.dir}/step2.4c.ospfd_debug_info.log</log-match>
		</step>

		<step no="3.1">
			<desc>Disable OSPF on GW</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "no routing protocol enable"
			</telnet>
		</step>

		<step no="3.2" type="loop-check" loop-max-times="6" loop-interval="10">
			<desc>OSPF is disabled on GW, OSPF neighbors will be lost after timeout</desc>
			<log-file>3.2.show_ospf_neighbor_2_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "show ospf neighbor"
			</telnet>
			<log-match>-n -p 3 -i "Full/DR" -p 6 -i "eth1:${cvg1.cvg.lan.ip}"</log-match>
			<no-error-check />
		</step>

		<step no="3.3" type="loop-check" loop-max-times="6" loop-interval="10">
			<desc>OSPF is disabled on GW, all routes learned from OSPF will be deleted</desc>
			<log-file>3.3.show_cvg_route_1_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "show ip route"
			</telnet>
			<log-match>-n -p 1 -i "${cvg1.cvg.lan.route1}" -p 8 -i "eth1"</log-match>
		</step>

	</stage>

	<failed-process>
		<stage>
			<include prefix="0.1_undo" file="${case.dir}/subs/cvg_l3sw_vlan_undo.xml" obj-args="cvg1" />
		</stage>

		<include file="include/br_default_failed_process.xml" />

	</failed-process>

</testcase>
