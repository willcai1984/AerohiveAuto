<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Lan ports work with trunk mode, check ingress packet forwarding with/without vlan tag</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		Laptop1 connect to lan port eth1
		Laptop2 connect to lan port eth2
		Lan ports work with trunk mode

		Test Procedure:

		1. Lan port eth1/eth2 in same vlan
		2. Configure native-vlan, allowed-vlan list for ethx
		3. Laptop1 send a packet to laptop2 without vlan tag. (icmp) Result1
		4. Laptop1 send a packet to laptop2 with a vlan tag match native-vlan. (icmp) Result2
		5. Laptop1 send a packet to laptop2 with a vlan tag match allowed-vlan list. (icmp)
		Result3
	</description>
	<numofcvg>0</numofcvg>
	<numofbr>1</numofbr>
	<tbtype>linux</tbtype>

	<stage>

		<step no="1.1">
			<desc>
				1.1 Configure mgt0.1 vlan 10
			</desc>
			<telnet target="${br1.br.wan.ip}">			        
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
				-v "interface mgt0.1 dns-server enable"
				-v "interface eth1 native-vlan ${br1.vlan2}"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				1.2 mgt0.2 vlan 20
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.2 vlan ${br1.vpc2.vlan}"
				-v "interface mgt0.2 ip ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
				-v "interface mgt0.2 dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface mgt0.2 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.2 dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface mgt0.2 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.2 dhcp-server enable"
				-v "interface mgt0.2 dns-server enable"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				1.3 mgt0.3 vlan 30
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.3 vlan ${br1.vpc3.vlan}"
				-v "interface mgt0.3 ip ${br1.br.mgt0.3.ip}/${br.lan.netmask}"
				-v "interface mgt0.3 dhcp-server ip-pool ${br1.br.mgt0.3.ip_pool_start} ${br1.br.mgt0.3.ip_pool_end}"
				-v "interface mgt0.3 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.3 dhcp-server options default-gateway ${br1.br.mgt0.3.ip}"
				-v "interface mgt0.3 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.3 dhcp-server enable"
				-v "interface mgt0.3 dns-server enable"
			</telnet>
		</step>

		<step no="1.4">
			<desc>
				eth1, eth2, eth3 in trunk mode, eth4 in access mode
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface eth1 mode bridge-802.1q"
				-v "interface eth2 mode bridge-802.1q"
				-v "interface eth3 mode bridge-802.1q"
				-v "interface eth4 mode bridge-access"
			</telnet>
		</step>

		<step no="2">
			<desc>
				2. Configure native-vlan for lan ports as vlan 10
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0 native-vlan ${br1.vpc1.vlan}"
				-v "interface eth3 native-vlan 1"
				-v "interface eth3 allowed-vlan ${br1.vpc1.vlan}"
				-v "show lan port-config"
				-v "show lan vlan-table"
			</telnet>
		</step>

		<step no="3.1a">
			<desc>
				AP1 connect to lan port eth3
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "interface mgt0 vlan ${br1.vpc1.vlan}"
				-v "no interface mgt0 dhcp client"
				-v ""
				-v ""
				-v "interface mgt0 dhcp client"
				-v ""
				-v ""
			</console>
		</step>

		<step no="3.1b" delay="20">
			<desc>
				show AP1 mgt0
			</desc>
			<log-file>step3.1b_show_int_mgt0.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="3.1c">
			<desc>get ip address of ap1</desc>
			<setvar name="br1.ap1.mgt0.ip">
				${bin.dir}/getbyrexp.py -p "IP addr=([\d.]+)" -f ${log.dir}/step3.1b_show_int_mgt0.log -t str
			</setvar>
		</step>

		<step no="get_prefix">
			<multi-setvar>
				echo "br1.mgt0.1.prefix=$(echo ${br1.br.mgt0.1.ip_pool_start} | cut -d. -f1,2,3)"
				echo "br1.ap1.prefix=$(echo ${br1.ap1.mgt0.ip} | cut -d. -f1,2,3)"
			</multi-setvar>
		</step>

		<step no="4">
			<desc>
				4. check ip address of AP1: AP1 obtain ip address from mgt0.1 dhcp server
			</desc>
			<log-file>step4_ip_prefix.log</log-file>
			<script>
				if [ "${br1.mgt0.1.prefix}" == "${br1.ap1.prefix}" ]; then exit 0; else exit 1; fi
			</script>
		</step>

		<step no="5">
			<desc>
				5. Configure lan port eth3 native-vlan 10, allowed-vlan 20
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface eth3 native-vlan ${br1.vpc1.vlan}"
				-v "interface eth3 allowed-vlan ${br1.vpc2.vlan}"
				-v "interface eth3 allowed-vlan ${br1.vpc1.vlan}"
			</telnet>
		</step>

		<step no="6">
			<desc>
				6. Configure lan port eth1 native-vlan as 10 with access mode
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
			</telnet>
		</step>

		<step no="7">
			<desc>
				7. check vlan-table.
			</desc>
			<log-file>step7_show_lan_portconfig.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show lan port-config"
			</telnet>
			<log-match>-p 1 -i "eth4" -p 3 -i "Y" -p 4 -i "port-based" -p 5 -i "1" -p 6 -i "-"</log-match>
			<log-match>-p 1 -i "eth2" -p 3 -i "Y" -p 4 -i "trunk" -p 5 -i "${br1.vpc1.vlan}" -p 6 -i "No"</log-match>
			<log-match>-p 1 -i "eth3" -p 3 -i "Y" -p 4 -i "trunk" -p 5 -i "${br1.vpc1.vlan}" -p 6 -i "Yes"</log-match>
			<log-match>-p 1 -i "eth1" -p 3 -i "Y" -p 4 -i "port-based" -p 5 -i "${br1.vpc1.vlan}" -p 6 -i "-"</log-match>
		</step>

		<step no="7.1">
			<desc>
				show lan vlan-table
			</desc>
			<log-file>step7.1_show_lan_vlantable.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show lan vlan-table"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth1[\t ]+eth2[\t ]+eth3[\t ]+${br1.vpc1.vlan}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth3[\t ]+${br1.vpc2.vlan}" -f ${log.dir}/${log.file}</log-match>
			<failed>next</failed>
		</step>

		<step no="7.2a">
			<desc>
				vpc1 connect to lan port eth1
			</desc>
			<log-file>ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="7.2b">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="get_prefix">
			<multi-setvar>
				echo "br1.vpc1.prefix=$(echo ${br1.vpc1.tif.ip} | cut -d. -f1,2,3)"
			</multi-setvar>
		</step>

		<step no="7.3">
			<desc>
				check ip address of vpc1: vpc1 obtains ip address from mgt0.1 dhcp server
			</desc>
			<log-file>step7.3_ip_prefix.log</log-file>
			<script>
				if [ "${br1.mgt0.1.prefix}" == "${br1.vpc1.prefix}" ]; then exit 0; else exit 1; fi
			</script>
		</step>

		<step no="8" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				8. PC1 send packet with vlan tag 10 to laptop1 : laptop1 can receive the packet
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "interface mgt0 vlan ${br1.vpc2.vlan}"
				-v "no interface mgt0 dhcp client"
				-v "interface mgt0 dhcp client"
				-v ""
				-v ""
				-v "ping ${br1.vpc1.tif.ip}"
			</console>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="9">
			<desc>
				9. Change lan port eth1 native-vlan as vlan 20
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "user-profile lan402 qos-policy def-user-qos vlan-id ${br1.vpc2.vlan} attribute 2"
				-v "interface eth1 mode bridge-access user-profile-attribute 2"
			</telnet>
		</step>

		<step no="9.2a">
			<desc>
				vpc1 connect to lan port eth1
			</desc>
			<log-file>ifconfig_vpc1_2.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
			        -v "dhclient ${br1.vpc1.tif.name} -r"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="9.2b">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="10">
			<desc>
				10. Pc1 send packet with vlan tag 20 to laptop1
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "interface mgt0 vlan ${br1.vpc2.vlan}"
			</console>
		</step>

		<step no="10.1" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				Result4: laptop1 can receive the packet
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "ping ${br1.vpc1.tif.ip}"
			</console>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="11">
			<desc>
				11. Lan port eth1 native-vlan as vlan 30.
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "user-profile lan403 qos-policy def-user-qos vlan-id ${br1.vpc3.vlan} attribute 3"
				-v "interface eth1 mode bridge-access user-profile-attribute 3"
			</telnet>
		</step>

		<step no="11.2a">
			<desc>
				vpc1 connect to lan port eth1
			</desc>
			<log-file>ifconfig_vpc1_3.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
			        -v "dhclient ${br1.vpc1.tif.name} -r"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="11.2b">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="12">
			<desc>
				12. Pc1 send packet with vlan tag 30 to laptop1
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "interface mgt0 vlan ${br1.vpc3.vlan}"
			</console>
		</step>

		<step no="12.1">
			<desc>
				Result5: laptop1 can’t receive the packet; the packet is dropped by hw.
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "ping ${br1.vpc1.tif.ip}"
			</console>
			<log-match>-n -c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="13">
			<desc>
				13. add an allowed-vlan 30 for lan port eth3
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface eth3 allowed-vlan ${br1.vpc3.vlan}"
			</telnet>
		</step>

		<step no="14" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				14. pc1 send packet with vlan tag 30 to laptop2: laptop1 can receive the packet
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "ping ${br1.vpc1.tif.ip}"
			</console>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

	</stage>

</testcase>
