<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check broadcast packet forwarding path with trunk mode</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		PC1 connect to switch
		Laptop1 connect to lan port eth3
		Laptop2 connect to lan port eth2
		Laptop3 connect to lan port eth3
		Station1 connect to wifi
		BR lan port works with trunk mode
		Lan port eth3, eth2 in same vlan, eth3 in another vlan

		Test Procedure:

		1. Lan port eth3, eth2 are with vlan 10
		2. Lan port eth3 is with vlan 20
		3. Disabe vlan id check
		4. Laptop1 send broadcast packet with vlan tag 10.
		Capture packet on laptop2, laptop3. Result1
		5. Laptop1 send broadcast packet with vlan tag 20.
		Capture packet on laptop2, laptop3. Result2
	</description>
	<numofcvg>0</numofcvg>
	<numofbr>1</numofbr>
	<tbtype>linux</tbtype>
	<property name="conn1.ssid" value="${job.sid}-${tb.name}" />
	<property name="eth.broadcast.mac" value="ff-ff-ff-ff-ff-ff" />
	<property name="br1.vlan5" value="1305" />
    
	<stage>

		<step no="set_tmp_IP">
			<multi-setvar>
				echo "br1.br.tmp1.ip=$(echo ${br1.br.mgt0.1.ip_pool_end} | cut -d. -f1,2,3).$(expr $(echo ${br1.br.mgt0.1.ip_pool_end} | cut -d. -f4) + 4)"
				echo "br1.br.tmp2.ip=$(echo ${br1.br.mgt0.2.ip_pool_end} | cut -d. -f1,2,3).$(expr $(echo ${br1.br.mgt0.2.ip_pool_end} | cut -d. -f4) + 4)"
				echo "br1.br.tmp3.ip=$(echo ${br1.br.mgt0.3.ip_pool_end} | cut -d. -f1,2,3).$(expr $(echo ${br1.br.mgt0.3.ip_pool_end} | cut -d. -f4) + 4)"
				echo "br1.br.tmp4.ip=$(echo ${br1.br.mgt0.4.ip_pool_end} | cut -d. -f1,2,3).$(expr $(echo ${br1.br.mgt0.4.ip_pool_end} | cut -d. -f4) + 4)"
				echo "br1.br.tmp5.ip=$(echo ${br1.br.mgt0.5.ip_pool_end} | cut -d. -f1,2,3).$(expr $(echo ${br1.br.mgt0.5.ip_pool_end} | cut -d. -f4) + 4)"
			</multi-setvar>
		</step>

		<step no="pre_2">
			<desc>
				create mgt0.1, mgt0.2 DHCP server
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vlan1}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
				-v "interface mgt0.2 vlan ${br1.vlan2}"
				-v "interface mgt0.2 ip ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
				-v "interface mgt0.2 dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface mgt0.2 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.2 dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface mgt0.2 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.2 dhcp-server enable"
			</telnet>
		</step>

		<step no="pre_3">
			<desc>
				create mgt0.3, mgt0.4, mgt0.5 dhcp server
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.3 vlan ${br1.vlan3}"
				-v "interface mgt0.3 ip ${br1.br.mgt0.3.ip}/${br.lan.netmask}"
				-v "interface mgt0.3 dhcp-server ip-pool ${br1.br.mgt0.3.ip_pool_start} ${br1.br.mgt0.3.ip_pool_end}"
				-v "interface mgt0.3 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.3 dhcp-server options default-gateway ${br1.br.mgt0.3.ip}"
				-v "interface mgt0.3 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.3 dhcp-server enable"
				-v "interface mgt0.4 vlan ${br1.vlan4}"
				-v "interface mgt0.4 ip ${br1.br.mgt0.4.ip}/${br.lan.netmask}"
				-v "interface mgt0.4 dhcp-server ip-pool ${br1.br.mgt0.4.ip_pool_start} ${br1.br.mgt0.4.ip_pool_end}"
				-v "interface mgt0.4 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.4 dhcp-server options default-gateway ${br1.br.mgt0.4.ip}"
				-v "interface mgt0.4 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.4 dhcp-server enable"
			</telnet>
		</step>

		<step no="pre_4">
			<desc>
				create mgt0.5 dhcp server
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.5 vlan ${br1.vlan5}"
				-v "interface mgt0.5 ip ${br1.br.mgt0.5.ip}/${br.lan.netmask}"
				-v "interface mgt0.5 dhcp-server ip-pool ${br1.br.mgt0.5.ip_pool_start} ${br1.br.mgt0.5.ip_pool_end}"
				-v "interface mgt0.5 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.5 dhcp-server options default-gateway ${br1.br.mgt0.5.ip}"
				-v "interface mgt0.5 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.5 dhcp-server enable"
			</telnet>
		</step>
		
		<step no="pre_5">
			<desc>
				show br mgt0
			</desc>
			<log-file>show_br_mgt0.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show interface mgt0"				
			</telnet>
		</step>

		<step no="pre_6">
			<desc>get mgt0 mac of br</desc>
			<setvar name="br1.br.mgt0.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/show_br_mgt0.log -i mgt0 -o aero -m -w
			</setvar>
		</step>

		<step no="1">
			<desc>
				PC1 connect to switch
				1. Lan port eth3 trunk mode with vlan 10 (br1.vlan1) disable vlan-id-check, Laptop1 (AP1) connect to lan port eth3,
				2. Lan port eth4 trunk mode with vlan 20 (br1.vlan2), allow-vlan 20,40; Laptop2 (ap2) connect to lan port eth4
				3. Lan port eth1 acess mode with vlan 30 (br1.vlan3), Laptop3 (VPC1) connect to lan port eth1
				7. Sta1 associated with vlan 50 (br1.vlan5)
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vlan3} attribute 1"
				-v "interface eth3 mode bridge-802.1q"
				-v "interface eth3 native-vlan ${br1.vlan1}"
				-v "no interface eth3 allowed-vlan"
				-v "interface eth2 mode bridge-802.1q"
				-v "interface eth2 native-vlan ${br1.vlan2}"
				-v "interface eth2 allowed-vlan ${br1.vlan2}"
				-v "interface eth2 allowed-vlan ${br1.vlan4}"
				-v "interface eth1 mode bridge-access user-profile-attribute 1"				
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				BR lan port eth3/eth4 works with trunk mode
				BR lan port eth1 works with port-based mode
				Lan port eth1, eth3 ,eth4 with different vlan
			</desc>
			<log-file>step1.1_show_lan_portconfig.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show lan port-config"
			</telnet>
			<log-match>-p 1 -i "eth3" -p 4 -i "trunk" -p 5 -i "${br1.vlan1}" -p 6 -i "No"</log-match>
			<log-match>-p 1 -i "eth2" -p 4 -i "trunk" -p 5 -i "${br1.vlan2}" -p 6 -i "Yes"</log-match>
			<log-match>-p 1 -i "eth1" -p 4 -i "port-based" -p 5 -i "${br1.vlan3}"</log-match>
		</step>

		<step no="1.1a">
		<if>"${br.platform}" == "br200wp"</if>
			<desc>
				show lan vlan-table
			</desc>
			<log-file>step1.1a_show_lan_vlantable.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show lan vlan-table"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth3[\t ]+${br1.vlan1}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth2[\t ]+eth3[\t ]+${br1.vlan2}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth1[\t ]+eth3[\t ]+${br1.vlan3}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth2[\t ]+eth3[\t ]+${br1.vlan4}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth4[\t ]+1" -f ${log.dir}/${log.file}</log-match>
		</step>
		
		<step no="1.1b">
		<if>"${br.platform}" == "br100"</if>
			<desc>
				show lan vlan-table
			</desc>
			<log-file>step1.1b_show_lan_vlantable.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show lan vlan-table"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth3[\t ]+${br1.vlan1}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth2[\t ]+eth3[\t ]+${br1.vlan2}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth1[\t ]+eth3[\t ]+${br1.vlan3}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth2[\t ]+eth3[\t ]+${br1.vlan4}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth4[\t ]+1" -f ${log.dir}/${log.file}</log-match>
		</step>
		
		<include prefix="pre2.1" file="subs/br_eth2_l2swcfg.xml" obj-args="br1" args="${br1.vpc2.vlan},${br1.vpc2.vlan},access" />

		<step no="2.1a">
			<desc>
				Laptop1 connect to lan port eth2
			</desc>
			<log-file>ifconfig_vpc2_.log</log-file>
			<ssh target="br1.vpc2" timeout="120">
				-v "dhclient ${br1.vpc2.tif.name}"
				-v "ifconfig ${br1.vpc2.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="2.1b">
			<desc>set br1.vpc2.tif.ip var for vpc2 on BR side</desc>
			<setvar name="br1.vpc2.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc2.mif.ip} -u ${br1.vpc2.user} -p ${br1.vpc2.passwd} -i ${br1.vpc2.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.2">
			<desc>
				AP1 as Laptop1 connect to lan port eth3
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "interface mgt0 vlan ${br1.vlan1}"
				-v "interface mgt0 native-vlan ${br1.vlan1}"
				-v "no interface mgt0 dhcp client"
				-v ""
				-v ""
				-v "interface mgt0 dhcp client"
				-v ""
				-v ""
			</console>
		</step>

		<step no="2.2b" delay="20">
			<desc>
				show AP1 mgt0
			</desc>
			<log-file>step2.2b_show_int_mgt0.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="2.2c">
			<desc>get ip address of ap1</desc>
			<setvar name="br1.ap1.mgt0.ip">
				${bin.dir}/getbyrexp.py -p "IP addr=([\d.]+)" -f ${log.dir}/step2.2b_show_int_mgt0.log -t str
			</setvar>
		</step>

		<step no="2.3">
			<desc>br1.vpc1 as Laptop3 connect to lan ports eth1, dhclient retrieve ip address</desc>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="2.3b">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		
		<step no="get_prefix">
			<multi-setvar>
				echo "br1.mgt0.1.prefix=$(echo ${br1.br.mgt0.1.ip_pool_start} | cut -d. -f1,2,3)"
				echo "br1.mgt0.2.prefix=$(echo ${br1.br.mgt0.2.ip_pool_start} | cut -d. -f1,2,3)"
				echo "br1.mgt0.3.prefix=$(echo ${br1.br.mgt0.3.ip_pool_start} | cut -d. -f1,2,3)"
				echo "br1.mgt0.4.prefix=$(echo ${br1.br.mgt0.4.ip_pool_start} | cut -d. -f1,2,3)"
				echo "br1.mgt0.5.prefix=$(echo ${br1.br.mgt0.5.ip_pool_start} | cut -d. -f1,2,3)"
				echo "br1.ap1.prefix=$(echo ${br1.ap1.mgt0.ip} | cut -d. -f1,2,3)"
				echo "br1.vpc1.prefix=$(echo ${br1.vpc1.tif.ip} | cut -d. -f1,2,3)"				
				echo "br1.vpc2.prefix=$(echo ${br1.vpc2.tif.ip} | cut -d. -f1,2,3)"
			</multi-setvar>
		</step>

		<step no="2.4a">
			<desc>
				Laptop1 get IP from mgt0.1
			</desc>
			<script>
				if [ "${br1.mgt0.1.prefix}" == "${br1.ap1.prefix}" ]; then exit 0; else exit 1; fi
			</script>
		</step>

		<step no="2.4b">
			<desc>
				vpc2 get ip address from mgt0.2
			</desc>
			<script>
				if [ "${br1.vpc2.prefix}" == "${br1.mgt0.2.prefix}" ]; then exit 0; else exit 1; fi
			</script>
		</step>

		<step no="2.5a">
			<desc>
				Laptop3 get ip from mgt0.3
			</desc>
			<script>
				if [ "${br1.vpc1.prefix}" == "${br1.mgt0.3.prefix}" ]; then exit 0; else exit 1; fi
			</script>
		</step>

		<step no="3.1" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				ap1 ping mgt0.1
			</desc>
			<log-file>step3.1_ping.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "ping ${br1.br.mgt0.1.ip}"
			</console>
			<log-match>-c -i "from ${br1.br.mgt0.1.ip}: " -i "ttl="</log-match>
		</step>

		<step no="3.2" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				VPC1 ping mgt0.3
			</desc>
			<log-file>step3.2_ping.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${br1.br.mgt0.3.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${br1.br.mgt0.3.ip}: " -i "ttl="</log-match>
		</step>

		<step no="3.3">
			<desc>
				set AP1 static ip address
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "no interface mgt0 dhcp client"
				-v "interface mgt0 ip ${br1.ap1.mgt0.ip}/${br.lan.netmask}"
				-v "ip route default gateway ${br1.br.mgt0.1.ip}"
				-v ""
			</console>
		</step>

		<step no="3.4">
			<desc>
				vpc2 ping mgt0.2
			</desc>
			<log-file>step3.4_ping.log</log-file>
			<ssh target="br1.vpc2" timeout="120">
				-v "ping ${br1.br.mgt0.2.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${br1.br.mgt0.2.ip}: " -i "ttl="</log-match>
		</step>

		<step no="4">
			<desc>
				open FF debug on BR
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear forwarding-engine mac-sessions"
				-v "_ff id 1 etype 0806 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buf"
			</telnet>
		</step>

		<step no="5.11a">
			<desc>
				open FF debug on BR.AP1 (laptop1)
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "_ff id 1 etype 0806 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buf"
			</console>
		</step>
		

		<step no="5.12a">
			<desc>
				packet capture on br1.vpc1 (Laptop3)
			</desc>
			<log-file>step5.12a_vpc1_packet_capture.log</log-file>
			<ssh target="br1.vpc1">
				-v "nohup tshark -l -i ${br1.vpc1.tif.name} > ${job.id}vpc1_icmp_1.log &amp;"
			</ssh>
		</step>

		<step no="5.12b">
			<desc>
				get vpc1 tshark process
			</desc>
			<setvar name="vpc1.tshark.id_1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step5.12a_vpc1_packet_capture.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="5.2">
			<desc>
				5. Laptop1 send broadcast packet with vlan tag 10. (br1.vlan1) ret1: can’t capture packet on laptop2/laptop3.
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "no interface mgt0 native-vlan"
				-v ""
				-v ""
				-v ""
				-v "ping ${br1.br.tmp1.ip}"
			</console>
		</step>

		<step no="5.2b">
			<desc>
				show log buf
			</desc>
			<log-file>Step5.2b_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show log buf"
				-v ""
				-v ""
				-v ""
				-v "clear log buf"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(i\) eth3.+->ffff:ffff:ffff[\t ]+arp[\t ]+${br1.ap1.mgt0.ip}.+>[\t ]*${br1.br.tmp1.ip}" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		

		<step no="5.3">
			<desc>
				laptop3 can't receive the packet
			</desc>
			<log-file>Step5.4_capture_packet_check.log</log-file>
			<ssh target="br1.vpc1">
				-v "kill -9 ${vpc1.tshark.id_1}"
				-v "cat ${job.id}vpc1_icmp_1.log | grep "ARP""
				-v "rm -f ${job.id}vpc1_icmp_1.log"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "->[\t ]+Broadcast[\t ]+ARP Who has ${br1.br.tmp1.ip}\?[\t ]+Tell ${br1.ap1.mgt0.ip}" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.4">
			<desc>
				clear log buf
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "clear log buff"
			</console>
		</step>

		<step no="5.5a">
			<desc>
				packet capture on br1.vpc1 (Laptop3)
			</desc>
			<log-file>step6.12a_vpc1_packet_capture.log</log-file>
			<ssh target="br1.vpc1">
				-v "nohup tshark -l -i ${br1.vpc1.tif.name} > ${job.id}vpc1_icmp_1.log &amp;"
			</ssh>
		</step>

		<step no="5.5b">
			<desc>
				get vpc1 tshark process
			</desc>
			<setvar name="vpc1.tshark.id_1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step6.12a_vpc1_packet_capture.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="6.2">
			<desc>
				6. Laptop1 (AP1) send broadcast packet with vlan tag 20 (br1.vlan2), Result2: laptop2 can capture the packet, laptop3 can’t capture the packet
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "interface mgt0 vlan ${br1.vlan2}"
				-v ""
				-v ""
				-v ""
				-v "ping ${br1.br.tmp1.ip}"
			</console>
		</step>

		<step no="6.2b">
			<desc>
				show log buf
			</desc>
			<log-file>Step6.2b_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show log buf"
				-v ""
				-v ""
				-v ""
				-v "clear log buf"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(i\) eth3.+->ffff:ffff:ffff[\t ]+arp[\t ]+${br1.ap1.mgt0.ip}.+>[\t ]*${br1.br.tmp1.ip}" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="6.3">
			<desc>
				laptop3 can not receive the packet (eth1)
			</desc>
			<log-file>Step6.4_capture_packet_check.log</log-file>
			<ssh target="br1.vpc1">
				-v "kill -9 ${vpc1.tshark.id_1}"
				-v "cat ${job.id}vpc1_icmp_1.log | grep "ARP""
				-v "rm -f ${job.id}vpc1_icmp_1.log"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "->[\t ]+Broadcast[\t ]+ARP Who has ${br1.br.tmp1.ip}\?[\t ]+Tell ${br1.ap1.mgt0.ip}" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7.1">
			<desc>
				clear log buf on BR.AP1
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "interface mgt0 vlan ${br1.vlan1}"
				-v "interface mgt0 native-vlan ${br1.vlan1}"
				-v "clear log buf"
			</console>
		</step>		

		<step no="7.2a">
			<desc>
				packet capture on br1.vpc1 (Laptop3)
			</desc>
			<log-file>step7.12a_vpc1_packet_capture.log</log-file>
			<ssh target="br1.vpc1">
				-v "nohup tshark -l -i ${br1.vpc1.tif.name} > ${job.id}vpc1_icmp_1.log &amp;"
			</ssh>
		</step>

		<step no="7.2b">
			<desc>
				get vpc1 tshark process
			</desc>
			<setvar name="vpc1.tshark.id_1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step7.12a_vpc1_packet_capture.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

	
		<include prefix="7.3" file="subs/save_ap_log.xml" args="show log buff,br1.ap1,step7.3a_ap1_show_log_buf.log" />
		

		<step no="7.3">
			<desc>
				laptop3 cannot receive the pkt
			</desc>
			<log-file>Step7.5_capture_packet_check.log</log-file>
			<ssh target="br1.vpc1">
				-v "kill -9 ${vpc1.tshark.id_1}"
				-v "cat ${job.id}vpc1_icmp_1.log | grep "ARP""
				-v "rm -f ${job.id}vpc1_icmp_1.log"
			</ssh>
		</step>

		<step no="8">
			<desc>
				Add allow-vlan 50 for lan port eth4
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface eth2 allowed-vlan ${br1.vlan5}"
			</telnet>
		</step>

		<step no="8.1">
			<desc>
				BR lan port eth3/eth4 works with trunk mode
				BR lan port eth1 works with port-based mode
			</desc>
			<log-file>step8.1_show_lan_portconfig.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show lan port-config"
			</telnet>
			<log-match>-p 1 -i "eth3" -p 4 -i "trunk" -p 5 -i "${br1.vlan1}" -p 6 -i "No"</log-match>
			<log-match>-p 1 -i "eth2" -p 4 -i "trunk" -p 5 -i "${br1.vlan2}" -p 6 -i "Yes"</log-match>
			<log-match>-p 1 -i "eth1" -p 4 -i "port-based" -p 5 -i "${br1.vlan3}"</log-match>
			<failed>next</failed>
		</step>

		<step no="8.1a">
		<if>"${br.platform}" == "br200wp"</if>
			<desc>
				show lan vlan-table
			</desc>
			<log-file>step8.1a_show_lan_vlantable.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show lan vlan-table"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth3[\t ]+${br1.vlan1}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth2[\t ]+eth3[\t ]+${br1.vlan5}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth2[\t ]+eth3[\t ]+${br1.vlan2}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth2[\t ]+eth3[\t ]+${br1.vlan4}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth1[\t ]+eth3[\t ]+${br1.vlan3}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth3[\t ]+eth4[\t ]+1" -f ${log.dir}/${log.file}</log-match>			
		</step>
		
		<step no="8.1b">
		<if>"${br.platform}" == "br100"</if>
			<desc>
				show lan vlan-table
			</desc>
			<log-file>step8.1b_show_lan_vlantable.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show lan vlan-table"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth3[\t ]+${br1.vlan1}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth2[\t ]+eth3[\t ]+${br1.vlan5}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth2[\t ]+eth3[\t ]+${br1.vlan2}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth2[\t ]+eth3[\t ]+${br1.vlan4}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth1[\t ]+eth3[\t ]+${br1.vlan3}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth3[\t ]+eth4[\t ]+1" -f ${log.dir}/${log.file}</log-match>
			<failed>next</failed>
		</step>

		<step no="9.11">
			<desc>
				clear log buf on BR.AP1 (laptop1)
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "clear log buf"
			</console>
		</step>		

		<step no="9.12a">
			<desc>
				packet capture on br1.vpc1 (Laptop3)
			</desc>
			<log-file>step9.12a_vpc1_packet_capture.log</log-file>
			<ssh target="br1.vpc1">
				-v "nohup tshark -l -i ${br1.vpc1.tif.name} > ${job.id}vpc1_icmp_1.log &amp;"
			</ssh>
		</step>

		<step no="9.12b">
			<desc>
				get vpc1 tshark process
			</desc>
			<setvar name="vpc1.tshark.id_1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step9.12a_vpc1_packet_capture.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>
		
                <step no="9.2a">
			<desc>
				6. Laptop1 (AP1) send broadcast packet with vlan tag 50 (br1.vlan2), Result2: laptop2 can capture the packet, laptop3 can’t capture the packet
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "interface mgt0 vlan ${br1.vlan5}"
				-v ""
				-v "clear arp-cache"
				-v ""
				-v "ping ${br1.br.tmp5.ip}"
			</console>
		</step>
		
		<step no="9.2b">
			<desc>
				show log buf
			</desc>
			<log-file>Step9.2b_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show log buf"
				-v ""
				-v ""
				-v ""
				-v "clear log buf"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(i\) eth3.+->${br1.br.mgt0.mac}[\t ]+arp[\t ]+${br1.ap1.mgt0.ip}.+>[\t ]*${br1.br.mgt0.1.ip}" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>		
		<step no="9.3" delay="10">
			<desc>
				Result4: laptop3 cannot receive pkt
			</desc>
			<log-file>Step9.5_capture_packet_check.log</log-file>
			<ssh target="br1.vpc1">
				-v "kill -9 ${vpc1.tshark.id_1}"
				-v "cat ${job.id}vpc1_icmp_1.log | grep "ARP""
				-v "rm -f ${job.id}vpc1_icmp_1.log"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "->[\t ]+Broadcast[\t ]+ARP Who has ${br1.br.tmp5.ip}\?[\t ]+Tell ${br1.sta1.tif.ip}" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>
	
	<post-process>
		<stage>
			<include prefix="post_br1_eth2_l2swcfg" file="subs/br_eth2_l2swcfg.xml" obj-args="br1" args="999, ${br1.vlan2}\,${br1.vlan3}" />
	   </stage>

		<include file="include/br_default_post_process.xml" />
	</post-process>

	<failed-process>
		<stage>
			<step no="0.1">
				<desc>
					kill tshark process on br1.vpc1
				</desc>
				<ssh target="br1.vpc1">
					-v "kill -9 ${vpc1.tshark.id_1}"
					-v "rm -f ${job.id}vpc1_icmp_1.log"
				</ssh>
				<no-error-check />
			</step>
		</stage>

		<include file="include/br_default_failed_process.xml" />
	</failed-process>
</testcase>
