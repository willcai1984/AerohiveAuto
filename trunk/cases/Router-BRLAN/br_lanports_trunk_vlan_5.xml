<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Lan ports work with trunk mode, check the egress packet vlan tag</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		Pc1 connect to switch
		Laptop1 connect to lan port eth1
		Laptop2 connect to lan port eth4
		Lan ports work with trunk mode

		Test Procedure:

		1. Configure ethx as trunk mode
		2. Configure its allowed-vlan list and native-vlan
		3. Configure mgt0.x for each vlan with dhcp server
		4. Laptop1/laptop2 in the same vlan
		5. Check laptop1, laptop2 ip address. [network card of laptop1/laptop2 support vlan-tag]
		Result1
		6. Laptop1 send a packet to laptop2, the egress packet vlan id is match native-vlan, check
		packet vlan tag received by laptop2. (laptop1 send icmp packet to laptop2) Result2
		7. Laptop1 send a packet to laptop2, the egress packet vlan id is match allowed-vlan list. Check
		packet vlan tag received by laptop2. (laptop1 send icmp packet to laptop2) Result3
	</description>
	<numofcvg>0</numofcvg>
	<numofbr>1</numofbr>
	<tbtype>winlin</tbtype>

	<stage>

		<step no="pre1.2">
			<desc>
				set mgt0.1 vlan
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vlan1}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
				-v "interface mgt0.2 vlan ${br1.vlan2}"
				-v "interface mgt0.2 ip ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
				-v "interface mgt0.2 dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface mgt0.2 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.2 dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface mgt0.2 dhcp-server options dns1 ${br1.br.mgt0.2.ip}"
				-v "interface mgt0.2 dhcp-server enable"
			</telnet>
		</step>

		<step no="pre1.3" delay="20">
			<desc>
				set mgt0.3 vlan
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.3 vlan ${br1.vlan3}"
				-v "interface mgt0.3 ip ${br1.br.mgt0.3.ip}/${br.lan.netmask}"
				-v "interface mgt0.3 dhcp-server ip-pool ${br1.br.mgt0.3.ip_pool_start} ${br1.br.mgt0.3.ip_pool_end}"
				-v "interface mgt0.3 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.3 dhcp-server options default-gateway ${br1.br.mgt0.3.ip}"
				-v "interface mgt0.3 dhcp-server options dns1 ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.3 dhcp-server enable"
			</telnet>
		</step>

		<step no="1">
			<desc>
				Pc1 connect to switch
				Laptop1 connect to lan port eth3
				Laptop2 connect to lan port eth4
				Lan ports work with trunk mode
			</desc>
		</step>

		<step no="1.2">
			<desc>
				1. Configure native-vlan, allowed-vlan list for eth3
				Native-vlan as 10: interface mgt0 native-vlan 10 / interface eth1 native-vlan 10
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface eth1 mode bridge-802.1q"
				-v "interface eth2 mode bridge-802.1q"
				-v "interface eth3 mode bridge-802.1q"
				-v "interface eth4 mode bridge-802.1q"
				-v "interface eth3 native-vlan ${br1.vlan1}"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				check port-config
			</desc>
			<log-file>step1.3_show_lan_portconfig.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show lan port-config"
			</telnet>
			<log-match>-p 1 -i "eth3" -p 3 -i "Y" -p 4 -i "trunk" -p 5 -i "${br1.vlan1}" -p 6 -i "No"</log-match>
			<log-match>-p 1 -i "eth4" -p 3 -i "Y" -p 4 -i "trunk" -p 5 -i "1" -p 6 -i "No"</log-match>
			<log-match>-p 1 -i "eth1" -p 3 -i "Y" -p 4 -i "trunk" -p 5 -i "1" -p 6 -i "No"</log-match>
			<log-match>-p 1 -i "eth2" -p 3 -i "Y" -p 4 -i "trunk" -p 5 -i "1" -p 6 -i "No"</log-match>
		</step>

		<step no="2">
			<desc>
				2. Disable vlan-id-check feature for eth3
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "no interface eth3 allowed-vlan"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				check allowed vlan
			</desc>
			<log-file>step2.1_show_allowed_vlan.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show int eth3 allowed-vlan "
			</telnet>
			<log-match>-i "1-4094"</log-match>
		</step>

		<step no="3">
			<desc>
				3. Lan port eth1 is access mode with native-vlan 30
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vlan3} attribute 1"
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "int eth1 mac-learning enable"
			</telnet>
		</step>

		<step no="4.1">
			<desc>
				4. Check vlan-table/port-config table Result1
			</desc>
			<log-file>step4.1_show_lan_portconfig.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show lan port-config"
			</telnet>
			<log-match>-p 1 -i "eth3" -p 4 -i "trunk" -p 5 -i "${br1.vlan1}" -p 6 -i "No"</log-match>
			<log-match>-p 1 -i "eth1" -p 4 -i "port-based" -p 5 -i "${br1.vlan3}" -p 6 -i "-"</log-match>
			<log-match>-p 1 -i "eth4" -p 3 -i "Y" -p 4 -i "trunk" -p 5 -i "1" -p 6 -i "No"</log-match>
			<log-match>-p 1 -i "eth2" -p 3 -i "Y" -p 4 -i "trunk" -p 5 -i "1" -p 6 -i "No"</log-match>			
		</step>

		<step no="4.2a">
		<if>"${br.platform}" == "br200wp"</if>
			<desc>
				show lan vlan-table
			</desc>
			<log-file>step4.2a_show_lan_vlantable.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show lan vlan-table"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth4[\t ]+${br1.vlan3}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth3[\t ]+eth4[\t ]+${br1.vlan1}" -f ${log.dir}/${log.file}</log-match>			
		</step>
		
		<step no="4.2b">
		<if>"${br.platform}" == "br100"</if>
			<desc>
				show lan vlan-table
			</desc>
			<log-file>step4.2b_show_lan_vlantable.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show lan vlan-table"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth1[\t ]+eth2[\t ]+eth3[\t ]+eth4[\t ]+${br1.vlan3}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth3[\t ]+eth4[\t ]+${br1.vlan1}" -f ${log.dir}/${log.file}</log-match>			
		</step>

		<step no="4.3a">
			<desc>
				ap1 as laptop1 connect to lan port eth3
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "interface mgt0 vlan ${br1.vlan1}"
				-v "interface mgt0 native-vlan ${br1.vlan1}"
				-v "no interface mgt0 dhcp client"
				-v ""
				-v ""
				-v "interface mgt0 dhcp client"
				-v ""
				-v ""
			</console>
		</step>

		<step no="4.3b" delay="20">
			<desc>
				show ap1 mgt0
			</desc>
			<log-file>step4.3b_show_int_mgt0.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="4.3c">
			<desc>get IP address of ap1</desc>
			<setvar name="br1.ap1.mgt0.ip">
				${bin.dir}/getbyrexp.py -p "IP addr=([\d.]+)" -f ${log.dir}/step4.3b_show_int_mgt0.log -t str
			</setvar>
		</step>

		<step no="4.3d">
			<desc>
				AP1 set static ip
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "no interface mgt0 dhcp client"
				-v ""
				-v ""
				-v "interface mgt0 ip ${br1.ap1.mgt0.ip}/${br.lan.netmask}"
				-v "ip route default gateway ${br1.br.mgt0.1.ip}"
				-v ""
				-v ""
			</console>
		</step>

		<step no="4.4a">
			<desc>
				vpc1 connect to lan port eth1
			</desc>
			<log-file>ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ifconfig ${br1.vpc1.tif.name} down"
				-v ""
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v ""
				-v ""
				-v ""
				-v "dhclient ${br1.vpc1.tif.name} -r"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="4.4b">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>
		
		<step no="4.4c">
			<desc>
				vpc1 set static ip
			</desc>
			<ssh target="br1.vpc1" timeout="120">
			        -v "dhclient ${br1.vpc1.tif.name} -r"
				-v "ifconfig ${br1.vpc1.tif.name} ${br1.vpc1.tif.ip}/${br.lan.netmask}"
			</ssh>
		</step>

		<step no="4.5a" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				5. Laptop1 ping mgt0.2
			</desc>
			<log-file>step4.5a_show_int_mgt0.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "ping ${br1.br.mgt0.1.ip}"
			</console>
			<log-match>-c -i "from ${br1.br.mgt0.1.ip}: " -i "ttl="</log-match>
		</step>

		<step no="4.5b" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				5. vpc1 ping mgt0.3
			</desc>
			<log-file>step4.5b_show_int_mgt0.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${br1.br.mgt0.3.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${br1.br.mgt0.3.ip}: " -i "ttl="</log-match>
		</step>

		<step no="4.6">
			<desc>
				open FF debug on BR
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear forwarding-engine mac-sessions"
				-v "_ff id 1 protocol 1 bidirectional"
				-v "_ff id 2 etype 0806 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buff"
			</telnet>
		</step>		

		<step no="5">
			<desc>
				5. Laptop1 send a packet to laptop2 with vlan tag 30, not match native-vlan and allowed-vlan list. (icmp) Result2: laptop2 will receive the packet
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "no interface mgt0 native-vlan"
				-v "interface mgt0 vlan ${br1.vlan3}"
				-v ""
				-v "no interface mgt0 dhcp client"
				-v "interface mgt0 dhcp client"
			</console>
		</step>
		
		<step no="5.1a">
			<desc>
				packet capture on br1.vpc1 (Laptop3)
			</desc>
			<log-file>step5.1a_vpc1_packet_capture.log</log-file>
			<ssh target="br1.vpc1">
				-v "nohup tshark -l -i ${br1.vpc1.tif.name} > ${job.id}vpc1_icmp_1.log &amp;"
			</ssh>
		</step>

		<step no="5.1b">
			<desc>
				get vpc1 tshark process
			</desc>
			<setvar name="vpc1.tshark.id_1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step5.1a_vpc1_packet_capture.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="5.2" delay="10">
			<desc>
				Laptop1 ping laptop2
			</desc>
			<log-file>step5.1_Laptop1_ping_vpc.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "ping ${br1.vpc1.tif.ip} c 2";exit 0
			</console>
			<log-match>-n -c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>			
		</step>		

		<step no="5.3">
			<desc>
				show log buf
			</desc>
			<log-file>Step5.3_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show log buf"
				-v ""
				-v ""
				-v ""
				-v "clear log buf"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(i\) eth3 ${br1.ap1.mgt0.ip}-&gt;${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />			
		</step>		
		
		<step no="5.4" delay="10">
			<desc>
				Result4: vpc1 can receive pkt
			</desc>
			<log-file>Step5.4_capture_packet_check.log</log-file>
			<ssh target="br1.vpc1">
				-v "kill -9 ${vpc1.tshark.id_1}"
				-v "cat ${job.id}vpc1_icmp_1.log | grep --color=never ICMP"
				-v "rm -f ${job.id}vpc1_icmp_1.log"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.ap1.mgt0.ip} -> ${br1.vpc1.tif.ip}\s*ICMP" -f ${log.dir}/${log.file}</log-match>			
		</step>

		<step no="6">
			<desc>
				6. Enable vlan-id-check feature for eth3
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface eth3 allowed-vlan ${br1.vlan4}"
			</telnet>
		</step>

		<step no="6.1">
			<desc>
				check allowed vlan
			</desc>
			<log-file>step6.1_show_allowed_vlan.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show int eth3 allowed-vlan"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.vlan4}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6.2">
			<desc>
				check allowed vlan
			</desc>
			<log-file>step6.2_show_allowed_vlan.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show int eth1 allowed-vlan "
			</telnet>
			<log-match>-i "1-4094"</log-match>
		</step>
		
		<step no="6.3a">
			<desc>
				packet capture on br1.vpc1 (Laptop3)
			</desc>
			<log-file>step6.3a_vpc1_packet_capture.log</log-file>
			<ssh target="br1.vpc1">
				-v "nohup tshark -l -i ${br1.vpc1.tif.name} > ${job.id}vpc1_icmp_1.log &amp;"
			</ssh>
		</step>

		<step no="6.3b">
			<desc>
				get vpc1 tshark process
			</desc>
			<setvar name="vpc1.tshark.id_1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step6.3a_vpc1_packet_capture.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="7.1">
			<desc>
				7. Laptop1 send a packet to laptop2 with vlan tag 30, not match native-vlan and allowed-vlan list. (icmp) Result2: laptop2 will not receive the packet
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "interface mgt0 vlan ${br1.vlan3}"
				-v ""
				-v ""
				-v ""
				-v "ping ${br1.vpc1.tif.ip} c 2"
			</console>
			<log-match>-n -c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>
		
		<step no="7.2">
			<desc>
				show log buf
			</desc>
			<log-file>Step7.2_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show log buf"
				-v ""
				-v ""
				-v ""
				-v "clear log buf"
			</telnet>
			<log-match>-n -c -i "(i) eth3 ${br1.ap1.mgt0.ip}->${br1.vpc1.tif.ip}"</log-match>
			<no-error-check />
		</step>
		
		<step no="7.3" delay="10">
			<desc>
				Result5: vpc1 can't receive pkt
			</desc>
			<log-file>Step7.3_capture_packet_check.log</log-file>
			<ssh target="br1.vpc1">
				-v "kill -9 ${vpc1.tshark.id_1}"
				-v "cat ${job.id}vpc1_icmp_1.log | grep --color=never ICMP"
				-v "rm -f ${job.id}vpc1_icmp_1.log"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.ap1.mgt0.ip} -> ${br1.vpc1.tif.ip}\s*ICMP" -c 0 -f ${log.dir}/${log.file}</log-match>			
		</step>

	</stage>
</testcase>
