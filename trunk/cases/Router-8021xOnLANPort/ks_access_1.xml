<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Laptop can auth on eth Access 802.1x successfully and traffic is ok</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:



		Test Procedure:

		1. Set one user-profile with attribute and vlan x
		2. Change the eth2 mode to bridge access and bind the attribute to it
		3. Set one security-object with 802.1x and bind it to eth2
		4. Enable mac-learning in the interface
		5. Connect one laptop to the eth2, result 1
		6. Show route, result 2
		7. Ping sina.com.cn, result 3.
	</description>
	<numofbr>1</numofbr>
	<numofcvg>0</numofcvg>
	<tbtype>linux</tbtype>

	<property name="acct1.uid" value="${br1.vpc2.vlan}" />
	<property name="br1.vpc1.username" value="${job.sid}-username" />
	<property name="br1.vpc1.password" value="aerohive" />

	<stage>
		<include prefix="pre.0" file="subs/ldap_add.xml" args="${br1.vpc1.username}, ${br1.vpc1.password}" obj-args="acct1" />

		<step no="1a">
			<desc>configure mgt0.1 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>
		
		<step no="1b">
			<desc>configure mgt0.2 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.2 vlan ${br1.vpc2.vlan}"
				-v "interface mgt0.2 ip ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
				-v "interface mgt0.2 dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface mgt0.2 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.2 dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface mgt0.2 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.2 dhcp-server enable"
			</telnet>
		</step>		

		<step no="2">
			<desc>
				1. Set one user-profile with attribute and vlan x
				2. Change the eth1 mode to bridge access and bind the attribute to it
				3. Set one security-object with 802.1x and bind it to eth1
				4. Enable mac-learning in the interface
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute ${br1.vpc1.vlan}"
				-v "user-profile lan2 qos-policy def-user-qos vlan-id ${br1.vpc2.vlan} attribute ${br1.vpc2.vlan}"
				-v "interface eth1 mode bridge-access user-profile-attribute ${br1.vpc1.vlan}"				
				-v "security-object lan1"
				-v "security-object lan1 security protocol-suite 802.1x"
				-v "security-object lan1 security aaa radius primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "interface eth1 security-object lan1"		
				-v "int eth1 mac-learning enable"
			</telnet>
		</step>

		<step no="3">
			<desc>
				5. Connect one laptop to the eth2, result 1
			</desc>
			<log-file>step3_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="60">
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
		</step>

		<step no="3.1a">
			<desc>get raw mac of vpc1</desc>
			<setvar name="br1.vpc1.tif.mac1">
				echo $(${bin.dir}/getbyrexp.py -p "HWaddr ([\da-fA-F:]+)" -f ${log.dir}/step3_ifconfig_vpc1_.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="3.1b">
			<desc>get mac of br1.vpc1</desc>
			<setvar name="br1.vpc1.tif.mac">
				echo $(echo $(echo ${br1.vpc1.tif.mac1} | cut -d : -f1)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f2,3)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f4,5)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f6))
			</setvar>
		</step>

		<step no="3.2">
			<desc>
				show br eth1 interface
			</desc>
			<log-file>step3.2_show_interface.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show interface eth1"
			</telnet>
		</step>

		<step no="3.2b">
			<desc>get br1 eth1 raw mac</desc>
			<setvar name="br1.eth1.mac">
				echo $(${bin.dir}/getbyrexp.py -p "MAC addr=([\da-fA-F:]+)" -f ${log.dir}/step3.2_show_interface.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="3.2c">
			<desc>get mac1 of br1.eth1</desc>
			<setvar name="br1.eth1.mac1">
				echo $(echo ${br1.eth1.mac} | sed -e 's/:../&amp;:/g' -e 's/^../&amp;:/')
			</setvar>
		</step>

		<step no="3.2d">
			<desc>get tmp.mac of br1.eth1</desc>
			<setvar name="br1.eth1.tmp.mac">
				echo $(echo ${br1.eth1.mac1} | tr : - )
			</setvar>
		</step>

		<step no="3.3">
			<desc>
				show br mgt0 interface
			</desc>
			<log-file>step3.3_show_interface.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show interface mgt0"
			</telnet>
		</step>

		<step no="3.3b">
			<desc>get br1 mgt0 raw mac</desc>
			<setvar name="br1.mgt0.mac">
				echo $(${bin.dir}/getbyrexp.py -p "MAC addr=([\da-fA-F:]+)" -f ${log.dir}/step3.3_show_interface.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="3.3c">
			<desc>get mac1 of br1.mgt0</desc>
			<setvar name="br1.mgt0.mac1">
				echo $(echo ${br1.mgt0.mac} | sed -e 's/:../&amp;:/g' -e 's/^../&amp;:/')
			</setvar>
		</step>

		<step no="3.3d">
			<desc>get tmp.mac of br1.mgt0</desc>
			<setvar name="br1.mgt0.tmp.mac">
				echo $(echo ${br1.mgt0.mac1} | tr : - )
			</setvar>
		</step>

		<step no="3.4">
			<desc>
				prepare config file with right username and password
			</desc>
			<log-file>step3.4_auth_log.log</log-file>
			<ssh target="br1.vpc1">
				-v "echo -e \&quot; ctrl_interface=DIR=/var/run/wpa_supplicant \\n ap_scan=0 \\n network={ \\n key_mgmt=IEEE8021X \\n eap=MD5 \\n identity=\\x22${br1.vpc1.username}\\x22 \\n password=\\x22${br1.vpc1.password}\\x22 \\n eapol_flags=0 \\n } \&quot; &gt; /tmp/wpa_supplicant.conf"
			</ssh>
		</step>

		<step no="3.5">
			<desc>
				open debug
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_ff src-mac ${br1.vpc1.tif.mac} dst-port 67 bi"
				-v "clear log buf"
			</telnet>
		</step>

		<step no="3.6">
			<desc>
				6. Auth user
			</desc>
			<log-file>step3.6_auth_log.log</log-file>
			<ssh target="br1.vpc1">
				-v "wpa_supplicant -B -i eth1 -c /tmp/wpa_supplicant.conf -D wired"
			</ssh>
		</step>

		<step no="4.1" delay="30">
			<desc>
				ret1. Laptop can auth successfully
			</desc>
			<log-file>step4.1_check_auth.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show auth interface eth1"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.vpc1.tif.mac}.*${br1.vpc2.vlan}.*done.*${br1.vpc1.username}" -f ${log.dir}/${log.file}</log-match>
			<failed>next</failed>
		</step>		

		<step no="4.2a">
			<desc>
				vpc1 tries to get ip address
			</desc>			
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>
		
		<step no="4.2b">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>
		
		<step no="get_prefix">
			<multi-setvar>				
				echo "br1.mgt0.2.prefix=$(echo ${br1.br.mgt0.2.ip_pool_start} | cut -d. -f1,2,3)"				
				echo "br1.vpc1.prefix=$(echo ${br1.vpc1.tif.ip} | cut -d. -f1,2,3)"
			</multi-setvar>
		</step>
		
		<step no="4.3">
			<desc>
				vpc1 get ip address from mgt0.2
			</desc>
			<script>
				if [ "${br1.vpc1.prefix}" == "${br1.mgt0.2.prefix}" ]; then exit 0; else exit 1; fi
			</script>
		</step>	

		<step no="5">
			<desc>
				6. Show route, result 2: The laptop mac is added to the route and attribute is the radius-server.vlan is x not radius server
			</desc>
			<log-file>step5_check_route.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show route"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.vpc1.tif.mac}[\t ]+${br1.mgt0.mac}[\t ]+eth1[\t ]+\d+[\t ]+${br1.vpc2.vlan}" -f ${log.dir}/${log.file}</log-match>
		</step>		

		<step no="6" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				6. Ping sina.com.cn (pub.dns1.ip), result 3.
			</desc>
			<log-file>step6_ping_log.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 20"
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>

		<include prefix="8" file="subs/ldap_delete.xml" args="${br1.vpc1.username}" />

	</stage>

	<failed-process>
		<stage>
			<include prefix="failed.01" file="subs/ldap_delete.xml" args="${br1.vpc1.username}" />
			<step no="0.2">
				<desc>
					kill tshark process on br1.vpc1
				</desc>
				<ssh target="br1.sta1">
					-v "kill -9 ${sta1.tshark.id_1}"
					-v "rm -f ${job.id}sta1_capture_1.log"
				</ssh>
				<no-error-check />
			</step>
		</stage>

		<include file="include/br_default_failed_process.xml" />

	</failed-process>

</testcase>
