<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Vlan from radius is ignored when mode is bridge-access</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		Test Procedure:
		1. Set one security-object with radius-server
		2. Set one user-profile and define the attribute x and vlan y
		3. Set eth1 mode as access and bind the attribute x to it
		4. Bind the security-object to the port.
		5. Connect laptop to the port.
		6. Auth successfully and return vlan is different with cfg.
		7. Show route, result 1.
		8. Send traffic, result 2
	</description>
	<numofbr>1</numofbr>
	<numofcvg>0</numofcvg>
	<tbtype>linux</tbtype>

	<property name="acct1.vlan" value="${br1.vpc1.vlan}" />
	<property name="br1.vpc1.username" value="${job.sid}-username" />
	<property name="br1.vpc1.password" value="aerohive" />
	<stage>
		<include prefix="pre.0" file="subs/ldap_add.xml" args="${br1.vpc1.username}, ${br1.vpc1.password}" obj-args="acct1" />

		<step no="pre_step">
			<desc>configure mgt0.1 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
				-v "interface mgt0.2 vlan ${br1.vpc2.vlan}"
				-v "interface mgt0.2 ip ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
				-v "interface mgt0.2 dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface mgt0.2 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.2 dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface mgt0.2 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.2 dhcp-server enable"
			</telnet>
		</step>

		<step no="1">
			<desc>
				1. Set one security-object with radius-server
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "security-object lan1"
				-v "security-object lan1 security protocol-suite 802.1x"
				-v "security-object lan1 security aaa radius primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
			</telnet>
		</step>

		<step no="2">
			<desc>
				2. Set one user-profile and define the attribute x and vlan y
				3. Set eth1 mode as access and bind the attribute x to it
				4. Bind the security-object to the port.
			</desc>
			<telnet target="${br1.br.wan.ip}">
				<!---v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc2.vlan} attribute ${br1.vpc2.vlan}"
				-v "user-profile lan2 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute ${br1.vpc1.vlan}"
				-v "interface eth1 mode bridge-access user-profile-attribute ${br1.vpc2.vlan}"-->
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc2.vlan} attribute 2"
				-v "interface eth1 mode bridge-access user-profile-attribute 2"
				-v "int eth1 mac-learning enable"
				-v "interface eth1 security-object lan1"
			</telnet>
		</step>

		<step no="3">
			<desc>
				5. Connect one laptop to the eth1 port
			</desc>
			<log-file>step3_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="60">
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
		</step>

		<step no="3.1a">
			<desc>get raw mac of vpc1</desc>
			<setvar name="br1.vpc1.tif.mac1">
				echo $(${bin.dir}/getbyrexp.py -p "HWaddr ([\da-fA-F:]+)" -f ${log.dir}/step3_ifconfig_vpc1_.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="3.1b">
			<desc>get mac of br1.vpc1</desc>
			<setvar name="br1.vpc1.tif.mac">
				echo $(echo $(echo ${br1.vpc1.tif.mac1} | cut -d : -f1)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f2,3)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f4,5)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f6))
			</setvar>
		</step>

		<step no="3.2">
			<desc>
				show br eth1 interface
			</desc>
			<log-file>step3.2_show_interface.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show interface eth1"
			</telnet>
		</step>

		<step no="3.2b">
			<desc>get br1 eth1 raw mac</desc>
			<setvar name="br1.eth1.mac">
				echo $(${bin.dir}/getbyrexp.py -p "MAC addr=([\da-fA-F:]+)" -f ${log.dir}/step3.2_show_interface.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="3.2c">
			<desc>get mac1 of br1.eth1</desc>
			<setvar name="br1.eth1.mac1">
				echo $(echo ${br1.eth1.mac} | sed -e 's/:../&amp;:/g' -e 's/^../&amp;:/')
			</setvar>
		</step>

		<step no="3.2d">
			<desc>get tmp.mac of br1.eth1</desc>
			<setvar name="br1.eth1.tmp.mac">
				echo $(echo ${br1.eth1.mac1} | tr : - )
			</setvar>
		</step>

		<step no="3.3">
			<desc>
				show br mgt0 interface
			</desc>
			<log-file>step3.3_show_interface.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show interface mgt0"
			</telnet>
		</step>

		<step no="3.3b">
			<desc>get br1 mgt0 raw mac</desc>
			<setvar name="br1.mgt0.mac">
				echo $(${bin.dir}/getbyrexp.py -p "MAC addr=([\da-fA-F:]+)" -f ${log.dir}/step3.3_show_interface.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="3.3c">
			<desc>get mac1 of br1.mgt0</desc>
			<setvar name="br1.mgt0.mac1">
				echo $(echo ${br1.mgt0.mac} | sed -e 's/:../&amp;:/g' -e 's/^../&amp;:/')
			</setvar>
		</step>

		<step no="3.3d">
			<desc>get tmp.mac of br1.mgt0</desc>
			<setvar name="br1.mgt0.tmp.mac">
				echo $(echo ${br1.mgt0.mac1} | tr : - )
			</setvar>
		</step>

		<step no="4.1">
			<desc>
				prepare config file with right username and password
			</desc>
			<ssh target="br1.vpc1">
				-v "echo -e \&quot; ctrl_interface=DIR=/var/run/wpa_supplicant \\n ap_scan=0 \\n network={ \\n key_mgmt=IEEE8021X \\n eap=MD5 \\n identity=\\x22${br1.vpc1.username}\\x22 \\n password=\\x22${br1.vpc1.password}\\x22 \\n eapol_flags=0 \\n } \&quot; &gt; /tmp/wpa_supplicant.conf"
			</ssh>
		</step>

		<step no="4.1b">
			<desc>
				open debug
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "_debug auth all"
				-v "clear log buf"
			</telnet>
		</step>
		<step no="4.2a">
			<desc>
				6. Auth successfully and return vlan is different with cfg.
			</desc>
			<log-file>step4.2a_auth_log.log</log-file>
			<ssh target="br1.vpc1">
				-v "wpa_supplicant -B -i eth1 -c /tmp/wpa_supplicant.conf -D wired"
			</ssh>
		</step>
		
		<step no="4.2b" delay="10">
			<desc>
				6. Auth successfully and return vlan is different with cfg.
			</desc>
			<log-file>step4.2_auth_log.log</log-file>
			<ssh target="br1.vpc1">
				-v "wpa_supplicant -B -i eth1 -c /tmp/wpa_supplicant.conf -D wired"
			</ssh>
		</step>

		<step no="4.3" type="loop-check" loop-max-times="6" loop-interval="10">
			<desc>
				show 802.1x-mac-table (check the vlan is return vlan, not the local cfg vlan)
			</desc>
			<log-file>step4.3_show_8021x_mac.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show 802.1x-mac-table"
			</telnet>
			<log-match>-i "${br1.vpc1.tif.mac}" -i "eth1" -i "CLOSE" -i "N/A" -c</log-match>
			<!--<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.vpc1.tif.mac}[\t ]+${br1.vpc1.vlan}[\t ]+eth1[\t ]+CLOSE[\t ]+N/A" -f ${log.dir}/${log.file}</log-match>-->
		</step>

		<step no="4.3c">
			<desc>
				show log buf
			</desc>
			<log-file>step4.3c_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show log buf"
				-v ""
				-v ""
				-v "clear log buf"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "RADIUS_ATTR_TUNNEL_PRIVATE_GROUP_ID=${br1.vpc1.vlan}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "VLAN ID ${br1.vpc1.vlan} is specified for station ${br1.vpc1.tif.mac}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.4">
			<desc>
				get ip address
			</desc>
			<log-file>step4.4_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="4.5b">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>


		<step no="5">
			<desc>
				7. show interface eth1 mac-learning all
			</desc>
			<log-file>step5.1_show_mac_learning.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show interface eth1 mac-learning all"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.vpc1.tif.mac}[\t ]+${br1.vpc1.vlan}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6.1">
			<desc>
				open debug
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "_ff id 1 src-mac ${br1.vpc1.tif.mac} bi"
				-v "_ff id 2 protocol 1 bi"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buf"
			</telnet>
		</step>

		<step no="6.2" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				8. Send traffic: vpc1 ping pub.dns1.ip
			</desc>
			<log-file>step6.2_ping_log.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>

		<step no="6.3">
			<desc>
				ret2: Traffic is send in returned vlan, not the cfg vlan.
			</desc>
			<log-file>step6.3_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show log buf"
				-v ""
				-v ""
				-v "clear log buf"
			</telnet>
			<log-match>-c -i "inject pkt back into flow" -i "${br1.vpc1.vlan}" </log-match>
		</step>

		<include prefix="7" file="subs/ldap_delete.xml" args="${br1.vpc1.username}" />

	</stage>

	<failed-process>
		<stage>
			<include prefix="failed.01" file="subs/ldap_delete.xml" args="${br1.vpc1.username}" />
		</stage>

		<include file="include/br_default_failed_process.xml" />

	</failed-process>

</testcase>