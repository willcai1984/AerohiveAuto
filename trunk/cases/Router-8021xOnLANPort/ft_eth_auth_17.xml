<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Idle timeout from radius server is applied to timeout of auth and verify laptop must re-auth beyond the time when there is not any pkt</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		Test Procedure:
		1. Set one security-object with radius-server
		2. Set one user-profile and define the attribute x
		3. Connect one l2switch to the port.
		4. Set eth2 mode as access and bind the attribute x to it
		5. Bind the security-object to the port.
		6. Set the duration time of auth to another value.
		7. Connect one laptop to the l2switch and auth successfully.
		8. Create ssid with the security-object
		9. Bind the ssid to wifi.
		10. Connect the second laptop to the ssid.
		11. Send UDP traffic from the second laptop to the first laptop. (the first laptop does
		not need to reply the udp pkt)
		12. Disconnect the first laptop from the l2Swtich for Idle timeout - 30 secnods.
		13. Reconnect the first laptop to the l2switch again, result 1.
		14. Disconnect the first laptop from the l2Swtich for Idle timeout + 30 secnods.
		15. Reconnect the first laptop to the l2switch again, result 1.
	</description>
	<numofbr>1</numofbr>
	<numofcvg>0</numofcvg>
	<tbtype>linux</tbtype>

	<property name="conn1.ssid" value="${job.sid}-${tb.name}" />
	<property name="acct1.idle_time" value="150" />
	<property name="br1.vpc1.username" value="${job.sid}-username" />
	<property name="br1.vpc1.password" value="aerohive" />

	<stage>
		<include prefix="pre.0" file="subs/ldap_add.xml" args="${br1.vpc1.username}, ${br1.vpc1.password}" obj-args="acct1" />

		<step no="pre_step">
			<desc>configure mgt0.1 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>

		<step no="1">
			<desc>
				1. Set one security-object with radius-server
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "security-object lan1"
				-v "security-object lan1 security protocol-suite 802.1x"
				-v "security-object lan1 security aaa radius primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object lan1 default-user-profile-attr ${br1.vpc1.vlan}"
			</telnet>
		</step>

		<step no="2">
			<desc>
				2. Set one user-profile and define the attribute x
				3. Connect one l2switch to the port.
				4. Set eth2 mode as access and bind the attribute x to it
				5. Bind the security-object to the port.
				6. Idle timeout from radius server is applied to timeout of auth
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute ${br1.vpc1.vlan}"
				-v "interface eth1 mode bridge-access user-profile-attribute ${br1.vpc1.vlan}"
				-v "interface eth1 mac-learning enable"
				-v "interface eth1 security-object lan1"
			</telnet>
		</step>

		<step no="2.1 ">
			<desc>
				show 802.1x-mac-table interface eth1
			</desc>
			<log-file>step2.1_show_802.1x.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show 802.1x-mac-table interface eth1"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Expire Time:[\t ]+300 seconds" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Suppress Interval:[\t ]+0 seconds" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3">
			<desc>
				5. Connect one laptop to the eth1 port
			</desc>
			<log-file>step3_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="60">
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
		</step>

		<step no="3.1a">
			<desc>get raw mac of vpc1</desc>
			<setvar name="br1.vpc1.tif.mac1">
				echo $(${bin.dir}/getbyrexp.py -p "HWaddr ([\da-fA-F:]+)" -f ${log.dir}/step3_ifconfig_vpc1_.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="3.1b">
			<desc>get mac of br1.vpc1</desc>
			<setvar name="br1.vpc1.tif.mac">
				echo $(echo $(echo ${br1.vpc1.tif.mac1} | cut -d : -f1)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f2,3)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f4,5)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f6))
			</setvar>
		</step>

		<step no="3.2">
			<desc>
				show br mgt0.1 interface
			</desc>
			<log-file>step3.2_show_interface.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show interface mgt0.1"
			</telnet>
		</step>

		<step no="3.2b">
			<desc>get br1 mgt0.1 raw mac</desc>
			<setvar name="br1.mgt0.1.mac">
				echo $(${bin.dir}/getbyrexp.py -p "MAC addr=([\da-fA-F:]+)" -f ${log.dir}/step3.2_show_interface.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="3.2c">
			<desc>get mac1 of br1.mgt0.1</desc>
			<setvar name="br1.mgt0.1.mac1">
				echo $(echo ${br1.mgt0.1.mac} | sed -e 's/:../&amp;:/g' -e 's/^../&amp;:/')
			</setvar>
		</step>

		<step no="3.2d">
			<desc>get tmp.mac of br1.mgt0</desc>
			<setvar name="br1.mgt0.1.tmp.mac">
				echo $(echo ${br1.mgt0.1.mac1} | tr : - )
			</setvar>
		</step>

		<step no="4.1">
			<desc>
				prepare config file with right username and password
			</desc>
			<log-file>step4.1_auth_log.log</log-file>
			<ssh target="br1.vpc1">
				-v "echo -e \&quot; ctrl_interface=DIR=/var/run/wpa_supplicant \\n ap_scan=0 \\n network={ \\n key_mgmt=IEEE8021X \\n eap=MD5 \\n identity=\\x22${br1.vpc1.username}\\x22 \\n password=\\x22${br1.vpc1.password}\x22 \\n eapol_flags=0 \\n } \&quot; &gt; /tmp/wpa_supplicant.conf"
			</ssh>
		</step>

		<step no="4.2">
			<desc>
				7. Connect one laptop to the l2switch and auth successfully.
			</desc>
			<log-file>step4.2_auth_log.log</log-file>
			<ssh target="br1.vpc1">
				-v "wpa_supplicant -B -i eth1 -c /tmp/wpa_supplicant.conf -D wired"
			</ssh>
		</step>

		<step no="4.3" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>
				show 802.1x-mac-table (check return vlan is cfg)
			</desc>
			<log-file>step4.3_show_8021x_mac_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show 802.1x-mac-table"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.vpc1.tif.mac}[\t ]+${br1.vpc1.vlan}[\t ]+eth1[\t ]+CLOSE[\t ]+N/A" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.4">
			<desc>
				check auth
			</desc>
			<log-file>step4.4b_check_auth.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show auth interface eth1"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.vpc1.tif.mac}\s*${br1.vpc1.vlan}\s*.*done.*${br1.vpc1.username}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.5">
			<desc>
				get ip address
			</desc>
			<log-file>step4.5_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="4.5b">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="5.1">
			<desc>
				8. Create ssid with the security-object
				9. Bind the ssid to wifi.
				10. Connect the second laptop to the ssid.
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface wifi0 mode dual"
				-v "security-object sta1"
				-v "security-object sta1 default-user-profile-attr ${br1.vpc1.vlan}"
				-v "ssid ${conn1.ssid}"
				-v "ssid ${conn1.ssid} security-object sta1"
				-v "interface wifi0 ssid ${conn1.ssid}"
			</telnet>
		</step>

		<include prefix="5.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, br1.sta1, br1.br" />

		<step no="5.3">
			<desc>
				open debug
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "_debug auth all"
				-v "clear log buf"
			</telnet>
		</step>

		<step no="6.1">
			<desc>
				prepare sendpacket.conf
			</desc>

			<ssh target="br1.sta1">
				-v "echo -e \&quot; [rip] \\n mac_dst=${br1.mgt0.1.tmp.mac} \\n src_ip=${br1.sta1.tif.ip} \\n dst_ip=${br1.vpc1.tif.ip} \\n route_item=192.168.11.0/24#0.0.0.0:2 \\n \&quot; &gt; /tmp/sendpacket.conf"
			</ssh>
		</step>

		<step no="6.2a">
			<desc>
				11. Send UDP traffic from the second laptop to the first laptop. (the first laptop does not need to reply the udp pkt)
			</desc>
			<log-file>step6.2a_sta1_sendpacket_process.log</log-file>
			<ssh target="br1.sta1">
				-v "nohup sendpacket -f 1kb/s -p /tmp/sendpacket.conf -d ${br1.sta1.tif.name} &amp;"
			</ssh>
		</step>

		<step no="6.2b">
			<desc>
				get sendpacket process id
			</desc>
			<setvar name="sta1.sendpacket.id">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step6.2a_sta1_sendpacket_process.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="6.3a">
			<desc>
				packet capture on br1.vpc1
			</desc>
			<log-file>step6.3a_vpc1_packet_capture.log</log-file>
			<ssh target="br1.vpc1">
				-v "nohup tshark -l -n -i ${br1.vpc1.tif.name} ip proto 17 &gt; ${job.id}vpc1_capture_1.log &amp;"
			</ssh>
		</step>

		<step no="6.3b">
			<desc>
				get vpc1 tshark process
			</desc>
			<setvar name="vpc1.tshark.id_1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step6.3a_vpc1_packet_capture.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="6.4" delay="15">
			<desc>
				vpc1 receive those UDP packet
			</desc>
			<log-file>step6.4_vpc1.log</log-file>
			<ssh target="br1.vpc1">
				-v "kill -9 ${vpc1.tshark.id_1}"
				-v "cat ${job.id}vpc1_capture_1.log"
				-v "rm -f ${job.id}vpc1_capture_1.log"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.sta1.tif.ip}[\t\-&gt; ]+${br1.vpc1.tif.ip}[\t ]+RIPv2 Response" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7">
			<desc>
				12. Disconnect the first laptop from the l2Swtich for the changed value – 30 secnods.
			</desc>
			<ssh target="br1.vpc1" timeout="15">
				-v "ifconfig ${br1.vpc1.tif.name} down"
			</ssh>
		</step>

		<step no="7.2" delay="50">
			<desc>
				13. Reconnect the first laptop to the l2switch again, result 1.
			</desc>
			<ssh target="br1.vpc1" timeout="15">
				-v "ifconfig ${br1.vpc1.tif.name} up"
			</ssh>
		</step>

		<step no="7.3a">
			<desc>
				packet capture on br1.vpc1
			</desc>
			<log-file>step7.3a_vpc1_packet_capture.log</log-file>
			<ssh target="br1.vpc1">
				-v "nohup tshark -l -n -i ${br1.vpc1.tif.name} ip proto 17 &gt; ${job.id}vpc1_capture_1.log &amp;"
			</ssh>
		</step>

		<step no="7.3b">
			<desc>
				get vpc1 tshark process
			</desc>
			<setvar name="vpc1.tshark.id_1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step7.3a_vpc1_packet_capture.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="7.4" delay="10">
			<desc>
				vpc1 receive those UDP packet
			</desc>
			<log-file>step7.4_vpc1.log</log-file>
			<ssh target="br1.vpc1">
				-v "kill -9 ${vpc1.tshark.id_1}"
				-v "cat ${job.id}vpc1_capture_1.log"
				-v "rm -f ${job.id}vpc1_capture_1.log"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.sta1.tif.ip}[\t\-&gt; ]+${br1.vpc1.tif.ip}[\t ]+RIPv2 Response" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7.5">
			<desc>
				show log buf
			</desc>
			<log-file>step7.5_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show log buf"
				-v ""
				-v ""
				-v "clear log buf"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py"> -b "IEEE 802.1X: ${br1.vpc1.tif.mac} AUTH_PAE entering state AUTHENTICATED" -ps p "IEEE 802.1X: ${br1.vpc1.tif.mac} BE_AUTH entering state SUCCESS" -ps p "IEEE 802.1X: ${br1.vpc1.tif.mac} BE_AUTH entering state RESPONSE" -ps p "IEEE 802.1X: ${br1.vpc1.tif.mac} BE_AUTH entering state REQUEST" -ps p "IEEE 802.1X: ${br1.vpc1.tif.mac} AUTH_PAE entering state AUTHENTICATING" -ps p "IEEE 802.1X: ${br1.vpc1.tif.mac} AUTH_PAE entering state CONNECTING" -ps p "IEEE 802.1X: ${br1.vpc1.tif.mac} AUTH_PAE entering state DISCONNECTED" -e "start authentication" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="8">
			<desc>
				14. Disconnect the first laptop from the l2Swtich for the changed value + 30 secnods
			</desc>
			<ssh target="br1.vpc1" timeout="30">
				-v "ifconfig ${br1.vpc1.tif.name} down"
			</ssh>
		</step>

		<step no="8.2" delay="230">
			<desc>
				15. Reconnect the first laptop to the l2switch again, result 1.
			</desc>
			<ssh target="br1.vpc1" timeout="30">
				-v "ifconfig ${br1.vpc1.tif.name} up"
			</ssh>
		</step>

		<step no="8.3a">
			<desc>
				packet capture on br1.vpc1
			</desc>
			<log-file>step8.3a_vpc1_packet_capture.log</log-file>
			<ssh target="br1.vpc1">
				-v "nohup tshark -l -n -i ${br1.vpc1.tif.name} ip proto 17 &gt; ${job.id}vpc1_capture_1.log &amp;"
			</ssh>
		</step>

		<step no="8.3b">
			<desc>
				get vpc1 tshark process
			</desc>
			<setvar name="vpc1.tshark.id_1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step8.3a_vpc1_packet_capture.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="8.4" delay="10">
			<desc>
				2. Laptop must auth again
			</desc>
			<log-file>step8.4_vpc1.log</log-file>
			<ssh target="br1.vpc1">
				-v "kill -9 ${vpc1.tshark.id_1}"
				-v "cat ${job.id}vpc1_capture_1.log"
				-v "rm -f ${job.id}vpc1_capture_1.log"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.sta1.tif.ip}[\t\-&gt; ]+${br1.vpc1.tif.ip}[\t ]+RIPv2 Response" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="8.5">
			<desc>
				show log buf
			</desc>
			<log-file>step8.5_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show log buf"
				-v ""
				-v ""
				-v "clear log buf"
			</telnet>
			<no-error-check />
		</step>

		<step no="9" delay="10">
			<desc>
				kill send packet on sta1
			</desc>
			<ssh target="br1.sta1">
				-v "kill -9 ${sta1.sendpacket.id}"
				-v "rm -f /tmp/sendpacket.conf"
			</ssh>
		</step>

		<include prefix="10" file="subs/ldap_delete.xml" args="${br1.vpc1.username}" />

	</stage>

	<failed-process>
		<stage>
			<step no="0.1">
				<desc>
					kill tshark process on br1.vpc1
				</desc>
				<ssh target="br1.vpc1">
					-v "kill -9 ${vpc1.tshark.id_1}"
					-v "rm -f ${job.id}vpc1_capture_1.log"
				</ssh>
				<no-error-check />
			</step>
			<step no="0.2">
				<desc>
					kill sendpacket on sta1
				</desc>
				<ssh target="br1.sta1">
					-v "kill -9 ${sta1.sendpacket.id}"
					-v "rm -f /tmp/sendpacket.conf"
				</ssh>
				<no-error-check />
			</step>
			<include prefix="0.3" file="subs/ldap_delete.xml" args="${br1.vpc1.username}" />
		</stage>

		<include file="include/br_default_failed_process.xml" />
	</failed-process>
</testcase>