<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Laptop auth successfully when authentication mode is mac-based-auth</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:



		Test Procedure:

		1. Set one security-object with mac-based-auth
		2. Set one user-profile and define the attribute x and vlan y
		3. Set eth1 mode as access and bind the attribute x to it
		4. Bind the security-object to the port.
		5. Connect one laptops to the port, result 1
	</description>
	<numofcvg>0</numofcvg>
	<numofbr>1</numofbr>
	<tbtype>linux</tbtype>

	<property name="br.route.netmask" value="255.255.255.0" />

	<stage>

		<step no="pre_step">
			<desc>configure mgt0.1 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vlan1}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>

		<step no="1">
			<desc>
				1. Set one security-object with mac-based-auth
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "security-object lan1"
				-v "security-object lan1 security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object lan1 security additional-auth-method mac-based-auth"
				-v "security-object lan1 security initial-auth-method mac-based-auth"
				-v "security-object lan1 default-user-profile-attr 2"
			</telnet>
		</step>

		<step no="2">
			<desc>
				2. Set one user-profile and define the attribute x and vlan y
				3. Set eth1 mode as access and bind the attribute x to it
				4. Bind the security-object to the port.
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vlan1} attribute 2"
				-v "aaa mac-format case-sensitivity lower-case"
				-v "aaa mac-format delimiter dash"
				-v "aaa mac-format style five-delimiter"
				-v "interface eth1 mode bridge-access user-profile-attribute 2"
				-v "int eth1 mac-learning enable"
				-v "interface eth1 security-object lan1"
			</telnet>
		</step>

		<step no="3">
			<desc>
				5. Connect one laptop to the eth1 port
			</desc>
			<log-file>step3_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="60">
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
		</step>

		<step no="3.1a">
			<desc>get raw mac of vpc1</desc>
			<setvar name="br1.vpc1.tif.mac1">
				echo $(${bin.dir}/getbyrexp.py -p "HWaddr ([\da-fA-F:]+)" -f ${log.dir}/step3_ifconfig_vpc1_.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="3.1b">
			<desc>get mac of br1.vpc1</desc>
			<setvar name="br1.vpc1.tif.mac">
				echo $(echo $(echo ${br1.vpc1.tif.mac1} | cut -d : -f1)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f2,3)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f4,5)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f6))
			</setvar>
		</step>

		<step no="3.1c">
			<desc>get mac of br1.vpc1</desc>
			<setvar name="br1.vpc1.tif.tmp.mac">
				echo $(echo ${br1.vpc1.tif.mac1} | tr : - )
			</setvar>
		</step>

		<include prefix="3.2" file="subs/ldap_add.xml" args="${br1.vpc1.tif.tmp.mac}, ${br1.vpc1.tif.tmp.mac}" />

		<step no="3.3">
			<desc>
				enable auth log buff
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "_debug auth all"
				-v ""
				-v ""
				-v "clear log buf"
			</telnet>
		</step>

		<step no="4">
			<desc>
				5. Connect one laptops to the port, result 1
			</desc>
			<log-file>step4_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="4.1b">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="4.2">
			<desc>
				check auth
			</desc>
			<log-file>step4.2_check_auth.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show auth interface eth1"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Protocol-suite=open; MAC-based-auth=Enabled" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.vpc1.tif.mac}.*2.*open" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				vpc1 ping mgt0.1
			</desc>
			<log-file>step5_ping_log.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>

		<step no="6">
			<desc>
				8. Show route
			</desc>
			<log-file>step6_check_route.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show route"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.vpc1.tif.mac}[\t ].+eth1[\t ]+\d+[\t ]+2" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6.2">
			<desc>
				show auth log buff
			</desc>
			<log-file>step6.2_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show log buf"
				-v ""
				-v ""
				-v "clear log buf"
			</telnet>
			<no-error-check />
		</step>

		<include prefix="7" file="subs/ldap_delete.xml" args="${br1.vpc1.tif.tmp.mac}" />

	</stage>

	<failed-process>
		<stage>
			<include prefix="failed.01" file="subs/ldap_delete.xml" args="${br1.vpc1.tif.tmp.mac}" />
		</stage>

		<include file="include/br_default_failed_process.xml" />

	</failed-process>

</testcase>
