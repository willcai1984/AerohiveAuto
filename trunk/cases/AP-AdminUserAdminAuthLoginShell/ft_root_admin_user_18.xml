<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify when three times login failed, the fourth time use correct use name and password still login AP via console or telnet</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		AP can obtain ip address from DHCP server
		Enable telnet in AP

		Test Procedure:

		1. Login AP in incorrect user name or password via console or
		telnet
		2. Login AP in incorrect user name or password via console or
		telnet again
		3. Login AP in incorrect user name or password via console or
		telnet again
		4. Login AP in correct user name and password via console or
		telnet
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<property name="incorrect_username" value="aaaaaa" />
	<property name="incorrect_passwd" value="1111111" />

	<stage>
		<step no="1">
			<desc>
				AP can obtain ip address from DHCP server
				Enable telnet in AP
			</desc>
			<telnet target="ap1">
				-v "interface eth0 manage all"
			</telnet>
		</step>
		
		<step no="2_0">
			<desc>
				logout console
			</desc>
			<console target="ap1">
			    -v "show admin active"
				-v "exit"
			</console>
		</step>
		<step no="2">
			<desc>
				1. Login AP in incorrect user name or password via console or
				telnet
			</desc>
			<log-file>step2_login_ap_via_console.log</log-file>
			<!-- 
				<console target="ap1" user="${incorrect_username}" password="${ap.def.passwd}">
					-v ""; exit 0
				</console>
			-->
			<script>
				clicfg.pl -d ${tb.conserver.ip}  -i 782 -e ${ap1.cons_name} -m ".*[&gt;|#]" -u ${incorrect_username} -p ${ap.def.passwd} -l ${log.dir} -z ${log.file} \
                        -v "" ;exit 0
			</script>
			<log-match>-c -e "Maximum login tries exceeded. Go away!"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "login: ${incorrect_username}" -c 6 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Password: " -c 6 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3">
			<desc>
				2. Login AP in incorrect user name or password via console or
				telnet again
			</desc>
			<log-file>step3_login_ap_via_console.log</log-file>
			<!-- 
				<console target="ap1" user="${incorrect_username}" password="${ap.def.passwd}">
					-v ""; exit 0
				</console>
			-->
			<script>
				clicfg.pl -d ${tb.conserver.ip}  -i 782 -e ${ap1.cons_name} -m ".*[&gt;|#]" -u ${incorrect_username} -p ${ap.def.passwd} -l ${log.dir} -z ${log.file} \
                        -v "" ;exit 0
			</script>
			<log-match>-c -e "Maximum login tries exceeded. Go away!"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "login: ${incorrect_username}" -c 6 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Password: " -c 6 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4">
			<desc>
				3. Login AP in incorrect user name or password via console or
				telnet again
			</desc>
			<log-file>step4_login_ap_via_console.log</log-file>
			<!-- 
				<console target="ap1" user="${incorrect_username}" password="${ap.def.passwd}">
					-v ""; exit 0
				</console>
			-->
			<script>
				clicfg.pl -d ${tb.conserver.ip}  -i 782 -e ${ap1.cons_name} -m ".*[&gt;|#]" -u ${incorrect_username} -p ${ap.def.passwd} -l ${log.dir} -z ${log.file} \
                        -v "" ;exit 0
			</script>
			<log-match>-c -e "Maximum login tries exceeded. Go away!"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "login: ${incorrect_username}" -c 6 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Password: " -c 6 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5">
			<desc>
				4. Login AP in correct user name and password via console or
				telnet
			</desc>
			<log-file>step5_show_admin_active.log</log-file>
			<console target="ap1" user="${ap.def.user}" password="${ap.def.passwd}">
				-v "show admin active"
				-v "exit"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap.def.user}\s+ttyS" -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>
</testcase>