<testcase>
	<brief>Verify default root-admin user can set new root-admin user, after new root-admin user be created, previous user privilege change</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>windows</tbtype>
	<description>

		Description
		Verify default root-admin user can set new root-admin user, after new root-admin user be created, previous user privilege change
		Pre-condition
		Default admin user login AP via console
		Test procedure
		1. Create a new root-admin user
		2. Create a read-write user
		3. Create a read-only user
		Expect result
		1. Show admin can see new root-admin user
		2. Could not create read-write user, will suggest error
		3. Could not create read-only user, will suggest error


	</description>
	<stage>

		<step no="1">
			<desc>Remove the current ~/.ssh/known_hosts of Master PC to avoid the denial access to the APs</desc>
			<script>
				rm -f ~/.ssh/known_hosts
			</script>
		</step>

		<step no="2">
			<desc>Set new root admin user to AP, then create a read write user to AP</desc>
			<log-file>createuser.log</log-file>
			<ssh target="ap1">
				-v "admin root-admin test password testtest"
				-v "save config"
				-v "admin read-write 111 password 11111111"
			</ssh>
			<log-match> -i "ERROR:" -e "login user is not super user" -c</log-match>
		</step>

		<step no="3">
			<desc>Use new root admin user login AP and check login user by CLI</desc>
			<log-file>loginuser.log</log-file>
			<ssh target="ap1" user="test" password="testtest">
				-v "show admin active"
			</ssh>
			<log-match> -e "test" -c</log-match>
		</step>

		
	</stage>
	<post-process>
		<stage>
			<step no="0">
			<desc>Reset root admin user to default user</desc>
			<ssh target="ap1" user="test" password="testtest">
				-v "admin root-admin ${ap.def.user} password ${ap.def.passwd}"
				-v "save config"
			</ssh>
		</step>
		</stage>
		<include file="include/default_post_process.xml" />
	</post-process>

</testcase>