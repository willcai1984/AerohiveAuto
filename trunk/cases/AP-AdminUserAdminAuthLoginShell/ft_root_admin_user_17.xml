<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify when the first and second time use wrong user name or password login failed, the third time use correct user name and password still login AP via console or ssh or telnet</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		AP can obtain ip address from DHCP server
		Enable telnet in AP

		Test Procedure:

		1. Login AP in incorrect user name or password via console or
		telnet
		2. Login AP in incorrect user name or password via console or
		telnet again
		3. Login AP in correct user name and password via console or
		telnet
		4. Login AP in correct user name and incorrect password via ssh
		5. Login AP in incorrect password via ssh again
		6. Login AP in correct password via ssh
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<property name="incorrect_username" value="aaaaaa" />
	<property name="incorrect_passwd" value="1111111" />

	<stage>
		<step no="1">
			<desc>
				AP can obtain ip address from DHCP server
				Enable telnet in AP
			</desc>
			<telnet target="ap1">
				-v "interface eth0 manage all"
			</telnet>
		</step>

		<step no="2_0">
			<desc>
				logout console
			</desc>
			<console target="ap1">
			    -v "show admin active"
				-v "exit"
			</console>
		</step>
		<step no="2">
			<desc>
				1. Login AP in incorrect user name or password via console or
				telnet
			</desc>
			<log-file>step2_login_ap_via_console.log</log-file>
			<!-- 
				<console target="ap1" user="${ap.def.user}" password="${incorrect_passwd}">
					-v ""; exit 0
				</console>
			-->
			<script>
				clicfg.pl -d ${tb.conserver.ip}  -i 782 -e ${ap1.cons_name} -m ".*[&gt;|#]" -u ${ap.def.user} -p ${incorrect_passwd} -l ${log.dir} -z ${log.file} \
                        -v "" ;exit 0
			</script>
			<log-match>-c -e "Maximum login tries exceeded. Go away!"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "login: ${ap.def.user}" -c 6 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Password: " -c 6 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3">
			<desc>
				2. Login AP in incorrect user name or password via console or
				telnet again
			</desc>
			<log-file>step3_login_ap_via_console.log</log-file>
			<!-- 
				<console target="ap1" user="${incorrect_username}" password="${ap.def.passwd}">
					-v ""; exit 0
				</console>
			-->
			<script>
				clicfg.pl -d ${tb.conserver.ip}  -i 782 -e ${ap1.cons_name} -m ".*[&gt;|#]" -u ${incorrect_username} -p ${ap.def.passwd} -l ${log.dir} -z ${log.file} \
                        -v "" ;exit 0
			</script>
			<log-match>-c -e "Maximum login tries exceeded. Go away!"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "login: ${incorrect_username}" -c 6 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Password: " -c 6 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4">
			<desc>
				3. Login AP in correct user name and password via console or
				telnet
			</desc>
			<log-file>step4_show_admin_active.log</log-file>
			<console target="ap1" user="${ap.def.user}" password="${ap.def.passwd}">
				-v "show admin active"
				-v "exit"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap.def.user}\s+ttyS" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5">
			<desc>
				4. Login AP in correct user name and incorrect password via ssh
			</desc>
			<log-file>login_ap_via_ssh_in_def_user_and_incorrect_passwd.log</log-file>
			<!-- 
				<ssh target="ap1" user="${ap.def.user}" password="${incorrect_passwd}">
					-v ""; exit 0
				</ssh>
			-->
			
			<script>
				 clicfg.pl -d ${ap1.mgt0.ip}  -i 22  -m ".*[&gt;|#]" -u ${ap.def.user} -p ${incorrect_passwd} -l ${log.dir} -z ${log.file} \
                        -v "" ;exit 0
			</script>
			<log-match>-c -e "Permission denied (publickey,password)."</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap.def.user}@${ap1.mgt0.ip}'s password:" -c 3 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Permission denied, please try again." -c 2 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6">
			<desc>
				5. Login AP in incorrect username and correct password via ssh again
			</desc>
			<log-file>login_ap_via_ssh_in_incorrect_user.log</log-file>
			<!-- 
				<ssh target="ap1" user="${incorrect_username}" password="${ap.def.passwd}">
					-v ""; exit 0
				</ssh>
			-->
			<script>
				 clicfg.pl -d ${ap1.mgt0.ip}  -i 22  -m ".*[&gt;|#]" -u ${incorrect_username} -p ${ap.def.passwd} -l ${log.dir} -z ${log.file} \
                        -v "" ;exit 0
			</script>
			<log-match>-c -e "Permission denied (publickey,password)."</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${incorrect_username}@${ap1.mgt0.ip}'s password:" -c 3 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Permission denied, please try again." -c 2 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7">
			<desc>
				6. Login AP in correct password via ssh
			</desc>
			<log-file>step7_show_admin_active.log</log-file>
			<ssh target="ap1" user="${ap.def.user}" password="${ap.def.passwd}">
				-v "show admin active"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap.def.user}\s+pts" -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>
</testcase>