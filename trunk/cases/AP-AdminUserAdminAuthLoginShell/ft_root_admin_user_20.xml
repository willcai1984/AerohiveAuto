<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify root-admin user can execute reset config ,etc operation</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Create a new root-admin user and use new user to login AP
		Create some configurations and save config

		Test Procedure:
		1. Reset config
		2. Use new admin user to login AP
		3. Use default admin user to login AP
		4. Check running config after login
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<property name="create_user_name" value="aero" />
	<property name="create_user_passwd" value="12345" />

	<stage>
		<step no="1">
			<desc>
				Create a new root-admin user
			</desc>
			<telnet target="ap1">
				-v "admin root-admin ${create_user_name} password ${create_user_passwd}"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				use new user to login AP
				Create some configurations and save config
			</desc>
			<telnet target="ap1" user="${create_user_name}" password="${create_user_passwd}">
				-v "ssid ${ssid.name}"
				-v "hive ${hive.name}"
				-v "save config"
			</telnet>
		</step>


		<step no="2">
			<desc>
				exit admin
			</desc>
			<console target="ap1">
				-v "sh admin active"
				-v "exit"
			</console>
		</step>


		<step no="3">
			<desc>
				1. Reset config
			</desc>
			<console target="ap1" user="${create_user_name}" password="${create_user_passwd}">
				-v "reset config"
			</console>
		</step>

		<step no="4">
			<desc>
				2. Use new admin user to login AP
			</desc>
			<log-file>Use_new_admin_user_to_login_AP.log</log-file>
			<!-- 
				<console target="ap1" user="${create_user_name}" password="${create_user_passwd}">
					-v ""; exit 0
				</console>
			-->
			<script>
				clicfg.pl -d ${tb.conserver.ip}  -i 782 -e ${ap1.cons_name} -m ".*[&gt;|#]" -u ${create_user_name} -p ${create_user_passwd} -l ${log.dir} -z ${log.file} \
                        -v "" ;exit 0
			</script>
			<log-match>-e "Maximum login tries exceeded. Go away!"</log-match>
		</step>

		<step no="5">
			<desc>
				3. Use default admin user to login AP
			</desc>
			<log-file>Use_default_admin_user_to_login_AP.log</log-file>
			<console target="ap1">
				-v "show admin active"
			</console>
			<log-match>-c -e "${ap.def.user} *ttyS"</log-match>
		</step>

		<step no="6">
			<desc>
				4. Check running config after login
			</desc>
			<log-file>Check_running_config_after_login.log</log-file>
			<console target="ap1">
				-v "show running-config"
				-v "exit"
			</console>
			<log-match>-n -e "ssid ${ssid.name}"</log-match>
			<log-match>-n -e "hive ${hive.name}"</log-match>
		</step>
		
		<step no="7">
			<desc>
				5. Check root-admin recover default after reset config
			</desc>
			<log-file>step7_show_admin_active.log</log-file>
			<console target="ap1">
				-v "show admin active"
				-v "exit"
			</console>
			<log-match>-c -e "${ap.def.user} *ttyS"</log-match>
		</step>
	</stage>

	<post-process>
		<!--  
			<stage>
				<step no="0">
					<desc>
						restore default user admin
					</desc>
					<console target="ap1" user="${create_user_name}" password="${create_user_passwd}">
						-v "admin root-admin ${ap.def.user} password ${ap.def.passwd}"
						-v "save config"
						-v "exit"
					</console>
				</step>
			</stage>
		-->

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>