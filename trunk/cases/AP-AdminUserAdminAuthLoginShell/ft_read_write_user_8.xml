<testcase>
	<brief>Verify read-write user can create all kinds of configuration and save config</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	<description>

		Description
		Verify read-write user can create all kinds of configuration and save config
		Pre-condition
		Create a read-write user in AP
		Test procedure
		1. Read-write user to login AP
		2. Create a hive and bind it to interface mgt0
		3. Create a SSID and bind it to interface wifi0
		4. Save config and reboot
		5. Check if config be saved by show running-config
		Expect result
		1. Login AP successful
		2. Show running-config to check these two commands
		3. Show running-config to check these two commands
		4. Operation can be executed
		5. All configurations exist in running-config

	</description>
	<stage>
		<property name="read_write_user_name" value="test" />
		<property name="read_write_user_passwd" value="testpwd" />

		<step no="1">
			<desc>Create a read write user to AP</desc>
			<ssh target="ap1">
				-v "admin read-write ${read_write_user_name} password ${read_write_user_passwd}"
				-v "save config"
			</ssh>
		</step>

		<step no="2">
			<desc>Use read write user login AP and check login user</desc>
			<log-file>loginuser.log</log-file>
			<ssh target="ap1" user="${read_write_user_name}" password="${read_write_user_passwd}">
				-v "show admin active"
			</ssh>
			<log-match> -i "${read_write_user_name}" -i "pts" -c</log-match>
		</step>

		<step no="3">
			<desc>Read write user login AP, create a hive profile and bind it to interface mgt0 by CLI</desc>
			<log-file>hiveconfig.log</log-file>
			<ssh target="ap1" user="${read_write_user_name}" password="${read_write_user_passwd}">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "save config"
			</ssh>
			<log-match>-e "hive ${hive.name}" -c</log-match>
			<log-match>-e "interface mgt0 hive ${hive.name}" -c</log-match>
		</step>

		<step no="4">
			<desc>Read write user login AP, create a SSID profile and bind it to interface wifi0 by CLI</desc>
			<log-file>ssidconfig.log</log-file>
			<ssh target="ap1" user="${read_write_user_name}" password="${read_write_user_passwd}">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "save config"
			</ssh>
			<log-match>-e "ssid ${ssid.name}" -c</log-match>
			<log-match>-e "interface wifi0 ssid ${ssid.name}" -c</log-match>
		</step>

		<step no="5_0">
			<desc>logout console</desc>
			<console target="ap1">
				-v "sh admin active"
				-v "exit"
			</console>
		</step>
		
		<step no="5">
			<desc>Read write user login AP and reboot AP</desc>
			<console target="ap1" user="${read_write_user_name}" password="${read_write_user_passwd}">
				-v "reboot"
			</console>
		</step>

		<step no="6">
			<desc>Read write user login AP and show running config</desc>
			<log-file>check_running_config.log</log-file>
			<console target="ap1" user="${read_write_user_name}" password="${read_write_user_passwd}">
				-v "show running-config"
				-v "exit"
			</console>
			<log-match>-e "hive ${hive.name}" -c</log-match>
			<log-match>-e "interface mgt0 hive ${hive.name}" -c</log-match>
			<log-match>-e "ssid ${ssid.name}" -c</log-match>
			<log-match>-e "interface wifi0 ssid ${ssid.name}" -c</log-match>
		</step>

	</stage>

</testcase>
