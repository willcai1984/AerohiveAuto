<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify only support one root-admin user exist</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Default admin user login AP via console
		Enable telnet in AP

		Test Procedure:
		1. Create a new root-admin user
		2. Check how many root-admin user exist by show admin
		3. Use old admin user to login AP via SSH or telnet
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<property name="create_user_name" value="aero" />
	<property name="create_user_passwd" value="12345" />

	<stage>
		<step no="1">
			<desc>
				Default admin user login AP via console
				Enable telnet in AP
				Create a new root-admin user
				Check how many root-admin user exist by show admin
			</desc>
			<log-file>check_root_admin_num.log</log-file>
			<console target="ap1">
				-v "interface eth0 manage Telnet"
				-v "admin root-admin ${create_user_name} password ${create_user_passwd}"
				-v "show admin"
				-v "exit"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "show admin" -p "root-admin" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "show admin" -p "${ap.def.user}\s+root-admin" -c 0 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "show admin" -p "${create_user_name}\s+root-admin" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2">
			<desc>
				Use default user admin/aerohive to login AP via console
			</desc>
			<log-file>login_ap_via_console.log</log-file>
			<!--  
				<console target="ap1" user="${ap.def.user}" password="${ap.def.passwd}">
					-v ""; exit 0
				</console>
			-->	
			<script>
				clicfg.pl -d ${tb.conserver.ip}  -i 782 -e ${ap1.cons_name} -m ".*[&gt;|#]" -u ${ap.def.user} -p ${ap.def.passwd} -l ${log.dir} -z ${log.file} \
                        -v "" ;exit 0
			</script>	
			
			<log-match>-c -e "Maximum login tries exceeded. Go away!"</log-match>
		</step>

		<step no="3">
			<desc>
				Use default user admin/aerohive to login AP via SSH
			</desc>
			<log-file>login_ap_via_ssh.log</log-file>
			<!--  
				<ssh target="ap1" user="${ap.def.user}" password="${ap.def.passwd}">
					-v ""; exit 0
				</ssh>
			-->
			
			<script>
                 clicfg.pl -d ${ap1.mgt0.ip}  -i 22  -m ".*[&gt;|#]" -u ${ap.def.user} -p ${ap.def.passwd} -l ${log.dir} -z ${log.file} \
                        -v "" ;exit 0
             </script>
			
			<log-match>-c -e "Permission denied (publickey,password)."</log-match>
		</step>

		<step no="4">
			<desc>
				Use default user admin/aerohive to login AP via telnet
			</desc>
			<log-file>login_ap_via_telnet.log</log-file>
			<!--  
			<telnet target="ap1" user="${ap.def.user}" password="${ap.def.passwd}">
				-v ""; exit 0
			</telnet>
			-->
			<script>
				 clicfg.pl -d ${ap1.mgt0.ip}  -i 23 -m ".*[&gt;|#]" -u ${ap.def.user} -p ${ap.def.passwd} -l ${log.dir} -z ${log.file} \
                        -v "" ;exit 0
			</script>	
			<log-match>-c -e "Maximum login tries exceeded. Go away!"</log-match>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					restore default user admin
				</desc>
				<telnet target="ap1" user="${create_user_name}" password="${create_user_passwd}">
					-v "no admin min-password-length"
					-v "admin root-admin ${ap.def.user} password ${ap.def.passwd}"
					-v "save config"
				</telnet>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>
