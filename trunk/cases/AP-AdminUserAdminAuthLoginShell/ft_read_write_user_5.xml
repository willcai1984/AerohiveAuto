<testcase>
	<brief>Verify read-write user cann’t create/modify/delete read-write user</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	<description>

		Description
		Verify read-write user cann’t create/modify/delete read-write user
		Pre-condition
		Create two read-write users in AP
		Enable telnet in AP
		Test procedure
		1. Read-write user to login AP via console or SSH or telnet
		2. Create a read-write user
		3. Modify another read-write user’s password
		4. Delete another read-write user
		Expect result
		1. Login AP successful
		2. Could not create user, suggest error
		3. Could not modify other user’s password, suggest error
		4. Could not delete other user, suggest error

	</description>
	<stage>
		<property name="read_write_user_name1" value="test1" />
		<property name="read_write_user_passwd1" value="testpwd1" />
		<property name="read_write_user_name2" value="test2" />
		<property name="read_write_user_passwd2" value="testpwd2" />
		<property name="read_write_user_name3" value="test3" />
		<property name="read_write_user_passwd3" value="testpwd3" />

		<step no="1">
			<desc>Create two read write users to AP</desc>
			<log-file>set_read_write_user.log</log-file>
			<ssh target="ap1">
				-v "admin read-write ${read_write_user_name1} password ${read_write_user_passwd1}"
				-v "admin read-write ${read_write_user_name2} password ${read_write_user_passwd2}"
				-v "save config"
				-v "show running-config"
			</ssh>
			<log-match>-e "admin read-write ${read_write_user_name1} password" -c</log-match>
			<log-match>-e "admin read-write ${read_write_user_name2} password" -c</log-match>
		</step>

		<step no="2_0">
			<desc>exit console</desc>
			<console target="ap1">
				-v "show admin active"
				-v "exit"
			</console>	
		</step>
		
		<step no="2">
			<desc>Use created read write user login AP via console and create read write user</desc>
			<log-file>create_read_write_user_console.log</log-file>
			<console target="ap1" user="${read_write_user_name1}" password="${read_write_user_passwd1}">
				-v "admin read-write ${read_write_user_name3} password ${read_write_user_passwd3}"
				-v "exit"
			</console>
			<log-match>-i "ERROR:" -i "login user is not super user" -c</log-match>
		</step>

		<step no="3">
			<desc>Read write user login AP via console and change another read write user's password by CLI</desc>
			<log-file>change_read_write_pwd_console.log</log-file>
			<console target="ap1" user="${read_write_user_name1}" password="${read_write_user_passwd1}">
				-v "admin read-write ${read_write_user_name2} password ${read_write_user_passwd3}"
				-v "exit"
			</console>
			<log-match> -i "ERROR:" -i "login user is not super user" -c</log-match>
			<no-error-check />
		</step>

		<step no="4">
			<desc>Read write user login AP via console and delete another read write user by CLI</desc>
			<log-file>delete_read_write_user_console.log</log-file>
			<console target="ap1" user="${read_write_user_name1}" password="${read_write_user_passwd1}">
				-v "no admin read-write ${read_write_user_name2}"
				-v "exit"
			</console>
			<log-match>-i "ERROR:" -i "login user is not super user" -c</log-match>
			<no-error-check />
		</step>

		<step no="5">
			<desc>Use created read write user login AP via ssh and create read write user</desc>
			<log-file>create_read_write_user_ssh.log</log-file>
			<ssh target="ap1" user="${read_write_user_name1}" password="${read_write_user_passwd1}">
				-v "admin read-write ${read_write_user_name3} password ${read_write_user_passwd3}"
			</ssh>
			<log-match>-i "ERROR:" -i "login user is not super user" -c</log-match>
		</step>

		<step no="6">
			<desc>Read write user login AP via ssh and change another read write user's password by CLI</desc>
			<log-file>change_read_write_pwd_ssh.log</log-file>
			<ssh target="ap1" user="${read_write_user_name1}" password="${read_write_user_passwd1}">
				-v "admin read-write ${read_write_user_name2} password ${read_write_user_passwd3}"
			</ssh>
			<log-match> -i "ERROR:" -i "login user is not super user" -c</log-match>
			<no-error-check />
		</step>

		<step no="7">
			<desc>Read write user login AP via ssh and delete another read write user by CLI</desc>
			<log-file>delete_read_write_user_ssh.log</log-file>
			<ssh target="ap1" user="${read_write_user_name1}" password="${read_write_user_passwd1}">
				-v "no admin read-write ${read_write_user_name2}"
			</ssh>
			<log-match>-i "ERROR:" -i "login user is not super user" -c</log-match>
			<no-error-check />
		</step>

		<step no="8">
			<desc>Use created read write user login AP via telnet and create read write user</desc>
			<log-file>create_read_write_user_telnet.log</log-file>
			<telnet target="ap1" user="${read_write_user_name1}" password="${read_write_user_passwd1}">
				-v "admin read-write ${read_write_user_name3} password ${read_write_user_passwd3}"
			</telnet>
			<log-match>-i "ERROR:" -i "login user is not super user" -c</log-match>
		</step>

		<step no="9">
			<desc>Read write user login AP via telnet and change another read write user's password by CLI</desc>
			<log-file>change_read_write_pwd_telnet.log</log-file>
			<telnet target="ap1" user="${read_write_user_name1}" password="${read_write_user_passwd1}">
				-v "admin read-write ${read_write_user_name2} password ${read_write_user_passwd3}"
			</telnet>
			<log-match> -i "ERROR:" -i "login user is not super user" -c</log-match>
			<no-error-check />
		</step>

		<step no="10">
			<desc>Read write user login AP via telnet and delete another read write user by CLI</desc>
			<log-file>delete_read_write_user_telnet.log</log-file>
			<telnet target="ap1" user="${read_write_user_name1}" password="${read_write_user_passwd1}">
				-v "no admin read-write ${read_write_user_name2}"
			</telnet>
			<log-match>-i "ERROR:" -i "login user is not super user" -c</log-match>
			<no-error-check />
		</step>

	</stage>

</testcase>
