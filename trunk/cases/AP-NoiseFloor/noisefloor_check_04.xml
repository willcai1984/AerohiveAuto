<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Under HT20/HT40 mode, check if noise floor change </brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		Test Procedure:

		1) Set radio profile ng with HT20 and bind to wifi0.
		"radio profile ng phymode 11ng"
		"radio profile ng channel-width 20"
		"in wifi0 radio profile ng"
		"in wifi0 radio channel 6"
		2) Wait 1 minute.Show interface wifi0 to check HT20 mode noise floor A.
		"show interface wifi0 | include noise"
		3) Set radio profile ng to HT40 mode and bind to wifi0
		"radio profile ng channel-width 40-a"
		"in wifi0 radio channel 6"
		4) Wait 1 minute,Show interface wifi0 to check HT40 mode nose floor B.
		"show interface wifi0 | include noise"
		5) Check A and B.result 1
		6) Set radio profile na with HT20 and bind to wifi1.
		"radio profile na phymode 11na"
		"radio profile na channel-width 20"
		"in wifi1 radio profile na"
		"in wifi1 radio channel 36"
		7) Wait 1 minute.Show interface wifi1 to check HT20 mode noise floor A.
		"show interface wifi1 | include noise"
		8) Set radio profile na to HT40 mode and bind to wifi1
		"radio profile na channel-width 40-a"
		"in wifi1 radio channel 36"
		9) Wait 1 minute,Show
		interface wifi1 to check HT40 mode nose floor B.
		"show interface wifi1 | include noise"
		10) Check A and B.result 1
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="0">
			<desc>
				create ssid
			</desc>
			<log-file>show_acsp.log</log-file>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "show acsp"
			</telnet>
		</step>

		<step no="1">
			<desc>
				1) Set radio profile ng with HT20 and bind to wifi0.
				"radio profile ng phymode 11ng"
				"radio profile ng channel-width 20"
				"in wifi0 radio profile ng"
				"in wifi0 radio channel 6"
			</desc>
			<telnet target="ap1">
				-v "radio profile ng phymode 11ng"
				-v "radio profile ng channel-width 20"
				-v "interface wifi0 radio profile ng"
				-v "interface wifi0 radio channel 6"
			</telnet>
		</step>

		<step no="2" delay="60">
			<desc>
				2) Wait 1 minute.Show interface wifi0 to check HT20 mode noise floor A.
				"show interface wifi0 | include noise"
			</desc>
			<log-file>step2_show_int_wifi0.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				get the wifi0_20_noise
			</desc>
			<setvar name="wifi0_20_noise">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step2_show_int_wifi0.log -t str
			</setvar>
		</step>

		<step no="3">
			<desc>
				3) Set radio profile ng to HT40 mode and bind to wifi0
				"radio profile ng channel-width 40-above"
				"in wifi0 radio channel 6"
			</desc>
			<telnet target="ap1">
				-v "radio profile ng channel-width 40-above"
				-v "interface wifi0 radio channel 6"
			</telnet>
		</step>

		<step no="4" delay="60">
			<desc>
				4) Wait 1 minute,Show interface wifi0 to check HT40 mode nose floor B.
				"show interface wifi0 | include noise"
			</desc>
			<log-file>step4_show_int_wifi0.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="4.1">
			<desc>
				get the wifi0_40_noise
			</desc>
			<setvar name="wifi0_40_noise">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step4_show_int_wifi0.log -t str
			</setvar>
		</step>

		<step no="5">
			<desc>
				5) Check A and B.result 1
			</desc>
			<setvar name="wifi0">
				python -c 'print abs(${wifi0_40_noise}-${wifi0_20_noise})-3'
			</setvar>
		</step>

		<step no="5.1">
			<desc>check wifi0</desc>
			<log-file>check_wifi0.log</log-file>
			<script>
				if [ ${wifi0} -le 0 ];then echo "success";fi &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "success"</log-match>
		</step>
  </stage>
  
  <stage>
    <if>"${ap1.wifi1.existed}" =="true"</if>
		<step no="6">
			<desc>
				6) Set radio profile na with HT20 and bind to wifi1.
				"radio profile na phymode 11na"
				"radio profile na channel-width 20"
				"in wifi1 radio profile na"
				"in wifi1 radio channel 149"
			</desc>
			<telnet target="ap1">
				-v "radio profile na phymode 11na"
				-v "radio profile na channel-width 20"
				-v "interface wifi1 radio profile na"
				-v "interface wifi1 radio channel 149"
			</telnet>
		</step>

		<step no="7" delay="60">
			<desc>
				7) Wait 1 minute.Show interface wifi1 to check HT20 mode noise floor A.
				"show interface wifi1 | include noise"
			</desc>
			<log-file>step7_show_int_wifi1.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="7.1">
			<desc>
				get the wifi1_20_noise
			</desc>
			<setvar name="wifi1_20_noise">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step7_show_int_wifi1.log -t str
			</setvar>
		</step>

		<step no="8">
			<desc>
				8) Set radio profile na to HT40 mode and bind to wifi1
				"radio profile na channel-width 40-above"
				"in wifi1 radio channel 149"
			</desc>
			<telnet target="ap1">
				-v "radio profile na channel-width 40-above"
				-v "interface wifi1 radio channel 149"
			</telnet>
		</step>

		<step no="9" delay="60">
			<desc>
				9) Wait 1 minute,Show interface wifi1 to check HT40 mode nose floor B.
				"show interface wifi1 | include noise"
			</desc>
			<log-file>step9_show_int_wifi1.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="9.1">
			<desc>
				get the wifi1_40_noise
			</desc>
			<setvar name="wifi1_40_noise">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step9_show_int_wifi1.log -t str
			</setvar>
		</step>

		<step no="10">
			<desc>
				10) Check A and B.result 1
			</desc>
			<setvar name="wifi1">
				python -c 'print abs(${wifi0_40_noise}-${wifi0_20_noise})-3'
			</setvar>
		</step>

		<step no="10.1">
			<desc>check wifi1</desc>
			<log-file>check_wifi1.log</log-file>
			<script>
				if [ ${wifi1} -le 0 ];then echo "success";fi &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "success"</log-match>
		</step>
	</stage>
</testcase>