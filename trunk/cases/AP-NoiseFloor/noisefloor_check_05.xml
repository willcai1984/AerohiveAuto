<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>With different chain matrix, check if noise floor change </brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		AP

		Test Procedure:

		1) Set radio chain to 1*1.
		"radio profile ng phymode 11ng"
		"radio profile ng transmit-chain 1"
		"radio profile ng receive-chain 1"
		"interface wifi0 radio profile ng"
		"interface wifi0 radio channel 6"
		2) Wait 1 minute,check wifi0 noise floor A.
		"show in wifi0 | in noise"
		3) Set radio chain to 1*2.
		"radio profile ng transmit-chain 1"
		"radio profile ng receive-chain 2"
		4) Wait 1 minute,check wifi0 noise floor B.
		"show in wifi0 | in noise"
		5) Set radio chain to 1*3 .
		"radio profile ng transmit-chain 1"
		"radio profile ng receive-chain 3"
		6) Wait 1 minute,check wifi0 noise floor C.
		"show in wifi0 | in noise"
		7) Set radio chain to 3*3 .
		"radio profile ng transmit-chain 3"
		"radio profile ng receive-chain 3"
		8) Wait 1 minute,check wifi0 noise floor D.
		"show in wifi0 | in noise"
		9) Check A,B,C,D.result 1.
		10) Set wifi1 radio chain to 1*1.
		"radio profile na phymode 11na"
		"radio profile na transmit-chain 1"
		"radio profile na receive-chain 1"
		"interface wifi1 radio profile na"
		"interface wifi1 radio channel 36"
		11) Wait 1 minute,check wifi1 noise floor E.
		"show in wifi1 | in noise"
		12) Set radio chain to 1*2.
		"radio profile na transmit-chain 1"
		"radio profile na receive-chain 2"
		13) Wait 1 minute,check wifi1 noise floor F.
		"show in wifi1 | in noise"
		14) Set radio chain to 1*3 .
		"radio profile na transmit-chain 1"
		"radio profile na receive-chain 3"
		15) Wait 1 minute,check wifi1 noise floor G.
		"show in wifi1 | in noise"
		16) Set radio chain to 3*3 .
		"radio profile na transmit-chain 3"
		"radio profile na receive-chain 3"
		17) Wait 1 minute,check wifi1 noise floor H.
		"show in wifi1 | in noise"
		18) Check E,F,G,H,result 2.
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
	  <if>"${img.prodtype}" == "AP350" || "${img.prodtype}" == "AP340" || "${img.prodtype}" == "AP330" || "${img.prodtype}" == "AP320" || "${img.prodtype}" == "AP370" || "${img.prodtype}" == "AP390"</if>
		<step no="0">
			<desc>
				create ssid
			</desc>
			<log-file>show_acsp.log</log-file>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "show acsp"
			</telnet>
		</step>

		<step no="1">
			<desc>
				1) Set radio chain to 1*1.
				"radio profile ng phymode 11ng"
				"radio profile ng transmit-chain 1"
				"radio profile ng receive-chain 1"
				"interface wifi0 radio profile ng"
				"interface wifi0 radio channel 6"
			</desc>
			<telnet target="ap1">
				-v "radio profile ng phymode 11ng"
				-v "radio profile ng transmit-chain 1"
				-v "radio profile ng receive-chain 1"
				-v "interface wifi0 radio profile ng"
				-v "interface wifi0 radio channel 6"
			</telnet>
		</step>

		<step no="2" delay="60">
			<desc>
				2) Wait 1 minute,check wifi0 noise floor A.
				"show in wifi0 | in noise"
			</desc>
			<log-file>step2_show_int_wifi0.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				get the wifi0 noiseA
			</desc>
			<setvar name="wifi0_A">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step2_show_int_wifi0.log -t str
			</setvar>
		</step>

		<step no="3">
			<desc>
				3) Set radio chain to 1*2.
				"radio profile ng transmit-chain 1"
				"radio profile ng receive-chain 2"
			</desc>
			<telnet target="ap1">
				-v "radio profile ng transmit-chain 1"
				-v "radio profile ng receive-chain 2"
			</telnet>
		</step>

		<step no="4" delay="60">
			<desc>
				4) Wait 1 minute,check wifi0 noise floor B.
				"show in wifi0 | in noise"
			</desc>
			<log-file>step4_show_int_wifi0.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="4.1">
			<desc>
				get the wifi0 noiseB
			</desc>
			<setvar name="wifi0_B">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step4_show_int_wifi0.log -t str
			</setvar>
		</step>

		<step no="5">
			<desc>
				5) Set radio chain to 1*3 .
				"radio profile ng transmit-chain 1"
				"radio profile ng receive-chain 3"
			</desc>
			<telnet target="ap1">
				-v "radio profile ng transmit-chain 1"
				-v "radio profile ng receive-chain 3"
			</telnet>
		</step>

		<step no="6" delay="60">
			<desc>
				6) Wait 1 minute,check wifi0 noise floor C.
				"show in wifi0 | in noise"
			</desc>
			<log-file>step6_show_int_wifi0.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="6.1">
			<desc>
				get the wifi0 noiseC
			</desc>
			<setvar name="wifi0_C">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step6_show_int_wifi0.log -t str
			</setvar>
		</step>

		<step no="7">
			<desc>
				7) Set radio chain to 3*3 .
				"radio profile ng transmit-chain 3"
				"radio profile ng receive-chain 3"
			</desc>
			<telnet target="ap1">
				-v "radio profile ng transmit-chain 3"
				-v "radio profile ng receive-chain 3"
			</telnet>
		</step>

		<step no="8" delay="60">
			<desc>
				8) Wait 1 minute,check wifi0 noise floor D.
				"show in wifi0 | in noise"
			</desc>
			<log-file>step8_show_int_wifi0.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="8.1">
			<desc>
				get the wifi0 noiseD
			</desc>
			<setvar name="wifi0_D">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step8_show_int_wifi0.log -t str
			</setvar>
		</step>

		<step no="9">
			<desc>
				Check A,B.result 1.
			</desc>
			<setvar name="wifi0_AB">
				python -c 'print abs(${wifi0_A}-${wifi0_B})-3'
			</setvar>
		</step>

		<step no="9.1">
			<desc>check wifi0</desc>
			<log-file>check_wifi0AB.log</log-file>
			<script>
				if [ ${wifi0_AB} -le 0 ];then echo "success";fi &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "success"</log-match>
		</step>

		<step no="10">
			<desc>
				Check AC.result 1.
			</desc>
			<setvar name="wifi0_AC">
				python -c 'print abs(${wifi0_A}-${wifi0_C})-3'
			</setvar>
		</step>

		<step no="10.1">
			<desc>check wifi0</desc>
			<log-file>check_wifi0AC.log</log-file>
			<script>
				if [ ${wifi0_AC} -le 0 ];then echo "success";fi &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "success"</log-match>
		</step>

		<step no="10.2">
			<desc>
				Check A,D.result 1.
			</desc>
			<setvar name="wifi0_AD">
				python -c 'print abs(${wifi0_A}-${wifi0_D})-3'
			</setvar>
		</step>

		<step no="10.3">
			<desc>check wifi0</desc>
			<log-file>check_wifi0AD.log</log-file>
			<script>
				if [ ${wifi0_AD} -le 0 ];then echo "success";fi &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "success"</log-match>
		</step>
	
		<step no="11">
			<desc>
				10) Set wifi1 radio chain to 1*1.
				"radio profile na phymode 11na"
				"radio profile na transmit-chain 1"
				"radio profile na receive-chain 1"
				"interface wifi1 radio profile na"
				"interface wifi1 radio channel 36"
			</desc>
			<telnet target="ap1">
				-v "radio profile na phymode 11na"
				-v "radio profile na transmit-chain 1"
				-v "radio profile na receive-chain 1"
				-v "interface wifi1 radio profile na"
				-v "interface wifi1 radio channel 36"
			</telnet>
		</step>

		<step no="12" delay="60">
			<desc>
				11) Wait 1 minute,check wifi1 noise floor E.
				"show in wifi1 | in noise"
			</desc>
			<log-file>step12_show_int_wifi1.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="12.1">
			<desc>
				get the wifi1_E
			</desc>
			<setvar name="wifi1_E">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step12_show_int_wifi1.log -t str
			</setvar>
		</step>

		<step no="13">
			<desc>
				12) Set radio chain to 1*2.
				"radio profile na transmit-chain 1"
				"radio profile na receive-chain 2"
			</desc>
			<telnet target="ap1">
				-v "radio profile na transmit-chain 1"
				-v "radio profile na receive-chain 2"
			</telnet>
		</step>

		<step no="14" delay="60">
			<desc>
				13) Wait 1 minute,check wifi1 noise floor F.
				"show in wifi1 | in noise"
			</desc>
			<log-file>step14_show_int_wifi1.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="14.1">
			<desc>
				get the wifi1_F
			</desc>
			<setvar name="wifi1_F">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step14_show_int_wifi1.log -t str
			</setvar>
		</step>

		<step no="15">
			<desc>
				14) Set radio chain to 1*3 .
				"radio profile na transmit-chain 1"
				"radio profile na receive-chain 3"
			</desc>
			<telnet target="ap1">
				-v "radio profile na transmit-chain 1"
				-v "radio profile na receive-chain 3"
			</telnet>
		</step>

		<step no="16" delay="60">
			<desc>
				15) Wait 1 minute,check wifi1 noise floor G.
				"show in wifi1 | in noise"
			</desc>
			<log-file>step16_show_int_wifi1.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="16.1">
			<desc>
				get the wifi1_G
			</desc>
			<setvar name="wifi1_G">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step16_show_int_wifi1.log -t str
			</setvar>
		</step>

		<step no="17">
			<desc>
				16) Set radio chain to 3*3 .
				"radio profile na transmit-chain 3"
				"radio profile na receive-chain 3"
			</desc>
			<telnet target="ap1">
				-v "radio profile na transmit-chain 3"
				-v "radio profile na receive-chain 3"
			</telnet>
		</step>

		<step no="18" delay="60">
			<desc>
				17) Wait 1 minute,check wifi1 noise floor H.
				"show in wifi1 | in noise"
			</desc>
			<log-file>step18_show_int_wifi1.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="18.1">
			<desc>
				get the wifi1_H
			</desc>
			<setvar name="wifi1_H">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step18_show_int_wifi1.log -t str
			</setvar>
		</step>

		<step no="19">
			<desc>
				18) Check E,F,G,H,result 2.
			</desc>
			<setvar name="wifi1_EF">
				python -c 'print abs(${wifi1_E}-${wifi1_F})-3'
			</setvar>
		</step>

		<step no="19.1">
			<desc>check wifi1</desc>
			<log-file>check_wifi1EF.log</log-file>
			<script>
				if [ ${wifi1_EF} -le 0 ];then echo "success";fi &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "success"</log-match>
		</step>

		<step no="19.2">
			<desc>
				18) Check E,F,G,H,result 2.
			</desc>
			<setvar name="wifi1_EG">
				python -c 'print abs(${wifi1_E}-${wifi1_G})-3'
			</setvar>
		</step>

		<step no="19.3">
			<desc>check wifi1</desc>
			<log-file>check_wifi1EG.log</log-file>
			<script>
				if [ ${wifi1_EG} -le 0 ];then echo "success";fi &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "success"</log-match>
		</step>

		<step no="19.4">
			<desc>
				18) Check E,F,G,H,result 2.
			</desc>
			<setvar name="wifi1_EH">
				python -c 'print abs(${wifi1_E}-${wifi1_H})-3'
			</setvar>
		</step>

		<step no="19.5">
			<desc>check wifi1</desc>
			<log-file>check_wifi1EH.log</log-file>
			<script>
				if [ ${wifi1_EH} -le 0 ];then echo "success";fi &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "success"</log-match>
		</step>
	</stage>
	
	
	
	<stage>
	  <if>"${img.prodtype}" == "AP141" || "${img.prodtype}" == "AP121" || "${img.prodtype}" == "AP170"</if>
		<step no="0">
			<desc>
				create ssid
			</desc>
			<log-file>show_acsp.log</log-file>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "show acsp"
			</telnet>
		</step>

		<step no="1">
			<desc>
				1) Set radio chain to 1*1.
				"radio profile ng phymode 11ng"
				"radio profile ng transmit-chain 1"
				"radio profile ng receive-chain 1"
				"interface wifi0 radio profile ng"
				"interface wifi0 radio channel 6"
			</desc>
			<telnet target="ap1">
				-v "radio profile ng phymode 11ng"
				-v "radio profile ng transmit-chain 1"
				-v "radio profile ng receive-chain 1"
				-v "interface wifi0 radio profile ng"
				-v "interface wifi0 radio channel 6"
			</telnet>
		</step>

		<step no="2" delay="60">
			<desc>
				2) Wait 1 minute,check wifi0 noise floor A.
				"show in wifi0 | in noise"
			</desc>
			<log-file>step2_show_int_wifi0.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				get the wifi0 noiseA
			</desc>
			<setvar name="wifi0_A">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step2_show_int_wifi0.log -t str
			</setvar>
		</step>

		<step no="3">
			<desc>
				3) Set radio chain to 1*2.
				"radio profile ng transmit-chain 1"
				"radio profile ng receive-chain 2"
			</desc>
			<telnet target="ap1">
				-v "radio profile ng transmit-chain 1"
				-v "radio profile ng receive-chain 2"
			</telnet>
		</step>

		<step no="4" delay="60">
			<desc>
				4) Wait 1 minute,check wifi0 noise floor B.
				"show in wifi0 | in noise"
			</desc>
			<log-file>step4_show_int_wifi0.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="4.1">
			<desc>
				get the wifi0 noiseB
			</desc>
			<setvar name="wifi0_B">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step4_show_int_wifi0.log -t str
			</setvar>
		</step>

		<step no="7">
			<desc>
				7) Set radio chain to 2*2 .
				"radio profile ng transmit-chain 2"
				"radio profile ng receive-chain 2"
			</desc>
			<telnet target="ap1">
				-v "radio profile ng transmit-chain 2"
				-v "radio profile ng receive-chain 2"
			</telnet>
		</step>

		<step no="8" delay="60">
			<desc>
				8) Wait 1 minute,check wifi0 noise floor D.
				"show in wifi0 | in noise"
			</desc>
			<log-file>step8_show_int_wifi0.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="8.1">
			<desc>
				get the wifi0 noiseD
			</desc>
			<setvar name="wifi0_D">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step8_show_int_wifi0.log -t str
			</setvar>
		</step>

		<step no="9">
			<desc>
				Check A,B.result 1.
			</desc>
			<setvar name="wifi0_AB">
				python -c 'print abs(${wifi0_A}-${wifi0_B})-3'
			</setvar>
		</step>

		<step no="9.1">
			<desc>check wifi0</desc>
			<log-file>check_wifi0AB.log</log-file>
			<script>
				if [ ${wifi0_AB} -le 0 ];then echo "success";fi &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "success"</log-match>
		</step>


		<step no="10.2">
			<desc>
				Check A,D.result 1.
			</desc>
			<setvar name="wifi0_AD">
				python -c 'print abs(${wifi0_A}-${wifi0_D})-3'
			</setvar>
		</step>

		<step no="10.3">
			<desc>check wifi0</desc>
			<log-file>check_wifi0AD.log</log-file>
			<script>
				if [ ${wifi0_AD} -le 0 ];then echo "success";fi &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "success"</log-match>
		</step>

		<step no="11">
			<desc>
				10) Set wifi1 radio chain to 1*1.
				"radio profile na phymode 11na"
				"radio profile na transmit-chain 1"
				"radio profile na receive-chain 1"
				"interface wifi1 radio profile na"
				"interface wifi1 radio channel 149"
			</desc>
			<telnet target="ap1">
				-v "radio profile na phymode 11na"
				-v "radio profile na transmit-chain 1"
				-v "radio profile na receive-chain 1"
				-v "interface wifi1 radio profile na"
				-v "interface wifi1 radio channel 149"
			</telnet>
		</step>

		<step no="12" delay="60">
			<desc>
				11) Wait 1 minute,check wifi1 noise floor E.
				"show in wifi1 | in noise"
			</desc>
			<log-file>step12_show_int_wifi1.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="12.1">
			<desc>
				get the wifi1_E
			</desc>
			<setvar name="wifi1_E">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step12_show_int_wifi1.log -t str
			</setvar>
		</step>

		<step no="13">
			<desc>
				12) Set radio chain to 1*2.
				"radio profile na transmit-chain 1"
				"radio profile na receive-chain 2"
			</desc>
			<telnet target="ap1">
				-v "radio profile na transmit-chain 1"
				-v "radio profile na receive-chain 2"
			</telnet>
		</step>

		<step no="14" delay="60">
			<desc>
				13) Wait 1 minute,check wifi1 noise floor F.
				"show in wifi1 | in noise"
			</desc>
			<log-file>step14_show_int_wifi1.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="14.1">
			<desc>
				get the wifi1_F
			</desc>
			<setvar name="wifi1_F">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step14_show_int_wifi1.log -t str
			</setvar>
		</step>

		<step no="17">
			<desc>
				16) Set radio chain to 2*2 .
				"radio profile na transmit-chain 2"
				"radio profile na receive-chain 2"
			</desc>
			<telnet target="ap1">
				-v "radio profile na transmit-chain 2"
				-v "radio profile na receive-chain 2"
			</telnet>
		</step>

		<step no="18" delay="60">
			<desc>
				17) Wait 1 minute,check wifi1 noise floor H.
				"show in wifi1 | in noise"
			</desc>
			<log-file>step18_show_int_wifi1.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="18.1">
			<desc>
				get the wifi1_H
			</desc>
			<setvar name="wifi1_H">
				${bin.dir}/getbyrexp.py -p "Noise floor=-(\d+)" -f ${log.dir}/step18_show_int_wifi1.log -t str
			</setvar>
		</step>

		<step no="19">
			<desc>
				18) Check E,F,G,H,result 2.
			</desc>
			<setvar name="wifi1_EF">
				python -c 'print abs(${wifi1_E}-${wifi1_F})-3'
			</setvar>
		</step>

		<step no="19.1">
			<desc>check wifi1</desc>
			<log-file>check_wifi1EF.log</log-file>
			<script>
				if [ ${wifi1_EF} -le 0 ];then echo "success";fi &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "success"</log-match>
		</step>


		<step no="19.4">
			<desc>
				18) Check E,F,G,H,result 2.
			</desc>
			<setvar name="wifi1_EH">
				python -c 'print abs(${wifi1_E}-${wifi1_H})-3'
			</setvar>
		</step>

		<step no="19.5">
			<desc>check wifi1</desc>
			<log-file>check_wifi1EH.log</log-file>
			<script>
				if [ ${wifi1_EH} -le 0 ];then echo "success";fi &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "success"</log-match>
		</step>
	</stage>
</testcase>