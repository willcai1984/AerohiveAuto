<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Static route set gateway address with mgt0.x ip, check route distribution</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		BR:
		Mgt0.x : 10.2.3.1/24
		Network1: 192.168.40.0/24
		L3sw(connecting to br of vpn client):
		Ip: 10.2.3.11/24, gateway: 10.2.3.1/24
		Network2: 192.168.20.0/24 Network3: 192.168.30.0/24
		CVG:
		Routing protocol enable
		Network4: 192.168.40.0/24

		Test Procedure:
		1. Set static route on network2 with gateway on mgt0.x and distribute it to
		vpn
		CLI: ip route net 192.168.20.0 255.255.255.0 gateway 10.2.3.1
		routing route-request enable
		routing internal-sub-network 192.168.20.0/24
		2. Check ip route on cvg
		3. Network4 ping network2 to verify
		4. Delete mgt0.x from br when static route's gateway set on it, check static
		route table distribution to vpn
		5. Re-add mgt0.x on br with static route's gateway set on it to check static
		route table distribution to vpn
		6. Network4 ping network2 to verify
	</description>
	<numofbr>1</numofbr>
	<numofcvg>1</numofcvg>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>linux</tbtype>

	<property name="route.netmask" value="255.255.255.0" />

	<stage>
		<include prefix="0" file="subs/vpn_setup_one.xml" obj-args="cvg1, br1" />

		<step no="1">
			<desc>
				config br1
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "user-profile lan1 qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "interface eth4 mode bridge-access user-profile-attribute 1"
				-v "interface eth4 mac-learning enable"
			</telnet>
		</step>

		<step no="2">
			<desc>
				-set interface down,then up
			</desc>
			<ssh target="br1.vpc4" timeout="120">
				-v "ifconfig ${br1.vpc4.tif.name} down"
				-v "ifconfig ${br1.vpc4.tif.name} up"
				-v "dhclient ${br1.vpc4.tif.name} -r"
			</ssh>
		</step>

		<step no="2.1">
			<desc>
				get ip address
			</desc>
			<log-file>step2.1_ifconfig_vpc4.log</log-file>
			<ssh target="br1.vpc4" timeout="120">
			        -v "dhclient ${br1.vpc4.tif.name} -r"
				-v "dhclient ${br1.vpc4.tif.name}"
				-v "ifconfig ${br1.vpc4.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="2.1a">
			<desc>set br1.vpc4.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc4.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc4.mif.ip} -u ${br1.vpc4.user} -p ${br1.vpc4.passwd} -i ${br1.vpc4.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.2">
			<multi-setvar>
				echo "br1.vpc4.trip.net=$(echo ${br1.vpc4.trip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<step no="3.1">
			<desc>
				config br1
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "routing route-request enable"
				-v "routing internal-sub-network ${br1.vpc4.trip.net}/24"
			</telnet>
		</step>

		<step no="3.2" delay="5">
			<desc>
				config br1
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "ip route net ${br1.vpc4.trip.net} ${route.netmask} gateway ${br1.br.mgt0.ip}"
			</telnet>
		</step>

		<step no="4" delay="60">
			<desc>
				-show ip route
			</desc>
			<log-file>step4_show_ip_route.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-c -i "${br1.vpc4.trip.net} *${br1.br.mgt0.ip}" -i "mgt0"</log-match>
		</step>

		<step no="4.1" delay="30">
			<desc>
				cvg1 check route
			</desc>
			<log-file>step4.1_show_ip_route.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "show ip route"
			</telnet>
			<log-match>-c -i "${br1.vpc4.trip.net} *${br1.br.mgt0.ip}" -i "tunnel0"</log-match>
		</step>

		<step no="5" delay="10" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>
				vpc ping pc2
			</desc>
			<log-file>step5_vpc_ping_pc2_${loop_check.idx}.log</log-file>
			<ssh host="${cvg1.vpc1.mif.ip}">
				-v "ping ${br1.vpc4.trip} -c 5"
			</ssh>
			<log-match>-c -i "from ${br1.vpc4.trip}: " -i "ttl="</log-match>
		</step>

		<step no="6" delay="10">
			<desc>
				- Delete mgt0.x from br
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "no interface mgt0 dhcp-server enable"
				-v "no interface mgt0 ip"
			</telnet>
		</step>

		<step no="7" delay="10" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>
				-show ip route
			</desc>
			<log-file>step7_show_ip_route_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-n -c -i "${br1.vpc4.trip.net} *${br1.br.mgt0.ip}" -i "mgt0"</log-match>
		</step>

		<step no="7.1" delay="10" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>
				cvg1 check route
			</desc>
			<log-file>step7.1_show_ip_route_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "show ip route"
			</telnet>
			<log-match>-n -c -i "${br1.vpc4.trip.net} *${br1.br.mgt0.ip}" -i "tunnel0"</log-match>
		</step>

		<step no="8">
			<desc>
				Re-add mgt0.x on br
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0 ip ${br1.br.mgt0.ip}/24"
				-v "interface mgt0 dhcp-server enable"
			</telnet>
		</step>

		<step no="9" delay="10" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>
				show ip route
			</desc>
			<log-file>step9_show_ip_route_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-c -i "${br1.vpc4.trip.net} *${br1.br.mgt0.ip}" -i "mgt0"</log-match>
		</step>

		<step no="9.1" delay="10" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>
				cvg1 check route
			</desc>
			<log-file>step9.1_show_ip_route_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "show ip route"
			</telnet>
			<log-match>-c -i "${br1.vpc4.trip.net} *${br1.br.mgt0.ip}" -i "tunnel0"</log-match>
		</step>

		<step no="10" delay="10" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>
				vpc ping pc2
			</desc>
			<log-file>step10_vpc_ping_pc2_${loop_check.idx}.log</log-file>
			<ssh host="${cvg1.vpc1.mif.ip}">
				-v "ping ${br1.vpc4.trip} -c 5"
			</ssh>
			<log-match>-c -i "from ${br1.vpc4.trip}: " -i "ttl="</log-match>
		</step>
	</stage>
</testcase>