<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check cvg will distribute learned static routing by rip</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		BR1:
		Mgt0.x : 10.2.3.1/24
		Network1: 192.168.40.0/24
		L3sw (connecting to br of vpn client):
		Ip: 10.2.3.11/24, gateway: 10.2.3.1/24
		Network2: 192.168.20.0/24 Network3: 192.168.30.0/24
		CVG:
		routing protocol enable
		L3sw (connecting to cvg of vpn server):
		Enable routing protocol rip only
		Network4: 192.168.50.0/24

		Test Procedure:
		1. Network4 ping network2 to verify
		2. Set static routing to network2 on br, and push the static route to cvg
		CLI: ip route net 192.168.20.0 255.255.255.0 gateway 10.2.3.11
		routing route-request enable
		routing internal-sub-network 192.168.20.0/24
		3. Check static route be installed on cvg by "show ip route"
		4. Check static route be advertised to l3sw by "show ip route" on l3sw
		5. Network4 ping network2 to verify
	</description>
	<numofbr>1</numofbr>
	<numofcvg>1</numofcvg>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>linux</tbtype>

	<property name="route.netmask" value="255.255.255.0" />

	<stage>
		<step no="CVG.cvg.tunnel.name.gen">
			<setvar name="br1.tunnel.name">
				echo "${job.sid}-s01"
			</setvar>
		</step>

		<step no="BR.tunnel.name.gen">
			<setvar name="br1.tunnel.name">
				echo "${job.sid}-c01"
			</setvar>
		</step>

		<step no="1.CVG">
			<desc>config CVG act as l3 VPN server</desc>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="100">
				-v "save vpn ee-cert tftp://${pub.tftp1.tip}:certs/server_cert.pem"
				-v "save vpn private-key tftp://${pub.tftp1.tip}:certs/server_key.pem"
				-v "vpn xauth-client-list list_01 local"
				-v "vpn xauth-client-list list_01 client-name ${br1.br.name} password aerohive"
				-v "vpn server-ipsec-tunnel ${br1.tunnel.name} vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${br1.tunnel.name} client-list list_01"
				-v "vpn tunnel-policy vpn_policy_01 server ipsec-tunnel ${br1.tunnel.name}"
				-v "routing internal-sub-network ${br1.br.mgt0.ip}/${br.mgt0.supermask}"
				-v ""
				-v ""
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${br.mgt0.supermask}"
				-v ""
				-v ""
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.2.ip}/${br.mgt0.supermask}"
				-v ""
				-v ""
				-v ""
			</telnet>
		</step>

		<step no="1.CVG.routing">
			<desc>enable rip on CVG</desc>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}">
				-v "routing protocol ripv2 advertise eth1"
				-v "routing protocol type ripv2"
				-v "routing protocol enable"
			</telnet>
		</step>

		<step no="1.br">
			<desc>config br as l3 VPN client connet to CVG</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.2 vlan ${br1.vpc2.vlan}"
				-v "interface mgt0.2 ip ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
				-v "save vpn ca-cert tftp://${pub.tftp1.tip}:certs/cacert.pem"
				-v "vpn client-ipsec-tunnel ${br1.tunnel.name} vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${br1.tunnel.name} gateway ${cvg1.cvg.tunnel.ip} client-name ${br1.br.name} password aerohive"
				-v "vpn tunnel-policy vpn_policy_01 client ipsec-tunnel ${br1.tunnel.name} primary"
				-v ""
				-v ""
				-v "routing route-request enable"
				-v ""
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.ip}/${br.lan.netmask}"
				-v ""
				-v ""
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v ""
				-v ""
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
				-v ""
				-v ""
				-v ""
			</telnet>
		</step>

		<step no="2.chk.ike_BR" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on BR side
				destination to CVG public address
			</desc>
			<log-file>chk_ike_sa_br${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>
		</step>

		<step no="2.chk.ike_CVG" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on CVG side
				destionation to BR public address
			</desc>
			<log-file>chk_ike_sa_CVG_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "R" -i "${br1.br.nat.ip}"</log-match>
		</step>

		<step no="2.chk.l3_BR">
			<desc>
				check gre tunnel on br side
				remote to CVG wan address, local mgt0 address ,gateway CVG public address
			</desc>
			<log-file>chk_gre_tunnel_br.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "tunnel\d+[\t ]*gre/ipsec[\t ]*${cvg1.cvg.wan.ip}[\t ]*${br1.br.mgt0.ip}[\t ]*\d+[\t ]*${cvg1.cvg.tunnel.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2.get_tunnel.id_BR">
			<desc>get br primary tunnel id</desc>
			<setvar name="br1.tunnel.id">
				${bin.dir}/getbyrexp.py -p "(tunnel\d+)[\t ]*gre/ipsec[\t ]*${cvg1.cvg.wan.ip}[\t ]*${br1.br.mgt0.ip}[\t ]*\d+[\t ]*${cvg1.cvg.tunnel.ip}" -f ${log.dir}/chk_gre_tunnel_br.log -t str
			</setvar>
		</step>

		<step no="2.chk.l3_CVG">
			<desc>
				check gre tunnel on cvg side
				local to CVG wan address
			</desc>
			<log-file>chk_gre_tunnel_CVG.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "tunnel\d+[\t ]*gre/ipsec[\t ]*any[\t ]*${cvg1.cvg.wan.ip}[\t ]*\d+[\t ]*anonymous" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2.get_tunnel.id_CVG">
			<desc>get CVG tunnel ID</desc>
			<setvar name="br1.tunnel.id">
				${bin.dir}/getbyrexp.py -p "(tunnel\d+)[\t ]*gre/ipsec[\t ]*any[\t ]*${cvg1.cvg.wan.ip}[\t ]*\d+[\t ]*anonymous" -f ${log.dir}/chk_gre_tunnel_CVG.log -t str
			</setvar>
		</step>

		<step no="3">
			<desc>
				config br1
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "user-profile lan1 qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "interface eth4 mode bridge-access user-profile-attribute 1"
				-v "interface eth4 mac-learning enable"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				-set interface down,then up
			</desc>
			<ssh target="br1.vpc4" timeout="120">
				-v "ifconfig ${br1.vpc4.tif.name} down"
				-v "ifconfig ${br1.vpc4.tif.name} up"
				-v "dhclient ${br1.vpc4.tif.name} -r"
			</ssh>
		</step>

		<step no="3.2">
			<desc>
				get ip address
			</desc>
			<log-file>step3.2_ifconfig_vpc1.log</log-file>
			<ssh target="br1.vpc4" timeout="120">
			        -v "dhclient ${br1.vpc4.tif.name} -r"
				-v "dhclient ${br1.vpc4.tif.name}"
				-v "ifconfig ${br1.vpc4.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="3.2a">
			<desc>set br1.vpc4.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc4.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc4.mif.ip} -u ${br1.vpc4.user} -p ${br1.vpc4.passwd} -i ${br1.vpc4.tif.name} -nomask
			</setvar>
		</step>

		<step no="3.3">
			<multi-setvar>
				echo "br1.vpc4.trip.net=$(echo ${br1.vpc4.trip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<step no="4" delay="30">
			<desc>
				vpc ping vpc4
			</desc>
			<log-file>step4_vpc_ping_pc2.log</log-file>
			<ssh host="${cvg1.vpc1.mif.ip}">
				-v "ping ${br1.vpc4.trip} -c 10"
			</ssh>
			<log-match>-n -c -i "from ${br1.vpc4.trip}: " -i "ttl="</log-match>
		</step>

		<step no="5">
			<desc>
				config br1
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "routing route-request enable"
				-v "routing internal-sub-network ${br1.vpc4.trip.net}/24"
				-v "ip route net ${br1.vpc4.trip.net} ${route.netmask} gateway ${br1.vpc4.tif.ip}"
			</telnet>
		</step>

		<step no="6" delay="60">
			<desc>
				-show ip route
			</desc>
			<log-file>step6_show_ip_route.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-c -i "${br1.vpc4.trip.net} *${br1.vpc4.tif.ip}" -i "${route.netmask}" -i "mgt0"</log-match>
		</step>

		<step no="6.1" delay="30">
			<desc>
				cvg1 check route
			</desc>
			<log-file>step6.1_show_ip_route.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "show ip route"
			</telnet>
			<log-match>-c -i "${br1.vpc4.trip.net} *${br1.br.mgt0.ip}" -i "${route.netmask}" -i "tunnel0"</log-match>
		</step>

		<step no="7" delay="10" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				vpc ping vpc4
			</desc>
			<log-file>step7_vpc_ping_pc2_${loop_check.idx}.log</log-file>
			<ssh host="${cvg1.vpc1.mif.ip}">
				-v "ping ${br1.vpc4.trip} -c 10"
			</ssh>
			<log-match>-c -i "from ${br1.vpc4.trip}: " -i "ttl="</log-match>
		</step>
	</stage>
</testcase>