<testcase>
	<brief>(IxPort: CoF=4)Link aggregation contains 8 members, shutdown member interface or add/delete member interface </brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofsw>1</numofsw>
	<tbtype>winlin</tbtype>
	<description>
		Link aggregation contains 8 members, shutdown member interface or add/delete member interface(no enough port, use 4 interfaces only, 3 link-aggregation members)
		shutdown port3 firstly, all 3 ports send pkts, check the pkts capture status; up the port3, all 4 ports send pkts, check the pkts capture status; shutdown port3 again
	</description>
	<comment>
		Test procedure
		1. IXIA port9 send random source mac broadcast pkts continous, result 1
		2. Shutdown any num member interface, result 2
		3. Recover, result 1
		4. Delete any num interface
		5. Modify the port channel on Chesapeakeâ€™s mode to trunk and allowed vlan is 10
		6. Repeat 1-4, result 1
		Expect result
		Result 1: IXIA port 12345678 get the pkts from port9 is about 1:1:1:1:1:1:1:1.
		Result 2: IXIA port get the pkts from port9 is the same as above cases.
	</comment>
	<property name="sw1.user" value="admin" />
	<property name="sw1.passwd" value="aerohive" />
	<property name="tx_port1" value="${sw1.port1.ixia_port}" />
	<property name="rx_port1" value="${sw1.port2.ixia_port}" />
	<property name="rx_port2" value="${sw1.port3.ixia_port}" />
	<property name="rx_port3" value="${sw1.port4.ixia_port}" />
	<property name="agg_id" value="1" />
	<property name="correct_vlan" value="101" />
	<property name="incorrect_vlan" value="102" />

	<stage>
		<step no="1.0.1">
			<desc>
				Show interface mgt0 to get ip address
			</desc>
			<log-file>step1.0.1_mgt0_ip_info.log</log-file>
			<console target="sw1">
				-v 'show interface mgt0'
			</console>
		</step>

		<step no="1.0.2">
			<desc>
				Get mgt0's ip address
			</desc>
			<setvar name="sw1.ip">
				python ${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -f ${log.dir}/step1.0.1_mgt0_ip_info.log -t str
			</setvar>
		</step>

		<step no="1.1.1">
			<desc>
				aggregation, mode access, direction ingress.
			</desc>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'vlan ${correct_vlan}'
				-v 'vlan ${incorrect_vlan}'
				-v 'agg ${agg_id}'
				-v 'interface ${sw1.port1} switch mode access'
				-v 'interface ${sw1.port1} switchport access vlan ${correct_vlan}'
				-v 'interface ${sw1.port2} switch mode access'
				-v 'interface ${sw1.port3} switch mode access'
				-v 'interface ${sw1.port4} switch mode access'
				-v 'interface ${sw1.port2} agg ${agg_id}'
				-v 'interface ${sw1.port3} agg ${agg_id}'
				-v 'interface ${sw1.port4} agg ${agg_id}'
				-v 'interface agg${agg_id} switchport mode access'
				-v 'interface agg${agg_id} switchport access vlan ${correct_vlan}'
				-v 'show running-config'
			</ssh>
		</step>

		<step no="1.1.2.1">
			<desc>
				Direction:ingress; Pkts:no_tag; 3 members are up; tx1 send pkts
			</desc>
			<log-file>step1.1.2.1_ingress_no_tag.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${rx_port1},${rx_port2},${rx_port3} -phyList ${sw1.port1.ixia_port.phytype},${sw1.port2.ixia_port.phytype},${sw1.port3.ixia_port.phytype},${sw1.port4.ixia_port.phytype} -tclServerIP ${pub.tclserver1.ip}"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0011
				-mac_src 0000.0000.0001
				-mac_dst_count 8
				-mac_dst_step 1
				-rate_pps 100"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0001
				-mac_src 0000.0000.0111
				-rate_pps 100"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port2}
				-mac_dst 0000.0000.0001
				-mac_src 0000.0000.0112
				-rate_pps 100"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port3}
				-mac_dst 0000.0000.0001
				-mac_src 0000.0000.0113
				-rate_pps 100"
				-v ""
				-v "start_trans_getstats -txPortList ${tx_port1} -rxPortList
				${rx_port1},${rx_port2},${rx_port3}"
				-v ""
				-v "exit"
			</ssh>
		</step>

		<step no="1.1.2.2">
			<desc>
				Direction:ingress; Pkts:no_tag; 3 members are up; tx1 to rx1/2/3; Get tx1 send pkts
			</desc>
			<setvar name="tx1.send">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.2.1_ingress_no_tag.log -t ${tx_port1}
			</setvar>
		</step>

		<step no="1.1.2.3">
			<desc>
				Direction:ingress; Pkts:no_tag; 3 members are up; tx1 to rx1/2/3; Get rx1 receive pkts
			</desc>
			<setvar name="rx1.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.2.1_ingress_no_tag.log -r ${rx_port1}
			</setvar>
		</step>

		<step no="1.1.2.4">
			<desc>
				Direction:ingress; Pkts:no_tag; 3 members are up; tx1 to rx1/2/3; Get rx2 send pkts
			</desc>
			<setvar name="rx2.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.2.1_ingress_no_tag.log -r ${rx_port2}
			</setvar>
		</step>

		<step no="1.1.2.5">
			<desc>
				Direction:ingress; Pkts:no_tag; 3 members are up; tx1 to rx1/2/3; Get rx3 send pkts
			</desc>
			<setvar name="rx3.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.2.1_ingress_no_tag.log -r ${rx_port3}
			</setvar>
		</step>

		<step no="1.1.2.5">
			<desc>
				Direction:ingress; Pkts:no_tag; 3 members are up; tx1 to rx1/2/3; check if tx1=rx1+rx2+rx3
			</desc>
			<log-file>step1.1.2.5_check.log</log-file>
			<script>
				python ${bin.dir}/check_sum.py -s ${tx1.send} -c ${rx1.receive} -c ${rx2.receive} -c ${rx3.receive} > ${log.dir}/${log.file}
			</script>
			<log-match>-e "The two lists' sum are the same"</log-match>
		</step>

		<step no="1.1.3.1">
			<desc>
				Direction:ingress; Pkts:no_tag; 2 members are up; tx1 send pkts(shutdown rx1); IXIA simulate down, cannot shutdown rx1 dueto it is add to aggregation
			</desc>
			<log-file>step1.1.3.1_ingress_no_tag.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${rx_port1},${rx_port2},${rx_port3} -phyList ${sw1.port1.ixia_port.phytype},${sw1.port2.ixia_port.phytype},${sw1.port3.ixia_port.phytype},${sw1.port4.ixia_port.phytype} -tclServerIP ${pub.tclserver1.ip}"
				-v ""
				-v "ah_port_config -onePort ${rx_port1} -phyMode ${sw1.port2.ixia_port.phytype} -cable disconnect"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0011
				-mac_src 0000.0000.0001
				-mac_dst_count 8
				-mac_dst_step 1
				-rate_pps 100"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0001
				-mac_src 0000.0000.0111
				-rate_pps 100"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port2}
				-mac_dst 0000.0000.0001
				-mac_src 0000.0000.0112
				-rate_pps 100"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port3}
				-mac_dst 0000.0000.0001
				-mac_src 0000.0000.0113
				-rate_pps 100"
				-v ""
				-v "start_trans_getstats -txPortList ${tx_port1} -rxPortList
				${rx_port2},${rx_port3}"
				-v ""
				-v "exit"
			</ssh>
		</step>

		<step no="1.1.3.2">
			<desc>
				Direction:ingress; Pkts:no_tag; 2 members are up; tx1 to rx1/2/3; Get tx1 send pkts
			</desc>
			<setvar name="tx1.send">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.3.1_ingress_no_tag.log -t ${tx_port1}
			</setvar>
		</step>

		<step no="1.1.3.3">
			<desc>
				Direction:ingress; Pkts:no_tag; 2 members are up; tx1 to rx1/2/3; Get rx1 receive pkts
			</desc>
			<setvar name="rx1.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.3.1_ingress_no_tag.log -r ${rx_port1}
			</setvar>
		</step>

		<step no="1.1.3.4">
			<desc>
				Direction:ingress; Pkts:no_tag; 2 members are up; tx1 to rx1/2/3; Get rx2 receive pkts
			</desc>
			<setvar name="rx2.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.3.1_ingress_no_tag.log -r ${rx_port2}
			</setvar>
		</step>

		<step no="1.1.3.5">
			<desc>
				Direction:ingress; Pkts:no_tag; 2 members are up; tx1 to rx1/2/3; Get rx3 receive pkts
			</desc>
			<setvar name="rx3.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.3.1_ingress_no_tag.log -r ${rx_port3}
			</setvar>
		</step>

		<step no="1.1.3.5">
			<desc>
				Direction:ingress; Pkts:no_tag; 2 members are up; tx1 to rx1/2/3; check if tx1=rx2+rx3(rx1=0)
			</desc>
			<log-file>step1.1.3.5_check_sum.log</log-file>
			<script>
				python ${bin.dir}/check_sum.py -s ${tx1.send} -c ${rx2.receive} -c ${rx3.receive} > ${log.dir}/${log.file}
			</script>
			<log-match>-e "The two lists' sum are the same"</log-match>
		</step>

		<step no="1.1.4.1">
			<desc>
				Direction:ingress; Pkts:no_tag; 1 members are up; tx1 send pkts(shutdown rx1 and rx2)
			</desc>
			<log-file>step1.1.4.1_ingress_no_tag.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${rx_port1},${rx_port2},${rx_port3} -phyList ${sw1.port1.ixia_port.phytype},${sw1.port2.ixia_port.phytype},${sw1.port3.ixia_port.phytype},${sw1.port4.ixia_port.phytype} -tclServerIP ${pub.tclserver1.ip}"
				-v ""
				-v "ah_port_config -onePort ${rx_port1} -phyMode ${sw1.port2.ixia_port.phytype} -cable disconnect"
				-v ""
				-v "ah_port_config -onePort ${rx_port2} -phyMode ${sw1.port3.ixia_port.phytype} -cable disconnect"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0011
				-mac_src 0000.0000.0001
				-mac_dst_count 8
				-mac_dst_step 1
				-rate_pps 100"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0001
				-mac_src 0000.0000.0111
				-rate_pps 100"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port2}
				-mac_dst 0000.0000.0001
				-mac_src 0000.0000.0112
				-rate_pps
				100"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port3}
				-mac_dst 0000.0000.0001
				-mac_src 0000.0000.0113
				-rate_pps 100"
				-v ""
				-v "start_trans_getstats -txPortList ${tx_port1} -rxPortList
				${rx_port3}"
				-v ""
				-v "exit"
			</ssh>
		</step>

		<step no="1.1.4.2">
			<desc>
				Direction:ingress; Pkts:no_tag; 1 members are up; tx1 to rx1/2/3; Get tx1 send pkts
			</desc>
			<setvar name="tx1.send">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.4.1_ingress_no_tag.log -t ${tx_port1}
			</setvar>
		</step>

		<step no="1.1.4.3">
			<desc>
				Direction:ingress; Pkts:no_tag; 1 members are up; tx1 to rx1/2/3; Get rx1 receive pkts
			</desc>
			<setvar name="rx1.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.4.1_ingress_no_tag.log -r ${rx_port1}
			</setvar>
		</step>

		<step no="1.1.4.4">
			<desc>
				Direction:ingress; Pkts:no_tag; 1 members are up; tx1 to rx1/2/3; Get rx2 send pkts
			</desc>
			<setvar name="rx2.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.4.1_ingress_no_tag.log -r ${rx_port2}
			</setvar>
		</step>

		<step no="1.1.4.5">
			<desc>
				Direction:ingress; Pkts:no_tag; 1 members are up; tx1 to rx1/2/3; Get rx3 send pkts
			</desc>
			<setvar name="rx3.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.4.1_ingress_no_tag.log -r ${rx_port3}
			</setvar>
		</step>

		<step no="1.1.4.5">
			<desc>
				Direction:ingress; Pkts:no_tag; 1 members are up; tx1 to rx1/2/3; check if tx1=rx3(rx1=0,rx2=0)
			</desc>
			<log-file>step1.1.4.5_check_sum.log</log-file>
			<script>
				python ${bin.dir}/check_sum.py -s ${tx1.send} -c ${rx3.receive} > ${log.dir}/${log.file}
			</script>
			<log-match>-e "The two lists' sum are the same"</log-match>
		</step>

		<step no="1.1.5.1">
			<desc>
				Direction:ingress; Pkts:no_tag; 2 members are up(recover rx2); tx1 send pkts(shutdown rx1)
			</desc>
			<log-file>step1.1.5.1_ingress_no_tag.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${rx_port1},${rx_port2},${rx_port3} -phyList ${sw1.port1.ixia_port.phytype},${sw1.port2.ixia_port.phytype},${sw1.port3.ixia_port.phytype},${sw1.port4.ixia_port.phytype} -tclServerIP ${pub.tclserver1.ip}"
				-v ""
				-v "ah_port_config -onePort ${rx_port1} -phyMode ${sw1.port2.ixia_port.phytype} -cable disconnect"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0011
				-mac_src 0000.0000.0001
				-mac_dst_count 8
				-mac_dst_step 1
				-rate_pps 100"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0001
				-mac_src 0000.0000.0111
				-rate_pps 100"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port2}
				-mac_dst 0000.0000.0001
				-mac_src 0000.0000.0112
				-rate_pps 100"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port3}
				-mac_dst 0000.0000.0001
				-mac_src 0000.0000.0113
				-rate_pps 100"
				-v ""
				-v "start_trans_getstats -txPortList ${tx_port1} -rxPortList
				${rx_port2},${rx_port3}"
				-v ""
				-v "exit"
			</ssh>
		</step>

		<step no="1.1.5.2">
			<desc>
				Direction:ingress; Pkts:no_tag; 2 members are up(recover rx2); tx1 to rx1/2/3; Get tx1 send pkts
			</desc>
			<setvar name="tx1.send">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.5.1_ingress_no_tag.log -t ${tx_port1}
			</setvar>
		</step>

		<step no="1.1.5.3">
			<desc>
				Direction:ingress; Pkts:no_tag; 2 members are up(recover rx2); tx1 to rx1/2/3; Get rx1 receive pkts
			</desc>
			<setvar name="rx1.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.5.1_ingress_no_tag.log -r ${rx_port1}
			</setvar>
		</step>

		<step no="1.1.5.4">
			<desc>
				Direction:ingress; Pkts:no_tag; 2 members are up(recover rx2); tx1 to rx1/2/3; Get rx2 send pkts
			</desc>
			<setvar name="rx2.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.5.1_ingress_no_tag.log -r ${rx_port2}
			</setvar>
		</step>

		<step no="1.1.5.5">
			<desc>
				Direction:ingress; Pkts:no_tag; 2 members are up(recover rx2); tx1 to rx1/2/3; Get rx3 send pkts
			</desc>
			<setvar name="rx3.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.5.1_ingress_no_tag.log -r ${rx_port3}
			</setvar>
		</step>

		<step no="1.1.5.5">
			<desc>
				Direction:ingress; Pkts:no_tag; 2 members are up(recover rx2); tx1 to rx1/2/3; check if tx1=rx2+rx3(rx1=0)
			</desc>
			<log-file>step1.1.5.5_check_sum.log</log-file>
			<script>
				python ${bin.dir}/check_sum.py -s ${tx1.send} -c ${rx2.receive} -c ${rx3.receive} > ${log.dir}/${log.file}
			</script>
			<log-match>-e "The two lists' sum are the same"</log-match>
		</step>

		<step no="1.1.6.1">
			<desc>
				Direction:ingress; Pkts:no_tag; 3 members are up(recover rx1 and 2); tx1 send pkts
			</desc>
			<log-file>step1.1.6.1_ingress_no_tag.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${rx_port1},${rx_port2},${rx_port3} -phyList ${sw1.port1.ixia_port.phytype},${sw1.port2.ixia_port.phytype},${sw1.port3.ixia_port.phytype},${sw1.port4.ixia_port.phytype} -tclServerIP ${pub.tclserver1.ip}"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0011
				-mac_src 0000.0000.0001
				-mac_dst_count 8
				-mac_dst_step 1
				-rate_pps 100"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0001
				-mac_src 0000.0000.0111
				-rate_pps 100"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port2}
				-mac_dst 0000.0000.0001
				-mac_src 0000.0000.0112
				-rate_pps 100"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port3}
				-mac_dst 0000.0000.0001
				-mac_src 0000.0000.0113
				-rate_pps 100"
				-v ""
				-v "start_trans_getstats -txPortList ${tx_port1} -rxPortList
				${rx_port1},${rx_port2},${rx_port3}"
				-v ""
				-v "exit"
			</ssh>
		</step>

		<step no="1.1.6.2">
			<desc>
				Direction:ingress; Pkts:no_tag; 3 members are up(recover rx1 and 2); tx1 to rx1/2/3; Get tx1 send pkts
			</desc>
			<setvar name="tx1.send">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.6.1_ingress_no_tag.log -t ${tx_port1}
			</setvar>
		</step>

		<step no="1.1.6.3">
			<desc>
				Direction:ingress; Pkts:no_tag; 3 members are up(recover rx1 and 2); tx1 to rx1/2/3; Get rx1 receive pkts
			</desc>
			<setvar name="rx1.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.6.1_ingress_no_tag.log -r ${rx_port1}
			</setvar>
		</step>

		<step no="1.1.6.4">
			<desc>
				Direction:ingress; Pkts:no_tag; 3 members are up(recover rx1 and 2); tx1 to rx1/2/3; Get rx2 send pkts
			</desc>
			<setvar name="rx2.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.6.1_ingress_no_tag.log -r ${rx_port2}
			</setvar>
		</step>

		<step no="1.1.6.5">
			<desc>
				Direction:ingress; Pkts:no_tag; 3 members are up(recover rx1 and 2); tx1 to rx1/2/3; Get rx3 send pkts
			</desc>
			<setvar name="rx3.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step1.1.6.1_ingress_no_tag.log -r ${rx_port3}
			</setvar>
		</step>

		<step no="1.1.6.6">
			<desc>
				Direction:ingress; Pkts:no_tag; 3 members are up(recover rx1 and 2); tx1 to rx1/2/3; check if tx1=rx1+rx2+rx3
			</desc>
			<log-file>step1.1.6.6_check_sum.log</log-file>
			<script>
				python ${bin.dir}/check_sum.py -s ${tx1.send} -c ${rx1.receive} -c ${rx2.receive} -c ${rx3.receive} > ${log.dir}/${log.file}
			</script>
			<log-match>-e "The two lists' sum are the same"</log-match>
		</step>

	</stage>

</testcase>

