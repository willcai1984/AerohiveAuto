<testcase>
	<brief>Verify that access RTS threshold and fragment threshold and dtim setting become effective.</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	<description>

		Description
		Verify that access RTS threshold and fragment threshold and dtim setting become effective.
		Test procedure
		1. Verify that access RTS threshold and fragment threshold and dtim setting become effective in cli. Result 1
		Expect result
		1. The access RTS threshold and fragment threshold and dtim setting become effective

	</description>
	<stage>
		<if>"${ap.wifi1.existed}" == "true"</if>
		<step no="2">
			<desc>Set config for AP1 via telnet to ${ap1.mgt0.ip}</desc>
			<telnet target="ap1">
				-v "interface wifi1 mode access"
				-v "ssid ${ssid.name}4"
				-v "interface wifi1 ssid ${ssid.name}4"
				-v "ssid ${ssid.name}5"
				-v "interface wifi1 ssid ${ssid.name}5"
				-v "ssid ${ssid.name}5 rts-threshold 1"
				-v "ssid ${ssid.name}5 frag-threshold 256"
				-v "ssid ${ssid.name}5 dtim-period 55"
				-v "ssid ${ssid.name}6"
				-v "interface wifi1 ssid ${ssid.name}6"
				-v "ssid ${ssid.name}6 rts-threshold 1800"
				-v "ssid ${ssid.name}6 frag-threshold 800"
				-v "ssid ${ssid.name}6 dtim-period 255"
				-v "save config"
			</telnet>
		</step>
		<step no="3">
			<desc>Show ssid of AP1</desc>
			<log-file>show_ssid.log</log-file>
			<telnet target="ap1">
				-v "show ssid"
			</telnet>
		</step>
		<step no="22">
			<desc>Get ssid4 fragment threshold</desc>
			<setvar name="ssid4.frag">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}4" -p 3
			</setvar>
		</step>
		<step no="23">
			<desc>Check search result</desc>
			<script>
				echo "SSID4_FRAG = ${ssid4.frag}"
				if [ "${ssid4.frag}" != "2346" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="24">
			<desc>Get ssid4 RTS threshold</desc>
			<setvar name="ssid4.rts">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}4" -p 4
			</setvar>
		</step>
		<step no="25">
			<desc>Check search result</desc>
			<script>
				echo "SSID4_RTS = ${ssid4.rts}"
				if [ "${ssid4.rts}" != "2346" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="26">
			<desc>Get ssid4 DTIM</desc>
			<setvar name="ssid4.dtim">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}4" -p 5
			</setvar>
		</step>
		<step no="27">
			<desc>Check search result</desc>
			<script>
				echo "SSID4_DTIM = ${ssid4.dtim}"
				if [ "${ssid4.dtim}" != "1" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="28">
			<desc>Get ssid5 fragment threshold</desc>
			<setvar name="ssid5.frag">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}5" -p 3
			</setvar>
		</step>
		<step no="29">
			<desc>Check search result</desc>
			<script>
				echo "SSID5_FRAG = ${ssid5.frag}"
				if [ "${ssid5.frag}" != "256" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="30">
			<desc>Get ssid5 RTS threshold</desc>
			<setvar name="ssid5.rts">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}5" -p 4
			</setvar>
		</step>
		<step no="31">
			<desc>Check search result</desc>
			<script>
				echo "SSID5_RTS = ${ssid5.rts}"
				if [ "${ssid5.rts}" != "1" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="32">
			<desc>Get ssid5 DTIM</desc>
			<setvar name="ssid5.dtim">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}5" -p 5
			</setvar>
		</step>
		<step no="33">
			<desc>Check search result</desc>
			<script>
				echo "SSID5_DTIM = ${ssid5.dtim}"
				if [ "${ssid5.dtim}" != "55" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="34">
			<desc>Get ssid6 fragment threshold</desc>
			<setvar name="ssid6.frag">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}6" -p 3
			</setvar>
		</step>
		<step no="35">
			<desc>Check search result</desc>
			<script>
				echo "SSID6_FRAG = ${ssid6.frag}"
				if [ "${ssid6.frag}" != "800" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="36">
			<desc>Get ssid6 RTS threshold</desc>
			<setvar name="ssid6.rts">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}6" -p 4
			</setvar>
		</step>
		<step no="37">
			<desc>Check search result</desc>
			<script>
				echo "SSID6_RTS = ${ssid6.rts}"
				if [ "${ssid6.rts}" != "1800" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="38">
			<desc>Get ssid6 DTIM</desc>
			<setvar name="ssid6.dtim">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}6" -p 5
			</setvar>
		</step>
		<step no="39">
			<desc>Check search result</desc>
			<script>
				echo "SSID6_DTIM = ${ssid6.dtim}"
				if [ "${ssid6.dtim}" != "255" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="40">
			<desc>Set config for AP1 via telnet to ${ap1.mgt0.ip}</desc>
			<telnet target="ap1">
				-v "no ssid ${ssid.name}6 rts-threshold "
				-v "no ssid ${ssid.name}6 frag-threshold "
				-v "no ssid ${ssid.name}6 dtim-period "
				-v "save config"
			</telnet>
		</step>
		<step no="41">
			<desc>Show ssid of AP1 later</desc>
			<log-file>show_ssid_later.log</log-file>
			<telnet target="ap1">
				-v "show ssid"
			</telnet>
		</step>
		<step no="48">
			<desc>Get ssid6 fragment threshold</desc>
			<setvar name="ssid6.frag.later">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid_later.log -k "${ssid.name}6" -p 3
			</setvar>
		</step>
		<step no="49">
			<desc>Check search result</desc>
			<script>
				echo "SSID6_FRAG_LATER = ${ssid6.frag.later}"
				if [ "${ssid6.frag.later}" != "2346" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="50">
			<desc>Get ssid6 RTS threshold</desc>
			<setvar name="ssid6.rts.later">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid_later.log -k "${ssid.name}6" -p 4
			</setvar>
		</step>
		<step no="51">
			<desc>Check search result</desc>
			<script>
				echo "SSID6_RTS_LATER = ${ssid6.rts.later}"
				if [ "${ssid6.rts.later}" != "2346" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="52">
			<desc>Get ssid6 DTIM</desc>
			<setvar name="ssid6.dtim.later">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid_later.log -k "${ssid.name}6" -p 5
			</setvar>
		</step>
		<step no="53">
			<desc>Check search result</desc>
			<script>
				echo "SSID6_DTIM_LATER = ${ssid6.dtim.later}"
				if [ "${ssid6.dtim.later}" != "1" ]
				then
				exit 1
				fi
			</script>
		</step>
	</stage>
	<stage>
		<step no="62">
			<desc>Set config for AP1 via telnet to ${ap1.mgt0.ip}</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}1"
				-v "interface wifi0 ssid ${ssid.name}1"
				-v "ssid ${ssid.name}2"
				-v "interface wifi0 ssid ${ssid.name}2"
				-v "ssid ${ssid.name}2 rts-threshold 1"
				-v "ssid ${ssid.name}2 frag-threshold 256"
				-v "ssid ${ssid.name}2 dtim-period 55"
				-v "ssid ${ssid.name}3"
				-v "interface wifi0 ssid ${ssid.name}3"
				-v "ssid ${ssid.name}3 rts-threshold 100"
				-v "ssid ${ssid.name}3 frag-threshold 1500"
				-v "ssid ${ssid.name}3 dtim-period 255"
				-v "save config"
			</telnet>
		</step>
		<step no="63">
			<desc>Show ssid of AP1</desc>
			<log-file>show_ssid.log</log-file>
			<telnet target="ap1">
				-v "show ssid"
			</telnet>
		</step>
		<step no="64">
			<desc>Get ssid1 fragment threshold</desc>
			<setvar name="ssid1.frag">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}1" -p 3
			</setvar>
		</step>
		<step no="65">
			<desc>Check search result</desc>
			<script>
				echo "SSID1_FRAG = ${ssid1.frag}"
				if [ "${ssid1.frag}" != "2346" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="66">
			<desc>Get ssid1 RTS threshold</desc>
			<setvar name="ssid1.rts">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}1" -p 4
			</setvar>
		</step>
		<step no="67">
			<desc>Check search result</desc>
			<script>
				echo "SSID1_RTS = ${ssid1.rts}"
				if [ "${ssid1.rts}" != "2346" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="68">
			<desc>Get ssid1 DTIM</desc>
			<setvar name="ssid1.dtim">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}1" -p 5
			</setvar>
		</step>
		<step no="69">
			<desc>Check search result</desc>
			<script>
				echo "SSID1_DTIM = ${ssid1.dtim}"
				if [ "${ssid1.dtim}" != "1" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="70">
			<desc>Get ssid2 fragment threshold</desc>
			<setvar name="ssid2.frag">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}2" -p 3
			</setvar>
		</step>
		<step no="71">
			<desc>Check search result</desc>
			<script>
				echo "SSID2_FRAG = ${ssid2.frag}"
				if [ ${ssid2.frag} != "256" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="72">
			<desc>Get ssid2 RTS threshold</desc>
			<setvar name="ssid2.rts">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}2" -p 4
			</setvar>
		</step>
		<step no="73">
			<desc>Check search result</desc>
			<script>
				echo "SSID2_RTS = ${ssid2.rts}"
				if [ "${ssid2.rts}" != "1" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="74">
			<desc>Get ssid2 DTIM</desc>
			<setvar name="ssid2.dtim">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}2" -p 5
			</setvar>
		</step>
		<step no="75">
			<desc>Check search result</desc>
			<script>
				echo "SSID2_DTIM = ${ssid2.dtim}"
				if [ "${ssid2.dtim}" != "55" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="76">
			<desc>Get ssid3 fragment threshold</desc>
			<setvar name="ssid3.frag">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}3" -p 3
			</setvar>
		</step>
		<step no="77">
			<desc>Check search result</desc>
			<script>
				echo "SSID3_FRAG = ${ssid3.frag}"
				if [ "${ssid3.frag}" != "1500" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="78">
			<desc>Get ssid3 RTS threshold</desc>
			<setvar name="ssid3.rts">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}3" -p 4
			</setvar>
		</step>
		<step no="79">
			<desc>Check search result</desc>
			<script>
				echo "SSID3_RTS = ${ssid3.rts}"
				if [ "${ssid3.rts}" != "100" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="80">
			<desc>Get ssid3 DTIM</desc>
			<setvar name="ssid3.dtim">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid.log -k "${ssid.name}3" -p 5
			</setvar>
		</step>
		<step no="81">
			<desc>Check search result</desc>
			<script>
				echo "SSID3_DTIM = ${ssid3.dtim}"
				if [ "${ssid3.dtim}" != "255" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="82">
			<desc>Set config for AP1 via telnet to ${ap1.mgt0.ip}</desc>
			<telnet target="ap1">
				-v "no ssid ${ssid.name}3 rts-threshold "
				-v "no ssid ${ssid.name}3 frag-threshold "
				-v "no ssid ${ssid.name}3 dtim-period "
				-v "save config"
			</telnet>
		</step>
		<step no="83">
			<desc>Show ssid of AP1 later</desc>
			<log-file>show_ssid_later.log</log-file>
			<telnet target="ap1">
				-v "show ssid"
			</telnet>
		</step>
		<step no="84">
			<desc>Get ssid3 fragment threshold</desc>
			<setvar name="ssid3.frag.later">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid_later.log -k "${ssid.name}3" -p 3
			</setvar>
		</step>
		<step no="85">
			<desc>Check search result</desc>
			<script>
				echo "SSID3_FRAG_LATER = ${ssid3.frag.later}"
				if [ "${ssid3.frag.later}" != "2346" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="86">
			<desc>Get ssid3 RTS threshold</desc>
			<setvar name="ssid3.rts.later">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid_later.log -k "${ssid.name}3" -p 4
			</setvar>
		</step>
		<step no="87">
			<desc>Check search result</desc>
			<script>
				echo "SSID3_RTS_LATER = ${ssid3.rts.later}"
				if [ "${ssid3.rts.later}" != "2346" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="88">
			<desc>Get ssid3 DTIM</desc>
			<setvar name="ssid3.dtim.later">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ssid_later.log -k "${ssid.name}3" -p 5
			</setvar>
		</step>
		<step no="89">
			<desc>Check search result</desc>
			<script>
				echo "SSID3_DTIM_LATER = ${ssid3.dtim.later}"
				if [ "${ssid3.dtim.later}" != "1" ]
				then
				exit 1
				fi
			</script>
		</step>
	</stage>
</testcase>
