<testcase>
	<brief>Verify that the ssid can support legacy client in 11ng /11na mode</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<description>
		Description
		Verify that the ssid can support legacy client in 11ng /11na mode
		Test procedure
		1. Verify that the Mgt frame does not include any HT info. Result 1
		2. Verify that 11b/g client can associate to the ssid (ng). Result 2
		3. Verify that 11a client can associate to the ssid (na). Result2
		4. Verify that 11ng client can associate to the ssid (ng) but mode is 11g. Result 2
		5. Verify that 11na client can associate to the ssid (na) but mode is 11a. Result2
		6. Verify that another ssid in the same radio does not disable 11n HT includes HT info. Result 3.
		7. Verify that the ssid includes HT info by cmd: no ssid xxxx mode legacy, result 3.
		Expect result
		1. The Mgt frame does not include any HT info.
		2. Connection is ok
		3. The mgt frame includes HT info.
	</description>
	<property name="ssid_bind_interface" value="wifi1" />
	<stage>
		<if>"${ap1.wifi1.existed}" == "true"</if>
		<step no="1.1">
		<if>"${img.prodtype}" != "AP1130" &amp;&amp; "${img.prodtype}" != "AP230"</if>
			<desc>Set config for AP1</desc>
			<telnet target="ap1">
				-v "interface wifi1 mode access"
				-v "interface wifi1 radio channel 165"
				-v "ssid ${ssid.name}"
				-v "interface wifi1 ssid ${ssid.name}"
				-v "ssid ${ssid.name} mode legacy"
				-v "save config"
			</telnet>
		</step>
		
		<step no="1.2">
		<if>"${img.prodtype}" == "AP1130" || "${img.prodtype}" == "AP230"</if>
			<desc>Set config for AP1</desc>
			<telnet target="ap1">
				-v "interface wifi1 mode access"
				-v "interface wifi1 radio channel 161"
				-v "ssid ${ssid.name}"
				-v "interface wifi1 ssid ${ssid.name}"
				-v "ssid ${ssid.name} mode legacy"
				-v "save config"
			</telnet>
		</step>
		
		<include prefix="connect_ap" file="subs/sta_wifi_connect_${tb.os}_new.xml" obj-args="conn1, sta1, ap1" />
		<step no="3">
			<desc>Show ssid station in AP1</desc>
			<log-file>show_ssid_station_1.log</log-file>
			<console target="ap1">
				-v "show ssid ${ssid.name} station"
			</console>
		</step>
		<step no="4">
			<desc>Get laptop1 ip in AP1</desc>
			<setvar name="sta1.ip.ap1">
				perl ${bin.dir}/getstring.pl -k "${sta1.tif.mac}" -p 2 \
				-f ${log.dir}/show_ssid_station_1.log
			</setvar>
		</step>
		<step no="5">
			<desc>Compare laptop1 show ip to AP1 show station ip</desc>
			<script>
				if [ ${sta1.ip.ap1} != ${sta1.tif.ip} ];
				then exit 1;
				fi
			</script>
		</step>
		<step no="6">
			<desc>Get phymode in AP1</desc>
			<setvar name="ap1.phymode">
				perl ${bin.dir}/getstring.pl -k "${sta1.tif.mac}" -p 13 \
				-f ${log.dir}/show_ssid_station_1.log
			</setvar>
		</step>
		<step no="7">
			<desc>NG client should show 11a phymode</desc>
			<script>
				if [ ${ap1.phymode} != '11a' ];
				then exit 1;
				fi
			</script>
		</step>
		<step no="8">
			<desc>No ssid ${ssid.name} mode legacy on AP1</desc>
			<console target="ap1">
				-v "no ssid ${ssid.name} mode legacy"
				-v "save config"
			</console>
		</step>
		<step no="9">
			<desc>Bring down the client Wireless of laptop1</desc>
			<ssh target="sta1">
				-v "ifconfig ${sta1.tif.name} down"
				-v "killall -q wpa_supplicant"
			</ssh>
		</step>
		<step no="10" delay="5">
			<desc>delay 5 seconds to reconnect ap</desc>
		</step>
		<include prefix="reconnect_ap" file="subs/sta_wifi_connect_${tb.os}_new.xml" obj-args="conn1, sta1, ap1" />
		<step no="11" delay="5">
			<desc>Get the ip of laptop1</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -d "${sta1.mif.ip}" -u ${sta1.user} \
				-p ${sta1.passwd} -i "${sta1.tif.name}" -nomask \
				-l "${log.dir}"
			</setvar>
		</step>
		<step no="12">
			<desc>Show ssid station in AP1</desc>
			<log-file>show_ssid_station_2.log</log-file>
			<console target="ap1">
				-v "show ssid ${ssid.name} station"
			</console>
		</step>
		<step no="13">
			<desc>Get laptop1 ip in AP1</desc>
			<setvar name="sta1.ip.ap1">
				perl ${bin.dir}/getstring.pl -k "${sta1.tif.mac}" -p 2 \
				-f ${log.dir}/show_ssid_station_2.log
			</setvar>
		</step>
		<step no="14">
			<desc>Compare laptop1 show ip to AP1 show station ip</desc>
			<script>
				if [ ${sta1.ip.ap1} != ${sta1.tif.ip} ];
				then exit 1;
				fi
			</script>
		</step>
		<step no="15">
			<desc>Get phymode in AP1</desc>
			<setvar name="ap1.phymode">
				perl ${bin.dir}/getstring.pl -k "${sta1.tif.mac}" -p 13 \
				-f ${log.dir}/show_ssid_station_2.log
			</setvar>
		</step>
		<step no="16">
			<desc>NG client should show 11na phymode</desc>
			<script>
				if [ ${ap1.phymode} != '11na' ];
				then exit 1;
				fi
			</script>
		</step>
	</stage>
</testcase>