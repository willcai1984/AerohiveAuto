<testcase>
	<brief>Verify that hive RTS threshold and fragment threshold setting become effective.</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>winlin</tbtype>
	<description>

		Description
		Verify that hive RTS threshold and fragment threshold setting become effective.
		Test procedure
		1. Verify that hive RTS threshold and fragment threshold setting become effective in cli. Result 1
		Expect result
		1. The hive RTS threshold and fragment threshold setting become effective

	</description>
	<stage>
		<if>"${ap1.wifi1.existed}" == "true"</if>
		<step no="2">
			<desc>Set config for AP1 via telnet to ${ap1.mgt0.ip}</desc>
			<telnet target="ap1" timeout="60">
				-f "hive_rts_frag_min.cfg"
			</telnet>
		</step>
		<step no="3">
			<desc>Show hive of AP1</desc>
			<log-file>show_hive_min.log</log-file>
			<telnet target="ap1" timeout="60">
				-v "show hive"
			</telnet>
		</step>
		<step no="4">
			<desc>Get hive fragment threshold</desc>
			<setvar name="min_frag">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_hive_min.log -k "driver_hive" -p 3
			</setvar>
		</step>
		<step no="5">
			<desc>Check search result</desc>
			<script>
				echo "MIN_FRAG = ${min_frag}"
				if [ ${min_frag} != 256 ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="6">
			<desc>Get hive RTS threshold</desc>
			<setvar name="min_rts">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_hive_min.log -k "driver_hive" -p 4
			</setvar>
		</step>
		<step no="7">
			<desc>Check search result</desc>
			<script>
				echo "MIN_RTS = ${min_rts}"
				if [ ${min_rts} != 1 ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="8">
			<desc>Change settings to random1</desc>
			<telnet target="ap1" timeout="60">
				-f hive_rts_frag_random1.cfg
			</telnet>
		</step>
		<step no="9">
			<desc>Show hive of AP1</desc>
			<log-file>show_hive_random1.log</log-file>
			<telnet target="ap1" timeout="60">
				-v "show hive"
			</telnet>
		</step>
		<step no="10">
			<desc>Get hive fragment threshold</desc>
			<setvar name="random1_frag">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_hive_random1.log -k "driver_hive" -p 3
			</setvar>
		</step>
		<step no="11">
			<desc>Check search result</desc>
			<script>
				echo "RANDOM1_FRAG = ${random1_frag}"
				if [ ${random1_frag} != 2345 ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="12">
			<desc>Get hive RTS threshold</desc>
			<setvar name="random1_rts">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_hive_random1.log -k "driver_hive" -p 4
			</setvar>
		</step>
		<step no="13">
			<desc>Check search result</desc>
			<script>
				echo "RANDOM1_RTS = ${random1_rts}"
				if [ ${random1_rts} != 2345 ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="14">
			<desc>Change settings to random2</desc>
			<telnet target="ap1" timeout="60">
				-f "hive_rts_frag_random2.cfg"
			</telnet>
		</step>
		<step no="15">
			<desc>Show hive of AP1</desc>
			<log-file>show_hive_random2.log</log-file>
			<telnet target="ap1" timeout="60">
				-v "show hive"
			</telnet>
		</step>
		<step no="16">
			<desc>Get hive fragment threshold</desc>
			<setvar name="random2_frag">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_hive_random2.log -k "driver_hive" -p 3
			</setvar>
		</step>
		<step no="17">
			<desc>Check search result</desc>
			<script>
				echo "RANDOM2_FRAG = ${random2_frag}"
				if [ ${random2_frag} != 1500 ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="18">
			<desc>Get hive RTS threshold</desc>
			<setvar name="random2_rts">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_hive_random2.log -k "driver_hive" -p 4
			</setvar>
		</step>
		<step no="19">
			<desc>Check search result</desc>
			<script>
				echo "RANDOM2_RTS = ${random2_rts}"
				if [ ${random2_rts} != 999 ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="20">
			<desc>Change settings to default</desc>
			<telnet target="ap1" timeout="60">
				-f "hive_rts_frag_default.cfg"
			</telnet>
		</step>
		<step no="21">
			<desc>Show hive of AP1</desc>
			<log-file>show_hive_default.log</log-file>
			<telnet target="ap1" timeout="60">
				-v "show hive"
			</telnet>
		</step>
		<step no="22">
			<desc>Get hive fragment threshold</desc>
			<setvar name="default_frag">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_hive_default.log -k "driver_hive" -p 3
			</setvar>
		</step>
		<step no="23">
			<desc>Check search result</desc>
			<script>
				echo "DEFAULT_FRAG = ${default_frag}"
				if [ ${default_frag} != 2346 ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="24">
			<desc>Get hive RTS threshold</desc>
			<setvar name="default_rts">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_hive_default.log -k "driver_hive" -p 4
			</setvar>
		</step>
		<step no="25">
			<desc>Check search result</desc>
			<script>
				echo "DEFAULT_RTS = ${default_rts}"
				if [ ${default_rts} != 2346 ]
				then
				exit 1
				fi
			</script>
		</step>
	</stage>
</testcase>
