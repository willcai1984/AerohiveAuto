<testcase>
	<brief>Default auth type is open</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>windows</tbtype>
	<description>
		Description
		Verify that the beacon interval in different values become effective(not default value)
		Test procedure
		1. Wifi0/wifi1 radio has 5 or more than 5 SSIDs, BI set min value, result 1.
		2. Client connects to one of the SSID, result 1.
		Expect result
		1. Wifi0 and wifi1 BI should be set correctly in beacon and Wifi0 and wifi1 should send beacons at every 3*interval as radio setting.
	</description>
	<stage>
		<step no="4">
			<desc>Set config for AP1 via telnet to  </desc>
			<telnet target="ap1">
				-v "interface wifi1 mode access"
				-v "ssid ${ssid.name}1"
				-v "interface wifi1 ssid ${ssid.name}1"
				-v "ssid ${ssid.name}2"
				-v "interface wifi1 ssid ${ssid.name}2"
				-v "ssid ${ssid.name}3"
				-v "interface wifi1 ssid ${ssid.name}3"
				-v "ssid ${ssid.name}4"
				-v "interface wifi1 ssid ${ssid.name}4"
				-v "ssid ${ssid.name}5"
				-v "interface wifi1 ssid ${ssid.name}5"
				-f na_beaconinterval_100.cfg
				-v "save config"
			</telnet>
		</step>
		<step no="5">
			<desc>Capture pkts from AP</desc>
			<telnet target="ap1">
				-v "no filter 1"
				-v "filter 1 l2 mgmt subtype 8 "
				-v "capture save interface wifi1 ws_bi_no_default_no_client.pcap"
				-v "capture interface wifi1 count 1500 filter 1"
			</telnet>
		</step>
		<step no="6" delay="30">
			<desc>Transmit pkts from AP to master</desc>
			<telnet target="ap1" timeout="120">
				-v "save capture local ws_bi_no_default_no_client.pcap tftp://${mpc.tif.ip}:/ws_bi_no_default_no_client.pcap"
			</telnet>
		</step>
		
		<step no="7" delay="100">
			<desc>Use Tshark convert pcap file to packet tree</desc>
			<script timeout="100">
				tshark -r /tftpboot/ws_bi_no_default_no_client.pcap -V > ${log.dir}/ts_bi_no_default_no_client.log
			</script>
			<no-error-check />
		</step>
		<step no="8">
			<desc>Show interface wifi1.1 of AP1 </desc>
			<log-file>show_interface_wifi11.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.1"
			</telnet>
		</step>
		<step no="9">
			<desc>Get_mac of wifi1.1 on AP1 </desc>
			<setvar name="sta1.wifi11.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi11.log -i wifi1.1 -o aero -m
			</setvar>
		</step>
		<step no="10">
			<desc>Get ssid1 on wifi1.1 BI in beacon frame</desc>
			<setvar name="ssid1.bi">
				perl ${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_no_client.log -k ${sta1.wifi11.mac} -o "Beacon Interval"
			</setvar>
		</step>
		<step no="11">
			<desc>Compare ssid1.bi to setting BI </desc>
			<script> if [ ${ssid1.bi} != 0.102400 ]; then exit 1; fi </script>
			<failed>next</failed>

		</step>
		<step no="12">
			<desc>Get wifi11 former beacon MAC timestamp </desc>
			<setvar name="wifi11.former.timestamp">
				${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_no_client.log -k ${sta1.wifi11.mac} -o "Arrival Time"
			</setvar>
		</step>
		<step no="13">
			<desc>Get wifi11 BI according to MAC timestamp </desc>
			<log-file>BI_loop1.log</log-file>
			<script>
				bash ${case.dir}/conf/BI_loop.sh ${sta1.wifi11.mac} ${wifi11.former.timestamp} BI_loop1.log ${bin.dir} ${log.dir} 0.102400 "" 5 ""
			</script>
			<failed>next</failed>
		</step>
		<step no="14">
			<desc>Show interface wifi1.2 of AP1 </desc>
			<log-file>show_interface_wifi12.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.2"
			</telnet>
		</step>
		<step no="15">
			<desc>Get_mac of wifi1.2 on AP1 </desc>
			<setvar name="sta1.wifi12.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi12.log -i wifi1.2 -o aero -m
			</setvar>
		</step>
		
		<step no="16">
			<desc>Get ssid1 on wifi1.2 BI in beacon frame</desc>
			<setvar name="ssid2.bi">
				${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_no_client.log -k ${sta1.wifi12.mac} -o "Beacon Interval"
			</setvar>
		</step>
		
		<step no="17">
			<desc>Compare ssid2.bi to setting BI </desc>
			<script> if [ ${ssid2.bi} != 0.102400 ]; then exit 1; fi </script>
			<failed>next</failed>

		</step>
		<step no="18">
			<desc>Get wifi12 former beacon MAC timestamp </desc>
			<setvar name="wifi12.former.timestamp">
				${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_no_client.log -k ${sta1.wifi12.mac} -o "Arrival Time"
			</setvar>
		</step>
		
		<step no="19">
			<desc>Get wifi12 BI according to MAC timestamp </desc>
			<log-file>BI_loop2.log</log-file>
			<script>
				bash ${case.dir}/conf/BI_loop.sh ${sta1.wifi12.mac} ${wifi12.former.timestamp} BI_loop2.log ${bin.dir} ${log.dir} 0.102400 "" 5 ""
			</script>
			<failed>next</failed>

		</step>
		<step no="20">
			<desc>Show interface wifi1.3 of AP1 </desc>
			<log-file>show_interface_wifi13.log </log-file>
			<telnet target="ap1">
				-v "show interface wifi1.3"
			</telnet>
		</step>
		<step no="21">
			<desc>Get_mac of wifi1.3 on AP1 </desc>
			<setvar name="sta1.wifi13.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi13.log -i wifi1.3 -o aero -m
			</setvar>

		</step>
		<step no="22">
			<desc>Get ssid1 on wifi1.3 BI in beacon frame</desc>
			<setvar name="ssid3.bi">parse_pcap.pl -f ${log.dir}/ts_bi_no_default_no_client.log -k ${sta1.wifi13.mac} -o "Beacon Interval"
			</setvar>
		</step>
		<step no="23">
			<desc>Compare ssid3.bi to setting BI </desc>
			<script> if [ ${ssid3.bi} != 0.102400 ]; then exit 1; fi </script>
			<failed>next</failed>

		</step>
		<step no="24">
			<desc>Get wifi13 former beacon MAC timestamp </desc>
			<setvar name="wifi13.formaer.timestamp">
				${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_no_client.log -k ${sta1.wifi13.mac} -o "Arrival Time"
			</setvar>
		</step>
		<step no="25">
			<desc>Get wifi13 BI according to MAC timestamp </desc>
			<log-file>BI_loop3.log</log-file>
			<script>
				bash ${case.dir}/conf/BI_loop.sh ${sta1.wifi13.mac} ${wifi13.formaer.timestamp} BI_loop3.log ${bin.dir} ${log.dir} 0.102400 "" 5 ""
			</script>
			<failed>next</failed>

		</step>

		<step no="26">
			<desc>Show interface wifi1.4 of AP1 </desc>
			<log-file>show_interface_wifi14.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.4"
			</telnet>
			<failed>next</failed>
		</step>
		<step no="27">
			<desc>Get_mac of wifi1.4 on AP1 </desc>
			<setvar name="sta1.wifi14.mac">
			 perl ${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi14.log -i wifi1.4 -o aero -m
			</setvar>
		</step>
		<step no="28">
			<desc>Get ssid1 on wifi1.4 BI in beacon frame</desc>
			<setvar name="ssid4.bi"> 
			perl ${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_no_client.log -k ${sta1.wifi14.mac} -o "Beacon Interval"
			</setvar>

		</step>
		<step no="29">
			<desc>Compare ssid4.bi to setting BI </desc>
			<script>
			 if [ ${ssid4.bi} != 0.102400 ]; then exit 1; fi 
			 </script>
			<failed>next</failed>

		</step>
		<step no="30">
			<desc>Get wifi14 former beacon MAC timestamp </desc>
			<setvar name="wifi14.formaer.timestamp">
				${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_no_client.log -k ${sta1.wifi14.mac} -o "Arrival Time"
			</setvar>
		</step>
		<step no="31">
			<desc>Get wifi14 BI according to MAC timestamp </desc>
			<log-file>BI_loop4.log</log-file>
			<script>
				bash ${case.dir}/conf/BI_loop.sh ${sta1.wifi14.mac} ${wifi14.formaer.timestamp} BI_loop4.log ${bin.dir} ${log.dir} 0.102400 "" 5 ""
			</script>
			<failed>next</failed>
		</step>

		<step no="32">
			<desc>Show interface wifi1.5 of AP1 </desc>
			<log-file>show_interface_wifi15.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.5"
			</telnet>
			<failed>next</failed>
		</step>
		<step no="33">

			<desc>Get_mac of wifi1.5 on AP1 </desc>
			<setvar name="sta1.wifi15.mac"> perl ${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi15.log -i wifi1.5 -o aero -m
			</setvar>
		</step>
		<step no="34">
			<desc>Get ssid1 on wifi1.5 BI in beacon frame</desc>
			<setvar name="ssid5.bi"> perl ${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_no_client.log -k ${sta1.wifi15.mac} -o "Beacon Interval"
			</setvar>

		</step>
		<step no="35">
			<desc>Compare ssid5.bi to setting BI </desc>
			<script> if [ ${ssid5.bi} != 0.102400 ]; then exit 1; fi </script>
			<failed>next</failed>

		</step>
		<step no="36">

			<desc>Get wifi15 former beacon MAC timestamp </desc>
			<setvar name="wifi15.formaer.timestamp">
				${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_no_client.log -k ${sta1.wifi15.mac} -o "Arrival Time"
			</setvar>
		</step>
		<step no="37">
			<desc>Get wifi15 BI according to MAC timestamp </desc>
			<log-file>BI_loop5.log</log-file>
			<script>
				bash ${case.dir}/conf/BI_loop.sh ${sta1.wifi15.mac} ${wifi15.formaer.timestamp} BI_loop5.log ${bin.dir} ${log.dir} 0.102400 "" 5 ""
			</script>
			<failed>next</failed>
		</step>



		<step no="38">
			<desc>Generate wifi_aerohive_test profile for ssid ${ssid.name}11 for laptop1</desc>
			<script>
				${bin.dir}/winprof_gen.pl -f ${case.dir}/conf/open.xml -l ${log.dir} -o wifi_aerohive_test.xml -s "${ssid.name}1"
			</script>

		</step>
		<step no="39">

			<desc>Copy a wifi windows profile file to laptop1 </desc>
			<script>
				staf local fs copy file ${log.dir}/wifi_aerohive_test.xml tofile "c:\\staf\\wifi_aerohive_test.xml" tomachine ${sta1.mif.ip}
			</script>
		</step>
		<step no="40">

			<desc>Bring down the client Wireless of laptop1</desc>
			<script>
				${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "netsh wlan disconnect interface=\"${sta1.tif.name}\""
				<no-error-check />
			</script>
		</step>

		<step no="41">
			<desc>Delete current Wireless profile of laptop1</desc>
			<script>
				${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "netsh wlan delete profile ${ssid.name}1 "
			</script>
		</step>

		<step no="42">
			<desc>Add new profile for ssid $G_TESTBED-$G_PROD_DESC0 to laptop1
			</desc>
			<script>
				${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "netsh wlan add profile filename="c:\\staf\\wifi_aerohive_test.xml" interface=\"${sta1.tif.name}\""

			</script>
		</step>

		<step no="43" delay="120">
			<desc>Bring up the client Wireless on laptop1 </desc>
			<script>
				${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "netsh wlan connect
				name=${ssid.name}1 interface=\"${sta1.tif.name}\"" -v " netsh wlan show profiles"
			</script>
			<no-error-check />
			<passed></passed>
			<failed>next</failed>
		</step>
		<step no="44" delay="60">
			<desc>Loop 10 times ipconfig to get ip in laptop1 </desc>
			<script>
				bash ${case.dir}/conf/get_laptop_ip.sh ${sta1.mif.ip} ${log.dir} ipconfig.log ${bin.dir}

			</script>

		</step>
		<step no="45">
			<desc>Show ipconfig in laptop1 </desc>
			<script>
				${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "ipconfig /all" -l ${log.dir} -o ipconfig_${sta1.mif.ip}.log
			</script>
		</step>

		<step no="46">
			<desc>Get the mac of laptop1  </desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ipconfig_${sta1.mif.ip}.log -i Wireless -o win -m -width 2

			</setvar>
		</step>
		<step no="47">
			<desc>Get the ip of laptop1  </desc>
			<setvar name="sta1.tif.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/ipconfig_${sta1.mif.ip}.log -i Wireless -o win -nomask
			</setvar>
		</step>
		<step no="48" delay="60">
			<desc>Show ssid station in AP1  </desc>
			<log-file>show_wifi1_ssid_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name}1 station"
			</telnet>

		</step>
		<step no="49">
			<desc>Get laptop1 ip in AP1  </desc>
			<setvar name="LAPTOP1_IP_IN_AP">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_wifi1_ssid_station.log -k "${sta1.tif.mac}" -p 2

			</setvar>
		</step>
		<step no="50">
			<desc>Compare laptop1 show ip to AP1 show station ip  </desc>
			<script>
				if [ ${LAPTOP1_IP_IN_AP} != ${sta1.tif.ip} ]; then exit 1;fi

			</script>
		</step>

		<step no="51">

			<desc>Use AP1 to sniffer packets</desc>
			<telnet target="ap1">
				-v "no filter 1"
				-v "filter 1 l2 mgmt subtype 8 "
				-v "capture save interface wifi1 ws_bi_no_default_client.pcap"
				-v "capture interface wifi1 count 1500 filter 1"
			</telnet>
			<no-error-check />
			<failed></failed>
		</step>

		<step no="52" delay="60">
			<desc>Transmit pkts from AP to master</desc>
			<telnet target="ap1" timeout="130">
				-v "save capture local ws_bi_no_default_client.pcap tftp://${mpc.tif.ip}:/ws_bi_no_default_client.pcap"
			</telnet>
			<failed></failed>
		</step>
		<step no="53" delay="100">
			<desc>Use Tshark convert pcap file to packet tree</desc>
			<log-file>ts_bi_no_default_client.log</log-file>
			<script timeout="120">
				tshark -r /tftpboot/ws_bi_no_default_client.pcap -V > ${log.dir}/${log.file}
			</script>
			<no-error-check />

		</step>

		<step no="54">
			<desc>Show interface wifi1.1 of AP1 </desc>
			<log-file>show_interface_wifi11.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.1"
			</telnet>
		</step>
		<step no="55">
			<desc>Get_mac of wifi1.1 on AP1 </desc>
			<setvar name="sta1.wifi11.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi11.log -i wifi1.1 -o aero -m
			</setvar>
		</step>
		<step no="56">
			<desc>Get ssid1 on wifi1.1 BI in beacon frame</desc>
			<setvar name="ssid1.bi">
				perl ${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_client.log -k ${sta1.wifi11.mac} -o "Beacon Interval"
			</setvar>
		</step>
		<step no="57">
			<desc>Compare ssid1.bi to setting BI </desc>
			<script>
				if [ ${ssid1.bi} != 0.102400 ]; then exit 1; fi
			</script>
			<failed>next</failed>

		</step>
		<step no="58">
			<desc>Get wifi11 former beacon MAC timestamp </desc>
			<setvar name="wifi11.former.timestamp">
				${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_client.log -k ${sta1.wifi11.mac} -o "Arrival Time"
			</setvar>
		</step>
		<step no="59">
			<desc>Get wifi11 BI according to MAC timestamp </desc>
			<log-file>BI_loop11.log</log-file>
			<script>
				bash ${case.dir}/conf/BI_loop.sh ${sta1.wifi11.mac} ${wifi11.former.timestamp} ${log.file} ${bin.dir} ${log.dir} 0.102400 1 "" 1
			</script>
			<failed>next</failed>
		</step>



		<step no="60">
			<desc>Show interface wifi1.2 of AP1 </desc>
			<log-file>show_interface_wifi12.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.2"
			</telnet>
		</step>
		<step no="61">
			<desc>Get_mac of wifi1.2 on AP1 </desc>
			<setvar name="sta1.wifi12.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi12.log -i wifi1.2 -o aero -m
			</setvar>
		</step>
		<step no="62">
			<desc>Get ssid1 on wifi1.1 BI in beacon frame</desc>
			<setvar name="ssid2.bi">
				perl ${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_client.log -k ${sta1.wifi12.mac} -o "Beacon Interval"
			</setvar>
		</step>
		<step no="63">
			<desc>Compare ssid2.bi to setting BI </desc>
			<script> if [ ${ssid2.bi} != 0.102400 ]; then exit 1; fi </script>
			<failed>next</failed>

		</step>
		<step no="64">
			<desc>Get wifi12 former beacon MAC timestamp </desc>
			<setvar name="wifi12.former.timestamp">
				${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_client.log -k ${sta1.wifi12.mac} -o "Arrival Time"
			</setvar>
		</step>
		<step no="65">
			<desc>Get wifi12 BI according to MAC timestamp </desc>
			<log-file>BI_loop21.log</log-file>
			<script>
				bash ${case.dir}/conf/BI_loop.sh ${sta1.wifi12.mac} ${wifi12.former.timestamp} ${log.file} ${bin.dir} ${log.dir} 0.102400 "" 5 1
			</script>
			<failed>next</failed>
		</step>

		<step no="66">
			<desc>Show interface wifi1.3 of AP1 </desc>
			<log-file>show_interface_wifi13.log </log-file>
			<telnet target="ap1">
				-v "show interface wifi1.3"
			</telnet>
		</step>
		<step no="67">
			<desc>Get_mac of wifi1.3 on AP1 </desc>
			<setvar name="sta1.wifi13.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi13.log -i wifi1.3 -o aero -m
			</setvar>

		</step>
		<step no="68">
			<desc>Get ssid1 on wifi1.3 BI in beacon frame</desc>
			<setvar name="ssid3.bi">parse_pcap.pl -f ${log.dir}/ts_bi_no_default_client.log -k ${sta1.wifi13.mac} -o "Beacon Interval"
			</setvar>
		</step>
		<step no="69">
			<desc>Compare ssid3.bi to setting BI </desc>
			<script> if [ ${ssid3.bi} != 0.102400 ]; then exit 1; fi </script>
			<failed>next</failed>

		</step>
		<step no="70">
			<desc>Get wifi13 former beacon MAC timestamp </desc>
			<setvar name="wifi13.formaer.timestamp">
				${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_client.log -k ${sta1.wifi13.mac} -o "Arrival Time"
			</setvar>
		</step>
		<step no="71">
			<desc>Get wifi13 BI according to MAC timestamp </desc>
			<log-file>BI_loop31.log</log-file>
			<script>
				bash ${case.dir}/conf/BI_loop.sh ${sta1.wifi13.mac} ${wifi13.formaer.timestamp} ${log.file} ${bin.dir} ${log.dir} 0.102400 "" 5 1

			</script>
			<failed>next</failed>

		</step>

		<step no="72">
			<desc>Show interface wifi1.4 of AP1 </desc>
			<log-file>show_interface_wifi14.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.4"
			</telnet>
			<failed>next</failed>
		</step>
		<step no="73">
			<desc>Get_mac of wifi1.4 on AP1 </desc>
			<setvar name="sta1.wifi14.mac"> perl ${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi14.log -i wifi1.4 -o aero -m
			</setvar>
		</step>
		<step no="74">
			<desc>Get ssid1 on wifi1.4 BI in beacon frame</desc>
			<setvar name="ssid4.bi"> perl ${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_client.log -k ${sta1.wifi14.mac} -o "Beacon Interval"
			</setvar>

		</step>
		<step no="75">
			<desc>Compare ssid4.bi to setting BI </desc>
			<script> if [ ${ssid4.bi} != 0.102400 ]; then exit 1; fi </script>
			<failed>next</failed>

		</step>
		<step no="76">
			<desc>Get wifi14 former beacon MAC timestamp </desc>
			<setvar name="wifi14.formaer.timestamp">
				${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_client.log -k ${sta1.wifi14.mac} -o "Arrival Time"
			</setvar>
		</step>
		<step no="77">
			<desc>Get wifi14 BI according to MAC timestamp </desc>
			<log-file>BI_loop41.log</log-file>
			<script>
				bash ${case.dir}/conf/BI_loop.sh ${sta1.wifi14.mac} ${wifi14.formaer.timestamp} ${log.file} ${bin.dir} ${log.dir} 0.102400 "" 5 1
			</script>
			<failed>next</failed>
		</step>
		
		<step no="78">
			<desc>Show interface wifi1.5 of AP1 </desc>
			<log-file>show_interface_wifi15.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.5"
			</telnet>
			<failed>next</failed>
		</step>
		
		<step no="79">
			<desc>Get_mac of wifi1.5 on AP1 </desc>
			
			<setvar name="sta1.wifi15.mac"> perl ${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi15.log -i wifi1.5 -o aero -m
			</setvar>
		</step>
		<step no="80">
			<desc>Get ssid1 on wifi1.5 BI in beacon frame</desc>
			<setvar name="ssid5.bi"> perl ${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_client.log -k ${sta1.wifi15.mac} -o "Beacon Interval"
			</setvar>

		</step>
		<step no="81">
			<desc>Compare ssid5.bi to setting BI </desc>
			<script> if [ ${ssid5.bi} != 0.102400 ]; then exit 1; fi </script>
			<failed>next</failed>

		</step>
		<step no="82">
			<desc>Get wifi14 former beacon MAC timestamp </desc>
			<setvar name="wifi15.formaer.timestamp">
				${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_bi_no_default_client.log -k ${sta1.wifi15.mac} -o "Arrival Time"
			</setvar>
		</step>
		<step no="83">
			<desc>Get wifi15 BI according to MAC timestamp </desc>
			<log-file>BI_loop51.log</log-file>
			<script>
				bash ${case.dir}/conf/BI_loop.sh ${sta1.wifi15.mac} ${wifi15.formaer.timestamp} ${log.file} ${bin.dir} ${log.dir} 0.102400 "" 5 1
			</script>
			<failed>next</failed>
		</step>

	</stage>

</testcase>
