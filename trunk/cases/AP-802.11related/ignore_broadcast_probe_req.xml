<testcase>
	<brief>Verify that the ssid ignore broadcast probe request.</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	<description>

		Description
		Verify that the ssid ignore broadcast probe request.
		Test procedure
		1. Verify that the beacon frame is send. Result 1
		2. Verify that the ssid ignore broadcast probe request. Result 2
		3. Verify that another ssid in the same radio works as rule. Result 3
		4. Verify that the ssid send probe response to client’s broadcast probe request, by cmd ： no ssid xxxx ignore-broadcast-probe. Result 3
		Expect result
		1. The ssid send beacon by interval.
		2. The ssid ignore broadcast probe request.
		3. The ssid send probe response to client’s broadcast probe request.

	</description>
	<stage>
		<step no="2">
			<desc>Set config for AP1 via console to ${ap1.mgt0.ip}</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}1"
				-v "interface wifi0 ssid ${ssid.name}1"
				-v "ssid ${ssid.name}1 ignore-broadcast-probe"
				-v "ssid ${ssid.name}2"
				-v "interface wifi0 ssid ${ssid.name}2"
				-v "interface wifi0 radio channel 6"
				-v "console timeout 0"
				-v "console page 0"
				-v "save config"
			</telnet>
		</step>

		<step no="3">
			<desc>Show run config of AP1</desc>
			<log-file>show_run_config_1.log</log-file>
			<telnet target="ap1">
				-v "show running-config"
			</telnet>
		</step>
		<step no="4">
			<desc>Open _kdebug wifi-driver wifi0.1/0.2 input</desc>
			<telnet target="ap1">
				-v "_kdebug wifi-driver wifi0.1 input"
				-v "_kdebug wifi-driver wifi0.2 input"
				-v "no debug console"
			</telnet>
		</step>
		<step no="5.1" type="loop-check" loop-max-times="8" loop-interval="30">
			<desc>Show log buffer and check</desc>
			<log-file>logbuffer_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show logging buffer | in discard"
			</telnet>
			<log-match>-c -i 'discard probe_req frame no ssid with ssid suppression enabled'</log-match>
			<no-error-check />
		</step>
		<step no="5.2">
			<desc>Show log buffer and save</desc>
			<log-file>logbuffer.log</log-file>
			<telnet target="ap1">
				-v "show logging buffer | in discard"
			</telnet>
			<no-error-check />
		</step>
		<step no="6">
			<desc>Search result</desc>
			<setvar name="ignore">
				cat ${log.dir}/logbuffer.log | sed 's/\s\{7,\}//g' | grep "wifi0.1" | grep "discard probe_req frame no ssid with ssid suppression enabled"
			</setvar>
		</step>

		<step no="7">
			<desc>Search result</desc>
			<script>
				echo IGNORE = "${ignore}"
				if [ -z "${ignore}" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="8">
			<desc>Search result</desc>
			<script>
				export NOIGNORE=$(cat ${log.dir}/logbuffer.log | sed 's/\s\{7,\}//g' | grep "wifi0.2" | grep "discard probe_req frame no ssid with ssid suppression enabled")
				if [ "$NOIGNORE" ]
				then
				exit 1
				fi
			</script>
		</step>

		<step no="9">
			<desc>Set config for AP1 via console to ${ap1.mgt0.ip}</desc>
			<telnet target="ap1">
				-v "no ssid ${ssid.name}1 ignore-broadcast-probe"
				-v "save config"
				-v "clear log buffered "
			</telnet>
		</step>
		<step no="10">
			<desc>Show run config of AP1</desc>
			<log-file>show_run_config_2.log</log-file>
			<telnet target="ap1">
				-v "show running-config"
			</telnet>
		</step>
		<step no="11" delay="20">
			<desc>Show log buffer and save</desc>
			<log-file>logbuffer_noignore.log</log-file>
			<telnet target="ap1" timeout="60">
				-v "show logging buffer | in discard"
			</telnet>
			<no-error-check />
		</step>
		<step no="12">
			<desc>Search result</desc>
			<script>
				export NOIGNORE=$(cat ${log.dir}/logbuffer_noignore.log | sed 's/\s\{7,\}//g' | grep "wifi0.1" | grep "discard probe_req frame no ssid with ssid suppression enabled")
				if [ "$NOIGNORE" ]
				then
				exit 1
				fi
			</script>
		</step>
	</stage>

	<stage>
		<if>"${ap.wifi1.existed}" == "true"</if>
		<step no="13">
			<desc>Set config for AP1 via console to ${ap1.mgt0.ip}</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}3"
				-v "interface wifi1 ssid ${ssid.name}3"
				-v "ssid ${ssid.name}3 ignore-broadcast-probe"
				-v "ssid ${ssid.name}4"
				-v "interface wifi1 ssid ${ssid.name}4"
				-v "interface wifi1 radio channel 48"
				-v "console timeout 0"
				-v "console page 0"
				-v "save config"
			</telnet>
		</step>

		<step no="14">
			<desc>Show run config of AP1</desc>
			<log-file>show_run_config_wifi1_1.log</log-file>
			<telnet target="ap1">
				-v "show running-config"
			</telnet>
		</step>
		<step no="15">
			<desc>Open _kdebug wifi-driver wifi1.2/1.3 input</desc>
			<telnet target="ap1">
				-v "_kdebug wifi-driver wifi1.2 input"
				-v "_kdebug wifi-driver wifi1.3 input"
				-v "no debug console"
			</telnet>
		</step>
		<step no="16.1" type="loop-check" loop-max-times="8" loop-interval="30">
			<desc>Show log buffer and check</desc>
			<log-file>logbuffer_${loop_check.idx}_wifi1.log</log-file>
			<telnet target="ap1">
				-v "show logging buffer | in discard"
			</telnet>
			<log-match>-c -i 'discard probe_req frame no ssid with ssid suppression enabled'</log-match>
			<no-error-check />
		</step>
		<step no="16.2">
			<desc>Show log buffer and save</desc>
			<log-file>logbuffer_wifi1.log</log-file>
			<telnet target="ap1">
				-v "show logging buffer | in discard"
			</telnet>
			<no-error-check />
		</step>
		<step no="17">
			<desc>Search result</desc>
			<setvar name="ignore_wifi1">
				cat ${log.dir}/logbuffer_wifi1.log | sed 's/\s\{7,\}//g' | grep "wifi1.2" | grep "discard probe_req frame no ssid with ssid suppression enabled"
			</setvar>
		</step>

		<step no="18">
			<desc>Search result</desc>
			<script>
				echo IGNORE_WIFI1 = "${ignore_wifi1}"
				if [ -z "${ignore_wifi1}" ]
				then
				exit 1
				fi
			</script>
		</step>
		<step no="19">
			<desc>Search result</desc>
			<script>
				export NOIGNORE_WIFI1=$(cat ${log.dir}/logbuffer_wifi1.log | sed 's/\s\{7,\}//g' | grep "wifi1.3" | grep "discard probe_req frame no ssid with ssid suppression enabled")
				if [ "$NOIGNORE_WIFI1" ]
				then
				exit 1
				fi
			</script>
		</step>

		<step no="20">
			<desc>Set config for AP1 via console to ${ap1.mgt0.ip}</desc>
			<telnet target="ap1">
				-v "no ssid ${ssid.name}3 ignore-broadcast-probe"
				-v "save config"
				-v "clear log buffered "
			</telnet>
		</step>
		<step no="21">
			<desc>Show run config of AP1</desc>
			<log-file>show_run_config_wifi1_2.log</log-file>
			<telnet target="ap1">
				-v "show running-config"
			</telnet>
		</step>
		<step no="22" delay="20">
			<desc>Show log buffer and save</desc>
			<log-file>logbuffer_noignore_wifi1.log</log-file>
			<telnet target="ap1" timeout="60">
				-v "show logging buffer | in discard"
			</telnet>
			<no-error-check />
		</step>
		<step no="23">
			<desc>Search result</desc>
			<script>
				export NOIGNORE_WIFI1_2=$(cat ${log.dir}/logbuffer_noignore.log | sed 's/\s\{7,\}//g' | grep "wifi1.2" | grep "discard probe_req frame no ssid with ssid suppression enabled")
				if [ "$NOIGNORE_WIFI1_2" ]
				then
				exit 1
				fi
			</script>
		</step>
	</stage>

</testcase>
