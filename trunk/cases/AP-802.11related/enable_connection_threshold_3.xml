<testcase>
	<brief>Verify that hive neighbor power less than connection threshold will not appear in hive neighbor list. And every polling interval power will update in hive neighbor list.
	</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>2</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	<description>
		Description
		Verify that hive neighbor power less than connection threshold will not appear in hive neighbor list. And every polling interval power will update in hive neighbor list.
		Pre-condition
		Test procedure
		1.Set connection_threshold as default -80 dbm (medium). Result 1
		2.Set connection_threshold as -75 dbm (high). Result 1
		3.Set connection_threshold as -85 dbm (low). Result 1
		4.Set connection_threshold as random value between -55 dbm and -90 dbm. Result 1
		5.Set connection_threshold as random value between -55 dbm and -90 dbm, set polling interval as 1 min, Result 1 and Result 2
		6. Set connection_threshold as random value between -55 dbm and -90 dbm, set polling interval as 60 min, Result 1 and Result 2
		7.Set connection_threshold as random value between -55 dbm and -90 dbm, set polling interval as random value between 1 and 60 mins, Result 1 and Result 2
		Expect result
		1.Hive neighbor list only exists the power equal or large than specific connection threshold setting.
		2.Every
		specific polling interval, power will update in hive neighbor.
	</description>
	<stage>
		<if>"${ap.wifi1.existed}" == "true"</if>
		<step no="1">
			<desc>Set up AP1 interface through sw menu via console  </desc>
			<telnet target="ap1">
				-f driver.cfg
			</telnet>
		</step>

		<step no="2">
			<desc>Set up AP1 interface through sw menu via console </desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="3">
			<desc>Set config for AP1 via console to  </desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}1"
				-v "interface wifi0 ssid ${ssid.name}1"
				-v "hive ${hive.name} neighbor connecting-threshold -55 polling-interval 2"
				-v "interface wifi1 radio power 20"
				-v "save config"
			</telnet>
		</step>

		<step no="4">
			<desc>Show interface wifi1.1 of AP1 </desc>
			<log-file>show_interface_wifi11.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.1"
			</telnet>
		</step>

		<step no="5">
			<desc>Get_mac of wifi1.1 on AP1 </desc>
			<setvar name="ap1.wifi1.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi11.log -i wifi1.1 -o aero -m -width 2
			</setvar>
		</step>

		<step no="7">
			<desc>Remove the current ~/.ssh/known_hosts of Master PC to avoid the denial access to the AP</desc>
			<script>
				rm -f ~/.ssh/known_hosts
			</script>
		</step>

		<step no="8">
			<desc>Set up AP2 interface through sw menu via console </desc>
			<telnet target="ap2">
				-f driver.cfg
			</telnet>
		</step>
		<step no="9">
			<desc>Set up AP1 interface through sw menu via console  </desc>
			<telnet target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="10">
			<desc>Set config for AP2 via console to  </desc>
			<telnet target="ap2">
				-v "ssid ${ssid.name}2"
				-v "interface wifi0 ssid ${ssid.name}2"
				-v "hive ${hive.name} neighbor connecting-threshold -80 polling-interval 45"
				-v "save config"
			</telnet>
		</step>

		<step no="11" delay="30">
			<desc>Show AP2 hive neighbor </desc>
			<log-file>show_hive_neighbor_before.log</log-file>
			<telnet target="ap2">
				-v "show hive ${hive.name} neighbor"
			</telnet>
		</step>

		<step no="12">
			<desc>Get AP1 pow in AP2 hive neighbor list </desc>
			<setvar name="ap1.wifi1.pow.before.1.med">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_hive_neighbor_before.log -k "Auth" -k "${ap1.wifi1.mac}" -p 5
			</setvar>
		</step>

		<step no="13">
			<desc>Get AP1 pow in AP2 hive neighbor list </desc>
			<setvar name="ap1.wifi1.pow.before.med">
				aa="${ap1.wifi1.pow.before.1.med}"; echo $aa | perl -ne '/(.*)\(/and print $1';
			</setvar>
		</step>

		<step no="14">
			<desc>Compare AP1 pow with AP2 setting connection threshold </desc>
			<script>
				if [ ${ap1.wifi1.pow.before.med} -lt -80 ]; then exit 1; fi
			</script>
		</step>

		<step no="15" delay="2640">
			<desc>Change power for AP1 via console to  </desc>
			<console target="ap1">
				-v "interface wifi1 radio power 1"
				-v "save config"
			</console>
		</step>

		<step no="16" delay="60">
			<desc>Show AP2 hive neighbor 45 mins later</desc>
			<log-file>show_hive_neighbor_later.log</log-file>
			<telnet target="ap2">
				-v "show hive ${hive.name} neighbor"
			</telnet>
		</step>

		<step no="17">
			<desc>Get AP1 pow in AP2 hive neighbor list 45 mins later</desc>
			<setvar name="ap1.wifi1.pow.later.1.med">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_hive_neighbor_later.log -k "Auth" -k "${ap1.wifi1.mac}" -p 5
			</setvar>
		</step>

		<step no="18">
			<desc>Get AP1 pow in AP2 hive neighbor list </desc>
			<setvar name="Dap1.wifi1.pow.later.med">
				aa="${ap1.wifi1.pow.later.1.med}"; echo $aa | perl -ne '/(.*)\(/and print $1';
			</setvar>
		</step>
		<step no="19">
			<desc>Compare AP1 pow with AP2 setting connection threshold 45 mins later</desc>
			<script>
				if [ ${Dap1.wifi1.pow.later.med} -lt -80 ]; then exit 1; fi
			</script>
		</step>
		<step no="20">
			<desc>Compare beginning POW and ending POW</desc>
			<script>
				if [ ${Dap1.wifi1.pow.later.med} -eq ${ap1.wifi1.pow.before.med} ]; then exit 1; fi
			</script>

		</step>
	</stage>
</testcase>
