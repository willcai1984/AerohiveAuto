<testcase>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>2</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	<description>
		Description
		Verify that the WMM in 11ng /11na mode
		Test procedure
		1. Verify that the WMM take effect. Result 1
		2. Verify that no WMM info by cmd: no ssid xxxx wmm, result 2.
		Expect result
		1. The Mgt frame include wmm element.
		2. The mgt frame no wmm element.
	</description>
	<stage>
		<if>"${ap1.wifi1.existed}" == "true"</if>
		<step no="4">
			<desc>Set config for AP1 via telnet to </desc>
			<telnet target="ap1">
				-v "interface wifi1 mode access"
				-v "ssid ${ssid.name}1"
				-v "interface wifi1 ssid ${ssid.name}1"
				-v "no ssid ${ssid.name}1 wmm"
				-v "ssid ${ssid.name}2"
				-v "interface wifi1 ssid ${ssid.name}2"
				-v "interface wifi1 radio channel 36"
				-v "save config"
			</telnet>
		</step>

		<step no="5">
			<desc>Show run config of AP1 </desc>
			<log-file>show_run_config_1.log</log-file>
			<telnet target="ap1">
				-v "show running-config"
			</telnet>
		</step>

		<step no="5.1">
			<desc>Set config for AP2 via console to  </desc>
			<telnet target="ap2">
				-v "interface wifi0 mode dual"
				-v "interface wifi0 radio channel 6"
				-v "interface wifi1 mode dual"
				-v "interface wifi1 radio channel 36"
				-v "save config"
			</telnet>
		</step>

		<step no="6">
			<desc>Capture pkts from AP</desc>
			<telnet target="ap2">
				-v "no filter 1"
				-v "filter 1 l2 mgmt subtype 8 "
				-v "capture save interface wifi1 ws_wmm.pcap"
				-v "capture interface wifi1 count 1000 filter 1"
			</telnet>
		</step>

		<step no="7" delay="60">
			<desc>Transmit pkts from AP to master</desc>
			<telnet target="ap2">
				-v "save capture local ws_wmm.pcap tftp://${mpc.tif.ip}:/ws_wmm.pcap"
			</telnet>
		</step>

		<step no="8" delay="200">
			<desc>Use Tshark convert pcap file to packet tree</desc>
			<log-file>ws_wmm.log</log-file>
			<script>
				tshark -r /tftpboot/ws_wmm.pcap -V > ${log.dir}/${log.file}
			</script>
			<no-error-check />
		</step>

		<step no="9">
			<desc>Show interface wifi1.1 of AP1 </desc>
			<log-file>show_interface_wifi11.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.1"
			</telnet>
		</step>

		<step no="10">
			<desc>Get_mac of wifi1.1 on AP1 </desc>
			<setvar name="DUT1_WIFI11_MAC">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi11.log -i wifi1.1 -o aero -m
			</setvar>
		</step>


		<step no="11">
			<desc>Check search result </desc>
			<script>
				export NO_WMM=$(perl ${bin.dir}/parse_pcap.pl -f ${log.dir}/ws_wmm.log -k ${DUT1_WIFI11_MAC} -o "WME")
				echo "NO_WMM = $NO_WMM"
				if [ -n "$WMM" -o "$NO_WMM" != "No_match_packet_found" ]
				then
				exit 1
				fi
			</script>
		</step>

		<step no="12">
			<desc>Show interface wifi1.2 of AP1 </desc>
			<log-file>show_interface_wifi12.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.2"
			</telnet>
		</step>

		<step no="13">
			<desc>Get_mac of wifi1.2 on AP1 </desc>
			<setvar name="DUT1_WIFI12_MAC">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi12.log -i wifi1.2 -o aero -m
			</setvar>
		</step>

		<step no="14">
			<desc>Search for WME Capabilities element </desc>
			<setvar name="WMM">
				perl ${bin.dir}/parse_pcap.pl -f ${log.dir}/ws_wmm.log -k ${DUT1_WIFI12_MAC} -o "WME"
			</setvar>
		</step>

		<step no="15">
			<desc>Check search result </desc>
			<script>
				echo "WMM = ${WMM}"
				if [ "${WMM}" = "No_match_packet_found" ]
				then
				exit 1
				fi
			</script>
		</step>


		<step no="16">
			<desc>Check search result </desc>
			<script>
				export BE=$(perl ${bin.dir}/parse_pcap.pl -f ${log.dir}/ws_wmm.log -k ${DUT1_WIFI12_MAC} -k "WME" -o "Best Effort")
				echo "BE = $BE"
				if [ -z "$BE" -o "$BE" = "No_match_packet_found" ]
				then
				exit 1
				fi
			</script>
		</step>

		<step no="17">
			<desc>Check search result </desc>
			<script>
				export BK=$(perl ${bin.dir}/parse_pcap.pl -f ${log.dir}/ws_wmm.log -k ${DUT1_WIFI12_MAC} -k "WME" -o "Background")
				echo "BK = $BK"
				if [ -z "$BK" -o "$BK" = "No_match_packet_found" ]
				then
				exit 1
				fi
			</script>
		</step>

		<step no="18">
			<desc>Check search result </desc>
			<script>
				export VI=$(perl ${bin.dir}/parse_pcap.pl -f ${log.dir}/ws_wmm.log -k ${DUT1_WIFI12_MAC} -k "WME" -o "Video")
				echo "VI = $VI"
				if [ -z "$VI" -o "$VI" = "No_match_packet_found" ]
				then
				exit 1
				fi
			</script>
		</step>

		<step no="19">
			<desc>Check search result </desc>
			<script>
				export VO=$(perl ${bin.dir}/parse_pcap.pl -f ${log.dir}/ws_wmm.log -k ${DUT1_WIFI12_MAC} -k "WME" -o "Voice")
				echo "VO = $VO"
				if [ -z "$VO" -o "$VO" = "No_match_packet_found" ]
				then
				exit 1
				fi
			</script>
		</step>

		<step no="20">
			<desc>Set config for AP1 via telnet to </desc>
			<telnet target="ap1">
				-v " ssid ${ssid.name}1 wmm"
				-v "save config"
			</telnet>
		</step>

		<step no="21">
			<desc>Show run config of AP1 </desc>
			<log-file>show_run_config_2.log</log-file>
			<telnet target="ap1">
				-v "show running-config"
			</telnet>
		</step>

		<step no="22">
			<desc>Capture pkts from AP</desc>
			<telnet target="ap2">
				-v "no filter 1"
				-v "filter 1 l2 mgmt subtype 8 "
				-v "capture save interface wifi1 ws_wmm_later.pcap"
				-v "capture interface wifi1 count 1000 filter 1"
			</telnet>
		</step>

		<step no="23" delay="60">
			<desc>Transmit pkts from AP to master</desc>
			<log-file>ws_wmm_later.pcap</log-file>
			<telnet target="ap2">
				-v "save capture local ws_wmm_later.pcap tftp://${mpc.tif.ip}:/${log.file}"
			</telnet>
		</step>

		<step no="24">
			<desc>Use Tshark convert pcap file to packet tree</desc>
			<log-file>ts_wmm_later.log</log-file>
			<script>
				tshark -r /tftpboot/ws_wmm_later.pcap -V > ${log.dir}/${log.file}
			</script>
			<no-error-check />
		</step>

		<step no="25">
			<desc>Check search result </desc>
			<script>
				export WMM_LATER=$(perl ${bin.dir}/parse_pcap.pl -f ${log.dir}/ts_wmm_later.log -k ${DUT1_WIFI11_MAC} -o "WME")
				echo "WMM_LATER = $WMM_LATER"
				if [ -z "$WMM_LATER" -o "$WMM_LATER" = "No_match_packet_found" ]
				then
				exit 1
				fi
			</script>
		</step>


	</stage>
	<post-process>
		<stage>
			<step no="p1">
				<desc>remove temporary files</desc>
				<script>
					rm -f /tftpboot/ws_wmm.pcap
					rm -f /tftpboot/ws_wmm_later.pcap
				</script>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>