<testcase>
	<brief>upgrade brtb'ap image</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		upgrade brtb'ap image to AP330-350-5.1r3a.img.S
	</description>
	<numofbr>1</numofbr>
	<tbtype>linux</tbtype>
	<cvg-opt-same-backnet>yes</cvg-opt-same-backnet>
	<pre-process />
	<stage>
		<step no="1">
			<setvar name="ap.type">
				echo ${br1.ap1.name} | grep "350" >/dev/null; echo $?
			</setvar>
			`
		</step>

		<step no="2">
			<if>${ap.type} == "0" </if>
			<setvar name="ap.stable.release.image">
				echo "ap350-HiveOS-5-1rX-Dakar-Jun-22-2012-011013064101-0736.img"
			</setvar>
		</step>

		<step no="3">
			<if>${ap.type} != "0" </if>
			<setvar name="ap.stable.release.image">
				echo "ap340-HiveOS-5-1rX-Dakar-Jun-22-2012-011013064101-0829.img"
			</setvar>
		</step>

	</stage>
	<stage>
		<!-- 1. step 1, get image version -->
		<step no="1">
			<desc>Get the version of the image and save to imageversion.txt </desc>
			<log-file>image_ver.txt</log-file>
			<script>
				ident /tftpboot/${ap.stable.release.image} > ${log.dir}/${log.file}
			</script>
		</step>
	</stage>

	<stage type="child-process" no="reset.br1">
		<step no="a1.0">
			<desc>get the ap1 version</desc>
			<console target="br1.br">
				-v "reset config"
			</console>
		</step>
	</stage>
	<stage type="child-process" no="reset.br1.ap1">
		<step no="a1.1">
			<desc>reset br1.ap1</desc>
			<console target="br1.ap1" timeout="120">
				-v "reset config"
			</console>
		</step>
	</stage>
	<stage type="child-process" no="reset.br1.ap2">
		<step no="a1.2">
			<desc>reset br1.ap2</desc>
			<console target="br1.ap2">
				-v "reset config"
			</console>
		</step>
	</stage>
	<stage type="child-process" no="reset.br1.ap3">
		<step no="a1.3">
			<desc>reset br1.ap2</desc>
			<console target="br1.ap3">
				-v "reset config"
			</console>
		</step>
	</stage>

	<stage type="check-point" />

	<stage type="child-process" no="br1.ap1_op">
		<step no="b1.1">
			<desc>get the ap1 version</desc>
			<log-file>show_ver_ap1.log</log-file>
			<console target="br1.ap1">
				-v "show ver"
			</console>
		</step>
		<!-- check if the ap version is new -->
		<step no="b1.2">
			<setvar name="br1.ap1.verIsNew">
				${bin.dir}/aerohive/checkif_apver_isnew.sh -v ${log.dir}/show_ver_ap1.log -i ${log.dir}/image_ver.txt
			</setvar>
		</step>
		<include prefix="br1.ap1.op" file="subs/remove_ap_rsakey.xml" obj-args="br1.ap1" />
	</stage>

	<stage type="child-process" no="br1.ap2_op">
		<step no="b2.1">
			<desc>get the br1_ap2 version</desc>
			<log-file>show_ver_br1_ap2.log</log-file>
			<console target="br1.ap2">
				-v "show ver"
			</console>
		</step>
		<step no="b2.2.1">
			<setvar name="br1.ap2.verIsNew">
				${bin.dir}/aerohive/checkif_apver_isnew.sh -v ${log.dir}/show_ver_br1_ap2.log -i ${log.dir}/image_ver.txt
			</setvar>
		</step>
		<include prefix="br1.ap2.op" file="subs/remove_ap_rsakey.xml" obj-args="br1.ap2" />
	</stage>

	<stage type="child-process" no="br1.ap3_op">
		<step no="b2.3.1">
			<desc>get the ap3 version</desc>
			<log-file>show_ver_br1_ap3.log</log-file>
			<console target="br1.ap3">
				-v "show ver"
			</console>
		</step>
		<step no="b3.2">
			<setvar name="br1.ap3.verIsNew">
				${bin.dir}/aerohive/checkif_apver_isnew.sh -v ${log.dir}/show_ver_br1_ap3.log -i ${log.dir}/image_ver.txt
			</setvar>
		</step>
		<include prefix="br1.ap3.op" file="subs/remove_ap_rsakey.xml" obj-args="br1.ap3" />
	</stage>
	<stage type="check-point" />



	<stage>
		<if>"${ap3.verIsNew}" != "yes"</if>
		<step no="b.3.1.1">
			<desc>show interface of mgt0 on br1_ap3</desc>
			<log-file>show_br1_ap1_int_mgt0.log</log-file>
			<console target="br1.ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 44"
			</console>
		</step>

		<step no="b.3.2.1">
			<desc>show interface of mgt0 on br1_ap3</desc>
			<log-file>show_br1_ap3_int_mgt0.log</log-file>
			<console target="br1.ap3">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 44"
				-v "no interface mgt0 ip"
				-v "no interface mgt0 dhcp client"
				-v "interface mgt0 dhcp client"
			</console>
		</step>

		<step no="b.3.3.1" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				-show interface of mgt0 on AP1
			</desc>
			<log-file>show_ap1_int_mgt0_${loop_check.idx}_16.log</log-file>
			<console target="br1.ap3">
				-v "show auth"
				-v "show interface mgt0"
			</console>
			<log-match>-e "IP addr=192.168.85."</log-match>
		</step>

		<step no="b.3.4.1">
			<desc>get IP of mgt0 on ap3</desc>
			<console target="br1.ap3">
				-v "ping ${mpc.tif.ip}"
			</console>
			<log-match>-c -i "from" -i "ttl="</log-match>
		</step>

		<step no="b.3.5">
			<desc>Upgrade ap3 with new image through console</desc>
			<log-file>image_${br1.ap3.cons_name}.log</log-file>
			<console target="br1.ap3" timeout="120">
				-v "save image tftp://${mpc.tif.ip}:${ap.stable.release.image} now"
			</console>
			<!-- <log-match>-n -i "The kernel image currently in flash is the same as the image you are attempting to load"</log-match> <log-match>-n -i "The application image currently in flash is the same as the image you are attempting to load"</log-match> -->
			<failed>next</failed>
			<no-error-check />
		</step>

		<step no="b.3.6">
			<desc>Get br1.ap3 version through console</desc>
			<log-file>image_version_${br1_ap3_cons_name}.log</log-file>
			<console target="br1.ap3">
				-v "show version"
				-v "show license"
			</console>
		</step>
		<step no="b.3.7">
			<desc>Search for ERROR message on br1.ap3</desc>
			<!-- <log-match file="image_${br1.ap3.cons_name}.log">-n -e "ERROR"</log-match> -->
			<failed>next</failed>
		</step>

	</stage>



	<!-- 4. do upgrade for each BR -->
	<!-- 4.1 step 8-13, upgrade image for br1.br -->
	<stage type="child-process" no="br1_ap1_upgrade">
		<if>"${br1.ap1.verIsNew}" != "yes"</if>
		<step no="c.3.1.1">
			<desc>show interface of mgt0 on br1.AP1</desc>
			<log-file>show_br1_ap1_int_mgt0.log</log-file>
			<console target="br1.ap1">
				-v "show interface mgt0"
			</console>
		</step>
		<step no="c.3.1.2">
			<desc>get IP of mgt0 on br1.AP1</desc>
			<setvar name="br1.ap1.mgt0.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_br1_ap1_int_mgt0.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="c.3.3.3">
			<desc>get IP of mgt0 on ap1</desc>
			<console target="br1.ap1">
				-v "ping ${mpc.tif.ip}"
			</console>
			<log-match>-c -i "from" -i "ttl="</log-match>
		</step>
		
		<step no="c.3.3.4">
			<desc>Upgrade AP1 with new image through console</desc>
			<log-file>image_${br1.ap1.cons_name}.log</log-file>
			<console target="br1.ap1" timeout="120">
				-v "save image tftp://${mpc.tif.ip}:${ap.stable.release.image} now"
			</console>
			<!-- <log-match>-n -i "The kernel image currently in flash is the same as the image you are attempting to load"</log-match> <log-match>-n -i "The application image currently in flash is the same as the image you are attempting to load"</log-match> -->
			<failed>next</failed>
			<no-error-check />
		</step>

		<step no="c.3.3.5">
			<desc>Get AP1 version through console</desc>
			<log-file>image_version_${br1_ap1.cons_name}.log</log-file>
			<console target="br1.ap1">
				-v "show version"
				-v "show license"
			</console>
		</step>

		<step no="c.3.3.6">
			<desc>Search for ERROR message on AP1</desc>
			<!-- <log-match file="image_${br1.ap1.cons_name}.log">-n -e "ERROR"</log-match> -->
			<failed>next</failed>
		</step>
	</stage>

	<!-- 4.2 step 14-19, upgrade image for ap2 -->
	<stage type="child-process" no="br1_ap2_upgrade">
		<if>"${br1.ap2.verIsNew}" != "yes"</if>
		<step no="ap2.3.1">
			<desc>show interface of mgt0 on br1.ap2</desc>
			<log-file>show_br1_ap2_int_mgt0.log</log-file>
			<console target="br1.ap2">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="ap2.2.3.2">
			<desc>get IP of mgt0 on br1.ap2</desc>
			<setvar name="br1.ap2.mgt0.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_br1_ap2_int_mgt0.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
		<step no="ap2.2.4.2">
			<desc>get IP of mgt0 on ap2</desc>
			<console target="br1.ap2">
				-v "ping ${mpc.tif.ip}"
			</console>
			<log-match>-c -i "from" -i "ttl="</log-match>
		</step>
		<step no="ap2.2.4">
			<desc>Upgrade br1.ap2 with new image through console</desc>
			<log-file>image_${br1.ap2.cons_name}.log</log-file>
			<console target="br1.ap2" timeout="120">
				-v "save image tftp://${mpc.tif.ip}:${ap.stable.release.image} now"
			</console>
			<!-- <log-match>-n -i "The kernel image currently in flash is the same as the image you are attempting to load"</log-match> <log-match>-n -i "The application image currently in flash is the same as the image you are attempting to load"</log-match> -->
			<failed>next</failed>
			<no-error-check />
		</step>

		<step no="ap2.2.5">
			<desc>Get br1.ap2 version through console</desc>
			<log-file>image_version_${br1_ap2.cons_name}.log</log-file>
			<console target="br1.ap2">
				-v "show version"
				-v "show license"
			</console>
		</step>
		<step no="ap2.2.6">
			<desc>Search for ERROR message on br1.ap2</desc>
			<!-- <log-match file="image_${br1.ap2.cons_name}.log">-n -e "ERROR"</log-match> -->
			<failed>next</failed>
		</step>

	</stage>
	<stage type="check-point" />
	<post-process />
</testcase>
