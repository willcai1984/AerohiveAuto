<testcase>
	<brief>Switch Snake Test</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<numofsw>1</numofsw>
	<tbtype>winlin</tbtype>
	<description>
		Switch snake test
	</description>
	<!--use property to set default values -->
	<property name="runTimeLimit.def" value="20" />
	<property name="runQuickTest.def" value="true" />
	<property name="runLongTimeStream.def" value="true" />
	<property name="chassis.def" value="10.155.33.216" />
	<property name="tclServer.def" value="10.155.41.221" />
	<property name="tclPort.def" value="8009" />
	<property name="txPort.def" value="1/5/9" />
	<property name="rxPort.def" value="1/5/10" />
	<!--quickTest default values -->
	<property name="frameSizeList.def" value="64,128,256,512,1024,1280,1518" />
	<property name="trials.def" value="2" />
	<property name="duration.def" value="180" />
	<property name="initialRate.def" value="100" />
	<property name="minRate.def" value="50" />
	<property name="maxRate.def" value="100" />
	<property name="resolution.def" value="1" />
	<property name="tolerance.def" value="0" />
	<property name="srcIP.def" value="192.168.1.100" />
	<property name="srcGateway.def" value="192.168.1.200" />
	<property name="dstIP.def" value="192.168.1.200" />
	<property name="dstGateway.def" value="192.168.1.100" />
	<!--Long-time stream default values -->
	<property name="longtimeFrameSize.def" value="64" />
	<property name="srcMac.def" value="0000.0000.1500" />
	<property name="srcMacCount.def" value="2" />
	<property name="srcMacStep.def" value="0.0.0.0.0.1" />
	<property name="dstMac.def" value="0000.0000.1600" />
	<property name="dstMacCount.def" value="1" />
	<property name="dstMacStep.def" value="0.0.0.0.0.1" />

	<pre-process>
	</pre-process>

	<!--handle job variables,if set via job variables, use it , else use default value -->
	<stage>
		<step no="1.1">
			<desc>record case start time</desc>
			<setvar name="case.start_time">
				date "+%F %T"
			</setvar>
		</step>
		<step no="1.2">
			<desc>handle job variables and default values</desc>
			<multi-setvar>
				if [ "${chassis}" == "" ]; then echo "chassis=${chassis.def}"; else echo "chassis=${chassis}"; fi
				if [ "${tclServer}" == "" ]; then echo "tclServer=${tclServer.def}"; else echo "tclServer=${tclServer}"; fi
				if [ "${tclPort}" == "" ]; then echo "tclPort=${tclPort.def}"; else echo "tclPort=${tclPort}"; fi
				if [ "${txPort}" == "" ]; then echo "txPort=${txPort.def}"; else echo "txPort=${txPort}"; fi
				if [ "${rxPort}" == "" ]; then echo "rxPort=${rxPort.def}"; else echo "rxPort=${rxPort}"; fi
				if [ "${frameSizeList}" == "" ]; then echo "frameSizeList=${frameSizeList.def}"; else echo "frameSizeList=${frameSizeList}"; fi
				if [ "${longtimeFrameSize}" == "" ]; then echo "longtimeFrameSize=${longtimeFrameSize.def}"; else echo "longtimeFrameSize=${longtimeFrameSize}"; fi
				if [ "${trials}" == "" ]; then echo "trials=${trials.def}"; else echo "trials=${trials}"; fi
				if [ "${duration}" == "" ]; then echo "duration=${duration.def}"; else echo "duration=${duration}"; fi
				if [ "${initialRate}" == "" ]; then echo "initialRate=${initialRate.def}"; else echo "initialRate=${initialRate}"; fi
				if [ "${minRate}" == "" ]; then echo "minRate=${minRate.def}"; else echo "minRate=${minRate}"; fi
				if [ "${maxRate}" == "" ]; then echo "maxRate=${maxRate.def}"; else echo "maxRate=${maxRate}"; fi
				if [ "${resolution}" == "" ]; then echo "resolution=${resolution.def}"; else echo "resolution=${resolution}"; fi
				if [ "${tolerance}" == "" ]; then echo "tolerance=${tolerance.def}"; else echo "tolerance=${tolerance}"; fi
				if [ "${srcIP}" == "" ]; then echo "srcIP=${srcIP.def}"; else echo "srcIP=${srcIP}"; fi
				if [ "${srcGateway}" == "" ]; then echo "srcGateway=${srcGateway.def}"; else echo "srcGateway=${srcGateway}"; fi
				if [ "${dstIP}" == "" ]; then echo "dstIP=${dstIP.def}"; else echo "dstIP=${dstIP}"; fi
				if [ "${dstGateway}" == "" ]; then echo "dstGateway=${dstGateway.def}"; else echo "dstGateway=${dstGateway}"; fi
				if [ "${runQuickTest}" == "" ]; then echo "runQuickTest=${runQuickTest.def}"; else echo "runQuickTest=${runQuickTest}"; fi
				if [ "${runLongTimeStream}" == "" ]; then echo "runLongTimeStream=${runLongTimeStream.def}"; else echo "runLongTimeStream=${runLongTimeStream}"; fi
				if [ "${runTimeLimit}" == "" ]; then echo "runTimeLimit=${runTimeLimit.def}"; else echo "runTimeLimit=${runTimeLimit}"; fi
				if [ "${srcMac}" == "" ]; then echo "srcMac=${srcMac.def}"; else echo "srcMac=${srcMac}"; fi
				if [ "${srcMacCount}" == "" ]; then echo "srcMacCount=${srcMacCount.def}"; else echo "srcMacCount=${srcMacCount}"; fi
				if [ "${srcMacStep}" == "" ]; then echo "srcMacStep=${srcMacStep.def}"; else echo "srcMacStep=${srcMacStep}"; fi
				if [ "${dstMac}" == "" ]; then echo "dstMac=${dstMac.def}"; else echo "dstMac=${dstMac}"; fi
				if [ "${dstMacCount}" == "" ]; then echo "dstMacCount=${dstMacCount.def}"; else echo "dstMacCount=${dstMacCount}"; fi
				if [ "${dstMacStep}" == "" ]; then echo "dstMacStep=${dstMacStep.def}"; else echo "dstMacStep=${dstMacStep}"; fi
			</multi-setvar>
		</step>
	</stage>

	<!--image upgrade -->
	<stage>
		<step no="pre_1">
			<desc>shutdown all port and disable poe of GE SW1</desc>
			<console cons-name="wps-sw1" cons-host="${mpc.mif.ip}">
				-v "interface eth1/1 shutdown"
				-v "interface eth1/2 shutdown"
				-v "interface eth1/3 shutdown"
				-v "interface eth1/4 shutdown"
				-v "interface eth1/5 shutdown"
				-v "interface eth1/6 shutdown"
				-v "interface eth1/7 shutdown"
				-v "interface eth1/8 shutdown"
				-v "interface eth1/9 shutdown"
				-v "interface eth1/10 shutdown"
				-v "interface eth1/11 shutdown"
				-v "interface eth1/12 shutdown"
				-v "interface eth1/13 shutdown"
				-v "interface eth1/14 shutdown"
				-v "interface eth1/15 shutdown"
				-v "interface eth1/16 shutdown"
				-v "interface eth1/17 shutdown"
				-v "interface eth1/18 shutdown"
				-v "interface eth1/19 shutdown"
				-v "no interface eth1/20 shutdown"
				-v "no interface eth1/21 shutdown"
				-v "interface eth1/22 shutdown"
				-v "interface eth1/23 shutdown"
				-v "interface eth1/24 shutdown"
				-v "interface eth1/1 pse shutdown"
				-v "interface eth1/2 pse shutdown"
				-v "interface eth1/3 pse shutdown"
				-v "interface eth1/4 pse shutdown"
				-v "interface eth1/5 pse shutdown"
				-v "interface eth1/6 pse shutdown"
				-v "interface eth1/7 pse shutdown"
				-v "interface eth1/8 pse shutdown"
			</console>
		</step>

		<step no="pre_2">
			<desc>shutdown all port and disable poe of GE SW2</desc>
			<console cons-name="wps-sw2" cons-host="${mpc.mif.ip}">
				-v "interface eth1/1 shutdown"
				-v "interface eth1/2 shutdown"
				-v "interface eth1/3 shutdown"
				-v "interface eth1/4 shutdown"
				-v "interface eth1/5 shutdown"
				-v "interface eth1/6 shutdown"
				-v "interface eth1/7 shutdown"
				-v "interface eth1/8 shutdown"
				-v "interface eth1/9 shutdown"
				-v "interface eth1/10 shutdown"
				-v "interface eth1/11 shutdown"
				-v "interface eth1/12 shutdown"
				-v "interface eth1/13 shutdown"
				-v "interface eth1/14 shutdown"
				-v "interface eth1/15 shutdown"
				-v "interface eth1/16 shutdown"
				-v "interface eth1/17 shutdown"
				-v "interface eth1/18 shutdown"
				-v "interface eth1/19 shutdown"
				-v "no interface eth1/20 shutdown"
				-v "no interface eth1/21 shutdown"
				-v "interface eth1/22 shutdown"
				-v "interface eth1/23 shutdown"
				-v "interface eth1/24 shutdown"
				-v "interface eth1/1 pse shutdown"
				-v "interface eth1/2 pse shutdown"
				-v "interface eth1/3 pse shutdown"
				-v "interface eth1/4 pse shutdown"
				-v "interface eth1/5 pse shutdown"
				-v "interface eth1/6 pse shutdown"
				-v "interface eth1/7 pse shutdown"
				-v "interface eth1/8 pse shutdown"
			</console>
		</step>
	</stage>

	<!--config DUT -->
	<stage>

	</stage>

	<!--run rfc2544 throughput -->
	<stage>
		<if>"${runQuickTest}" == "true"</if>
		<step no="4.1" timeout="36000">
			<desc>run quicktest - rfc2544 throughput</desc>
			<log-file>quicktest_rfc2544.log</log-file>
			<script timeout="36000">
				tclsh8.5 ${case.dir}/bin/snake_rfc2544_quicktest.tcl \
				-chassis ${chassis} \
				-tclServer ${tclServer} \
				-tclPort ${tclPort} \
				-txPort ${txPort} \
				-rxPort ${rxPort} \
				-frameSizeList ${frameSizeList} \
				-trials ${trials} \
				-duration ${duration} \
				-initialRate ${initialRate} \
				-minRate ${minRate} \
				-maxRate ${maxRate} \
				-resolution ${resolution} \
				-tolerance ${tolerance} \
				-srcIP ${srcIP} \
				-srcGateway ${srcGateway} \
				-dstIP ${dstIP} \
				-dstGateway ${dstGateway} > ${log.dir}/${log.file}
			</script>
		</step>
		<step no="4.2">
			<desc>get quicktest result path</desc>
			<setvar name="quicktest.result.path">
				perl -ne 'chomp;if(s/result path: //){print"$_\\results.csv"}' ${log.dir}/quicktest_rfc2544.log
			</setvar>
		</step>
		<step no="4.3">
			<desc>copy result from tclServer to mpc</desc>
			<log-file>quicktest_results.csv</log-file>
			<script>
				staf ${tclServer} fs copy file "${quicktest.result.path}" \
				tofile "${log.dir}/${log.file}" tomachine ${mpc.mif.ip}
			</script>
		</step>
	</stage>

	<stage>
		<step no="qt_stop_time">
			<desc>record quicktest stop time</desc>
			<setvar name="quicktest.stop_time">
				date "+%F %T"
			</setvar>
		</step>
	</stage>

	<!--run long time stream -->
	<stage>
		<if>"${runLongTimeStream}" == "true"</if>
		<step no="5.1">
			<desc>estimate how long long-time stream will be run</desc>
			<setvar name="stream.duration">
				let TOTAL=60*60*${runTimeLimit}
				START=`date "+%s" -d "${case.start_time}"`
				END=`date "+%s" -d "${quicktest.stop_time}"`
				let DELTA=$TOTAL-$END+$START
				echo $DELTA
			</setvar>
		</step>
		<step no="5.2" timeout="72000">
			<desc>run long-time stream through snake testbed</desc>
			<log-file>long_time_stream.log</log-file>
			<ssh target="${mpc.mif.ip}" prompt="%.*|root@.*#" timeout="72000">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${chassis} -tclServerIP ${tclServer}
				-userName Snake_${job.sid} -portList ${txPort},${rxPort} -phyList copper,copper"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${txPort}
				-mac_dst ${dstMac}
				-mac_dst_count ${dstMacCount}
				-mac_dst_step ${dstMacStep}
				-mac_src ${srcMac}
				-mac_src_count ${srcMacCount}
				-mac_src_step ${srcMacStep}
				-vlan disable
				-eth2_protocol 0x0800
				-frame_length ${longtimeFrameSize}
				-udf_offset 54
				-udf_value 0xBDBDBDBD
				-rate_pps 1000
				-patternOffset2 54
				-rxPattern 0xBDBDBDBD"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rxPort}
				-mac_dst ${srcMac}
				-mac_dst_count ${srcMacCount}
				-mac_dst_step ${srcMacStep}
				-mac_src ${dstMac}
				-mac_src_count ${dstMacCount}
				-mac_src_step ${dstMacStep}
				-vlan disable
				-eth2_protocol 0x0800
				-frame_length ${longtimeFrameSize}
				-udf_offset 54
				-udf_value 0xBDBDBDBD
				-rate_pps 1000
				-patternOffset2 54
				-rxPattern 0xBDBDBDBD"
				-v ""
				-v "stream_percent_rate_set -portList ${txPort},${rxPort} -streamId 1 -percentRate 100"
				<!-- start transmit -->
				-v "start_trans_getstats -txPortList ${txPort},${rxPort} -rxPortList ${rxPort},${txPort} -duration ${stream.duration}"
				-v "check_equal_tx_with_rx -oneTxPort ${txPort} -oneRxPort ${rxPort}
				-txStPara framesSent -rxStPara userDefinedStat2"
				-v "check_equal_tx_with_rx -oneTxPort ${rxPort} -oneRxPort ${txPort}
				-txStPara framesSent -rxStPara userDefinedStat2"
				-v "ctrl-c"
			</ssh>
			<log-match>-c -i "checkEqualTxWithRX ${txPort} ${rxPort} framesSent userDefinedStat2 result is equal"</log-match>
			<log-match>-c -i "checkEqualTxWithRX ${rxPort} ${txPort} framesSent userDefinedStat2 result is equal"</log-match>
		</step>
	</stage>

	<failed-process />
	<post-process />
</testcase>