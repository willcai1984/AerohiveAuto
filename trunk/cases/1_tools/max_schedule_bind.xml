<testcase>
	<brief>Verify max schedule bind on SSID and user-profile</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Create a SSID
		Create a user-profile
		Create 9 schedules

		Test Procedure:
		1. Bind 9 schedule to SSID
		2. Bind 9 schedule to user-profile

		Expect result:
		1. When bind the ninth, will suggest "No space to bind a schedule to the SSID:s9."
		"ERROR: Invalid parameter(s)"
		2. When bind the ninth, will suggest "Error:No space to bind a schedule to the user profile:s9."
		"ERROR: Invalid parameter(s)"
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<property name="schedule_name1" value="s1" />
		<property name="schedule_name2" value="s2" />
		<property name="schedule_name3" value="s3" />
		<property name="schedule_name4" value="s4" />
		<property name="schedule_name5" value="s5" />
		<property name="schedule_name6" value="s6" />
		<property name="schedule_name7" value="s7" />
		<property name="schedule_name8" value="s8" />
		<property name="schedule_name9" value="s9" />

		<step no="1">
			<desc>Create a SSID and bind it to interface wifi0</desc>
			<log-file>step1_int_wifi0_ssid.log</log-file>
			<ssh target="ap1">
				-v "ssid ${ssid.name}"
				-v "user-profile ${tb.name}"
			</ssh>
		</step>

		<step no="1.1">
			<desc>Set fixed time to AP</desc>
			<ssh target="ap1">
				-v "clock date-time 2012-07-18 06:00:00"
			</ssh>
		</step>

		<step no="1.2">
			<desc>Check system time by "show clock"</desc>
			<log-file>step1.2_show_clock.log</log-file>
			<ssh target="ap1">
				-v "show clock"
			</ssh>
		</step>

		<step no="1.3">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_1">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log -30
			</setvar>
		</step>

		<step no="1.4">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_2">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log -25
			</setvar>
		</step>

		<step no="1.5">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_3">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log -20
			</setvar>
		</step>

		<step no="1.6">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_4">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log -15
			</setvar>
		</step>

		<step no="1.7">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_5">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log -10
			</setvar>
		</step>

		<step no="1.8">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_6">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log -5
			</setvar>
		</step>

		<step no="1.9">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_7">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log 5
			</setvar>
		</step>

		<step no="1.10">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_8">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log 10
			</setvar>
		</step>

		<step no="1.11">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_9">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log 15
			</setvar>
		</step>

		<step no="1.12">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_10">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log 20
			</setvar>
		</step>

		<step no="1.13">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_11">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log 25
			</setvar>
		</step>

		<step no="1.14">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_12">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log 30
			</setvar>
		</step>

		<step no="1.15">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_13">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log 35
			</setvar>
		</step>

		<step no="1.16">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_14">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log 40
			</setvar>
		</step>

		<step no="1.17">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_15">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log 45
			</setvar>
		</step>

		<step no="1.18">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_16">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log 50
			</setvar>
		</step>

		<step no="1.19">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_17">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log 55
			</setvar>
		</step>

		<step no="1.20">
			<desc>Get a time to create schedule</desc>
			<setvar name="data_time_18">
				perl ${case.dir}/bin/get_time_hours_month_day_clock.pl ${log.dir}/step1.2_show_clock.log 60
			</setvar>
		</step>


		<step no="2">
			<desc>Create 9 schedules</desc>
			<log-file>step2_create_schedule.log</log-file>
			<ssh target="ap1">
				-v "schedule ${schedule_name1} once ${data_time_1} to ${data_time_2}"
				-v "schedule ${schedule_name2} once ${data_time_3} to ${data_time_4}"
				-v "schedule ${schedule_name3} once ${data_time_5} to ${data_time_6}"
				-v "schedule ${schedule_name4} once ${data_time_7} to ${data_time_8}"
				-v "schedule ${schedule_name5} once ${data_time_9} to ${data_time_10}"
				-v "schedule ${schedule_name6} once ${data_time_11} to ${data_time_12}"
				-v "schedule ${schedule_name7} once ${data_time_13} to ${data_time_14}"
				-v "schedule ${schedule_name8} once ${data_time_15} to ${data_time_16}"
				-v "schedule ${schedule_name9} once ${data_time_17} to ${data_time_18}"
			</ssh>
		</step>

		<step no="3">
			<desc>Bind schedule to SSID</desc>
			<log-file>step3_bind_schedule_to_ssid.log</log-file>
			<ssh target="ap1">
				-v "ssid ${ssid.name} schedule ${schedule_name1}"
				-v "ssid ${ssid.name} schedule ${schedule_name2}"
				-v "ssid ${ssid.name} schedule ${schedule_name3}"
				-v "ssid ${ssid.name} schedule ${schedule_name4}"
				-v "ssid ${ssid.name} schedule ${schedule_name5}"
				-v "ssid ${ssid.name} schedule ${schedule_name6}"
				-v "ssid ${ssid.name} schedule ${schedule_name7}"
				-v "ssid ${ssid.name} schedule ${schedule_name8}"
				-v "ssid ${ssid.name} schedule ${schedule_name9}"
			</ssh>
			<log-match>-e "No space to bind a schedule to the SSID:${schedule_name9}" -c</log-match>
			<no-error-check />
		</step>

		<step no="3.1">
			<desc>Check schedule that bind on ssid</desc>
			<log-file>step3.1_show_ssid_schedule.log</log-file>
			<ssh target="ap1">
				-v "show ssid ${ssid.name} schedule"
			</ssh>
			<log-match>-e "${schedule_name1}" -c</log-match>
			<log-match>-e "${schedule_name2}" -c</log-match>
			<log-match>-e "${schedule_name3}" -c</log-match>
			<log-match>-e "${schedule_name4}" -c</log-match>
			<log-match>-e "${schedule_name5}" -c</log-match>
			<log-match>-e "${schedule_name6}" -c</log-match>
			<log-match>-e "${schedule_name7}" -c</log-match>
			<log-match>-e "${schedule_name8}" -c</log-match>
		</step>

		<step no="4">
			<desc>Bind schedule to SSID</desc>
			<log-file>step4_bind_schedule_to_userprofile.log</log-file>
			<ssh target="ap1">
				-v "user-profile ${tb.name} schedule ${schedule_name1}"
				-v "user-profile ${tb.name} schedule ${schedule_name2}"
				-v "user-profile ${tb.name} schedule ${schedule_name3}"
				-v "user-profile ${tb.name} schedule ${schedule_name4}"
				-v "user-profile ${tb.name} schedule ${schedule_name5}"
				-v "user-profile ${tb.name} schedule ${schedule_name6}"
				-v "user-profile ${tb.name} schedule ${schedule_name7}"
				-v "user-profile ${tb.name} schedule ${schedule_name8}"
				-v "user-profile ${tb.name} schedule ${schedule_name9}"

			</ssh>
			<log-match>-e "No space to bind a schedule to the user profile:${schedule_name9}" -c</log-match>
			<no-error-check />
		</step>

		<step no="4.1">
			<desc>Check schedule that bind on ssid</desc>
			<log-file>step4.1_show_userprofile_schedule.log</log-file>
			<ssh target="ap1">
				-v "show user-profile ${tb.name} schedule"
			</ssh>
			<log-match>-e "${schedule_name1}" -c</log-match>
			<log-match>-e "${schedule_name2}" -c</log-match>
			<log-match>-e "${schedule_name3}" -c</log-match>
			<log-match>-e "${schedule_name4}" -c</log-match>
			<log-match>-e "${schedule_name5}" -c</log-match>
			<log-match>-e "${schedule_name6}" -c</log-match>
			<log-match>-e "${schedule_name7}" -c</log-match>
			<log-match>-e "${schedule_name8}" -c</log-match>
		</step>

	</stage>
</testcase>