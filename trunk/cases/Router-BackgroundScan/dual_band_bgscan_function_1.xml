<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>check scan interval</brief>
	<priority>Middle</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Test Procedure:
    1) reset box.
    2) creat a ssid,bind to wifi0.
    3) config cli:
       _kdebug wifi-driver w0.1 scan
       debug console
    4) wait 25minutes,show logging buffered | include self
    5) check the scan interval between first scan and second scan.result 1.
    6) creat a new radio profile ng,phymode 11ng,bind to wifi0.
    7) set bgscan interval I minute.
    8) wait 4 minutes, show logging buffered | include self
    9) check the scan interval between first scan and second scan.result 2.

	</description>
	<numofbr>1</numofbr>
  <numofsta>0</numofsta>
  <tbtype>winlin</tbtype>
	<stage>
		<step no="1">
			<desc>set bgscan interval for wifi0</desc>
			<log-file>config_wifi0_bgscan.log</log-file>
			<console target="br1.br">
			  -v "ssid test_bgscsan"
			  -v "interface wifi0 ssid test_bgscsan"
			  -v "radio profile ng phymode 11ng"
			  -v "radio profile ng scan access interval 1"
			  -v "interface wifi0 radio profile ng"
			</console>
		</step>
		
		<step no="2">
			<desc>
				2.open debug mode.
				"_kdebug wifi-driver wifi0.1 scan"
			</desc>
			<log-file>open_debug.log</log-file>
	   	<console target="br1.br">
				-v "_kdebug wifi-driver wifi0.1 scan"
			</console>
		</step>
		
		<step no="2.1">
			<desc>
				2.clear log all.
				"clear log all"
			</desc>
			<log-file>clear_log.log</log-file>
			<console target="br1.br">
				-v "clear log all"
			</console>
		</step>
		
		<step no="3" delay="200">
			<desc>
				3.wait about 4 minute, background scan function will work, the scanned channel information
				in the logging buffer is printed on screen.
				"show logging buffer | include self"
			</desc>
			<log-file>show_wifi0_bgscan.log</log-file>
			<console target="br1.br">
				-v "show logging buffer | in self"
			</console>
		</step>
		
		<step no="4">
      <setvar name="log.max_interval">
            perl ${bin.dir}/get_log_interval.pl \
            --file "${log.dir}/show_wifi0_bgscan.log" \
            --pattern 'kernel: scan:Tx Self-CTS \(next foreign channel 6,' \
            --mode "max"
      </setvar>
    </step>
    
    <step no="5">
      <script>
            if [ ${log.max_interval} -gt 30 ] &amp;&amp; [ ${log.max_interval} -lt 120 ];then
                  echo "Maximum interval is OK"
                  exit 0
            else
                  echo "Maximum interval is not OK"
                  exit 1
            fi
      </script>
    </step>
    
    <step no="6">
			<desc>set bgscan interval for wifi0</desc>
			<log-file>config_wifi0_bgscan.log</log-file>
			<console target="br1.br">
			  -v "radio profile ng scan access interval 3"
			</console>
	 	</step>
		
	  <step no="7">
			<desc>
				2.clear log all.
				"clear log all"
			</desc>
			<log-file>clear_log.log</log-file>
			<console target="br1.br">
				-v "clear log all"
			</console>
		</step>
		
		<step no="8" delay="500">
			<desc>
				3.wait about 4 minute, background scan function will work, the scanned channel information
				in the logging buffer is printed on screen.
				"show logging buffer | include self"
			</desc>
			<log-file>show_wifi0_bgscan_1.log</log-file>
			<console target="br1.br">
				-v "show logging buffer | in self"
			</console>
		</step>
		
		<step no="9">
      <setvar name="log.max_interval_1">
            perl ${bin.dir}/get_log_interval.pl \
            --file "${log.dir}/show_wifi0_bgscan_1.log" \
            --pattern 'kernel: scan:Tx Self-CTS \(next foreign channel 1,' \
            --mode "max"
      </setvar>
    </step>
    
    <step no="10">
      <script>
            if [ ${log.max_interval_1} -gt 150 ] &amp;&amp; [ ${log.max_interval_1} -lt 200 ];then
                  echo "Maximum interval is OK"
                  exit 0
            else
                  echo "Maximum interval is not OK"
                  exit 1
            fi
      </script>
    </step>
    
   
    
	</stage>
</testcase>
