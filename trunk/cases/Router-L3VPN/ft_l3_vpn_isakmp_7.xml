<?xml version="1.0" encoding="UTF-8"?>
<testcase>
    <brief>using IPV4_ADDR as the ID in Identity Payload works</brief>
    <priority>Middle</priority>
    <automated>n/a</automated>
    <description>
        
		Pre-Condition:

			-a minimal configuration of vpn CVG/BR is done

		Test Procedure:

			1.	configure the local-ike-id and peer-ike-id are set as ip
			2.	Implementations MUST be capable of verifying that the IP address 
			presented in ID matches via bitwise comparison the IP address present in 
			the certificate's iPAddress field of the SubjectAltName extension.
			3.	Certificates may contain multiple address identity types -- in which case, 
			at least one must match the source IP.
			4.	Implementation MUST be capable of verifying that the address contained 
			in the ID is the same as the address contained in the IP header. 
			Implementations SHOULD be able to check the address in either the 
			outermost or innermost IP header and MAY provide a configuration option 
			provided, an implementation SHOULD check the peer source address 
			contained in the outermost header. If ID is one of the IP address types, 
			then implementations MUST perform this verification by default.
			5.	A mismatch between the two address MUST be treated as an error, and 
			security association setup MUST be aborted. This event SHOULD be 
			auditable(notice information)
			6.	When the ID mismatch with the local-ike-id authentication does not care 
			about. If the local-ike-id is not set check is not done.
			7.	When the peer-ike-id is not set but the local-ike-id is set verify the result.
			8.	When the hybrid is set the check is always not done for initiator.
			9.	When rsa-sig is set the upper steps need be verified in both sides.
    	</description>
    	<numofcvg>1</numofcvg>
	<numofbr>1</numofbr>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>winlin</tbtype>

	<property name="br.route.netmask" value="255.255.255.0" />

    
    
 
    <stage>
        <step no="1">
            <desc>
            -a minimal configuration of vpn CVG/BR is done
            </desc>
            <log-file></log-file>
            <telnet target="ap1"></telnet>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>
        <step no="2">
            <desc>
            1.	configure the local-ike-id and peer-ike-id are set as ip
            </desc>
            <log-file></log-file>
            <telnet target="ap1"></telnet>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>
        <step no="3">
            <desc>
            2.	Implementations MUST be capable of verifying that the IP address 
				presented in ID matches via bitwise comparison the IP address present in 
				the certificate's iPAddress field of the SubjectAltName extension.
            </desc>
            <log-file></log-file>
            <telnet target="ap1"></telnet>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>
        <step no="4">
            <desc>
            3.	Certificates may contain multiple address identity types -- in which case, 
				at least one must match the source IP.
            </desc>
            <log-file></log-file>
            <telnet target="ap1"></telnet>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>
        <step no="5">
            <desc>
            4.	Implementation MUST be capable of verifying that the address contained 
				in the ID is the same as the address contained in the IP header. 
				Implementations SHOULD be able to check the address in either the 
				outermost or innermost IP header and MAY provide a configuration option 
				provided, an implementation SHOULD check the peer source address 
				contained in the outermost header. If ID is one of the IP address types, 
				then implementations MUST perform this verification by default.
            </desc>
            <log-file></log-file>
            <telnet target="ap1"></telnet>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>
        <step no="6">
            <desc>
            5.	A mismatch between the two address MUST be treated as an error, and 
				security association setup MUST be aborted. This event SHOULD be 
				auditable(notice information)
            </desc>
            <log-file></log-file>
            <telnet target="ap1"></telnet>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>
        <step no="7">
            <desc>
            6.	When the ID mismatch with the local-ike-id authentication does not care 
				about. If the local-ike-id is not set check is not done.
            </desc>
            <log-file></log-file>
            <telnet target="ap1"></telnet>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>
        <step no="8">
            <desc>
            7.	When the peer-ike-id is not set but the local-ike-id is set verify the result.
            </desc>
            <log-file></log-file>
            <telnet target="ap1"></telnet>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>
        <step no="9">
            <desc>
            8.	When the hybrid is set the check is always not done for initiator.
            </desc>
            <log-file></log-file>
            <telnet target="ap1"></telnet>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>
        <step no="10">
            <desc>
            9.	When rsa-sig is set the upper steps need be verified in both sides.
            </desc>
            <log-file></log-file>
            <telnet target="ap1"></telnet>
            <ssh target="sta1"></ssh>
            <setvar name=""></setvar>
            <script></script>
            <log-match></log-match>
        </step>

    </stage>
    <failed-process>
        <step no="1..n">
            .. process
	</step>
    </failed-process>
</testcase>
