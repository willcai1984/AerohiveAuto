<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>BR receives over length packet from LAN to vpn tunnel</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		PC1 and PC2 can talk via vpn tunnel

		Test Procedure:

		-check the mtu on eth0(WAN) and tunnel
		-PC1 send an over length packet to PC2, result 4
		- PC1 send an over length packet to PC2 with DF set, result 5
		-PC2 send an over length packet to PC1, result 6
		-PC2 send an over length packet to PC1 with DF set, result 7
	</description>

	<numofcvg>1</numofcvg>
	<numofbr>1</numofbr>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>winlin</tbtype>

	<property name="conn1.ssid" value="${job.sid}-${tb.name}" />
	<property name="br.route.netmask" value="255.255.255.0" />

	<stage>

		<step no="pre.0.1">
			<desc>enable wan port nat if FW nonexists</desc>
			<if>"no" == "${cvg1.cvg.fw_existed}"</if>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "interface eth0 mode wan nat"
			</telnet>
		</step>

		<include prefix="1" file="subs/vpn_setup_one.xml" obj-args="cvg1, br1" />

		<step no="2.1">
			<desc>config mgt0.1 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>

		<step no="2.2">
			<desc>config mgt0.2 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.2 dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface mgt0.2 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.2 dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface mgt0.2 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.2 dhcp-server enable"
			</telnet>
		</step>

		<step no="set_lan_info">
			<multi-setvar>
				echo "br1.br.mgt0.1.route=$(echo ${br1.br.mgt0.1.ip} | cut -d. -f1,2,3).0"
				echo "br1.br.mgt0.2.route=$(echo ${br1.br.mgt0.2.ip} | cut -d. -f1,2,3).0"
				echo "cvg1.dns1.route=$(echo ${cvg1.dns1.ip} | cut -d. -f1,2,3).0"
				echo "cvg1.dns2.route=$(echo ${cvg1.dns2.ip} | cut -d. -f1,2,3).0"
				echo "cvg1.vpc1.route=$(echo ${cvg1.vpc1.tif.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<step no="3">
			<desc>Check route distribution is correct</desc>
		</step>

		<step no="3.1" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>On GW, will add the tunnel routes according to BR's modification </desc>
			<log-file>3.1.show_route_cvg_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="10">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${br1.br.mgt0.1.route}" -p 8 -i "${cvg1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${br1.br.mgt0.2.route}" -p 8 -i "${cvg1.tunnel.id}"</log-match>
		</step>

		<step no="3.2" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>-check the ip route tablelist</desc>
			<log-file>3.2_show_l3_ip_route_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${cvg1.dns1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg1.dns2.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg1.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
		</step>

		<step no="4.1">
			<desc>
				set all wired interface as access mode
				eth1 access br1.vpc1.vlan, eth2 trunk with native-vlan br1.vpc2.vlan
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "security-object lan1"
				-v "security-object lan1 default-user-profile-attr 1"
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "int eth1 mac-learning enable"
				-v "interface eth1 security-object lan1"
			</telnet>
		</step>

		<step no="4.2">
			<desc>br1.vpc1 get ip addr from dhcp server of mgt0.1</desc>
			<log-file>ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="4.3">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="5.1">
			<desc>1. Default mtu on eth0 is 1500 </desc>
			<log-file>5.1.show_interface.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show interface eth0"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "MTU=1500" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.2">
			<desc>2. Default mtu on tunnel interface is 1476 </desc>
			<log-file>5.2.show_interface.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show interface tunnel0"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "MTU=1476" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.3" type="loop-check" loop-max-times="30" loop-interval="10">
			<desc>BR ping br1.vpc1</desc>
			<log-file>step5.3_ping.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "ping ${br1.vpc1.tif.ip}"
			</telnet>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="6" type="loop-check" loop-max-times="3" loop-interval="10">
			<desc>
				4. PC1 got ping reply from PC2 when packet size over 1500 and 1476, no DF set
			</desc>
			<log-file>step6_ping.log</log-file>
			<ssh target="br1.vpc1">
				-v "ping ${cvg1.vpc1.tif.ip} -c 4 -s 1502"
			</ssh>
			<log-match>-c -i "from ${cvg1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="7" type="loop-check" loop-max-times="3" loop-interval="10">
			<desc>
				5. PC1 could get ping reply from PC2 only when packet size is smaller then 1396, DF set
			</desc>
			<log-file>step7_ping.log</log-file>
			<ssh target="br1.vpc1">
				-v "ping ${cvg1.vpc1.tif.ip} -c 4 -s 1369 -M do"
			</ssh>
			<log-match>-c -i "from ${cvg1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="7.1" type="loop-check" loop-max-times="3" loop-interval="10">
			<desc>
				5. PC1 could get ping reply from PC2 only when packet size is smaller then 1396, DF set
			</desc>
			<log-file>step7.1_ping.log</log-file>
			<ssh target="br1.vpc1">
				-v "ping ${cvg1.vpc1.tif.ip} -c 4 -s 1398 -M do"
			</ssh>
			<log-match>-n -c -i "from ${cvg1.vpc1.tif.ip}: " -i "ttl="</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Frag needed and DF set" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7.2" type="loop-check" loop-max-times="3" loop-interval="10">
			<desc>
				5. PC1 could get ping reply from PC2 only when packet size is smaller then 1396, DF set
			</desc>
			<log-file>step7.2_ping.log</log-file>
			<ssh target="br1.vpc1">
				-v "ping ${cvg1.vpc1.tif.ip} -c 4 -s 1448 -M do"
			</ssh>
			<log-match>-n -c -i "from ${cvg1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="8" type="loop-check" loop-max-times="3" loop-interval="10">
			<desc>
				6. PC2 got ping reply from PC1 when packet size is over 1500 and 1476, no DF set
			</desc>
			<log-file>step8_ping.log</log-file>
			<ssh host="${cvg1.vpc1.mif.ip}">
				-v "ping ${br1.vpc1.tif.ip} -c 4 -s 1502"
			</ssh>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="9" type="loop-check" loop-max-times="3" loop-interval="10">
			<desc>
				7. PC2 could get ping reply from PC1 only when packet size smaller then 1396, DF set
			</desc>
			<log-file>step9_ping.log</log-file>
			<ssh host="${cvg1.vpc1.mif.ip}">
				-v "ping ${br1.vpc1.tif.ip} -c 4 -s 1368 -M do"
			</ssh>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="9.1" type="loop-check" loop-max-times="3" loop-interval="10">
			<desc>
				7. PC2 could get ping reply from PC1 only when packet size smaller then 1396, DF set
			</desc>
			<log-file>step9.1_ping.log</log-file>
			<ssh host="${cvg1.vpc1.mif.ip}">
				-v "ping ${br1.vpc1.tif.ip} -c 4 -s 1398 -M do"
			</ssh>
			<log-match>-n -c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Frag needed and DF set" -f ${log.dir}/${log.file}	</log-match>
		</step>

	</stage>

</testcase>