<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Vpn tunnel should be recreated after mgt0 ip changed on br</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>	
Pre-condition:
-config a remote CVG, there are several LANs behind it
-there are some services in CVG’s LANs
-BR setup VPN connection with CVG
-setup all wifi radio and eth interfaces as access mode
-BR have several LANs behind it
-STA1 connected to BR’s LAN
-vpn tunnel setup success
Test procedure:	
1.	Change the mgt0 ip  on br,check the vpn tunnel,result 1
2.	After tunnel refresh, check the ip route table on BR and cvg,result2
Expect result:
1.	BR will break all tunnel on it, and recreate vpn tunnel ,the log of tunnel down is before on  the tunnel up 
2.	The br can get route from cvg and  br can send the local route to cvg.
The ip route are both normal on br and cvg

	</description>
	<numofcvg>1</numofcvg>
	<numofbr>1</numofbr>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>winlin</tbtype>

	<property name="br.route.netmask" value="255.255.255.0" />
	<property name="vpn.client.list" value="clientList1" />
	<property name="vpn.server.name" value="vpnServer1" />
	<property name="br1.br.mgt0.changed.ip" value="10.10.10.1" />
	<property name="br1.br.mgt0.changed.ip_pool_start" value="10.10.10.2" />
	<property name="br1.br.mgt0.changed.ip_pool_end" value="10.10.10.10" />

	<stage>
		<step no="pre_1">
			<desc>CVG.cvg.tunnel.ip.generate</desc>
			<setvar name="cvg1.cvg.tunnel.ip">
				if [ "yes" == "${cvg1.cvg.fw_existed}" ]; then
				echo "${cvg1.cvg.tunnel.ip}"
				else
				echo "${cvg1.cvg.wan.ip}"
				fi
			</setvar>
		</step>
		
		<step no="pre_2">
			<desc>Config CVG act as l3 VPN server;
				declare supper-net for br1.mgt0, mgt0.1, mgt0.2
			</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="30">
				-v "save vpn ee-cert tftp://${pub.tftp1.tip}:certs/server_cert.pem"
				-v "save vpn private-key tftp://${pub.tftp1.tip}:certs/server_key.pem"
				-v ""
				-v "vpn xauth-client-list ${vpn.client.list} local"
				-v "vpn xauth-client-list ${vpn.client.list} client-name ${br1.br.name} password aerohive"
				-v "vpn server-ipsec-tunnel ${vpn.server.name} vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${vpn.server.name} client-list ${vpn.client.list}"
				-v "vpn tunnel-policy vpn_tunnel_policy server ipsec-tunnel ${vpn.server.name}"
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.ip}/${br.mgt0.supermask}"
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${br.mgt0.supermask}"
				-v "routing internal-sub-network ${br1.br.mgt0.2.ip}/${br.mgt0.supermask}"
			</telnet>		
		</step>
		
		<step no="pre_3.1">
			<desc>enable ospf on eth0 if it has one arms</desc>
			<if>"one" == "${cvg1.cvg.arm_type}"</if>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "routing protocol ospf advertise eth0"
				-v "routing protocol ospf router-id ${cvg1.cvg.wan.ip}"
				-v "routing protocol type ospf"
				-v "routing protocol enable"
			</telnet>
		</step>
		
		<step no="pre_3.2">
			<desc>Enable OSPF on eth1 if it has two arms</desc>
			<if>"two" == "${cvg1.cvg.arm_type}"</if>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="30">
				-v "routing protocol ospf advertise eth1"
				-v "routing protocol ospf router-id ${cvg1.cvg.lan.ip}"
				-v "routing protocol type ospf"
				-v "routing protocol enable"
				-v "_debug brd basic"
				-v ""
				-v "_debug brd info"
				-v ""
			</telnet>
		</step>		

		<step no="pre_4.1">
			<desc>eth0 dhcp</desc>
			<console target="br1.br" slow="yes">
				-v "no interface eth0 dhcp client"
				-v ""
				-v "interface eth0 dhcp client"
				-v ""
			</console>
		</step>
		
		<step no="pre_4.2">
			<desc>show ip address of eth0</desc>
			<log-file>show_int_eth0_1.log</log-file>
			<console target="br1.br" slow="yes">
				-v "show interface eth0"
				-v ""
			</console>
		</step>
		
		<step no="pre_4.3">
			<desc>get ip address of br wan port eth0</desc>
			<setvar name="br1.br.wan.ip">
				${bin.dir}/getbyrexp.py -p "IP addr=([\d.]+)" -f ${log.dir}/show_int_eth0_1.log -t str
			</setvar>
		</step>
		
		<step no="pre_4.4">
			<desc>config mgt0.1 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask ${br.route.netmask}"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>

		<step no="pre_4.5">
			<desc>config mgt0.2 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.2 vlan ${br1.vpc2.vlan}"
				-v "interface mgt0.2 ip ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
				-v "interface mgt0.2 dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface mgt0.2 dhcp-server options netmask ${br.route.netmask}"
				-v "interface mgt0.2 dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface mgt0.2 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.2 dhcp-server enable"
			</telnet>
		</step>	

		<step no="pre_4.6">
			<desc>get prefix of br mgt0.1/mgt0.2 ip address</desc>
			<multi-setvar>
				echo "br1.mgt0.1.prefix=$(echo ${br1.br.mgt0.1.ip} | cut -d. -f1,2,3)"
				echo "br1.mgt0.2.prefix=$(echo ${br1.br.mgt0.2.ip} | cut -d. -f1,2,3)"				
			</multi-setvar>
		</step>		
		
		<step no="pre_5">
			<desc>config BR as l3 VPN client</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "save vpn ca-cert tftp://${pub.tftp1.tip}:certs/cacert.pem"
				-v "vpn client-ipsec-tunnel ${br1.br.name}_ipsec_1 vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${br1.br.name}_ipsec_1 gateway ${cvg1.cvg.tunnel.ip} client-name ${br1.br.name} password aerohive"
				-v "vpn tunnel-policy vpn_tunnel_policy client ipsec-tunnel ${br1.br.name}_ipsec_1 primary"
				-v "routing route-request enable"
				-v "_debug brd basic"
				-v ""
				-v "_debug brd info"
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.ip}/${br.lan.netmask}"
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "routing internal-sub-network ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
			</telnet>			
		</step>
		
		<step no="1.1" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>check vpn ike sa on BR side when FW open</desc>
			<log-file>ike_sa_vpn1_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>			
		</step>

		<step no="1.2">
			<desc>
				check gre tunnel on br side  when FW open
			</desc>
			<log-file>show_gre_tunnel_br1.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn layer-3-tunnel"
				-v "show vpn ipsec-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "${cvg1.cvg.wan.ip}" -p 4 -i "${br1.br.mgt0.ip}" -p 6 -i "${cvg1.cvg.tunnel.ip}"</log-match>
			<log-match>-i "${br1.br.wan.ip}\[4500\]" -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>
		</step>		
		
		<step no="1.3" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on CVG side
			</desc>
			<log-file>ike_sa_cvg1.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="30">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "R" -i "${br1.br.nat.ip}"</log-match>
		</step>	

		<step no="1.4">
			<desc>
				check gre tunnel on cvg side
			</desc>
			<log-file>show_gre_tunnel_cvg1.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="30">
				-v "show vpn layer-3-tunnel"
				-v "show vpn ipsec-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "any" -p 4 -i "${cvg1.cvg.wan.ip}" -p 6 -i "anonymous"</log-match>
			<log-match>-i "${cvg1.cvg.wan.ip}\[4500\]" -i "${br1.br.nat.ip}"</log-match>
		</step>	
		
		<!--change BR mgt0 ip address, check vpn tunnel refresh-->
		
		<step no="1.5">
			<desc>change BR mgt0 ip address</desc>
			<console target="br1.br" slow="yes">
				-v "no interface mgt0 dhcp-server enable"
				-v "no interface mgt0 dhcp-server options default-gateway"
				-v "no interface mgt0 dhcp-server options dns1"
				-v "no interface mgt0 dhcp-server ip-pool ${br1.br.mgt0.ip_pool_start} ${br1.br.mgt0.ip_pool_end}"
				-v "no interface mgt0 ip"
				-v "interface mgt0 ip ${br1.br.mgt0.changed.ip}/24"
				-v "interface mgt0 dhcp-server ip-pool ${br1.br.mgt0.changed.ip_pool_start} ${br1.br.mgt0.changed.ip_pool_end}"
				-v "interface mgt0 dhcp-server options netmask ${br.route.netmask}"
				-v "interface mgt0 dhcp-server options default-gateway ${br1.br.mgt0.changed.ip}"
				-v "interface mgt0 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0 dhcp-server enable"
				-v "interface mgt0 dns-server enable"
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.changed.ip}/${br.lan.netmask}"
			</console>
		</step>

		<step no="1.6">
			<desc>BR mgt0 ip changed, open vpn debug cli</desc>
			<console target="br1.br" slow="yes">
				-v "clear log buffered"
				-v "_debug vpn all"
				-v "_debug vpn packet"
				-v ""
				-v ""	
			</console>
		</step>		
		
		<step no="1.7" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>check vpn ike sa on BR side when eth0 ip address changed</desc>
			<log-file>ike_sa_vpn2_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>			
		</step>

		<step no="1.8">
			<desc>
				check gre tunnel on br side when eth0 ip address changed
			</desc>
			<log-file>show_gre_tunnel_br2.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn layer-3-tunnel"
				-v "show vpn ipsec-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "${cvg1.cvg.wan.ip}" -p 4 -i "${br1.br.mgt0.changed.ip}" -p 6 -i "${cvg1.cvg.tunnel.ip}"</log-match>
			<log-match>-i "${br1.br.wan.ip}\[4500\]" -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>
		</step>		
		
		<step no="1.9" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on CVG side
			</desc>
			<log-file>ike_sa_cvg2.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="30">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "R" -i "${br1.br.nat.ip}"</log-match>
		</step>	

		<step no="1.10">
			<desc>
				check gre tunnel on cvg side
			</desc>
			<log-file>show_gre_tunnel_cvg2.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="30">
				-v "show vpn layer-3-tunnel"
				-v "show vpn ipsec-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "any" -p 4 -i "${cvg1.cvg.wan.ip}" -p 6 -i "anonymous"</log-match>
			<log-match>-i "${cvg1.cvg.wan.ip}\[4500\]" -i "${br1.br.nat.ip}"</log-match>
		</step>	

		<step no="1.11">
			<desc> show log	buffer to check the vpn establish process when mgt0 ip address changed</desc>
			<log-file>show_log_buff.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
			<no-error-check />
		</step>
		
	
		<step no="2.1">
			<desc>set var to descript CVG lan route</desc>
			<setvar name="cvg1.cvg.lan.route">
				echo $(echo ${cvg1.cvg.lan.ip} | cut -d. -f1,2,3).0
			</setvar>
		</step>

		<step no="2.2">
			<desc>CVG will push its mgt0 ip address and lans to BR</desc>
			<log-file>step2.2_show_route_br_01.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${cvg1.cvg.mgt0.ip}" -p 3 -i "255.255.255.255" -p 8 -i "tunnel0"</log-match>
			<log-match>-p 1 -i "${cvg1.cvg.lan.route}" -p 8 -i "tunnel0"</log-match>
		</step>

		<step no="2.3">
			<desc>set var to descript CVG lan route</desc>
			<setvar name="br1.br.mgt0.changed.route">
				echo $(echo ${br1.br.mgt0.changed.ip} | cut -d. -f1,2,3).0
			</setvar>
		</step>

		<step no="2.4">
			<desc>BR will push its mgt0 ip address to CVG, BR will announce LANs under it, check the route table on CVG </desc>
			<log-file>step2.4_show_route_cvg_01.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="30">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${br1.br.mgt0.changed.ip}" -p 3 -i "255.255.255.255" -p 8 -i "tunnel0"</log-match>
			<log-match>-p 1 -i "${br1.br.mgt0.changed.route}" -p 8 -i "tunnel0"</log-match>
		</step>
		
		<step no="3.1">
			<desc>configure br1.vpc1 connect port as access mode and assign vlan</desc>
			<log-file>step3.1_br_port.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "interface eth1 mode bridge-access"
				-v "user-profile ${br1.vpc1.vlan} vlan ${br1.vpc1.vlan} attribute ${br1.vpc1.vlan}"
				-v "interface eth1 mode bridge-access user-profile-attribute ${br1.vpc1.vlan}" 
			</telnet>
		</step>		
		
		<step no="3.2">
			<desc>br1.vpc1 get ip address</desc>
			<log-file>ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-e "inet addr"</log-match>			
		</step>
		
		<step no="3.3">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>
		
		<step no="3.4">
			<desc>get prefix of br1.vpc1 ip address</desc>
			<multi-setvar>
				echo "br1.vpc1.ip.prefix=$(echo ${br1.vpc1.tif.ip} | cut -d. -f1,2,3)"
			</multi-setvar>
		</step>
		
		<step no="3.5">
			<desc>check br1.vpc1 get ip address from BR mgt0.1 dhcp server successfully</desc>
			<script>
				if [ "${br1.vpc1.ip.prefix}" == "${br1.mgt0.1.prefix}" ]; then exit 0; else exit 1; fi
			</script>
		</step>	

		<step no="3.6" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>br1.vpc1 ping cvg.vpc1 to check the pkts forwarding</desc>
			<log-file>brvpc1_ping_cvgvpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v " ping ${cvg1.vpc1.tif.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${cvg1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>
		
		<step no="3.7" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>BR ping cvg.vpc1 to check pkts forwarding</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "ping ${cvg1.vpc1.tif.ip}"
			</telnet>
			<log-match>-c -i "from ${cvg1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>
			
		<step no="3.8" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>cvg.vpc1 ping br1.vpc1 to check pkts forwawrding</desc>
			<log-file>cvgvpc1_ping_brvpc1_${loop_check.idx}.log</log-file>
			<ssh host="${cvg1.vpc1.mif.ip}">
				-v " ping ${br1.vpc1.tif.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>
			

	</stage>
	
	<failed-process>
		<stage>
			<include prefix="0.1" file="subs/br_open_fw.xml" obj-args="br1" />
		</stage>

		<include file="include/br_default_failed_process.xml" />

	</failed-process>	

</testcase>
