<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Forward packet between BRs</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		-config a remote CVG, there are several LANs behind it
		-there are some services in CVG's LANs
		-BR1 setup VPN connection with CVG
		-BR2 setup VPN connection with CVG
		-setup all wifi radio and eth interfaces as access mode
		-BR1 have several LANs behind it
		-BR2 have several LANs behind it
		-STA1 in BR1's LANs, STA2 in BR2's LANs

		Test Procedure:

		-STA1 ping STA2
		-STA2 ping STA2
	</description>
	<numofcvg>1</numofcvg>
	<numofbr>2</numofbr>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>winlin</tbtype>

	<property name="vpn.client.list" value="clientList1" />
	<property name="vpn.server.name" value="vpnServer1" />	

	<stage>
		<step no="1">
			<desc>Config CVG as VPN server</desc>
		</step>

		<step no="1.1">
			<desc>config CVG act as l3 VPN server</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="60">
				-v "save vpn ee-cert tftp://${pub.tftp1.tip}:certs/server_cert.pem"
				-v "save vpn private-key tftp://${pub.tftp1.tip}:certs/server_key.pem"
				-v "vpn xauth-client-list ${vpn.client.list} local"
				-v "vpn xauth-client-list ${vpn.client.list} client-name ${br1.br.name} password aerohive"
				-v "vpn xauth-client-list ${vpn.client.list} client-name ${br1.br.name}_2 password aerohive"
				-v "vpn server-ipsec-tunnel ${vpn.server.name} vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${vpn.server.name} client-list ${vpn.client.list}"
				-v "vpn tunnel-policy vpn_tunnel_policy server ipsec-tunnel ${vpn.server.name}"
				-v ""
				-v ""
			</telnet>
		</step>

		<step no="1.2">
			<desc>enable ospf on eth1 if it has two arms</desc>
			<if>"two" == "${cvg1.cvg.arm_type}"</if>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="60">
				-v "routing protocol ospf advertise eth1"
				-v "routing protocol ospf router-id ${cvg1.cvg.lan.ip}"
				-v "routing protocol type ospf"
				-v "routing protocol enable"
			</telnet>
		</step>

		<step no="1.2b">
			<desc>enable ospf on eth0 if it has one arms</desc>
			<if>"one" == "${cvg1.cvg.arm_type}"</if>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="60">
				-v "routing protocol ospf advertise eth0"
				-v "routing protocol ospf router-id ${cvg1.cvg.wan.ip}"
				-v "routing protocol type ospf"
				-v "routing protocol enable"
			</telnet>
		</step>

		<step no="2">
			<desc>Config BR as VPN client</desc>
		</step>

		<step no="2.1">
			<desc>config mgt0.1 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>
		
		<step no="2.1b">
			<desc>
				open debug on cvg
			</desc>
			<log-file>setp2.1b.sa_cvg_.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="60">
				-v "_debug brd info"
				-v ""
				-v "_debug brd basic"
				-v ""
			</telnet>			
		</step>

		<step no="2.3">
			<desc>config BR as l3 VPN client</desc>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "save vpn ca-cert tftp://${pub.tftp1.tip}:certs/cacert.pem"
				-v "vpn client-ipsec-tunnel ${br1.br.name}_ipsec_1 vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${br1.br.name}_ipsec_1 gateway ${cvg1.cvg.tunnel.ip} client-name ${br1.br.name} password aerohive"
				-v "vpn tunnel-policy vpn_tunnel_policy client ipsec-tunnel ${br1.br.name}_ipsec_1 primary"
				-v "routing route-request enable"
				-v ""
				-v "_debug brd info"
				-v ""
				-v "_debug brd basic"
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.ip}/${br.lan.netmask}"
				-v ""
				-v ""
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v ""
				-v ""
				-v ""
			</telnet>
		</step>

		<step no="set_lan_info">
			<multi-setvar>
				echo "br1.br.mgt0.1.route=$(echo ${br1.br.mgt0.1.ip} | cut -d. -f1,2,3).0"
				echo "br2.br.mgt0.1.route=$(echo ${br2.br.mgt0.1.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>
		
		<step no="2.3b" delay="10">
			<desc>show log buf on br</desc>
			<log-file>show_log_buff1.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes" timeout="200">
				-v "show log buf"
				-v ""				
			</telnet>
			<no-error-check />
		</step>
		
		<step no="2.3c">
			<desc>
				show log buf on cvg
			</desc>
			<log-file>show_log_buff_cvg1.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" slow="yes" timeout="200">
				-v "show log buf"
				-v ""				
			</telnet>
			<no-error-check />			
		</step>

		<step no="2.5" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on BR side
				destination to CVG public address
			</desc>
			<log-file>setp2.5.ike_sa_br_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>
		</step>

		<step no="2.6" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on CVG side
				destionation to BR public address
			</desc>
			<log-file>setp2.6.ike_sa_cvg_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="60">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "R" -i "${br1.br.nat.ip}"</log-match>
		</step>

		<step no="2.7">
			<desc>
				check gre tunnel on br side
				remote to CVG wan address, local mgt0 address ,gateway CVG public address
			</desc>
			<log-file>setp2.7.show_gre_tunnel_br.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "${cvg1.cvg.wan.ip}" -p 4 -i "${br1.br.mgt0.ip}" -p 6 -i "${cvg1.cvg.tunnel.ip}"</log-match>
		</step>

		<step no="2.8">
			<desc>
				check gre tunnel on cvg side
				local to CVG wan address
			</desc>
			<log-file>setp2.8.show_gre_tunnel_cvg.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="60">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "any" -p 4 -i "${cvg1.cvg.wan.ip}" -p 6 -i "anonymous"</log-match>
		</step>

		<step no="2.9" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>On GW, will add the tunnel routes according to BR's modification </desc>
			<log-file>setp2.9.show_route_cvg_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="60">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${br1.br.mgt0.1.route}" -p 8 -i "tunnel0"</log-match>
		</step>

		<step no="3">
			<desc>Config BR as VPN client</desc>
		</step>

		<step no="3.1">
			<desc>config mgt0.1 with dhcp service enable</desc>
			<telnet target="${br2.br.wan.ip}">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0.1 vlan ${br2.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br2.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br2.br.mgt0.1.ip_pool_start} ${br2.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br2.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>
		
		<step no="3.1b">
			<desc>
				open debug on cvg
			</desc>
			<log-file>setp3.1b.sa_cvg_.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="200">
				-v "_debug brd info"
				-v ""
				-v "_debug brd basic"
				-v ""
			</telnet>			
		</step>

		<step no="3.2">
			<desc>config BR2 as l3 VPN client</desc>
			<telnet target="${br2.br.wan.ip}" slow="yes">
				-v "save vpn ca-cert tftp://${pub.tftp1.tip}:certs/cacert.pem"
				-v "vpn client-ipsec-tunnel ${br2.br.name}_ipsec_1 vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${br2.br.name}_ipsec_1 gateway ${cvg1.cvg.tunnel.ip} client-name ${br1.br.name}_2 password aerohive"
				-v "vpn tunnel-policy vpn_tunnel_policy client ipsec-tunnel ${br2.br.name}_ipsec_1 primary"
				-v "routing route-request enable"
				-v ""
				-v "_debug brd info"
				-v ""
				-v "_debug brd basic"
				-v ""
				-v "routing internal-sub-network ${br2.br.mgt0.ip}/${br.lan.netmask}"
				-v ""
				-v ""
				-v "routing internal-sub-network ${br2.br.mgt0.1.ip}/${br.lan.netmask}"
				-v ""
				-v ""
			</telnet>
		</step>
		
		<step no="3.2b" delay="10">
			<desc>show log buf on br</desc>
			<log-file>show_log_buff2.log</log-file>
			<telnet target="${br2.br.wan.ip}" slow="yes" timeout="200">
				-v "show log buf"
				-v ""				
			</telnet>
			<no-error-check />
		</step>
		
		<step no="3.2c">
			<desc>
				show log buf on cvg
			</desc>
			<log-file>show_log_buff_cvg2.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" slow="yes" timeout="200">
				-v "show log buf"
				-v ""				
			</telnet>
			<no-error-check />			
		</step>

		<step no="set_lan_info">
			<multi-setvar>
				echo "br2.br.mgt0.1.route=$(echo ${br2.br.mgt0.1.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<step no="3.3" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on BR side
				destination to CVG public address
			</desc>
			<log-file>setp3.3.ike_sa_br${loop_check.idx}.log</log-file>
			<telnet target="${br2.br.wan.ip}">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>
		</step>

		<step no="3.4" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on CVG side
				destionation to BR public address
			</desc>
			<log-file>setp3.4.ike_sa_cvg_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="60">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "R" -i "${br2.br.nat.ip}"</log-match>
		</step>

		<step no="3.5">
			<desc>
				check gre tunnel on br side
				remote to CVG wan address, local mgt0 address ,gateway CVG public address
			</desc>
			<log-file>setp3.5.show_gre_tunnel_br.log</log-file>
			<telnet target="${br2.br.wan.ip}">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "${cvg1.cvg.wan.ip}" -p 4 -i "${br2.br.mgt0.ip}" -p 6 -i "${cvg1.cvg.tunnel.ip}"</log-match>
		</step>

		<step no="3.6">
			<desc>
				check gre tunnel on cvg side
				local to CVG wan address
			</desc>
			<log-file>setp3.6.show_gre_tunnel_cvg.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="60">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "any" -p 4 -i "${cvg1.cvg.wan.ip}" -p 6 -i "anonymous"</log-match>
		</step>

		<step no="3.7" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>On GW, will add the tunnel routes according to BR's modification </desc>
			<log-file>setp3.7.show_route_cvg_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="60">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${br2.br.mgt0.1.route}" -p 8 -i "tunnel0"</log-match>
		</step>

		<step no="4">
			<desc>
				setup all weth interface as access mode				
			</desc>
		</step>

		<step no="4.1">
			<desc>
				set wired interface as access mode
				eth1 access br1.vpc1.vlan
			</desc>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "security-object lan1"
				-v "security-object lan1 default-user-profile-attr 1"			
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"			
				-v "interface eth1 mode bridge-access user-profile-attribute 1"				
				-v "int eth1 mac-learning enable"				
				-v "interface eth1 security-object lan1"				
			</telnet>
		</step>

		<step no="4.2a">
			<desc>br1.vpc1 get ip addr from dhcp server of mgt0.1</desc>
			<log-file>br1_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="4.2b">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>		

		<step no="4.3">
			<desc>
				set all wired interface as access mode
				eth1 access br2.vpc1.vlan
			</desc>
			<telnet target="${br2.br.wan.ip}">
				-v "security-object lan1"
				-v "security-object lan1 default-user-profile-attr 1"
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br2.vpc1.vlan} attribute 1"
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "int eth1 mac-learning enable"
				-v "interface eth1 security-object lan1"
			</telnet>
		</step>

		<step no="4.4">
			<desc>br2.vpc1 get ip addr from dhcp server of mgt0.1</desc>
			<log-file>br2_ifconfig_vpc1_.log</log-file>
			<ssh target="br2.vpc1" timeout="120">
				-v "dhclient ${br2.vpc1.tif.name}"
				-v "ifconfig ${br2.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="4.4b">
			<desc>set br2.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br2.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br2.vpc1.mif.ip} -u ${br2.vpc1.user} -p ${br2.vpc1.passwd} -i ${br2.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="5">
			<desc>
				Enable debug, Check BR connectivities
			</desc>
		</step>

		<step no="5.1" type="loop-check" loop-max-times="30" loop-interval="10">
			<desc>BR ping br1.sta1</desc>
			<log-file>log_br_to_sta1_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "ping ${br1.vpc1.tif.ip}"
			</telnet>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="5.2" type="loop-check" loop-max-times="30" loop-interval="10">
			<desc>BR ping br2.vpc1</desc>
			<log-file>log_br2_to_vpc1_${loop_check.idx}.log</log-file>
			<telnet target="${br2.br.wan.ip}">
				-v "ping ${br2.vpc1.tif.ip}"
			</telnet>
			<log-match>-c -i "from ${br2.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="5.3">
			<desc>enable debug on BR</desc>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "clear log buffered"
				-v "_ff id 1 src-ip ${br1.vpc1.tif.ip}"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</telnet>
		</step>

		<step no="5.4">
			<desc>enable debug on BR</desc>
			<telnet target="${br2.br.wan.ip}" slow="yes">
				-v "clear log buffered"
				-v "_ff id 2 src-ip ${br2.vpc1.tif.ip}"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</telnet>
		</step>

		<step no="6">
			<desc>br1.vpc1 ping br2.vpc1</desc>
			<log-file>br1_vpc1_ping_br2_vpc1.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${br2.vpc1.tif.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${br2.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="6.1">
			<desc>
				show log buffer
			</desc>
			<log-file>setp6.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v ""
				-v ""
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log buff"
			</telnet>
			<log-match>-c -i "(o) tunnel0 ${br1.vpc1.tif.ip}->${br2.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<no-error-check />
		</step>

		<step no="7">
			<desc>br2.vpc1 ping br1.vpc1</desc>
			<log-file>br2_vpc1_ping_br1_vpc1.log</log-file>
			<ssh target="br2.vpc1" timeout="120">
				-v "ping ${br1.vpc1.tif.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="7.1">
			<desc>
				show log buffer
			</desc>
			<log-file>setp7.1_show_log_buf.log</log-file>
			<telnet target="${br2.br.wan.ip}" slow="yes">
				-v ""
				-v ""
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log buff"
			</telnet>
			<log-match>-c -i "(o) tunnel0 ${br2.vpc1.tif.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<no-error-check />
		</step>

	</stage>

</testcase>
