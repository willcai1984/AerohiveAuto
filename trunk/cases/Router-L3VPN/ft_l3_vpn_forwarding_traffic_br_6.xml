<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Drop all packet through tunnel</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		-config a remote CVG, there is several LANs behind it
		-there are some services in CVG's LANs
		-BR setup VPN connection with the CVG
		-setup all wifi radios and eth interfaces as access mode
		-bind user-profile with l3-tunnel-action drop-tunnel-traffic on both
		wifi radio and wired eth interfaces

		Test Procedure:

		- check the ip policy-route l3-tunnel- drop
		-STA1 ping web server on internet
		-STA1 ping servers behind remote CVG
		-STA1 ping local LANs
		-STA1 ping ip in exception list
	</description>
	<numofcvg>1</numofcvg>
	<numofbr>1</numofbr>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>winlin</tbtype>
	
	<property name="br.route.netmask" value="255.255.255.0" />

	<stage>
		<step no="pre.0.1">
			<desc>enable wan port nat if FW nonexists</desc>
			<if>"no" == "${cvg1.cvg.fw_existed}"</if>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="5">
				-v "interface eth0 mode wan nat"
			</telnet>
		</step>

		<include prefix="1" file="subs/vpn_setup_one.xml" obj-args="cvg1, br1" />

		<step no="2.1">
			<desc>config mgt0.1 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>

		<step no="2.2">
			<desc>config mgt0.2 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.2 dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface mgt0.2 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.2 dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface mgt0.2 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.2 dhcp-server enable"
			</telnet>
		</step>

		<step no="set_lan_info">
			<multi-setvar>
				echo "br1.br.mgt0.1.route=$(echo ${br1.br.mgt0.1.ip} | cut -d. -f1,2,3).0"
				echo "br1.br.mgt0.2.route=$(echo ${br1.br.mgt0.2.ip} | cut -d. -f1,2,3).0"
				echo "cvg1.dns1.route=$(echo ${cvg1.dns1.ip} | cut -d. -f1,2,3).0"
				echo "cvg1.dns2.route=$(echo ${cvg1.dns2.ip} | cut -d. -f1,2,3).0"
				echo "cvg1.vpc1.route=$(echo ${cvg1.vpc1.tif.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<step no="3">
			<desc>Check route distribution is correct</desc>
		</step>

		<step no="3.1" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>On GW, will add the tunnel routes according to BR's modification </desc>
			<log-file>3.1.show_route_cvg_.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${br1.br.mgt0.1.route}" -p 8 -i "${cvg1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${br1.br.mgt0.2.route}" -p 8 -i "${cvg1.tunnel.id}"</log-match>
		</step>

		<step no="3.2" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>-check the ip route tablelist</desc>
			<log-file>3.2_show_l3_ip_route.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${cvg1.dns1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg1.dns2.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
			<log-match>-p 1 -i "${cvg1.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "${br1.tunnel.id}"</log-match>
		</step>


		<step no="4">
			<desc>
				setup all wifi radio and eth interface as access mode
				connect STA1 under wifi, connect a STA2 under eth1
			</desc>
		</step>

		<step no="4.1">
			<desc>
				set all wired interface as access mode
				eth1 access br1.vpc1.vlan, eth4 access br1.vpc2.vlan
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "security-object lan1"
				-v "security-object lan1 default-user-profile-attr 1"
				-v "security-object lan2"
				-v "security-object lan2 default-user-profile-attr 2"
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"
				-v "user-profile lan2 qos-policy def-user-qos vlan-id ${br1.vpc2.vlan} attribute 2"
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "interface eth4 mode bridge-access user-profile-attribute 2"				
				-v "int eth1 mac-learning enable"
				-v "int eth4 mac-learning enable"
				-v "interface eth1 security-object lan1"
				-v "interface eth4 security-object lan2"
			</telnet>
		</step>

		<step no="4.2">
			<desc>br1.vpc1 get ip addr from dhcp server of mgt0.1</desc>
			<log-file>ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="4.2b">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>
		
		<step no="4.3">
			<desc>br1.vpc4 get ip addr from dhcp server of mgt0.2</desc>
			<log-file>ifconfig_vpc4_.log</log-file>
			<ssh target="br1.vpc4" timeout="120">
				-v "dhclient -r ${br1.vpc4.tif.name} "
				-v "dhclient ${br1.vpc4.tif.name}"
				-v "ifconfig ${br1.vpc4.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="4.3b">
			<desc>set br1.vpc4.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc4.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc4.mif.ip} -u ${br1.vpc4.user} -p ${br1.vpc4.passwd} -i ${br1.vpc4.tif.name} -nomask
			</setvar>
		</step>		

		<step no="5">
			<desc>
				Enable debug, Check BR connectivities
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "routing match-map ma user-profile lan1 to private"
				-v "routing match-map mb user-profile lan1 to any"                               			
                                -v "routing route-map ra via blackhole"
                                -v "routing route-map rb via eth0"                              
                                -v "routing policy pa id 1 match-map ma route-map ra"
                                -v "routing policy pb id 3 match-map mb route-map rb"                                
			</telnet>
		</step>

		<step no="5.1" type="loop-check" loop-max-times="30" loop-interval="10">
			<desc>BR ping br1.sta1</desc>
			<log-file>step5.1_ping.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "ping ${br1.vpc1.tif.ip}"
			</telnet>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="5.2">
			<desc>enable debug on BR</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear log buffered"
				-v "_ff id 1 src-ip ${br1.vpc1.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</telnet>
		</step>

		<step no="5.3">
			<desc>-check the Tunnel All l3-tunnel-drop Routing Table</desc>
			<log-file>5.3_show_l3_tunnel_drop.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip policy-route l3-tunnel-drop"
			</telnet>
			<log-match>-p 1 -i "${cvg1.dns2.route}" -p 3 -i "${br.route.netmask}" -p 6 -i "blackhole"</log-match>
			<log-match>-p 1 -i "${cvg1.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 6 -i "blackhole"</log-match>
		</step>

		<step no="5.4">
			<desc>-check the ip route tablelist</desc>
			<log-file>5.4_show_l3_ip_route.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-p 1 -i "${cvg1.dns2.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "tunnel0"</log-match>
			<log-match>-p 1 -i "${cvg1.vpc1.route}" -p 3 -i "${br.route.netmask}" -p 8 -i "tunnel0"</log-match>
		</step>
		
		<step no="5.5">
			<desc>BR1.vpc1 ping pub.dns1</desc>
			<log-file>step5.5_ping.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>		

		<step no="6.1">
			<desc>
				show log buffer
			</desc>
			<log-file>setp6.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v ""
				-v ""
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log buff"
				-v "clear network-firewall session all"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "routing done[\t, ]+${br1.vpc1.tif.ip}[\t\>\- ]+${pub.dns1.ip}.+, no available route" -c 0 -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		
		<step no="7" delay="300">
			<desc>BR1.vpc1 ping cvg1.vpc1</desc>
			<log-file>step7_ping.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 2"
			</ssh>
			<log-match>-n -c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>		

		<step no="7.1">
			<desc>
				show log buffer
			</desc>
			<log-file>setp7.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v ""
				-v ""
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log buff"
				-v "clear network-firewall session all"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "routing done[\t, ]+${br1.vpc1.tif.ip}[\t\>\- ]+${cvg1.vpc1.tif.ip}.+, no available route" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		
		<step no="8">
			<desc>BR1.vpc1 ping br1.vpc4</desc>
			<log-file>step8_ping.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${br1.vpc4.tif.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${br1.vpc4.tif.ip}: " -i "ttl="</log-match>
		</step>		

		<step no="8.1">
			<desc>
				show log buffer
			</desc>
			<log-file>setp8.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v ""
				-v ""
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log buff"
				-v "clear network-firewall session all"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "routing done[\t, ]+${br1.vpc1.tif.ip}[\t\>\- ]+${br1.vpc4.tif.ip}.+, no available route" -c 0 -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		
		<step no="9" delay="300">
			<desc>BR1.vpc1 ping cvg1.dns2</desc>
			<log-file>step9_ping.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.dns2.ip} -c 2"
			</ssh>
			<log-match>-n -c -i "from ${cvg1.dns2.ip}: " -i "ttl="</log-match>
		</step>		

		<step no="9.1">
			<desc>
				show log buffer
			</desc>
			<log-file>setp9.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v ""
				-v ""
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log buff"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "routing done[\t, ]+${br1.vpc1.tif.ip}[\t\>\- ]+${cvg1.dns2.ip}.+, no available route" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

	</stage>

</testcase>
