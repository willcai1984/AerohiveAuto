<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>(IxPort: CoF=3) Check unicast packets forwarding</brief>
	<priority>accept</priority>
	<automated>yes</automated>

	<description>
		Topology to use	
		PC1+++++++Switch(access) ++++PC2
		+(access)
		+
		PC3

		Description	Check unicast packets forwarding 
		Platform Dependence	Chesapeake

		Pre-condition	          
		PC1 connect to switch access port 1
		PC2 connect to switch access port 2
		PC3 connect to switch access port3
		PC1,PC2,PC3 are in same vlan 10
		Switch FDB table size doesn't exceed
		Switch access ports are with learning/forwarding state
		Test procedure	Enable mac-learning
		1.	Set mac learning enable for vlan10
		CLI: mac-address table learning  vlan 10
		2.	PC1 send unicast frames with src mac 0000-1111-1111
		3.	PC2 send unicast frames with src mac 0000-2222-2222
		4.	PC3 send unicast frames with src mac 0000-3333-3333
		5.	Check FDB mac entry          Result1
		6.	Set PC2,PC3 to capture frames
		7.	PC1 send unicast frames with dst mac 0000-2222-2222     Result2
		8.	PC1 send unicast frames with dst mac 0000-3333-3333     Result3
		9.	Set PC1,PC3e to capture frames
		10.	PC2 send unicast frames with dst mac 0000-1111-1111     Result4
		11.	PC2 send unicast frames with dst mac 0000-3333-3333      Result5
		12.	Set PC1,PC2 to capture frames
		13.	PC3 send unicast frames with dst mac 0000-1111-1111      Result6
		14.	PC3 send unicast frames with dst mac 0000-2222-2222     Result7

		Delete the mac entry for PC3 (0000-3333-3333)
		[for example, the pc3 mac entry age out]
		15.	Set PC2,PC3 to capture frames
		16.	PC1 send unicast frames with dst mac 0000-3333-3333      Result8
		17.	Set PC1,PC3 to capture frames
		18.	PC2 send unicast frames with dst mac 0000-3333-3333      Result9
		[for example, vlan change, change PC3 vlan as 20, 0000-3333-333 learn in vlan 20]
		19.	Set PC2,PC3 to capture frames
		20.	PC1 send unicast frames with dst mac 0000-3333-3333      Result10

		Disable mac learning for vlan10
		21.	Check FDB table           Result11
		22.	PC1 send unicast frames with dst mac 0000-2222-2222    Result12
		Expect result	Result1:  FDB table has following mac entries:
		[0000-1111-1111, vlan10, port1]
		[0000-2222-2222, vlan10, port2]
		[0000-3333-3333, vlan10, port3]

		Result2:   PC2 should receive the frames, PC3 can't
		Result3:    PC3 should receive the frames, PC2 can't

		Result4:   PC1 should receive the frames, PC3 can't
		Result5:   PC3 should receive the frames, PC1 can't

		Result6:   PC1 should receive the frames, PC2 can't
		Result7:    PC2 should receive the frames, PC1 can't

		Result8:    PC2,PC3 can receive the frames, because the mac 0000-3333-3333 is deleted from FDB, so flooding to all port in vlan 10
		Result9:   PC1,PC3 can receive the frames, because the mac 0000-3333-3333 is deleted from FDB, so flooding to all port in vlan 10

		Result10:   PC2 can't receive the unicast frames, PC3 can't receive the unicast frames too

		Result11:   all the dynamic unicast entries sent in vlan10 should be deleted
		Result12:   flooding the PC1 sent frames to all port in vlan10
	</description>

	<numofsw>1</numofsw>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<!-- self defined steps -->
		</stage>
		<include file="include/sw_default_pre_process.xml" />
	</pre-process>
	<property name="sw1.port1.ixia_port.mac" value="0000.0000.0011"/>
	<property name="sw1.port2.ixia_port.mac" value="0000.0000.0012"/>
	<property name="sw1.port3.ixia_port.mac" value="0000.0000.0013"/>
	<property name="sw1.port4.ixia_port.mac" value="0000.0000.0014"/>
	<property name="stream1.txport1" value="${sw1.port1.ixia_port}" />
	<property name="stream1.rxport1" value="${sw1.port4.ixia_port}"  />
	<property name="stream1.txport1.mac" value="${sw1.port1.ixia_port.mac}" />
	<property name="stream1.rxport1.mac" value="${sw1.port4.ixia_port.mac}" />
	<property name="stream1.txport1.phytype" value="${sw1.port1.phytype}" />
	<property name="stream1.rxport1.phytype" value="${sw1.port4.phytype}" />
	<property name="stream1.etype" value="0x0800" />
	<property name="stream1.UDFoffset" value="34" />

	<property name="stream2.txport1" value="${sw1.port2.ixia_port}" />
	<property name="stream2.rxport1" value="${sw1.port4.ixia_port}" />
	<property name="stream2.txport1.mac" value="${sw1.port2.ixia_port.mac}" />
	<property name="stream2.rxport1.mac" value="${sw1.port4.ixia_port.mac}" />
	<property name="stream2.txport1.phytype" value="${sw1.port2.phytype}" />
	<property name="stream2.rxport1.phytype" value="${sw1.port4.phytype}" />
	<property name="stream2.etype" value="0x0800" />
	<property name="stream2.UDFoffset" value="34" />

	<property name="stream3.txport1" value="${sw1.port3.ixia_port}" />
	<property name="stream3.rxport1" value="${sw1.port4.ixia_port}" />
	<property name="stream3.txport1.phytype" value="${sw1.port3.phytype}" />
	<property name="stream3.rxport1.phytype" value="${sw1.port4.phytype}" />
	<property name="stream3.txport1.mac" value="${sw1.port3.ixia_port.mac}" />
	<property name="stream3.rxport1.mac" value="${sw1.port4.ixia_port.mac}" />
	<property name="stream3.etype" value="0x0800" />
	<property name="stream3.UDFoffset" value="34" />

	<stage>
		<step no="1">
			<desc>
				configure 4 access ports in the same vlan
			</desc>
			<telnet target="sw1">
				-v "vlan ${tb.vlan1}"
				-v "vlan ${tb.vlan2}"
				-v "interface ${sw1.port1} switchport access vlan ${tb.vlan1}"
				-v "interface ${sw1.port2} switchport access vlan ${tb.vlan1}"
				-v "interface ${sw1.port3} switchport access vlan ${tb.vlan1}"
				-v "interface ${sw1.port4} switchport access vlan ${tb.vlan1}"
				-v "show vlan brief"
				-v "show vlan summary"
				-v "show vlan id ${tb.vlan1}"
				-v "show mac-address-table all"
				-v "show interface"
			</telnet>
		</step>

		<step no="2.1.1">
			<desc>
				build stream, port1 sends pkt to port4, get statistics 
			</desc>
			<log-file>eth2test1_1.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-new="${job.user}-${job.sid}-1">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${sw1.port1.ixia_port},${sw1.port2.ixia_port},${sw1.port3.ixia_port},${sw1.port4.ixia_port} -phyList ${sw1.port1.phytype},${sw1.port2.phytype},${sw1.port3.phytype},${sw1.port4.phytype}"
				-v ""

				<!--configure the first stream -->
				-v "traffic_configure_eth2 -portListIn ${stream1.txport1},${stream1.rxport1}
				-mac_dst ${stream1.rxport1.mac}
				-mac_src ${stream1.txport1.mac}
				-eth2_protocol ${stream1.etype}
				-udf_offset ${stream1.UDFoffset}
				-patternOffset2 ${stream1.UDFoffset}"
				-v ""

				-v "start_trans_getstats -txPortList ${stream1.txport1} -rxPortList ${stream1.rxport1}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort ${stream1.txport1} -oneRxPort ${stream1.rxport1}"
				-v ""
			</ssh>
		</step>
		<step no="2.1.2">
			<desc>check FDB, mac of port1 is learned</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
		</step> 
		<step no="2.1.3">
			<desc>
				analyse statistics on rxport, port4 is received pkt from port1 
			</desc>
			<log-file>eth2test1_1.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream1.txport1} ${stream1.rxport1} framesSent userDefinedStat2 result is equal"</log-match>
		</step>

		<step no="2.2.1">
			<desc>
				build stream, port2 sends pkt to port4, get statistics 
			</desc>
			<log-file>eth2test1_2.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-get="${job.user}-${job.sid}-1">
				<!-- ixia initialize -->
				-v ""
				<!-- disable streams -->
				-v "stream_maintance -onePort ${stream2.txport1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${stream2.rxport1} -streamId all -maintanceOp disable"
				<!-- configure the sencond stream -->
				-v "traffic_configure_eth2 -portListIn ${stream2.txport1},${stream2.rxport1}
				-mac_dst ${stream2.rxport1.mac}
				-mac_src ${stream2.txport1.mac}
				-eth2_protocol ${stream2.etype}
				-udf_offset ${stream2.UDFoffset}
				-patternOffset2 ${stream2.UDFoffset}"
				-v ""

				-v "start_trans_getstats -txPortList ${stream2.txport1} -rxPortList ${stream2.rxport1}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort ${stream2.txport1} -oneRxPort ${stream2.rxport1}"
				-v ""
			</ssh>
		</step>
		<step no="2.2.2">
			<desc>check FDB, mac of port2 is learned</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet> 
		</step>
		<step no="2.2.3">
			<desc>
				analyse statistics on rxport, port4 received pkt from port2
			</desc>
			<log-file>eth2test1_2.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream2.txport1} ${stream2.rxport1} framesSent userDefinedStat2 result is equal"</log-match>
		</step>
		<step no="2.3.1">
			<desc>
				send pkt from port 3 to port 4
			</desc>
			<log-file>eth2test1_3.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-get="${job.user}-${job.sid}-1">
				<!-- ixia initialize -->
				-v ""
				-v "stream_maintance -onePort ${stream3.txport1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${stream3.rxport1} -streamId all -maintanceOp disable"
				<!-- configure the third stream -->
				-v "traffic_configure_eth2 -portListIn ${stream3.txport1},${stream3.rxport1}
				-mac_dst ${stream3.rxport1.mac}
				-mac_src ${stream3.txport1.mac}
				-eth2_protocol ${stream3.etype}
				-udf_offset ${stream3.UDFoffset}
				-patternOffset2 ${stream3.UDFoffset}"
				-v ""
				<!-- start transmit -->
				-v "start_trans_getstats -txPortList ${stream3.txport1} -rxPortList ${stream3.rxport1}"
				-v ""
				<!-- check the result -->
				-v "check_equal_tx_with_rx -oneTxPort ${stream3.txport1} -oneRxPort ${stream3.rxport1}"
				-v ""
			</ssh>
		</step>
		<step no="2.3.2">
			<desc>check FDB, mac of port3 is learned</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
		</step> 
		<step no="2.3.3">
			<desc>
				analyse statistics on rxport, port4 received pkt from port3
			</desc>
			<log-file>eth2test1_3.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream3.txport1} ${stream3.rxport1} framesSent userDefinedStat2 result is equal"</log-match>
		</step>

		<property name="stream4.txport1" value="${sw1.port1.ixia_port}" />
		<property name="stream4.rxport1" value="${sw1.port2.ixia_port}" />
		<property name="stream4.rxport2" value="${sw1.port3.ixia_port}" />
		<property name="stream4.txport1.mac" value="${sw1.port1.ixia_port.mac}" />
		<property name="stream4.rxport1.mac" value="${sw1.port2.ixia_port.mac}" />
		<property name="stream4.txport1.phytype" value="${sw1.port1.phytype}" />
		<property name="stream4.rxport1.phytype" value="${sw1.port2.phytype}" />
		<property name="stream4.rxport2.phytype" value="${sw1.port3.phytype}" />
		<property name="stream4.etype" value="0x0800" />
		<property name="stream4.UDFoffset" value="34" />

		<property name="stream5.txport1" value="${sw1.port1.ixia_port}" />
		<property name="stream5.rxport1" value="${sw1.port2.ixia_port}" />
		<property name="stream5.rxport2" value="${sw1.port3.ixia_port}" />
		<property name="stream5.txport1.mac" value="${sw1.port1.ixia_port.mac}" />
		<property name="stream5.rxport1.mac" value="${sw1.port3.ixia_port.mac}" />
		<property name="stream5.txport1.phytype" value="${sw1.port1.phytype}" />
		<property name="stream5.rxport1.phytype" value="${sw1.port2.phytype}" />
		<property name="stream5.rxport2.phytype" value="${sw1.port3.phytype}" />
		<property name="stream5.etype" value="0x0800" />
		<property name="stream5.UDFoffset" value="34" />

		<step no="3.1">
			<desc>port1 sends pkt to mac-addr on port2</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-get="${job.user}-${job.sid}-1">
				<!-- ixia initialize -->
				-v ""
				-v "stream_maintance -onePort ${stream4.txport1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${stream4.rxport1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${stream4.rxport2} -streamId all -maintanceOp disable"
				<!-- stream4 -->
				-v "traffic_configure_eth2 -portListIn ${stream4.txport1},${stream4.rxport1},${stream4.rxport2}
				-mac_dst ${stream4.rxport1.mac}
				-mac_src ${stream4.txport1.mac}
				-eth2_protocol ${stream4.etype}
				-udf_offset ${stream4.UDFoffset}
				-patternOffset2 ${stream4.UDFoffset}"
				-v ""
				-v "start_trans_getstats -txPortList ${stream4.txport1} -rxPortList ${stream4.rxport1},${stream4.rxport2}"
				-v "check_equal_tx_with_rx -oneTxPort ${stream4.txport1} -oneRxPort ${stream4.rxport1}"
				-v "check_equal_tx_with_rx -oneTxPort ${stream4.txport1} -oneRxPort ${stream4.rxport2}"
				-v ""
			</ssh>
			<log-file>eth2test2.log</log-file>
		</step>

		<step no="3.2">
			<desc>check FDB, mac of port1 port2 and port3 are existed</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
		</step> 
		<step no="3.3">
			<desc>
				analyse statistics on rxport, only port2 received pkt from port1 
			</desc>
			<log-file>eth2test2.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream4.txport1} ${stream4.rxport1} framesSent userDefinedStat2 result is equal"</log-match>
			<log-match>-e "checkEqualTxWithRX ${stream4.txport1} ${stream4.rxport2} framesSent userDefinedStat2 result is blocked"</log-match>
		</step>

		<step no="3.4">
			<desc>port1 sends pkt to dst-mac on port3</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-get="${job.user}-${job.sid}-1">
				<!-- ixia initialize -->
				-v ""
				-v "stream_maintance -onePort ${stream5.txport1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${stream5.rxport1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${stream5.rxport2} -streamId all -maintanceOp disable"
				<!-- stream5 -->
				-v "traffic_configure_eth2 -portListIn ${stream5.txport1},${stream5.rxport1},${stream5.rxport2}
				-mac_dst ${stream5.rxport1.mac}
				-mac_src ${stream5.txport1.mac}
				-eth2_protocol ${stream5.etype}
				-udf_offset ${stream5.UDFoffset}
				-patternOffset2 ${stream5.UDFoffset}"

				-v "start_trans_getstats -txPortList ${stream5.txport1} -rxPortList ${stream5.rxport1},${stream5.rxport2}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort ${stream5.txport1} -oneRxPort ${stream5.rxport1}"
				-v "check_equal_tx_with_rx -oneTxPort ${stream5.txport1} -oneRxPort ${stream5.rxport2}"
				-v ""
			</ssh>
			<log-file>eth2test3.log</log-file>
		</step>
		<step no="3.5">
			<desc>check FDB, mac of port1 port2 and port3 are existed</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
		</step> 
		<step no="3.6">
			<desc>
				analyse statistics on rxport, only port3 received pkt from port1
			</desc>
			<log-file>eth2test3.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream5.txport1} ${stream5.rxport1} framesSent userDefinedStat2 result is blocked"</log-match>
			<log-match>-e "checkEqualTxWithRX ${stream5.txport1} ${stream5.rxport2} framesSent userDefinedStat2 result is equal"</log-match>
		</step>

		<property name="stream6.txport1" value="${sw1.port2.ixia_port}" />
		<property name="stream6.rxport1" value="${sw1.port1.ixia_port}" />
		<property name="stream6.rxport2" value="${sw1.port3.ixia_port}" />
		<property name="stream6.txport1.mac" value="${sw1.port2.ixia_port.mac}" />
		<property name="stream6.rxport1.mac" value="${sw1.port1.ixia_port.mac}" />
		<property name="stream6.txport1.phytype" value="${sw1.port2.phytype}" />
		<property name="stream6.rxport1.phytype" value="${sw1.port1.phytype}" />
		<property name="stream6.rxport2.phytype" value="${sw1.port3.phytype}" />
		<property name="stream6.etype" value="0x0800" />
		<property name="stream6.UDFoffset" value="34" />

		<step no="4.1">
			<desc>port2 send pkt to dst-mac on port1</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-get="${job.user}-${job.sid}-1">
				<!-- ixia initialize -->
				-v ""
				-v "stream_maintance -onePort ${stream6.txport1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${stream6.rxport1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${stream6.rxport2} -streamId all -maintanceOp disable"
				<!-- stream6 -->
				-v "traffic_configure_eth2 -portListIn ${stream6.txport1},${stream6.rxport1},${stream6.rxport2}
				-mac_dst ${stream6.rxport1.mac}
				-mac_src ${stream6.txport1.mac}
				-eth2_protocol ${stream6.etype}
				-udf_offset ${stream6.UDFoffset}
				-patternOffset2 ${stream6.UDFoffset}"

				-v "start_trans_getstats -txPortList ${stream6.txport1} -rxPortList ${stream6.rxport1},${stream6.rxport2}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort ${stream6.txport1} -oneRxPort ${stream6.rxport1}"
				-v "check_equal_tx_with_rx -oneTxPort ${stream6.txport1} -oneRxPort ${stream6.rxport2}"
				-v ""
			</ssh>
			<log-file>eth2test4.log</log-file>
		</step>
		<step no="4.2">
			<desc>check FDB, mac of port1, port2 and port3 are existed</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
		</step> 
		<step no="4.3">
			<desc>
				analyse statistics on rxport, only port1 received pkt from port2 
			</desc>
			<log-file>eth2test4.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream6.txport1} ${stream6.rxport1} framesSent userDefinedStat2 result is equal"</log-match>
			<log-match>-e "checkEqualTxWithRX ${stream6.txport1} ${stream6.rxport2} framesSent userDefinedStat2 result is blocked"</log-match>
		</step>

		<property name="stream7.txport1" value="${sw1.port2.ixia_port}" />
		<property name="stream7.rxport1" value="${sw1.port1.ixia_port}" />
		<property name="stream7.rxport2" value="${sw1.port3.ixia_port}" />
		<property name="stream7.txport1.mac" value="${sw1.port2.ixia_port.mac}" />
		<property name="stream7.rxport2.mac" value="${sw1.port3.ixia_port.mac}" />
		<property name="stream7.txport1.phytype" value="${sw1.port2.phytype}" />
		<property name="stream7.rxport1.phytype" value="${sw1.port1.phytype}" />
		<property name="stream7.rxport2.phytype" value="${sw1.port3.phytype}" />
		<property name="stream7.etype" value="0x0800" />
		<property name="stream7.UDFoffset" value="34" />

		<step no="5.1">
			<desc>port2 sends pkt to dst-mac on port3</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-get="${job.user}-${job.sid}-1">
				<!-- ixia initialize -->
				-v ""
				-v "stream_maintance -onePort ${stream7.txport1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${stream7.rxport1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${stream7.rxport2} -streamId all -maintanceOp disable"
				<!-- stream6 -->
				-v "traffic_configure_eth2 -portListIn ${stream7.txport1},${stream7.rxport1},${stream7.rxport2}
				-mac_dst ${stream7.rxport2.mac}
				-mac_src ${stream7.txport1.mac}
				-eth2_protocol ${stream7.etype}
				-udf_offset ${stream7.UDFoffset}
				-patternOffset2 ${stream7.UDFoffset}"

				-v "start_trans_getstats -txPortList ${stream7.txport1} -rxPortList ${stream7.rxport1},${stream7.rxport2}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort ${stream7.txport1} -oneRxPort ${stream7.rxport1}"
				-v "check_equal_tx_with_rx -oneTxPort ${stream7.txport1} -oneRxPort ${stream7.rxport2}"
				-v ""
			</ssh>
			<log-file>eth2test5.log</log-file>
		</step>
		<step no="5.2">
			<desc>check FDB, mac of port1, port2 and port3 are existed</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
		</step> 
		<step no="5.3">
			<desc>
				analyse statistics on rxport, only port3 received pkt from port2 
			</desc>
			<log-file>eth2test5.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream7.txport1} ${stream7.rxport1} framesSent userDefinedStat2 result is blocked"</log-match>
			<log-match>-e "checkEqualTxWithRX ${stream7.txport1} ${stream7.rxport2} framesSent userDefinedStat2 result is equal"</log-match>
		</step>

		<property name="stream8.txport1" value="${sw1.port3.ixia_port}" />
		<property name="stream8.rxport1" value="${sw1.port1.ixia_port}" />
		<property name="stream8.rxport2" value="${sw1.port2.ixia_port}" />
		<property name="stream8.txport1.mac" value="${sw1.port3.ixia_port.mac}" />
		<property name="stream8.rxport1.mac" value="${sw1.port1.ixia_port.mac}" />
		<property name="stream8.txport1.phytype" value="${sw1.port3.phytype}" />
		<property name="stream8.rxport1.phytype" value="${sw1.port1.phytype}" />
		<property name="stream8.rxport2.phytype" value="${sw1.port2.phytype}" />
		<property name="stream8.etype" value="0x0800" />
		<property name="stream8.UDFoffset" value="34" />

		<step no="6.1">
			<desc>port3 sends pkt to dst-mac of port1</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-get="${job.user}-${job.sid}-1">
				<!-- ixia initialize -->
				-v ""
				-v "stream_maintance -onePort ${stream8.txport1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${stream8.rxport1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${stream8.rxport2} -streamId all -maintanceOp disable"
				<!-- stream6 -->
				-v "traffic_configure_eth2 -portListIn ${stream8.txport1},${stream8.rxport1},${stream8.rxport2}
				-mac_dst ${stream8.rxport1.mac}
				-mac_src ${stream8.txport1.mac}
				-eth2_protocol ${stream8.etype}
				-udf_offset ${stream8.UDFoffset}
				-patternOffset2 ${stream8.UDFoffset}"

				-v "start_trans_getstats -txPortList ${stream8.txport1} -rxPortList ${stream8.rxport1},${stream8.rxport2}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort ${stream8.txport1} -oneRxPort ${stream8.rxport1}"
				-v "check_equal_tx_with_rx -oneTxPort ${stream8.txport1} -oneRxPort ${stream8.rxport2}"
				-v ""
			</ssh>
			<log-file>eth2test6.log</log-file>
		</step>
		<step no="6.2">
			<desc>check FDB, mac of port1, port2 and port3 are existed</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
		</step> 
		<step no="6.3">
			<desc>
				analyse statistics on rxport, only port1 received pkt from port3 
			</desc>
			<log-file>eth2test6.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream8.txport1} ${stream8.rxport1} framesSent userDefinedStat2 result is equal"</log-match>
			<log-match>-e "checkEqualTxWithRX ${stream8.txport1} ${stream8.rxport2} framesSent userDefinedStat2 result is blocked"</log-match>
		</step>

		<property name="stream9.txport1" value="${sw1.port3.ixia_port}" />
		<property name="stream9.rxport1" value="${sw1.port1.ixia_port}" />
		<property name="stream9.rxport2" value="${sw1.port2.ixia_port}" />
		<property name="stream9.txport1.mac" value="${sw1.port3.ixia_port.mac}" />
		<property name="stream9.rxport2.mac" value="${sw1.port2.ixia_port.mac}" />
		<property name="stream9.txport1.phytype" value="${sw1.port3.phytype}" />
		<property name="stream9.rxport1.phytype" value="${sw1.port1.phytype}" />
		<property name="stream9.rxport2.phytype" value="${sw1.port2.phytype}" />
		<property name="stream9.etype" value="0x0800" />
		<property name="stream9.UDFoffset" value="34" />

		<step no="7.1">
			<desc>port3 sends pkt to port2</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-get="${job.user}-${job.sid}-1">
				<!-- ixia initialize -->
				-v ""
				-v "stream_maintance -onePort ${stream9.txport1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${stream9.rxport1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${stream9.rxport2} -streamId all -maintanceOp disable"
				<!-- stream6 -->
				-v "traffic_configure_eth2 -portListIn ${stream9.txport1},${stream9.rxport1},${stream9.rxport2}
				-mac_dst ${stream9.rxport2.mac}
				-mac_src ${stream9.txport1.mac}
				-eth2_protocol ${stream9.etype}
				-udf_offset ${stream9.UDFoffset}
				-patternOffset2 ${stream9.UDFoffset}"
				-v "start_trans_getstats -txPortList ${stream9.txport1} -rxPortList ${stream9.rxport1},${stream9.rxport2}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort ${stream9.txport1} -oneRxPort ${stream9.rxport1}"
				-v "check_equal_tx_with_rx -oneTxPort ${stream9.txport1} -oneRxPort ${stream9.rxport2}"
				-v ""
			</ssh>
			<log-file>eth2test7.log</log-file>
		</step>
		<step no="7.2">
			<desc>check FDB, mac of port1, port2 and port3 are existed</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
		</step> 
		<step no="7.3">
			<desc>
				analyse statistics on rxport, only port2 received pkt from port3 
			</desc>
			<log-file>eth2test7.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream9.txport1} ${stream9.rxport1} framesSent userDefinedStat2 result is blocked"</log-match>
			<log-match>-e "checkEqualTxWithRX ${stream9.txport1} ${stream9.rxport2} framesSent userDefinedStat2 result is equal"</log-match>
		</step>
	</stage>
	<post-process>
		<stage>
			<step no="1">
				<ssh timeout="180" host="${pub.tclclient1.ip}" prompt="%.*|root@.*#" session-close="${job.user}-${job.sid}-1">
					-v ""
				</ssh>
			</step>
			<!-- self defined steps, no need script now -->
		</stage>
		<include file="include/sw_default_post_process.xml" />
	</post-process>
</testcase>
