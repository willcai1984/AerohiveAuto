<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>check scan interval</brief>
	<priority>Middle</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Test Procedure:
  1.enable bgscan on wifi0
  2.set scan interval to certain value
  3.open bgscan debug:
    _kdebug wifi-driver wifi0.1 scan
    Debug console
  4.check if the scan interval is correct.


	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	<stage>
		<step no="1">
			<desc>set bgscan interval for wifi0</desc>
			<log-file>config_wifi0_bgscan.log</log-file>
			<console target="ap1">
			  -v "ssid test_bgscsan"
			  -v "interface wifi0 ssid test_bgscsan"
			  -v "radio profile ng phymode 11ng"
			  -v "radio profile ng scan access interval 1"
			  -v "interface wifi0 radio profile ng"
			</console>
		</step>
		
		<step no="2">
			<desc>
				2.open debug mode.
				"_kdebug wifi-driver wifi0.1 scan"
			</desc>
			<log-file>open_debug.log</log-file>
			<console target="ap1">
				-v "_kdebug wifi-driver wifi0.1 scan"
			</console>
		</step>
		
		<step no="2.1">
			<desc>
				2.clear log all.
				"clear log all"
			</desc>
			<log-file>clear_log.log</log-file>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>
		
		<step no="3" delay="200">
		  <if>"${img.prodtype}" != "AP230" &amp;&amp; "${img.prodtype}" != "AP1130"</if>
			<desc>
				3.wait about 4 minute, background scan function will work, the scanned channel information
				in the logging buffer is printed on screen.
				"show logging buffer | include self"
			</desc>
			<log-file>show_wifi0_bgscan.log</log-file>
			<console target="ap1">
				-v "show logging buffer | in self"
			</console>
		</step>
		
		<step no="4">
		   <if>"${img.prodtype}" != "AP230" &amp;&amp; "${img.prodtype}" != "AP1130"</if>
      <setvar name="log.max_interval">
            perl ${bin.dir}/get_log_interval.pl \
            --file "${log.dir}/show_wifi0_bgscan.log" \
            --pattern 'kernel: scan:Tx Self-CTS \(next foreign channel 1,' \
            --mode "max"
      </setvar>
    </step>
    
    <step no="5">
      <if>"${img.prodtype}" != "AP230" &amp;&amp; "${img.prodtype}" != "AP1130"</if>
      <script>
            if [ ${log.max_interval} -gt 30 ] &amp;&amp; [ ${log.max_interval} -lt 120 ];then
                  echo "Maximum interval is OK"
                  exit 0
            else
                  echo "Maximum interval is not OK"
                  exit 1
            fi
      </script>
    </step>
    
    <step no="6" delay="150">
		  <if>"${img.prodtype}" == "AP230" || "${img.prodtype}" == "AP1130"</if>
			<desc>
				3.wait about 4 minute, background scan function will work, the scanned channel information
				in the logging buffer is printed on screen.
				"show logging buffer | include self"
			</desc>
			<log-file>show_wifi0_bgscan.log</log-file>
			<console target="ap1">
				-v "show logging buffer | in \"wl0: wlc_scan: scan channels\" "
			</console>
		</step>
		
		<step no="7">
		  <if>"${img.prodtype}" == "AP230" || "${img.prodtype}" == "AP1130"</if>
      <setvar name="log.max_interval">
            perl ${bin.dir}/get_log_interval.pl \
            --file "${log.dir}/show_wifi0_bgscan.log" \
            --pattern '[wifi]: wl0: wlc_scan: scan channels  3' \
            --pattern '[wifi]: wl0: wlc_scan: scan channels  2' \
            --mode "earliest" --literal
      </setvar>
    </step>
    
    <step no="8">
      <if>"${img.prodtype}" == "AP230" || "${img.prodtype}" == "AP1130"</if>
      <script>
            if [ ${log.max_interval} -gt 4 ] &amp;&amp; [ ${log.max_interval} -lt 10 ];then
                  echo "Maximum interval is OK"
                  exit 0
            else
                  echo "Maximum interval is not OK"
                  exit 1
            fi
      </script>
    </step>
    
	</stage>
</testcase>
