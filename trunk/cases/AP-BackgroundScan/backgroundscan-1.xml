<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check the Background Scan function.</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		Initial configuration:
		"radio profile na"
		"radio profile na phymode 11na"
		"interface wifi1 radio profile na"
		"radio profile ng"
		"radio profile ng phymode 11ng"
		"radio profile na dfs"
		"interface wifi0 radio profile ng"
		"ssid test"

		Test Procedure:

		1.bind ssid to wifi0.
		"interface wifi0 ssid test"
		2.show wifi0's channel,save in channel list {ch}.
		"show interface wifi0 channel"
		3.set the background scan interval of wifi0 to 1 minute.
		"radio profile ng scan access interval 1"
		4.open debug mode.
		"_kdebug wifi-driver wifi0.1 scan"
		5.wait about 1 minute,background scan function will work,it will scan wifi0's
		channel.the channel value is same with channel list {ch}.the channel information is
		in the logging buffer printed on screen.
		"show logging buffer | include self"
		6.show wifi1's channel,save in channel list {ch}.
		"show interface wifi1 channel"
		7.set the background scan interval of wifi1 to 1 minute.
		"radio profile na scan access interval 1"
		8.open debug mode.
		"_kdebug wifi-driver wifi1.1
		scan"
		9.wait about 1 minute,background scan function will work,it will scan wifi1's
		channel.the channel value is same with channel list {ch}. the channel information is
		in the logging buffer printed on screen.
		"show logging buffer | include self"
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="1">
			<desc>
				Initial configuration:
				"radio profile ng"
				"radio profile ng phymode 11ng"
				"interface wifi0 radio profile ng"
				"ssid test"
			</desc>
			<log-file>ap_config_1.log</log-file>
			<telnet target="ap1">
				-v "ssid ${ssid.name}1"
				-v "interface wifi0 ssid ${ssid.name}1"
				-v "radio profile ng"
				-v "radio profile ng phymode 11ng"
				-v "interface wifi0 radio profile ng"
				-v "interface wifi0 radio channel 6"
				-v "save config"
			</telnet>
		</step>
		
		
		<step no="1.1">
		  <if>"${ap1.wifi1.existed}" =="true"</if>
			<desc>
				Initial configuration:
				"radio profile na"
				"radio profile na phymode 11na"
				"interface wifi1 radio profile na"
				"radio profile na dfs"
			</desc>
			<log-file>ap_config_1.log</log-file>
			<telnet target="ap1">
				-v "interface wifi1 mode access"
				-v "interface wifi1 ssid ${ssid.name}1"
				-v "radio profile na"
				-v "radio profile na phymode 11na"
				-v "radio profile na dfs"
				-v "interface wifi1 radio profile na"
				-v "interface wifi1 radio channel 149"
				-v "save config"
			</telnet>
		</step>
		
		
		<step no="2">
			<desc>
				2.show wifi0's channel,save in channel list {ch}.
				"show interface wifi0 channel"
				and Check whether all FCC 840 wifi0 channels are in channel list
			</desc>
			<log-file>show_in_wifi0_channel.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0 channel"
			</telnet>
			<log-match loop-values="2412,2417,2422,2427,2432,2437,2442,2447,2452,2457,2462">-e "${loop.v}"</log-match>
		</step>

		<step no="4">
			<desc>
				3.set the background scan interval of wifi0 to 1 minute.
				"radio profile ng scan access interval 1"
			</desc>
			<log-file>ap_config_2.log</log-file>
			<telnet target="ap1">
				-v "radio profile ng scan access interval 1"
			</telnet>

		</step>
		<step no="5">
			<desc>
				4.open debug mode.
				"_kdebug wifi-driver wifi0.1 scan"
			</desc>
			<log-file>add_debug_1_info.log</log-file>
			<telnet target="ap1">
				-v "_kdebug wifi-driver wifi0.1 scan"
			</telnet>
		</step>
		<step no="6" delay="180">
		  <if>"${img.prodtype}" != "AP230" &amp;&amp; "${img.prodtype}" != "AP1130"</if>
			<desc>
				5.wait about 4 minute,background scan function will work,it will scan wifi0's
				channel.the channel value is same with channel list {ch}.the channel information is
				in the logging buffer printed on screen.
				"show logging buffer | include self"
			</desc>
			<log-file>show_wifi0_bgscan.log</log-file>
			<telnet target="ap1">
				-v "show logging buffer | in self"
			</telnet>
		</step>
		
		<step no="6" delay="180">
		  <if>"${img.prodtype}" == "AP230" || "${img.prodtype}" == "AP1130"</if>
			<desc>
				9.wait about 4 minute,background scan function will work,it will scan wifi0's
				channel.the channel value is same with channel list {ch}. the channel information is
				in the logging buffer printed on screen.
				"show logging buffer | include self"
			</desc>
			<log-file>show_wifi0_bgscan.log</log-file>
			<console target="ap1">
				-v "show logging buffer | in \"wl0: wlc_scan: scan channels\""
			</console>
		</step>
		
		<step no="6.1">
			<desc>show log buffer	</desc>
			<log-file>show_wifi0_logbuffer.log</log-file>
			<telnet target="ap1">
				-v "show logging buffer"
			</telnet>
			<no-error-check />
		</step>
		
		<step no="6.2">
			<desc>show log buffer	</desc>
			<log-file>show_wifi0_logbuffer.log</log-file>
			<setvar name="jump-check">
					cat ${log.dir}/${log.file} |grep "Skip bg-scan due to high load" >/dev/null; 
			  	if [ $? -eq 0 ]; then echo true; else echo false; fi
			</setvar>
			<no-error-check />
		</step>					
		
		<step no="7">
		  <if>"${jump-check}" != "true"</if>
			<desc>match all channel	</desc>
			<log-file>find_wifi0_channel.log</log-file>
			<script>
				perl ${case.dir}/bin/check-scan-channel.pl ${log.dir}/show_wifi0_bgscan.log 840wifi0 > ${log.dir}/${log.file}
			</script>
		</step>
		<step no="8">
			<desc>
				Cancel the background scan interval of wifi0 to 1 minute.
				"no radio profile ng scan access interval 1"
			</desc>
			<log-file>ap_config_3.log</log-file>
			<telnet target="ap1">
				-v "no radio profile ng scan access interval"
				-v "no _kdebug all"
				-v "clear log all"
			</telnet>
		 </step> 
  </stage>
  <stage>
		<if>"${ap1.wifi1.existed}" =="true"</if>
		<step no="9">
			<desc> 
				6.show wifi1's channel,save in channel list {ch}.
				"show interface wifi1 channel"
			</desc>
			<log-file>show_in_wifi1_channel.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1 channel"
			</telnet>
			<log-match loop-values="5180,5200,5220,5240,5260,5280,5300,5320,5500,5520,5540,5560,5580,5660,5680,5700,5745,5765,5785,5805,5825">-e "${loop.v}"</log-match>

		</step>

		<step no="10">
			<desc>
				7.set the background scan interval of wifi1 to 1 minute.
				"radio profile na scan access interval 1"
			</desc>
			<log-file>ap_config_4.log</log-file>
			<telnet target="ap1">
				-v "radio profile na scan access interval 1"
			</telnet>

		</step>
		<step no="11">
			<desc>
				8.open debug mode.
				"_kdebug wifi-driver wifi1.1 scan"
			</desc>
			<log-file>add_debug_2.log</log-file>
			<telnet target="ap1">
				-v "_kdebug wifi-driver wifi1.1 scan"
			</telnet>

		</step>
		<step no="12" delay="240">
	    <if>"${img.prodtype}" != "AP230" &amp;&amp; "${img.prodtype}" != "AP1130"</if>
			<desc>
				9.wait about 4 minute,background scan function will work,it will scan wifi1's
				channel.the channel value is same with channel list {ch}. the channel information is
				in the logging buffer printed on screen.
				"show logging buffer | include self"
			</desc>
			<log-file>show_wifi1_bgscan.log</log-file>
			<telnet target="ap1">
				-v "show logging buffer | in self"
			</telnet>
		</step>
		
		<step no="12" delay="180">
			<if>"${img.prodtype}" == "AP230" || "${img.prodtype}" == "AP1130"</if>
			<desc>
				9.wait about 4 minute,background scan function will work,it will scan wifi1's
				channel.the channel value is same with channel list {ch}. the channel information is
				in the logging buffer printed on screen.
				"show logging buffer | include self"
			</desc>
			<log-file>show_wifi1_bgscan.log</log-file>
			<console target="ap1">
				-v "show logging buffer | in \"wl1: wlc_scan: scan channels\""
			</console>
		</step>
		
		<step no="12.1">
			<desc>show log buffer	</desc>
			<log-file>show_wifi1_logbuffer.log</log-file>
			<telnet target="ap1">
				-v "show logging buffer"
			</telnet>
			<no-error-check />
		</step>
		<step no="12.2">
			<desc>show log buffer	</desc>
			<log-file>show_wifi1_logbuffer.log</log-file>
			<setvar name="jump-check">
					cat ${log.dir}/${log.file} |grep "Skip bg-scan due to high load" >/dev/null; 
			  	if [ $? -eq 0 ]; then echo true; else echo false; fi
			</setvar>
			<no-error-check />
		</step>					
		
		<step no="13">
		  <if>"${jump-check}" != "true"</if>
			<desc>match all channel	</desc>
			<log-file>find_wifi1_channel.log</log-file>
			<script>
				perl ${case.dir}/bin/check-scan-channel.pl ${log.dir}/show_wifi1_bgscan.log dfswifi165 > ${log.dir}/${log.file}
			</script>
		</step>
	</stage>

</testcase>
