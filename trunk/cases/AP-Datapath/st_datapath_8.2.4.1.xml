<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>proxy arp process for L3 roaming (arp learning)</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-condition
		-construct this topology
		-ap1 and ap2 in different subnet
		Test procedure
		-laptop1 links to ap1 first, then roaming to ap2(change the power or shutdown the interface)
		-clear arp on all devices
		-laptop1 ping pc1 laptop3, should meet result 1.
		Expect result
		1:ping successfully, and ap2 learns arp entries of pc1 laptop3
	</description>
	<numofap>2</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>

	<property name="conn1.ssid" value="${ssid.name}-A" />
	<property name="conn2.ssid" value="${ssid.name}-B" />

	<stage>
		<step no="pre.0">
			<desc>
				-set wifi1's channel
			</desc>
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<telnet target="ap1">
				-v "interface wifi1 radio channel 153"
			</telnet>
		</step>

		<step no="pre.1">
			<desc>
				-set wifi1's channel
			</desc>
			<if>"${ap2.wifi1.existed}" == "true"</if>
			<telnet target="ap2">
				-v "interface wifi1 radio channel 153"
			</telnet>
		</step>

		<step no="0">
			<desc>
				-Config ap1's vlan and native-vlan
			</desc>
			<console target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="0.1" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step0.1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="0.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="0.3">
			<desc>
				-Config ap2's vlan and native-vlan
			</desc>
			<console target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan2}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="0.4">
			<desc>
				close dhcp client
			</desc>
			<console target="ap2">
				-v "no interface mgt0 dhcp client"
			</console>
		</step>

		<step no="0.5">
			<desc>
				open dhcp client
			</desc>
			<console target="ap2">
				-v "interface mgt0 dhcp client"
			</console>
		</step>

		<step no="0.6" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step0.6_show_interface_mgt0_info.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="0.7">
			<desc>Get ap2's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.6_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="1">
			<desc>config ap1</desc>
			<telnet target="ap1">
				-v "mobility-policy FWtest dnxp"
				-v "user-profile datapath vlan ${tb.vlan1} mobility-policy FWtest attribute 2"
				-v "security-object autoap"
				-v "security-object autoap default-user-profile-attr 2"
				-v "ssid ${ssid.name}-A"
				-v "ssid ${ssid.name}-A security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}-A"
				-v "ssid ${ssid.name}-B"
				-v "ssid ${ssid.name}-B security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}-B"
				-v "interface wifi0 radio channel 1"
				-v "no bonjour-gateway enable"
			</telnet>
		</step>

		<step no="1.1">
			<desc>config ap2</desc>
			<telnet target="ap2">
				-v "mobility-policy FWtest dnxp"
				-v "user-profile datapath vlan ${tb.vlan1} mobility-policy FWtest attribute 2"
				-v "security-object autoap"
				-v "security-object autoap default-user-profile-attr 2"
				-v "ssid ${ssid.name}-A"
				-v "ssid ${ssid.name}-A security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}-A"
				-v "interface wifi0 ssid ${ssid.name}-A shutdown"
				-v "interface wifi0 radio channel 1"
				-v "no bonjour-gateway enable"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				show interface wifi0 info
			</desc>
			<log-file>show_interface_wifi0_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				get wifi0's mac address (format:xx xx xx xx xx xx)
			</desc>
			<setvar name="ap1.wifi0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi0_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta2, ap1" />

		<step no="4" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Show roaming cache
			</desc>
			<log-file>step4_show_roaming_cache_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${ap1.wifi0.mac}"</log-match>
		</step>

		<step no="4.1" delay="10" type="loop-check" loop-max-times="8" loop-interval="5">
			<desc>
				show amrp dnxp neighbor
			</desc>
			<log-file>show_amrp_dnxp_neighbor_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match>-c -i "${ap2.mgt0.ip}"</log-match>
		</step>

		<step no="5">
			<desc>
				up wifi0 interface of ssidA on portal2
			</desc>
			<telnet target="ap2">
				-v "no interface wifi0 ssid ${ssid.name}-A shutdown"
			</telnet>
		</step>

		<step no="5.1">
			<desc>
				Shutdown wifi0 interface of ssidA on portal1
			</desc>
			<telnet target="ap1">
				-v "interface wifi0 ssid ${ssid.name}-A shutdown"
			</telnet>
		</step>

		<step no="6" delay="10" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show route on ap1
			</desc>
			<log-file>step86show_route_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-i "mgt0" -i "LTO"</log-match>
		</step>

		<step no="6.1" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show route on ap2
			</desc>
			<log-file>step6.1_show_route_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show route"
			</telnet>
			<log-match>-i "wifi0.1" -i "LTO"</log-match>
		</step>

		<step no="7" delay="10" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show station on ap2
			</desc>
			<log-file>step7_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="7.1" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show station on ap1
			</desc>
			<log-file>step7.1_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
			<log-match>-c -i "${sta2.tif.mac}" -i "${sta2.tif.ip}"</log-match>
		</step>

		<step no="8">
			<desc>show Master pc's info</desc>
			<log-file>master_info.log</log-file>
			<script>
				ifconfig ${mpc.tif.name} &gt; ${log.dir}/${log.file}
			</script>
		</step>

		<step no="8.1">
			<desc>get Master pc's mac</desc>
			<setvar name="mpc.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/master_info.log -i ${mpc.tif.name} -m -width 4
			</setvar>
		</step>

		<step no="8.2">
			<desc>
				-clear arp on windows sta
			</desc>
			<if>"${tb.os}" == "linux"</if>
			<log-file>step8.2_clear_sta1_arp.log</log-file>
			<ssh target="sta1">
				-v "ip neigh flush dev ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="8.3">
			<desc>
				-clear arp on windows sta
			</desc>
			<if>"${tb.os}" == "windows"</if>
			<log-file>step8.3_clear_sta1_arp.log</log-file>
			<staf target="sta1">
				-v "arp -d ${mpc.tif.ip}"
			</staf>
		</step>

		<step no="8.4">
			<desc>
				portal2 hasn't arp entry for mpc and sta1
			</desc>
			<log-file>step8.4_show_arp_cache.log</log-file>
			<telnet target="ap2">
				-v "clear arp-cache"
				-v "show arp-cache"
			</telnet>
			<log-match>-n -c -i "${mpc.tif.mac}" -i "${mpc.tif.ip}"</log-match>
			<log-match>-n -c -i "${sta2.tif.mac}" -i "${sta2.tif.ip}"</log-match>
		</step>

		<include prefix="9" file="subs/sta_ping.xml" args="sta1, ${mpc.tif.ip}, 5" />

		<step no="10" delay="10">
			<desc>
				portal2 has arp entry for mpc
			</desc>
			<log-file>step10_show_arp_cache.log</log-file>
			<telnet target="ap2">
				-v "show arp-cache"
			</telnet>
			<log-match>-c -i "${mpc.tif.mac}" -i "${mpc.tif.ip}"</log-match>
			<log-match>-n -c -i "${sta2.tif.mac}" -i "${sta2.tif.ip}"</log-match>
		</step>

		<step no="11">
			<desc>
				-clear arp on windows sta
			</desc>
			<if>"${tb.os}" == "linux"</if>
			<log-file>step11_clear_sta1_arp.log</log-file>
			<ssh target="sta1">
				-v "ip neigh flush dev ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="11.1">
			<desc>
				-clear arp on windows sta
			</desc>
			<if>"${tb.os}" == "windows"</if>
			<log-file>step11.1_clear_sta1_arp.log</log-file>
			<staf target="sta1">
				-v "arp -d ${sta2.tif.ip}"
			</staf>
		</step>

		<include prefix="13" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5" />

		<step no="14" delay="10">
			<desc>
				portal2 has arp entry for sta2
			</desc>
			<log-file>step14_show_arp_cache.log</log-file>
			<telnet target="ap2">
				-v "show arp-cache"
			</telnet>
			<log-match>-c -i "${sta2.tif.mac}" -i "${sta2.tif.ip}"</log-match>
		</step>
	</stage>
</testcase>