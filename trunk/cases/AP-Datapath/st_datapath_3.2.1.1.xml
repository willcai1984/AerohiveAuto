<testcase>
	<brief>Known unicast between ap interface and mp interface</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<description>
		Topology to use
		pc+++++Switch++++++Portal-----MP------laptop
		Objective
		Known unicast between ap interface and mp interface
		Pre-condition
		- laptop connect with mp, pass authentication
		Test procedure
		-laptop sends unicast like ping etc, to pc.
		-pc sends unicast like ping etc, to laptop
		Expect result
		Ping successfully!
	</description>
	<stage>
		<step no="1.1">
			<desc>Set up portal interface through sw menu</desc>
			<ssh target="ap1">
				-v "ssid ${ssid.name}"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 ssid ${ssid.name}"
				-v "interface wifi1 radio channel 44"
			</ssh>
		</step>

		<step no="1.2">
			<desc>Set up portal interface through sw menu</desc>
			<ssh target="ap2">
				-v "ssid ${ssid.name}"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 ssid ${ssid.name}"
				-v "interface wifi1 radio channel 44"
			</ssh>
		</step>

		<step no="1.3">
			<desc>Set up portal interface through sw menu</desc>
			<ssh target="ap1">
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
			</ssh>
		</step>

		<step no="1.4">
			<desc>Set up portal interface through sw menu</desc>
			<ssh target="ap2">
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
			</ssh>
		</step>

		<include prefix="1.5" file="subs/ap_amrp_neighbor_check.xml" obj-args="ap1,ap2" />

		<include prefix="1.6" file="subs/ap_amrp_neighbor_check.xml" obj-args="ap2,ap1" />

		<!-- <step no="1_0"> -->
		<!-- <desc>Set up portal interface through sw menu</desc> -->
		<!-- <if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if> -->
		<!-- <ssh target="ap1"> -->
		<!-- -v "interface eth0 mode backhaul" -->
		<!-- -v "interface eth0 mac-learning enable" -->
		<!-- -v "hive ${hive.name}" -->
		<!-- -v "interface mgt0 hive ${hive.name} " -->
		<!-- -v "no interface mgt0 dhcp-server enable" -->
		<!-- -v "no interface mgt0 ip" -->
		<!-- -v "interface mgt0 dhcp client" -->
		<!-- -v "interface wifi0 mode dual" -->
		<!-- </ssh> -->
		<!-- </step> -->

		<step no="2">
			<desc>Set up mp interface through sw menu</desc>
			<console target="ap2">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<!-- <step no="2_0" delay="30"> -->
		<!-- <desc>Set up mp interface through sw menu</desc> -->
		<!-- <if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if> -->
		<!-- <console target="ap2"> -->
		<!-- -v "hive ${hive.name}" -->
		<!-- -v "interface mgt0 hive ${hive.name} " -->
		<!-- -v "interface eth0 mode backhaul" -->
		<!-- -v "interface eth0 mac-learning enable" -->
		<!-- -v "interface eth0 shutdown" -->
		<!-- -v "no interface mgt0 dhcp-server enable" -->
		<!-- -v "no interface mgt0 ip" -->
		<!-- -v "interface mgt0 dhcp client" -->
		<!-- -v "interface wifi0 mode dual" -->
		<!-- -v "interface wifi0 radio channel 6" -->
		<!-- </console> -->
		<!-- </step> -->

		<!--<step no="3"> <if>("${ap1.eth1.existed}" == "true") &amp;&amp; ("${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true")</if> <desc>Set up MP interface through sw menu</desc> <console target="ap2"> -v "interface eth1 shutdown" -v "interface wifi1 radio channel 149" </console> </step> -->

		<step no="3">
			<desc>Set up MP interface through sw menu</desc>
			<if>"${ap.eth1.existed}" == "true"</if>
			<console target="ap2">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<!-- <step no="4"> -->
		<!-- <desc>show wifi1.1's mac of portal</desc> -->
		<!-- <if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if> -->
		<!-- <log-file>ap1.wifi.mac_portal.log</log-file> -->
		<!-- <ssh target="ap1"> -->
		<!-- -v "show interface wifi1.1" -->
		<!-- -v "" -->
		<!-- </ssh> -->
		<!-- </step> -->

		<!-- <step no="4_0"> -->
		<!-- <desc>show wifi1.1's mac of portal</desc> -->
		<!-- <if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if> -->
		<!-- <log-file>ap1.wifi.mac_portal.log</log-file> -->
		<!-- <ssh target="ap1"> -->
		<!-- -v "show interface wifi0.1" -->
		<!-- -v "" -->
		<!-- </ssh> -->
		<!-- </step> -->

		<!-- <step no="5"> -->
		<!-- <desc>get wifi1.1' mac of portal</desc> -->
		<!-- <if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if> -->
		<!-- <setvar name="ap1.wifi.mac"> -->
		<!-- perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap1.wifi.mac_portal.log -i wifi1.1 -o aero -m -width -->
		<!-- </setvar> -->
		<!-- </step> -->

		<!-- <step no="5_0"> -->
		<!-- <desc>get wifi1.1' mac of portal</desc> -->
		<!-- <if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if> -->
		<!-- <setvar name="ap1.wifi.mac"> -->
		<!-- perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap1.wifi.mac_portal.log -i wifi0.1 -o aero -m -width -->
		<!-- </setvar> -->
		<!-- </step> -->

		<!-- <step no="6" type="loop-check" loop-max-times="20" loop-interval="10"> -->
		<!-- <desc>check mesh network</desc> -->
		<!-- <log-file>amrp_nei_${loop_check.idx}.log</log-file> -->
		<!-- <console target="ap2"> -->
		<!-- -v "show amrp neighbor" -->
		<!-- </console> -->
		<!-- <log-match>-i "${ap1.wifi.mac}" -i "TWO-WAY"</log-match> -->
		<!-- </step> -->

		<!-- <step no="7" delay="30"> -->
		<!-- <desc>show mgt0's ip of mp</desc> -->
		<!-- <log-file>mgt0_info.log</log-file> -->
		<!-- <console target="ap2"> -->
		<!-- -v "show interface mgt0" -->
		<!-- </console> -->
		<!-- <log-match>-i "${tb.vlan1}" -i "192.168"</log-match> -->
		<!-- </step> -->

		<step no="4.1">
			<desc>No ssid on wifi1</desc>
			<console target="ap1">
				-v "interface wifi1 ssid ${ssid.name} shutdown"
			</console>
		</step>

		<step no="4.2">
			<desc>No ssid on wifi1</desc>
			<console target="ap2">
				-v "interface wifi1 ssid ${ssid.name} shutdown"
			</console>
		</step>


		<step no="8">
			<desc>Set SSID for mp </desc>
			<console target="ap2">
				-v "ssid ${ssid.name}"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
				-v "no interface ${ssid_bind_interface} ssid ${ssid.name} shutdown"
				-v "save config"
			</console>
		</step>

		<step no="9.1">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>

		<include prefix="9.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<!-- <step no="10"> -->
		<!-- <desc>show Master pc's ip</desc> -->
		<!-- <log-file>mpc.tif.ip.log</log-file> -->
		<!-- <script> -->
		<!-- ifconfig ${mpc.tif.name} > ${log.dir}/${log.file} -->
		<!-- </script> -->
		<!-- <no-error-check /> -->
		<!-- </step> -->

		<!-- <step no="11"> -->
		<!-- <desc>get Master pc's ip</desc> -->
		<!-- <setvar name="mpc.tif.mac"> -->
		<!-- perl ${bin.dir}/getrmtip.pl -f ${log.dir}/mpc.tif.ip.log -i ${mpc.tif.name} -nomask -m -w -->
		<!-- </setvar> -->
		<!-- <no-error-check /> -->
		<!-- </step> -->

		<step no="12">
			<desc>add a _ff and open fe debug on MP </desc>
			<console target="ap2">
				-v "_ff id 1 src-mac ${sta1.tif.mac} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
			</console>
		</step>

		<step no="13">
			<desc>add a _ff and open fe debug on MP </desc>
			<ssh target="ap1">
				-v "_ff id 1 src-mac ${sta1.tif.mac} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
			</ssh>
		</step>

		<include prefix="14" file="subs/sta_ping.xml" args="sta1, ${mpc.tif.ip}, 4" />

		<step no="15">
			<desc>show log buffer at Portal</desc>
			<!-- <if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if> -->
			<log-file>sta_ping_pc_mp.log</log-file>
			<console target="ap2" timeout="1000">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-i "(i) wifi0.1 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi1.1 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi0.1 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-i "(i) wifi1.1 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<!-- <log-match>-c -i "wifi0.1 Tx ${mpc.tif.mac} -&gt; ${sta1.tif.mac}"</log-match> -->
		</step>

		<!-- <step no="15_0"> -->
		<!-- <desc>show log buffer at Portal</desc> -->
		<!-- <if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if> -->
		<!-- <log-file>sta_ping_pc_mp.log</log-file> -->
		<!-- <console target="ap2" timeout="1000"> -->
		<!-- -v "show logging buffered" -->
		<!-- </console> -->
		<!-- <no-error-check /> -->
		<!-- <log-match>-i "(i) wifi0.2 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-req"</log-match> -->
		<!-- <log-match>-i "(o) wifi0.1 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-req"</log-match> -->
		<!-- <log-match>-i "(o) wifi0.2 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-reply"</log-match> -->
		<!-- <log-match>-i "(i) wifi0.1 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-reply"</log-match> -->
		<!-- <log-match>-c -i "wifi0.2 Tx ${mpc.tif.mac} -&gt; ${sta1.tif.mac}"</log-match> -->
		<!-- </step> -->

		<step no="16">
			<desc>show log buffer at Portal</desc>
			<!-- <if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if> -->
			<log-file>sta_ping_pc_potral.log</log-file>
			<ssh target="ap1" timeout="1000">
				-v "show logging buffered"
			</ssh>
			<log-match>-i "(i) wifi1.1 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) eth0 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(i) eth0 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-i "(o) wifi1.1 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<no-error-check />
		</step>

		<!-- <step no="16_0"> -->
		<!-- <desc>show log buffer at Portal</desc> -->
		<!-- <if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if> -->
		<!-- <log-file>sta_ping_pc_potral.log</log-file> -->
		<!-- <ssh target="ap1" timeout="1000"> -->
		<!-- -v "show logging buffered" -->
		<!-- </ssh> -->
		<!-- <log-match>-i "(i) wifi0.1 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-req"</log-match> -->
		<!-- <log-match>-i "(o) eth0 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-req"</log-match> -->
		<!-- <log-match>-i "(i) eth0 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-reply"</log-match> -->
		<!-- <log-match>-i "(o) wifi0.1 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-reply"</log-match> -->
		<!-- <no-error-check /> -->
		<!-- </step> -->

		<step no="17">
			<desc>add a _ff and open fe debug on MP </desc>
			<console target="ap2">
				-v "clear log all"
			</console>
		</step>
		<step no="18">
			<desc>add a _ff and open fe debug on MP </desc>
			<ssh target="ap1">
				-v "clear log all"
			</ssh>
		</step>

		<step no="19">
			<desc>Ping to DUT to check if Portal is reacheable </desc>
			<script>
				perl ${bin.dir}/ping.pl -l ${log.dir} -d ${sta1.tif.ip}
			</script>
		</step>

		<step no="20">
			<desc>show log buffer at Portal</desc>
			<!-- <if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if> -->
			<log-file>pc_ping_sta_mp.log</log-file>
			<console target="ap2" timeout="1000">
				-v "show logging buffered";exit 0
			</console>
			<no-error-check />
			<log-match>-i "(o) wifi0.1 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(i) wifi1.1 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(i) wifi0.1 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-i "(o) wifi1.1 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-reply"</log-match>
		</step>

		<!-- <step no="20_0"> -->
		<!-- <desc>show log buffer at Portal</desc> -->
		<!-- <if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if> -->
		<!-- <log-file>pc_ping_sta_mp.log</log-file> -->
		<!-- <console target="ap2" timeout="1000"> -->
		<!-- -v "show logging buffered";exit 0 -->
		<!-- </console> -->
		<!-- <no-error-check /> -->
		<!-- <log-match>-i "(o) wifi0.2 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-req"</log-match> -->
		<!-- <log-match>-i "(i) wifi0.1 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-req"</log-match> -->
		<!-- <log-match>-i "(i) wifi0.2 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-reply"</log-match> -->
		<!-- <log-match>-i "(o) wifi0.1 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-reply"</log-match> -->
		<!-- </step> -->

		<step no="21">
			<desc>show log buffer at Portal</desc>
			<!-- <if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if> -->
			<log-file>pc_ping_sta_portal.log</log-file>
			<ssh target="ap1" timeout="1000">
				-v "show logging buffered";exit 0
			</ssh>
			<no-error-check />
			<log-match>-i "(i) eth0 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(o) wifi1.1 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(i) wifi1.1 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-i "(o) eth0 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-reply"</log-match>
		</step>

		<!-- <step no="21_0"> -->
		<!-- <desc>show log buffer at Portal</desc> -->
		<!-- <if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if> -->
		<!-- <log-file>pc_ping_sta_portal.log</log-file> -->
		<!-- <ssh target="ap1" timeout="1000"> -->
		<!-- -v "show logging buffered";exit 0 -->
		<!-- </ssh> -->
		<!-- <no-error-check /> -->
		<!-- <log-match>-i "(i) eth0 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-req"</log-match> -->
		<!-- <log-match>-i "(o) wifi0.1 ${mpc.tif.ip}->${sta1.tif.ip}" -i "icmp-echo-req"</log-match> -->
		<!-- <log-match>-i "(i) wifi0.1 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-reply"</log-match> -->
		<!-- <log-match>-i "(o) eth0 ${sta1.tif.ip}->${mpc.tif.ip}" -i "icmp-echo-reply"</log-match> -->
		<!-- </step> -->

	</stage>
</testcase>
