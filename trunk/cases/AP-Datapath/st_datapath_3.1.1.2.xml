<testcase>
	<brief>Known unicast among ap interface</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>
	<description>
		Topology to use
		Switch
		|
		Laptop1---------Portal --------laptop2
		Objective
		Known unicast among ap interface
		Pre-condition
		-laptop1 and laptop2 connect with portal, pass authentication
		-all laptops are in same vlan
		Test procedure
		-laptop1 sends known unicast like ping etc, to laptop2.
		-laptop2 sends known unicast like ping etc, to laptop1
		Expect result
		Ping successfully!
		3.1.2. Unknown unicast datapath
	</description>
	<stage>
		<!-- <step no="1"> -->
		<!-- <desc>show interface of mgt0 on AP1</desc> -->
		<!-- <if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if> -->
		<!-- <log-file>show_int_mgt0.log</log-file> -->
		<!-- <ssh target="ap1"> -->
		<!-- -v "security-object autoap" -->
		<!-- -v "ssid ${ssid.name}0" -->
		<!-- -v "ssid ${ssid.name}0 security-object autoap" -->
		<!-- -v "interface wifi0 ssid ${ssid.name}0" -->
		<!-- -v "hive ${hive.name}" -->
		<!-- -v "interface mgt0 hive ${hive.name} " -->
		<!-- -v "save config" -->
		<!-- </ssh> -->
		<!-- </step> -->

		<!-- <step no="1_0"> -->
		<!-- <desc>show interface of mgt0 on AP1</desc> -->
		<!-- <if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if> -->
		<!-- <log-file>show_int_mgt0.log</log-file> -->
		<!-- <ssh target="ap1"> -->
		<!-- -v "security-object autoap" -->
		<!-- -v "interface eth0 mode backhaul" -->
		<!-- -v "interface eth0 mac-learning enable" -->
		<!-- -v "no interface mgt0 dhcp-server enable" -->
		<!-- -v "no interface mgt0 ip" -->
		<!-- -v "interface mgt0 dhcp client" -->
		<!-- -v "ssid ${ssid.name}0" -->
		<!-- -v "ssid ${ssid.name}0 security-object autoap" -->
		<!-- -v "interface wifi0 ssid ${ssid.name}0" -->
		<!-- -v "hive ${hive.name}" -->
		<!-- -v "interface mgt0 hive ${hive.name} " -->
		<!-- -v "save config" -->
		<!-- </ssh> -->
		<!-- </step> -->

		<step no="1">
			<desc>Set SSID for DUT1 via ssh to</desc>
			<ssh target="ap1">
				-v "ssid ${ssid.name}"
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} security protocol-suite open"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
				-v "user-profile fw qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "save config"
			</ssh>
		</step>

		<step no="2.2">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>
		<include prefix="2.3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<include prefix="2.4" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta2, ap1" />


		<include prefix="4" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 8" />

		<include prefix="5" file="subs/sta_ping.xml" args="sta2, ${sta1.tif.ip}, 8" />


	</stage>
</testcase>
