<testcase>
	<brief>Eth0 and eth1 both are backhaul mode and not bound to red0 yet,1:datapath of unicast and broadcast is right, 2:redundant link </brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>windows</tbtype>
	<description>
		Objective
		Eth0 and eth1 both are backhaul mode and not bound to red0 yet,1:datapath of unicast and broadcast is right, 2:redundant link
		Pre-condition
		-construct this topology
		Test procedure
		-connect eth0 and eth1 to one same switch
		-connect laptop to ap,check the route table result 4
		-laptop sends unicast pkt like ICMP request to ap
		Set a fe filter, “kdebug fe basic” to check, result 1
		-laptop sends a broadcast pkt like ARP request to ap (laptop ping a un-exists host in its vlan)
		Set a fe filter, “kdebug fe basic” to check, result 1
		-pc sends known unicast pkt to ap through eth0 and eth1(pc ping laptop continuously and clear mac table on sw)
		Set a fe filter, “kdebug fe basic” to check, result 2
		-pc sends a broadcast pkt to ap (pc ping a un-exists host in its vlan)
		Set a fe filter, “kdebug fe basic” to check, result 2
		-pc send a unknown unicast pkt to ap result 2
		(example: add a static arp entry on pc like
		1.1.1.100-11-22-33-44-55, then pc ping 1.1.1.1)
		-plug out eth0 cable result 3
		-plug
		in eth0 cable
		-shutdown eth0 interface result 3
		Expect result
		Result 1: this traffic should only be sent out to eth0
		Result 2: Portal will receive this traffic both on eth0 and eth1,but
		portal should drop the traffic that received on eth1
		Result 3: the default route will become to eth1.
		eth1 will take over the traffic and the traffic should be
		recover quickly
		Result 4: the default route is point to eth0 interface
	</description>

	<stage>
		<property name="unknown.host1" value="192.168.${tb.vlan1}.251" />
		<property name="unknown.host2" value="192.168.${tb.vlan1}.252" />
		<property name="unknown.host2.mac" value="AA:AA:AA:AA:AA:AA" />
		<property name="ap1.wifi1.existed" value="true" />
		<property name="ap1.eth1.existed" value="true" />
		<if>"${tb.l2sw.type}" == "dell5548" &amp;&amp; "${tb.bridge_support}" != "true" &amp;&amp; "${ap1.eth1.existed}" == "true"</if>

		<step no="1">
			<desc>Set up Portal1 interface through sw menu</desc>
			<console target="ap1">
				-v "user-profile datapath qos-policy def-user-qos vlan-id 1 attribute 2"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa-auto-psk ascii aerohive"
				-v "security-object autoap default-user-profile-attr 2"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "no forwarding-engine proxy-arp enable"
				-v "interface eth1 manage telnet"
				-v "save config"
			</console>
		</step>

		<step no="1.1">
			<desc>Shutdown Wifi1 AP1</desc>
			<if>"${ap1.wifi1.existed}"=="true"</if>
			<log-file>shutdown_wifi1_ap1.log</log-file>
			<telnet target="ap1">
				-v "interface wifi1 hive hive0 shutdown"
				-v "save config"
			</telnet>
		</step>

		<step no="2" delay="10">
			<desc>show interface of Portal1</desc>
			<log-file>show_interface.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
		</step>

		<step no="3.1">
			<desc>get the eth0 mac address of portal1</desc>
			<setvar name="ap1.eth0.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_interface.log -k eth0 -p 2
			</setvar>
		</step>

		<step no="3.2">
			<desc>get the eth1 mac1 address of portal1</desc>
			<setvar name="ap1.eth1.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_interface.log -k eth1 -p 2
			</setvar>
		</step>

		<step no="6">
			<desc>show interface of Portal1</desc>
			<log-file>show_route.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-i "0000:0000:0000\ \ ${ap1.eth0.w4mac}"</log-match>
		</step>

		<step no="7">
			<desc>Generate wifi_aerohive_test profile</desc>
			<script>
				perl ${bin.dir}/winprof_gen.pl -f ${case.dir}/conf/wpa2-aes-psk.xml -o wifi_aerohive_test_1.xml -s "${ssid.name}" -l ${log.dir}
			</script>
		</step>

		<step no="8">
			<desc>Copy to target Windows host machine a wifi windows profile file containing WEP aerohive password  </desc>
			<script>
				staf local fs copy file ${log.dir}/wifi_aerohive_test_1.xml tofile "c:\\staf\\wifi_aerohive_test.xml" tomachine ${sta1.mif.ip}
			</script>
		</step>

		<step no="9">
			<desc>Bring down the client Wireless</desc>
			<script>
				perl ${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "netsh wlan disconnect interface=\"Wireless Network Connection\"" -l ${log.dir} -o client_wireless_off_${sta1.mif.ip}.log
			</script>
		</step>

		<step no="10">
			<desc>Delete current Wireless profile</desc>
			<script>
				perl ${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "netsh wlan delete profile ${ssid.name} " -l ${log.dir}
			</script>
		</step>

		<step no="11">
			<desc>Add new profile</desc>
			<script>
				perl ${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "netsh wlan add profile filename="c:\\staf\\wifi_aerohive_test.xml" interface=\"Wireless Network Connection\"" -l ${log.dir} -o client_wireless_off_${sta1.mif.ip}.log
			</script>
		</step>

		<step no="12">
			<desc>Bring up the client Wireless</desc>
			<script>
				perl ${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "netsh wlan connect ssid=${ssid.name} name=${ssid.name} interface=\"Wireless Network Connection\"" -v " netsh wlan show profiles ${ssid.name}" -v "netsh wlan show interfaces" -l ${log.dir} -o client_wireless_on_${sta1.mif.ip}.log
			</script>
		</step>

		<step no="13" delay="15">
			<desc>Dump all interfaces data from remote host</desc>
			<script>
				perl ${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "ipconfig /all" -l ${log.dir} -o ipconfig_${sta1.mif.ip}.log
			</script>
		</step>

		<step no="14">
			<desc>Get laptop's IP</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ipconfig_${sta1.mif.ip}.log -i Wireless -o win -nomask
			</setvar>
		</step>

		<step no="15">
			<desc>Get laptop's MAC</desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ipconfig_${sta1.mif.ip}.log -i Wireless -o win -m
			</setvar>
		</step>

		<step no="16.1">
			<desc>Get master-PC's route table</desc>
			<log-file>route_${mpc.mif.ip}.log</log-file>
			<script>
				route >> ${log.dir}/${log.file}
			</script>
		</step>

		<step no="16.2">
			<desc>Get master-PC's testbed interface</desc>
			<setvar name="mpc.tif.name">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/route_${mpc.mif.ip}.log -k ${tb.vlan1.gw} -p 8
			</setvar>
		</step>

		<step no="16.3">
			<desc>get the tif mac-addreass of the master-PC</desc>
			<log-file>ipconfig_${mpc.tif.ip}.log</log-file>
			<script>
				ifconfig ${mpc.tif.name}>> ${log.dir}/${log.file}
			</script>
		</step>

		<step no="17">
			<desc>Get master's tif mac-address</desc>
			<setvar name="mpc.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ipconfig_${mpc.tif.ip}.log -i ${mpc.tif.name} -o linux -m
			</setvar>
		</step>

		<step no="19">
			<desc>add a _ff and open fe debug on Portal1 </desc>
			<telnet target="ap1">
				-v "_ff id 1 src-ip ${sta1.tif.ip} dst-ip ${mpc.tif.ip} bidirectional"
				-v "_ff id 2 etype 0806 bidirectional"
				-v "_kdebug fe basic"
				-v "clear log all"
			</telnet>
		</step>

		<step no="20" delay="5">
			<desc> laptop ping mpc</desc>
			<script>
				perl ${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "ping ${mpc.tif.ip} -n 2" -l ${log.dir}
			</script>
		</step>

		<step no="21.0">
			<desc>get 4 width station mac</desc>
			<setvar name="sta1.tif.w4mac">
				echo ${sta1.tif.mac} | sed 's/://g; s/../&amp;:/g' | awk -F : '{print $1$2":"$3$4":"$5$6}'
			</setvar>
		</step>

		<step no="21.0.1">
			<desc>get 4 width mpc mac</desc>
			<setvar name="mpc.tif.w4mac">
				echo ${mpc.tif.mac} | sed 's/://g; s/../&amp;:/g' | awk -F : '{print $1$2":"$3$4":"$5$6}'
			</setvar>
		</step>

		<step no="21.1">
			<desc>show log buffer at Portal1</desc>
			<log-file>buffer_portal1.log</log-file>
			<telnet target="ap1" timeout="200">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-i "(i) wifi0" -i "${sta1.tif.w4mac}->ffff:ffff:ffff arp" -i "${sta1.tif.ip}" -i "${mpc.tif.ip}" -c</log-match>
			<log-match>-i "(o) eth0 ${sta1.tif.w4mac}->ffff:ffff:ffff arp" -i "${sta1.tif.ip}" -i "${mpc.tif.ip}" -c</log-match>
			<log-match>-i "(o) eth1 ${sta1.tif.w4mac}->ffff:ffff:ffff arp" -i "${sta1.tif.ip}" -i "${mpc.tif.ip}" -c -n</log-match>
			<log-match>-i "(i) eth0 ${mpc.tif.w4mac}->${sta1.tif.w4mac} arp" -i "${sta1.tif.ip}" -i "${mpc.tif.ip}" -c</log-match>
			<log-match>-i "(o) eth0" -i "${sta1.tif.ip}" -i "${mpc.tif.ip}" -i "icmp-echo-req" -c</log-match>
		</step>

		<step no="22">
			<desc>clear log buffer </desc>
			<telnet target="ap1">
				-v "no _ff id 1"
				-v "no _ff id 2"
				-v "_ff id 1 src-ip ${sta1.tif.ip} dst-ip ${unknown.host1} bidirectional"
				-v "_ff id 2 etype 0806 bidirectional"
				-v "clear log all"
			</telnet>
		</step>

		<step no="23" delay="5">
			<desc>laptop ping unknown host</desc>
			<script>
				perl ${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "ping ${unknown.host1} -n 1" -l ${log.dir}
			</script>
		</step>

		<step no="24">
			<desc>show log buffer at Portal1,this traffic should only be sent out to eth0</desc>
			<log-file>buffer_portal2.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-i "(o) eth0 ${sta1.tif.w4mac}->ffff:ffff:ffff arp" -i "${sta1.tif.ip}" -i "${unknown.host1}" -c</log-match>
			<log-match>-i "(o) eth1 ${sta1.tif.w4mac}->ffff:ffff:ffff arp" -i "${sta1.tif.ip}" -i "${unknown.host1}" -c -n</log-match>
		</step>

		<step no="25.1">
			<desc>add a _ff and open fe debug on Portal1 </desc>
			<telnet target="ap1">
				-v "no _ff id 1 "
				-v "no _ff id 2 "
				-v "_ff id 1 src-ip ${mpc.tif.ip} dst-ip ${sta1.tif.ip} bidirectional"
				-v "_ff id 2 etype 0806 bidirectional"
				-v "clear log all"
			</telnet>
		</step>

		<step no="25.2" delay="5">
			<desc>clear switch mac address table</desc>
			<telnet host="${tb.l2sw}" prompt=".*[>|#]">
				-v "enable"
				-v "clear mac address-table dynamic interface gigabitethernet 1/0/${ap1.eth0.swport}"
				-v "clear mac address-table dynamic interface gigabitethernet 1/0/${ap1.eth1.swport}"
			</telnet>
		</step>

		<step no="26">
			<desc>mpc sends known unicast pkt to laptop through eth0 and eth1</desc>
			<log-file>mpc_ping_known.log</log-file>
			<script>
				ping ${sta1.tif.ip} -c 1 >> ${log.dir}/${log.file}; exit 0
			</script>
		</step>

		<step no="27.1">
			<desc>show log buffer that Portal receive on both eth0 and eth1, but drop on eth1</desc>
			<log-file>buffer_portal3.log</log-file>
			<telnet target="ap1" timeout="100">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-i "(i) eth0 ${mpc.tif.w4mac}->${sta1.tif.w4mac} arp" -i "${mpc.tif.ip}" -i "${sta1.tif.ip}" -c</log-match>
			<log-match>-i "(i) eth1 ${mpc.tif.w4mac}->${sta1.tif.w4mac} arp" -i "${mpc.tif.ip}" -i "${sta1.tif.ip}" -c</log-match>
			<log-match>-i "(!) eth1 ${mpc.tif.w4mac}->${sta1.tif.w4mac} arp" -i "${mpc.tif.ip}" -i "${sta1.tif.ip}" -c</log-match>
		</step>

		<step no="28.1">
			<desc>add a _ff and open fe debug on Portal1 </desc>
			<telnet target="ap1">
				-v "no _ff id 1 "
				-v "no _ff id 2 "
				-v "_ff id 1 src-ip ${mpc.tif.ip} dst-ip ${unknown.host1} bidirectional"
				-v "_ff id 2 etype 0806 bidirectional"
				-v "clear log all"
			</telnet>
		</step>

		<step no="28.2">
			<desc>mpc ping unknown host</desc>
			<log-file>mpc_ping_unknown.log</log-file>
			<script>
				ping ${unknown.host1} -c 2 >> ${log.dir}/${log.file}; exit 0
			</script>
			<no-error-check />
		</step>

		<step no="28.3">
			<desc>show log buffer that Portal receive on both eth0 and eth1, but drop on eth1</desc>
			<log-file>buffer_portal4.log</log-file>
			<telnet target="ap1" timeout="100">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-i "(i) eth0 ${mpc.tif.w4mac}->ffff:ffff:ffff arp" -i "${mpc.tif.ip}" -i "${unknown.host1}" -c</log-match>
			<log-match>-i "(i) eth1 ${mpc.tif.w4mac}->ffff:ffff:ffff arp" -i "${mpc.tif.ip}" -i "${unknown.host1}" -c</log-match>
			<log-match>-i "(!) eth1 ${mpc.tif.w4mac}->ffff:ffff:ffff arp" -i "${mpc.tif.ip}" -i "${unknown.host1}" -c</log-match>
		</step>

		<step no="29.1">
			<desc>set arp on mpc</desc>
			<log-file>set_mpc_arp.log</log-file>
			<script>
				arp -i ${mpc.tif.name} -s ${unknown.host2} ${unknown.host2.mac} >> ${log.dir}/${log.file}
			</script>
		</step>

		<step no="29.2">
			<desc>add a _ff and open fe debug on Portal1 </desc>
			<telnet target="ap1">
				-v "no _ff id 1"
				-v "no _ff id 2"
				-v "_ff id 1 src-ip ${mpc.tif.ip} dst-ip ${unknown.host2} bidirectional"
				-v "_ff id 2 etype 0806 bidirectional"
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="29.3">
			<desc>master ping unknown unicast </desc>
			<log-file>mpc_ping_unknown1.log</log-file>
			<script>
				ping ${unknown.host2} -c 2 >> ${log.dir}/${log.file}; exit 0
			</script>
		</step>

		<step no="29.4">
			<desc>show log buffer that Portal receive on both eth0 and eth1, but drop on eth1</desc>
			<log-file>buffer_portal5.log</log-file>
			<telnet target="ap1" timeout="100">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-i "(i) eth0" -i "${mpc.tif.ip}" -i "${unknown.host2}" -i "icmp-echo-req" -c</log-match>
			<log-match>-i "(i) eth1" -i "${mpc.tif.ip}" -i "${unknown.host2}" -i "icmp-echo-req" -c</log-match>
			<log-match>-i "(!) eth1" -i "${mpc.tif.ip}" -i "${unknown.host2}" -i "icmp-echo-req" -c</log-match>
		</step>

		<step no="30.0">
			<desc>shutdown switch port of AP eth0</desc>
			<telnet host="${tb.l2sw}" prompt=".*[>|#]">
				-v "enable"
				-v "config"
				-v "interface gigabitethernet 1/0/"${ap1.eth0.swport}""
				-v "shutdown"
				-v "end"
			</telnet>
		</step>

		<step no="30.1">
			<desc>set filter to check route </desc>
			<console target="ap1" delay="5">
				-v "no _ff id 1"
				-v "no _ff id 2"
				-v "_ff id 1 src-ip ${sta1.tif.ip} dst-ip ${mpc.tif.ip} bidirectional"
				-v "_ff id 2 etype 0806 bidirectional"
				-v "clear log buffered"
			</console>
		</step>

		<step no="30.2" delay="5">
			<desc>laptop ping mpc</desc>
			<script>
				perl ${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "ping ${mpc.tif.ip} -n 2" -l ${log.dir}
			</script>
		</step>

		<step no="30.3">
			<desc>show log buffer at Portal1</desc>
			<log-file>buffer_portal6.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-i "(o) eth1" -i "${mpc.tif.ip}" -i "${sta1.tif.ip}" -i "icmp-echo-req" -c</log-match>
			<log-match>-i "(o) eth0" -i "${mpc.tif.ip}" -i "${sta1.tif.ip}" -i "icmp-echo-req" -c -n</log-match>
		</step>

		<step no="30.4">
			<desc>check route of Portal1</desc>
			<log-file>check_portal_route1.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-i "0000:0000:0000\ \ ${ap1.eth0.w4mac}" -i "eth1"</log-match>
		</step>

		<step no="31.0">
			<desc>startup switch port of AP eth0</desc>
			<telnet host="${tb.l2sw}" prompt=".*[>|#]">
				-v "enable"
				-v "config"
				-v "interface gigabitethernet 1/0/"${ap1.eth0.swport}""
				-v "no shutdown"
				-v "end"
			</telnet>
		</step>

		<step no="31.1">
			<desc>set filter to check route </desc>
			<console target="ap1" delay="5">
				-v "no _ff id 1"
				-v "no _ff id 2"
				-v "_ff id 1 src-ip ${sta1.tif.ip} dst-ip ${mpc.tif.ip} bidirectional"
				-v "_ff id 2 etype 0806 bidirectional"
				-v "clear log buffered"
			</console>
		</step>

		<step no="31.2" delay="5">
			<desc>laptop ping mpc</desc>
			<script>
				perl ${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "ping ${mpc.tif.ip} -n 2" -l ${log.dir}
			</script>
		</step>

		<step no="31.3">
			<desc>show log buffer at Portal1</desc>
			<log-file>buffer_portal7.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-i "(o) eth0" -i "${mpc.tif.ip}" -i "${sta1.tif.ip}" -i "icmp-echo-req" -c</log-match>
			<log-match>-i "(o) eth1" -i "${mpc.tif.ip}" -i "${sta1.tif.ip}" -i "icmp-echo-req" -c -n</log-match>
		</step>

		<step no="31.4">
			<desc>check route of Portal2</desc>
			<log-file>check_portal_route2.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-i "0000:0000:0000\ \ ${ap1.eth0.w4mac}" -i "eth0"</log-match>
		</step>

		<step no="32.0">
			<desc>shutdown ap eth0 </desc>
			<log-file>shutdown_ap_eth0.log</log-file>
			<console target="ap1">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<step no="32.1" delay="5">
			<desc>set filter for laptop ping mpc </desc>
			<console target="ap1">
				-v "no _ff id 1"
				-v "no _ff id 2"
				-v "_ff id 1 src-ip ${sta1.tif.ip} dst-ip ${mpc.tif.ip} bidirectional"
				-v "_ff id 2 etype 0806 bidirectional"
				-v "clear log buffered"
			</console>
		</step>

		<step no="32.2" delay="5">
			<desc>laptop ping mpc</desc>
			<script>
				perl ${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "ping ${mpc.tif.ip} -n 2" -l ${log.dir}
			</script>
		</step>

		<step no="32.3">
			<desc>show log buffer at Portal1</desc>
			<log-file>buffer_portal8.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-i "(o) eth1" -i "${mpc.tif.ip}" -i "${sta1.tif.ip}" -i "icmp-echo-req" -c</log-match>
			<log-match>-i "(o) eth0" -i "${mpc.tif.ip}" -i "${sta1.tif.ip}" -i "icmp-echo-req" -c -n</log-match>
		</step>

		<step no="32.4">
			<desc>check route of Portal3</desc>
			<log-file>check_portal_route3.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-i "0000:0000:0000\ \ ${ap1.eth0.w4mac}" -i "eth1"</log-match>
		</step>

		<step no="33.0">
			<desc>startup ap eth0 </desc>
			<console target="ap1">
				-v "no interface eth0 shutdown"
			</console>
		</step>

		<step no="33.1">
			<desc>set filter to check route </desc>
			<console target="ap1" delay="5">
				-v "no _ff id 1"
				-v "no _ff id 2"
				-v "_ff id 1 src-ip ${sta1.tif.ip} dst-ip ${mpc.tif.ip} bidirectional"
				-v "_ff id 2 etype 0806 bidirectional"
				-v "clear log buffered"
			</console>
		</step>

		<step no="33.2" delay="5">
			<desc>laptop ping mpc</desc>
			<script>
				perl ${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "ping ${mpc.tif.ip} -n 2" -l ${log.dir}
			</script>
		</step>

		<step no="33.3">
			<desc>show log buffer at Portal1</desc>
			<log-file>buffer_portal9.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-i "(o) eth" -i "${mpc.tif.ip}" -i "${sta1.tif.ip}" -i "icmp-echo-req" -c</log-match>
		</step>

	</stage>

	<post-process>
		<stage>
			<if>"${tb.bridge_support}" != "true"</if>
			<step no="0">
				<if>"${tb.l2sw.type}" == "dell5548"</if>
				<desc>
					startup switch port of ap1.eth0
				</desc>
				<telnet host="${tb.l2sw}" prompt=".*[>|#]">
					-v "enable"
					-v "config"
					-v "interface gigabitethernet 1/0/"${ap1.eth0.swport}""
					-v "no shutdown"
					-v "end"
				</telnet>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>
