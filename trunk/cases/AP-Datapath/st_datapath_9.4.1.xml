<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>gratuitous arp process for L2 roaming</brief>
	<priority>high</priority>
	<automated>yes</automated>
	<description>
		Pre-condition:
		-construct this topology
		-ap1 and ap2 in the same subnet
		-disable proxy-arp on all ap
		Test procedure
		-laptop links to ap1 first, then roaming to ap2(change the power or shutdown the interface)
		-should meet result 1.
		-laptop roaming back ap1
		-should meet result 2.
		Expect result
		1: ap2 should send gratuitous arp of laptop
		2: ap1 should send gratuitous arp of laptop
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>winlin</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />

	<stage>
		<step no="0">
			<desc>
				-Config ap1's vlan and native-vlan
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="0.1" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step0.1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="0.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="0.3">
			<desc>
				-Config ap2's vlan and native-vlan
			</desc>
			<console target="ap2">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="0.4" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step0.4_show_interface_mgt0_info.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="0.5">
			<desc>Get ap2's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.4_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="1">
			<desc>
				-config hive,ssid and bind them to interface
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "user-profile ${ssid.name} vlan-id ${tb.vlan1} attribute 1"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 1"
				-v "no forwarding-engine proxy-arp enable"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				show interface wifi0 info
			</desc>
			<log-file>step1.1_show_interface_wifi0_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				get wifi0's mac address
			</desc>
			<setvar name="ap1.wifi0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step1.1_show_interface_wifi0_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<step no="2">
			<desc>
				-config hive,ssid and bind them to interface
			</desc>
			<telnet target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "user-profile ${ssid.name} vlan-id ${tb.vlan1} attribute 1"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name} shutdown"
				-v "interface wifi0 radio channel 1"
				-v "no forwarding-engine proxy-arp enable"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				show interface wifi0 info
			</desc>
			<log-file>step2.1_show_interface_wifi0_info.log</log-file>
			<telnet target="ap2">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				get wifi0's mac address (format:xx xx xx xx xx xx)
			</desc>
			<setvar name="ap2.wifi0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step2.1_show_interface_wifi0_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="4">
			<desc>
				enable debug on AP1
			</desc>
			<telnet target="ap1">
				-v "_kdebug fe_arp basic"
				-v "clear log all"
			</telnet>
		</step>

		<step no="4.1">
			<desc>
				enable debug on AP2
			</desc>
			<telnet target="ap2">
				-v "_kdebug fe_arp basic"
				-v "clear log all"
			</telnet>
		</step>

		<step no="4.2">
			<desc>
				-show roaming cache
			</desc>
			<log-file>step4.2_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${ap1.wifi0.mac}"</log-match>
		</step>

		<step no="4.3">
			<desc>
				-show roaming cache
			</desc>
			<log-file>step4.3_show_roaming_cache.log</log-file>
			<telnet target="ap2">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${ap1.wifi0.mac}"</log-match>
		</step>

		<step no="5">
			<desc>
				-up interface wifi0
			</desc>
			<telnet target="ap2">
				-v "no interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="5.1" delay="5">
			<desc>
				-shutdown interface wifi0
			</desc>
			<telnet target="ap1">
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="6" delay="10" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show station on ap2
			</desc>
			<log-file>step6_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="6.1" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show station on ap1
			</desc>
			<log-file>step6.1_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
			<no-error-check />
		</step>

		<step no="7" delay="10">
			<desc>
				check log info on AP2
			</desc>
			<log-file>step7_show_logging_buffered.log</log-file>
			<telnet target="ap2" timeout="300">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "\[fe_arp\]: fe receive gratuitous ARP request ${sta1.tif.mac} vlan ${tb.vlan1}"</log-match>
			<log-match>-c -i "\[fe_arp\]: eth0 send gratuitous ARP ${sta1.tif.mac} vlan ${tb.vlan1}"</log-match>
		</step>

		<step no="7.1">
			<desc>
				check log info on AP2
			</desc>
			<log-file>step7.1_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="300">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-n -c -i "\[fe_arp\]: fe receive gratuitous ARP request ${sta1.tif.mac} vlan ${tb.vlan1}"</log-match>
			<log-match>-n -c -i "\[fe_arp\]: eth0 send gratuitous ARP ${sta1.tif.mac} vlan ${tb.vlan1}"</log-match>
		</step>

		<step no="7.2">
			<desc>
				-show roaming cache
			</desc>
			<log-file>step7.2_show_roaming_cache.log</log-file>
			<telnet target="ap2">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${ap2.wifi0.mac}"</log-match>
			<no-error-check />
		</step>

		<step no="7.3">
			<desc>
				-show roaming cache
			</desc>
			<log-file>step7.3_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${ap2.wifi0.mac}"</log-match>
			<no-error-check />
		</step>

		<step no="8">
			<desc>
				-up interface wifi0
			</desc>
			<telnet target="ap1">
				-v "clear log all"
				-v "no interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="8.1" delay="5">
			<desc>
				-shutdown interface wifi0
			</desc>
			<telnet target="ap2">
				-v "clear log all"
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="9" delay="10" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show station on ap2
			</desc>
			<log-file>step9_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
			<no-error-check />
		</step>

		<step no="9.1" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show station on ap1
			</desc>
			<log-file>step9.1_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
			<no-error-check />
		</step>

		<step no="10" delay="10">
			<desc>
				check log info on AP1
			</desc>
			<log-file>step10_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="300">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "\[fe_arp\]: fe receive gratuitous ARP request ${sta1.tif.mac} vlan ${tb.vlan1}"</log-match>
			<log-match>-c -i "\[fe_arp\]: eth0 send gratuitous ARP ${sta1.tif.mac} vlan ${tb.vlan1}"</log-match>
		</step>

		<step no="10">
			<desc>
				check log info on AP2
			</desc>
			<log-file>step10_show_logging_buffered.log</log-file>
			<telnet target="ap2" timeout="300">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-n -c -i "\[fe_arp\]: fe receive gratuitous ARP request ${sta1.tif.mac} vlan ${tb.vlan1}"</log-match>
			<log-match>-n -c -i "\[fe_arp\]: eth0 send gratuitous ARP ${sta1.tif.mac} vlan ${tb.vlan1}"</log-match>
		</step>
	</stage>
</testcase>