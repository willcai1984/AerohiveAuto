<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>ARP delete on mp interface</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-laptops connect with ap, pass authentication
		-laptops are in same vlan

		Test Procedure:
		- clear arp table on ap, mp, laptop1
		- laptop1 sends ARP request to a unknown host result 1
		- make disconnect between ap and mp (change hive, roamed away
		and etc), result 2
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>winlin</tbtype>

	<property name="conn1.ssid" value="${ssid.name}_1" />

	<stage>
		<if>"${ap.wifi1.existed}" == "true"</if>
		<step no="pre1.1">
			<desc>
				-configure AP1 as MP1
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${conn1.ssid}"
				-v "interface wifi0 ssid ${conn1.ssid}"
			</telnet>
		</step>

		<step no="pre1.1b">
			<desc>
				-if eth1 exist on AP1,shutdown eth1
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<telnet target="ap1">
				-v "interface eth1 shutdown"
			</telnet>
		</step>

		<step no="pre1.2">
			<desc>
				-configure AP2 as Portal1, make sure it will be select as DA
			</desc>
			<telnet target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 40"
			</telnet>
		</step>

		<step no="pre1.2a">
			<desc>
				show ap2's interface wifi1 info
			</desc>
			<log-file>show_ap2_interface_info.log</log-file>
			<telnet target="ap2">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="pre1.2b">
			<desc>
				get ap2's wifi1's mac address
			</desc>
			<setvar name="portal1.wifi1.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_ap2_interface_info.log -i wifi1 -o aero -m -width
			</setvar>
		</step>

		<step no="pre2.1">
			<desc>shutdown interface wifi1 and then up it (it's aimed to clear wifi1's neighbor list)</desc>
			<telnet target="ap1">
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
				-v "interface wifi1 radio channel 40"
			</telnet>
		</step>

		<step no="pre2.2" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show acsp neighbor to make sure ap1 is ap2's acsp neighbor
			</desc>
			<log-file>pre2.2_show_acsp_neighbor_${loop_check.idx}.log</log-file>
			<telnet target="ap1" timeout="180">
				-v "show acsp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${portal1.wifi1.mac}\s+Backhaul\s+${hive.name}" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="pre2.3" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				show roaming neighbor on AP1
			</desc>
			<log-file>step_pre2.3_show_roaming_neighbor_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-c -i "${ap2.mgt0.mac}" -i "${ap2.mgt0.ip}"</log-match>
		</step>

		<step no="pre2.4" type="loop-check" loop-max-times="3" loop-interval="10">
			<desc>
				show roaming neighbor on AP2
			</desc>
			<log-file>step_pre2.4_show_roaming_neighbor_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-c -i "${ap1.mgt0.mac}" -i "${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="pre2.5">
			<desc>
				shutdown interface eth0 on MP
			</desc>
			<console target="ap1">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<step no="pre2.6" delay="35" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show amrp neighbor
			</desc>
			<log-file>pre2.6_show_amrp_neighbor_${loop_check.idx}.log</log-file>
			<console target="ap1" timeout="180">
				-v "show amrp neighbor"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${portal1.wifi1.mac}\s+${ap2.mgt0.ip}\s+TWO-WAY" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<include prefix="pre3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="translate_mac">
			<multi-setvar>
				echo "sta1.tif.mac=$(echo ${sta1.tif.mac} | tr "A-F" "a-f")"
			</multi-setvar>
		</step>

		<step no="1.1a">
			<desc>
				-clear arp on windows laptop1
			</desc>
			<if>"${tb.os}" == "windows"</if>
			<log-file>step1.1a_clear_sta1_arp.log</log-file>
			<staf target="sta1">
				-v "arp -d"
			</staf>
		</step>

		<step no="1.1b">
			<desc>
				-clear arp on linux laptop1
			</desc>
			<if>"${tb.os}" == "linux"</if>
			<log-file>step1.1b_clear_sta1_arp.log</log-file>
			<ssh target="sta1">
				-v "ip neigh flush dev ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="1.2">
			<desc>
				- clear arp table on MP
			</desc>
			<log-file>step1.2_arp_clear.log</log-file>
			<console target="ap1">
				-v "_kdebug fe_arp basic"
				-v "clear log all"
				-v "clear arp-cache"
				-v "show arp-cache"
			</console>
			<log-match>-n -c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="1.3">
			<desc>
				- clear arp table on MP
			</desc>
			<log-file>step1.3_arp_clear.log</log-file>
			<telnet target="ap2">
				-v "clear arp-cache"
				-v "_kdebug fe_arp basic"
				-v "clear log all"
				-v "show arp-cache"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<include prefix="2" file="subs/sta_ping.xml" args="sta1, ${tb.unreach.ip1}, 8,negative" />

		<step no="2.1" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				show arp cache on MP, sta1.tif.mac is added into arp table
			</desc>
			<log-file>step2.1_show_arp_cache_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show arp-cache"
			</console>
			<log-match>-c -i "${sta1.tif.mac}" -i "AP" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="2.2">
			<desc>
				check log info on MP1
			</desc>
			<log-file>step2.2_show_log_buff.log</log-file>
			<console target="ap1">
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log all"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "ARP entry inserted: IP=${sta1.tif.ip}\(0,wifi0.\d+\) mac=${sta1.tif.mac}" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="2.3" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				show arp cache on portal1, sta1.tif.mac is added into arp table
			</desc>
			<log-file>step2.3_show_arp_cache_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show arp-cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "OTHER" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="2.4">
			<desc>
				check log info on Portal1
			</desc>
			<log-file>step2.4_show_log_buff.log</log-file>
			<telnet target="ap2">
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log all"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p " ARP entry inserted: IP=${sta1.tif.ip}\(0,wifi1.\d+\) mac=${sta1.tif.mac}" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="3">
			<desc>
				- make disconnect between ap and mp (change hive, roamed away
				and etc), result 2
			</desc>
			<log-file>step3_log.log</log-file>
			<console target="ap1">
				-v "hive ${hive.name}_1"
				-v "interface mgt0 hive ${hive.name}_1"
			</console>
		</step>

		<step no="3.1" type="loop-check" loop-max-times="30" loop-interval="20">
			<desc>
				show arp cache on MP, sta1.tif.mac is still alive
			</desc>
			<log-file>step3.1_show_arp_cache_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show arp-cache"
			</console>
			<log-match>-n -c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="3.2" type="loop-check" loop-max-times="30" loop-interval="30">
			<desc>
				show arp cache on Portal1, sta1.tif.mac is aged out
			</desc>
			<log-file>step3.2_show_arp_cache_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show arp-cache"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>
	</stage>
</testcase>