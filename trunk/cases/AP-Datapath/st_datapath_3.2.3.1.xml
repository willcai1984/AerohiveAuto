<testcase>
	<brief>Broadcast/Multicast loop test in mp topo </brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<description>
		Topology to use
		pc+++++Switch++++++Portal-----MP------laptop
		Objective
		Broadcast/Multicast loop test in mp topo
		Pre-condition
		-laptop and pc are in same vlan
		-make sure the wifi1 interface is up on portal
		Test procedure
		-laptop sends broadcast like ARP request etc, to mp result 1
		-pc sends broadcast like ARP request etc, to portal result 2
		Expect result
		- mp will relay this broadcast to wifi0 and wifi1 interface. portal will receive the packet from mp, then floods to all up interfaces
		- portal will relay this broadcast to wifi0,wifi1, mp will receive the packet from portal, then floods to all up interfaces.
	</description>
	<stage>
		<step no="set_ap1">
			<desc>Set up Portal interface through sw menu</desc>
			<console target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 36"
				-f basic_apsetup.cfg
			</console>
		</step>

		<step no="set_ap2">
			<desc>Set up MP interface through sw menu</desc>
			<console target="ap2">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} manage all"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface eth0 shutdown"
				-f basic_apsetup.cfg
			</console>
		</step>

		<step no="shut_ap2_eth1">
			<if>"${ap1.eth1.existed}" == "true"</if>
			<desc>Set up MP interface through sw menu</desc>
			<console target="ap2">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="config_ssid_on_ap2">
			<desc>Set SSID for mp </desc>
			<console target="ap2">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "save config"
			</console>
		</step>
		<step no="3">
			<desc>show wifi1.1's mac of portal</desc>
			<log-file>ap1.wifi.mac_portal.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.1"
				-v ""
			</telnet>
		</step>

		<step no="3.2">
			<desc>get wifi1.1' mac of portal</desc>
			<setvar name="ap1.wifi1.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap1.wifi.mac_portal.log -i wifi1.1 -o aero -m -width
			</setvar>
		</step>
		<step no="3.3">
			<desc>show wifi1.1's mac of portal</desc>
			<log-file>ap1_eth0_portal.log</log-file>
			<telnet target="ap1">
				-v "show interface eth0"
				-v ""
			</telnet>
		</step>

		<step no="3.4">
			<desc>get wifi1.1' mac of portal</desc>
			<setvar name="ap1.eth0.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap1_eth0_portal.log -i eth0 -o aero -m -width
			</setvar>
		</step>
		<step no="4">
			<desc>show wifi1.1's mac of portal</desc>
			<log-file>ap2.wifi.mac_portal.log</log-file>
			<console target="ap2">
				-v "show interface wifi1.1"
				-v ""
			</console>
		</step>

		<step no="4.1">
			<desc>get wifi1.1' mac of portal</desc>
			<setvar name="ap2.wifi1.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap2.wifi.mac_portal.log -i wifi1.1 -o aero -m -width
			</setvar>
		</step>
		<step no="4.2">
			<desc>show wifi1.1's mac of portal</desc>
			<log-file>ap2_show_eth0.log</log-file>
			<console target="ap2">
				-v "show interface eth0"
				-v ""
			</console>
		</step>

		<step no="4.3">
			<desc>get wifi1.1' mac of portal</desc>
			<setvar name="ap2.eth0.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap2_show_eth0.log -i eth0 -o aero -m -width
			</setvar>
		</step>

		<step no="check_neighbour" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>check mesh network</desc>
			<log-file>amrp_nei_${loop_check.idx}.log</log-file>
			<console target="ap2">
				-v "interface wifi1 radio channel 36"
				-v "show amrp nei"
			</console>
			<log-match>-i "${ap1.wifi.mac}" -i "TWO-WAY"</log-match>
		</step>

		<property name="conn1.ssid" value="${ssid.name}" />
		<property name="conn1.proto" value="open" />
		<include prefix="4" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn1, sta1, ap2" />

		<step no="5">
			<desc>add a _ff and open fe debug on Portal </desc>
			<telnet target="ap1">
				-v "_ff id 1 etype 0806 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
			</telnet>
		</step>

		<step no="6">
			<desc>add a _ff and open fe debug on MP </desc>
			<console target="ap2">
				-v "_ff id 1 etype 0806 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
			</console>
		</step>
		<step no="7">
			<desc> laptop ping </desc>
			<ssh target="sta1">
				-v "ping ${tb.unreach.ip1} -c 4" ;exit 0
			</ssh>
			<no-error-check />
		</step>

		<step no="8">
			<desc>show log buffer at Portal</desc>
			<log-file>buffer_portal.log</log-file>
			<telnet target="ap1" timeout="1000">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "(o) eth0 ${sta1.tif.mac}->ffff:ffff:ffff arp ${sta1.tif.ip}(${sta1.tif.mac})->${tb.unreach.ip1}"</log-match>
			<log-match>-c -i "(o) wifi1.1 ${sta1.tif.mac}->ffff:ffff:ffff arp ${sta1.tif.ip}(${sta1.tif.mac})->${tb.unreach.ip1}"</log-match>
			<log-match>-c -i "(i) wifi1.1 ${sta1.tif.mac}->ffff:ffff:ffff arp ${sta1.tif.ip}(${sta1.tif.mac})->${tb.unreach.ip1}"</log-match>
		</step>

		<step no="9">
			<desc>show log buffer at MP </desc>
			<log-file>log_mp_1.log</log-file>
			<console target="ap2" timeout="1000">
				-v "show logging buffered ";exit 0
			</console>
			<no-error-check />
			<log-match>-c -i "(i) wifi0.1 ${sta1.tif.mac}->ffff:ffff:ffff arp ${sta1.tif.ip}(${sta1.tif.mac})->${tb.unreach.ip1}"</log-match>
			<log-match>-c -i "wifi1.1 drop illegal broadcast from ${ap1.wifi1.mac} route-nhop ${ap2.eth0.mac}"</log-match>
			<log-match>-c -i "(o) wifi1.1 ${sta1.tif.mac}->ffff:ffff:ffff arp ${sta1.tif.ip}(${sta1.tif.mac})->${tb.unreach.ip1}"</log-match>
			<log-match>-c -i "(o) wifi0.1 ${sta1.tif.mac}->ffff:ffff:ffff arp ${sta1.tif.ip}(${sta1.tif.mac})->${tb.unreach.ip1}"</log-match>
		</step>

		<step no="get_mpc_ip_info">
			<desc>Show interface on PC</desc>
			<log-file>ifconfig_mpc.log</log-file>
			<script>
				ifconfig ${mpc.tif.name} > ${log.dir}/${log.file}
			</script>
		</step>

		<step no="get_mpc_tif_mac">
			<desc>Get the PC's MAC address </desc>
			<setvar name="mpc.tif.mac">
				perl ${bin.dir}/getrmtip.pl -m -f ${log.dir}/ifconfig_mpc.log -i ${mpc.tif.name} -w
			</setvar>
		</step>
		<step no="10">
			<desc>add a _ff and open fe debug on Portal </desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<step no="11">
			<desc>add a _ff and open fe debug on MP </desc>
			<console target="ap2">
				-v "clear log all"
			</console>
		</step>

		<step no="12">
			<desc>master ping </desc>
			<script>
				perl ${bin.dir}/ping.pl -l ${log.dir} -d ${tb.unreach.ip1};exit 0
			</script>
			<no-error-check />
		</step>

		<step no="13">
			<desc>show log buffer at Portal</desc>
			<log-file>mpc_portal2.log</log-file>
			<telnet target="ap1" timeout="1000">
				-v "show logging buffered ";exit 0
			</telnet>
			<no-error-check />
			<log-match>-i "wifi1.1 drop illegal broadcast from ${ap2.wifi1.mac} route-nhop ${ap1.eth0.mac}"</log-match>
			<log-match>-c -i "(o) wifi1.1 ${mpc.tif.mac}->ffff:ffff:ffff arp ${mpc.tif.ip}(${mpc.tif.mac})->${tb.unreach.ip1}"</log-match>
			<log-match>-c -i "(i) eth0 ${mpc.tif.mac}->ffff:ffff:ffff arp ${mpc.tif.ip}(${mpc.tif.mac})->${tb.unreach.ip1}"</log-match>
			<log-match>-c -i "(i) wifi1.1 ${mpc.tif.mac}->ffff:ffff:ffff arp ${mpc.tif.ip}(${mpc.tif.mac})->${tb.unreach.ip1}"</log-match>
			
		</step>

		<step no="14">
			<desc>show log buffer at MP </desc>
			<log-file>mpc_buffer_mp2.log</log-file>
			<console target="ap2" timeout="1000">
				-v "show logging buffered";exit 0
			</console>
			<no-error-check />
			<log-match>-c -i "(o) wifi0.1 ${mpc.tif.mac}->ffff:ffff:ffff arp ${mpc.tif.ip}(${mpc.tif.mac})->${tb.unreach.ip1}"</log-match>
			<log-match>-c -i "(o) wifi1.1 ${mpc.tif.mac}->ffff:ffff:ffff arp ${mpc.tif.ip}(${mpc.tif.mac})->${tb.unreach.ip1}"</log-match>
			<log-match>-c -i "(i) wifi1.1 ${mpc.tif.mac}->ffff:ffff:ffff arp ${mpc.tif.ip}(${mpc.tif.mac})->${tb.unreach.ip1}"</log-match>
		</step>
	</stage>
</testcase>
