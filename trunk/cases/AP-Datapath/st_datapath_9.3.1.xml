<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Gratuitous ARP for bridged user</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-construct this topology
		-all pc and laptop are in same VLAN
		-eth0 of mp is access mode
		-enable mac-learning on eth0 of mp

		Test Procedure:
		-plug out cable in the eth0 of mp
		-plug in cable again
		-check the gratuitous ARP on portal of mp result 1
	</description>
	<numofap>2</numofap>
	<numofsta>0</numofsta>
	<numofbpc>1</numofbpc>
	<tbtype>winlin</tbtype>

	<stage>
		<if>"${ap1.eth1.existed}" == "true"</if>

		<include prefix="0" file="subs/bpc_init.xml" obj-args="bpc1, ap1" args="none" />

		<step no="1">
			<desc>
				-config eth1 of ap1 to access mode
				-enable mac-learning on eth1
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}_${job.sid}"
				-v "interface mgt0 hive ${hive.name}_${job.sid}"
				-v "interface eth1 mode bridge-access"
				-v "interface eth1 mac-learning enable"
			</telnet>
		</step>

		<step no="2">
			<desc>
				config hive and bind it to interface
			</desc>
			<telnet target="ap2">
				-v "hive ${hive.name}_${job.sid}"
				-v "interface mgt0 hive ${hive.name}_${job.sid}"
				-v "interface wifi1 radio channel 36"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				show ap2's interface wifi1 info
			</desc>
			<log-file>show_ap2_interface_info.log</log-file>
			<telnet target="ap2">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				get ap2's wifi1's mac address
			</desc>
			<setvar name="ap2.wifi1.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_ap2_interface_info.log -i wifi1 -o aero -m -width
			</setvar>
		</step>

		<step no="2.3">
			<desc>shutdown interface wifi1 and then up it (it's aimed to clear wifi1's neighbor list)</desc>
			<telnet target="ap1">
				-v "interface wifi1 hive ${hive.name}_${job.sid} shutdown"
				-v "no interface wifi1 hive ${hive.name}_${job.sid} shutdown"
				-v "interface wifi1 radio channel 36"
			</telnet>
		</step>

		<step no="3" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show acsp neighbor to make sure ap1 is ap2's acsp neighbor
			</desc>
			<log-file>step3_show_acsp_neighbor_${loop_check.idx}.log</log-file>
			<telnet target="ap1" timeout="180">
				-v "show acsp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2.wifi1.mac}\s+Backhaul\s+${hive.name}_${job.sid}" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4">
			<desc>
				-shutdown interface eth0
			</desc>
			<console target="ap1">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<step no="5" delay="35" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show amrp neighbor
			</desc>
			<log-file>step5_show_amrp_neighbor_${loop_check.idx}.log</log-file>
			<console target="ap1" timeout="180">
				-v "show amrp neighbor"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2_wifi1_mac}\s+${ap2.mgt0.ip}\s+TWO-WAY" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<include prefix="6" file="subs/bpc_wired_connect_${tb.os}.xml" obj-args="bpc1" />

		<step no="7">
			<desc>
				clear arp-cache
			</desc>
			<telnet target="ap2">
				-v "clear arp-cache"
			</telnet>
		</step>

		<step no="7.1">
			<desc>
				clear arp-cache
			</desc>
			<console target="ap1">
				-v "clear arp-cache"
			</console>
		</step>

		<step no="8" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				portal1 does not have arp entry for bpc1
			</desc>
			<log-file>step8_show_arp_cache_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show arp-cache"
			</telnet>
			<log-match>-n -c -i "${bpc1.tif.mac}" -i "${bpc1.tif.ip}"</log-match>
		</step>

		<step no="8.1" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				MP1 has arp entry for bpc1
			</desc>
			<log-file>step8.1_show_arp_cache_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show arp-cache"
			</console>
			<log-match>-c -i "${bpc1.tif.mac}" -i "${bpc1.tif.ip}"</log-match>
		</step>

		<step no="8.2">
			<desc>
				enable debug on AP2
			</desc>
			<telnet target="ap2">
				-v "_kdebug fe_arp basic"
				-v "clear log all"
			</telnet>
		</step>

		<step no="8.3">
			<desc>
				-shutdown interface eth1
			</desc>
			<console target="ap1">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="8.4" delay="5">
			<desc>
				-up interface eth1
			</desc>
			<console target="ap1">
				-v "no interface eth1 shutdown"
			</console>
		</step>

		<step no="9" delay="10">
			<desc>
				check log info on AP2 (MP1)
			</desc>
			<log-file>step9_show_logging_buffered.log</log-file>
			<telnet target="ap2" timeout="300">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "\[fe_arp\]: fe receive gratuitous ARP request ${bpc1.tif.mac} vlan 1"</log-match>
			<log-match>-c -i "\[fe_arp\]: eth0 send gratuitous ARP ${bpc1.tif.mac} vlan 1"</log-match>
		</step>
	</stage>
</testcase>