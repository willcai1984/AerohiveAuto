<testcase>
	<brief>Bridge-access configuration management</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<numofap>2</numofap>
	<numofsta>0</numofsta>
	<numofbpc>1</numofbpc>
	<tbtype>linux</tbtype>
	<description>
		Topology to use
		(AP)------pc2
		pc1++++++sw++++++portal (eth0)++++++pc3
		(Mesh)-------MP
		(AP)----------laptop4
		Objective
		Broadcast from eth0 of mp
		Pre-condition
		-construct this topology
		-all pc and laptop are in same VLAN
		-eth0 of mp is access mode
		-enable mac-learning on eth0 of mp
		Test procedure
		-pc3 ping a un-existed pc, then will send a arp broadcast to mp
		-check the datapath----result 1
		Expect result
		Result 1: mp will flood this pkt to mesh and ap interface
		“_kdebug fe basic”, then can see
	</description>
	<stage>
		<if>"${ap.eth1.existed}" == "true" &amp;&amp; "${ap.wifi1.existed}" == "true"</if>

		<include prefix="0" file="subs/bpc_init.xml" obj-args="bpc1, ap2" args="none" />
		<step no="pre0.3">
			<desc>show wifi1.1's mac of portal</desc>
			<log-file>wifi_mac_portal.log</log-file>
			<console target="ap1">
				-v "show interface wifi1.1"
				-v ""
			</console>
		</step>

		<step no="pre0.4">
			<desc>get wifi1.1' mac of portal</desc>
			<setvar name="ap1.wifi1.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/wifi_mac_portal.log -i wifi1.1 -o aero -m -width
			</setvar>
		</step>

		<step no="pre0.5">
			<desc>show eth0's mac of mp</desc>
			<log-file>eth0_mac_mp.log</log-file>
			<console target="ap2">
				-v "show interface eth0"
				-v ""
			</console>
		</step>

		<step no="pre0.6">
			<desc>get eth0's mac of mp</desc>
			<setvar name="ap2.eth0.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/eth0_mac_mp.log -i eth0 -o aero -m -width
			</setvar>
		</step>

		<step no="1">
			<desc>Set up portal's interface through sw menu</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "user-profile datapath"
				-v "user-profile datapath vlan ${tb.vlan1}"
				-v "user-profile datapath attribute 2"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa-auto-psk ascii aerohive"
				-v "security-object autoap default-user-profile-attr 2"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 36"
			</console>
		</step>
		<step no="pre0.1">
			<desc>show mgt0's ip of portal</desc>
			<log-file>portal_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="pre0.2">
			<desc>Get portal's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/portal_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
		<step no="2">
			<desc>Set up mp's interface through sw menu</desc>
			<console target="ap2">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "user-profile datapath"
				-v "user-profile datapath vlan ${tb.vlan1}"
				-v "user-profile datapath attribute 2"
				-v "interface eth1 mode bridge-access user-profile-attribute 2"
				-v "interface eth1 mac-learning enable"
				-v "interface eth0 shutdown"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 36"
			</console>
		</step>


		<step no="3" type="loop-check" loop-max-times="30" loop-interval="20">
			<desc>check mesh network</desc>
			<log-file>amrp_nei2_${loop_check.idx}.log</log-file>
			<console target="ap2">
				-v "show amrp nei"
			</console>
			<log-match>-i "${ap1_wifi1_mac}" -i "TWO-WAY"</log-match>
		</step>


		<step no="4.1" delay="40">
			<desc>show mgt0's ip of MP</desc>
			<log-file>mp_info.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="4.2">
			<desc>Get mp's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/mp_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<include prefix="5" file="subs/bpc_wired_connect_${tb.os}.xml" obj-args="bpc1" />

		<step no="6">
			<desc>show route table on mp</desc>
			<log-file>bridge_mp_route.log</log-file>
			<console target="ap2">
				-v "show route"
			</console>
			<log-match>-c -i "${bpc1.tif.mac *${ap2.eth0.mac} *eth1 *0 *2"</log-match>
		</step>

		<step no="7">
			<desc>show mac-learning on mp</desc>
			<log-file>bridge_mp_mac_learning.log</log-file>
			<console target="ap2">
				-v "show interface eth1 mac-learning all"
			</console>
			<log-match>-c -i "${bpc1.tif.mac}" -i "${tb.vlan1}"</log-match>
		</step>

		<step no="8">
			<desc>Open debug cli on mp</desc>
			<console target="ap2">
				-v "_ff src-mac ${bpc1.tif.mac} etype 0806 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
			</console>
		</step>

		<include prefix="9" file="subs/sta_send_arp.xml" args="bpc1,${tb.unreach.ip1} , 2" />

		<step no="10">
			<desc>show log buffer on mp</desc>
			<log-file>pc_unknown.log</log-file>
			<console target="ap2" timeout="200">
				-v "show log buf"
			</console>
			<no-error-check />
			<log-match>-e "\[fe\]: flood the packet out wifi1.1" </log-match>
			<log-match>-e " eth1 no broadcast out from incoming port" </log-match>
			<log-match>-e "interface down, don't flood on wifi0.1"</log-match>
		</step>

	</stage>

</testcase>
