<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>proxy arp process for L3 roaming (to ap)</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-construct this topology
		-ap1 and ap2 in different subnet

		Test Procedure:
		-laptop1 links to ap1 first, then roaming to ap2(change the power or shutdown the interface)
		-clear arp on laptop1, laptop1 ping ap1, result 1
		-clear arp on laptop1, laptop1 ping ap2, result 2.
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<numofbpc>1</numofbpc>
	<tbtype>winlin</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />

	<stage>
		<if>"${ap1.eth1.existed}" == "true"</if>
		<include prefix="pre0.1" file="subs/bpc_init.xml" obj-args="bpc1, ap1" args="none" />

		<step no="pre0.2">
			<desc>
				-Config ap1's vlan and native-vlan
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="pre0.3" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>pre0.3_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="pre0.4">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/pre0.3_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="pre0.4a">
			<desc>get mac address of ap1</desc>
			<setvar name="ap1.mgt0.mac">
				${bin.dir}/getbyrexp.py -p "MAC addr=([\da-fA-F:]+)" -f ${log.dir}/pre0.3_show_interface_mgt0_info.log -t str
			</setvar>
		</step>

		<step no="pre0.5">
			<desc>
				-Config ap2's vlan and native-vlan
			</desc>
			<console target="ap2">
				-v "interface mgt0 vlan ${tb.vlan2}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="pre0.6">
			<desc>
				close dhcp client
			</desc>
			<console target="ap2">
				-v "no interface mgt0 dhcp client"
			</console>
		</step>

		<step no="pre0.7">
			<desc>
				open dhcp client
			</desc>
			<console target="ap2">
				-v "interface mgt0 dhcp client"
			</console>
		</step>

		<step no="pre0.8" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>pre0.8_show_interface_mgt0_info.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="pre0.9">
			<desc>Get ap2's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/pre0.8_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="pre0.9a">
			<desc>get mac address of ap2</desc>
			<setvar name="ap2.mgt0.mac">
				${bin.dir}/getbyrexp.py -p "MAC addr=([\da-fA-F:]+)" -f ${log.dir}/pre0.8_show_interface_mgt0_info.log -t str
			</setvar>
		</step>

		<step no="pre1.1">
			<desc>
				Config AP1
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${conn1.ssid}"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 77"
				-v "ssid ${conn1.ssid} security-object FWtest"
				-v "mobility-policy FWtest dnxp"
				-v "user-profile ${tb.vlan1} qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy FWtest attribute 77"
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
				-v "interface wifi0 radio channel 1"
				-v "amrp interface eth0 priority 100"
				-v "interface eth1 mode bridge-access"
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "interface eth1 mac-learning enable"
				-v "no bonjour-gateway enable"
			</telnet>
		</step>

		<step no="pre1.2">
			<desc>
				Config AP2
			</desc>
			<telnet target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${conn1.ssid}"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "interface wifi0 ssid ${conn1.ssid} shutdown"
				-v "interface wifi0 radio channel 1"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 77"
				-v "ssid ${conn1.ssid} security-object FWtest"
				-v "mobility-policy FWtest dnxp"
				-v "user-profile ${tb.vlan1} qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy FWtest attribute 77"
				-v "amrp interface eth0 priority 50"
				-v "no bonjour-gateway enable"
			</telnet>
		</step>

		<step no="pre2.1" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				show roaming neighbor on AP1
			</desc>
			<log-file>step_pre2.1_show_roaming_neighbor_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-c -i "${ap2.mgt0.mac}" -i "${ap2.mgt0.ip}"</log-match>
		</step>

		<step no="pre2.2" type="loop-check" loop-max-times="3" loop-interval="10">
			<desc>
				show roaming neighbor on AP2
			</desc>
			<log-file>step_pre2.2_show_roaming_neighbor_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-c -i "${ap1.mgt0.mac}" -i "${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="pre2.3" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				show amrp dnxp neighbor on AP1
			</desc>
			<log-file>step_pre2.3_show_amrp_dnxp_neighbor_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match>-c -i "${ap2.mgt0.mac}" -i "${ap2.mgt0.ip}/24" -i "L3"</log-match>
		</step>

		<step no="pre2.4" type="loop-check" loop-max-times="3" loop-interval="10">
			<desc>
				show amrp dnxp neighbor on AP2
			</desc>
			<log-file>step_pre2.4_show_amrp_dnxp_neighbor_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match>-c -i "${ap1.mgt0.mac}" -i "${ap1.mgt0.ip}/24" -i "L3"</log-match>
		</step>

		<include prefix="pre3.2" file="subs/bpc_wired_connect_${tb.os}.xml" obj-args="bpc1" />

		<include prefix="1" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="translate_mac">
			<multi-setvar>
				echo "sta1.tif.mac=$(echo ${sta1.tif.mac} | tr "A-F" "a-f")"
				echo "bpc1.tif.mac=$(echo ${bpc1.tif.mac} | tr "A-F" "a-f")"
			</multi-setvar>
		</step>

		<step no="1.2">
			<desc>
				open wifi0 on ap2 for roaming to AP2
			</desc>
			<telnet target="ap2">
				-v "no interface wifi0 ssid ${conn1.ssid} shutdown"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				On ap1 interface wifi0 ssid shutdown
			</desc>
			<telnet target="ap1">
				-v "interface wifi0 ssid ${conn1.ssid} shutdown"
			</telnet>
		</step>

		<step no="1.4" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check tunnel build succeed
			</desc>
			<log-file>step1.4_show_route_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show route"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${ap2.mgt0.mac}" -i "wifi0.1" -i "77" -i "LTO"</log-match>
		</step>

		<step no="1.5">
			<desc>
				show tunnel build succeed
			</desc>
			<log-file>step1.5_show_route.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${ap1.mgt0.mac}" -i "mgt0" -i "77" -i "LTO"</log-match>
		</step>

		<step no="1.6" delay="10" type="loop-check" loop-max-times="30" loop-interval="10">
			<desc>
				show station on ap2
			</desc>
			<log-file>step1.6_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="1.7" type="loop-check" loop-max-times="30" loop-interval="10">
			<desc>
				show station on ap1
			</desc>
			<log-file>step1.7_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="2.11a">
			<desc>
				enable debug
			</desc>
			<telnet target="ap1">
				-v "_ff id 1 src-ip ${sta1.tif.ip} protocol 1 bidirectional"
				-v "_ff id 2 src-mac ${sta1.tif.mac} etype 0806 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_kdebug fe_arp basic"
				-v "clear log all"
			</telnet>
		</step>

		<step no="2.11b">
			<desc>
				enable debug
			</desc>
			<telnet target="ap2">
				-v "_ff id 1 src-ip ${sta1.tif.ip} protocol 1 bidirectional"
				-v "_ff id 2 src-mac ${sta1.tif.mac} etype 0806 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_kdebug fe_arp basic"
				-v "clear log all"
			</telnet>
		</step>

		<step no="2.2a">
			<desc>
				-clear arp on windows laptop1
			</desc>
			<if>"${tb.os}" == "windows"</if>
			<log-file>step2.2a_clear_sta1_arp.log</log-file>
			<staf target="sta1">
				-v "arp -d ${ap1.mgt0.ip}"
			</staf>
		</step>

		<step no="2.2b">
			<desc>
				-clear arp on linux laptop1
			</desc>
			<if>"${tb.os}" == "linux"</if>
			<log-file>step2.2b_clear_sta1_arp.log</log-file>
			<ssh target="sta1">
				-v "ip neigh flush dev ${sta1.tif.name}"
			</ssh>
		</step>

		<include prefix="2.3" file="subs/sta_ping.xml" args="sta1, ${ap1.mgt0.ip}, 10" />

		<step no="2.4" delay="3">
			<desc>
				check log info on AP2
			</desc>
			<log-file>step2.4_show_log_buff.log</log-file>
			<telnet target="ap2" timeout="300">
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log all"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(i\) wifi0.\d+ ${sta1.tif.mac}-&gt;ffff:ffff:ffff arp ${sta1.tif.ip}\(${sta1.tif.mac}\)-&gt;${ap1.mgt0.ip}\(0000:0000:0000\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(r\) eth0 ${ap1.mgt0.mac}-&gt;${sta1.tif.mac} arp ${ap1.mgt0.ip}\(${ap1.mgt0.mac}\)-&gt;${sta1.tif.ip}\(${sta1.tif.mac}\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(o\) wifi0.\d+ ${ap1.mgt0.mac}-&gt;${sta1.tif.mac} arp ${ap1.mgt0.ip}\(${ap1.mgt0.mac}\)-&gt;${sta1.tif.ip}\(${sta1.tif.mac}\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(i\) wifi0.\d+ ${sta1.tif.ip}-&gt;${ap1.mgt0.ip}.+icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(i\) mgt0 ${ap2.mgt0.ip}-&gt;${ap1.mgt0.ip}.+proto\(47\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(o\) eth0 ${ap2.mgt0.ip}-&gt;${ap1.mgt0.ip}.+proto\(47\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(r\) wifi0.\d+ ${sta1.tif.mac}-&gt;${ap1.mgt0.mac} arp ${sta1.tif.ip}\(${sta1.tif.mac}\)-&gt;${ap1.mgt0.ip}\(${ap1.mgt0.mac}\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(r\) mgt0 ${ap1.mgt0.ip}-&gt;${sta1.tif.ip}.+icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(o\) wifi0.\d+ ${ap1.mgt0.ip}-&gt;${sta1.tif.ip}.+icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="2.5">
			<desc>
				check log info on AP1
			</desc>
			<log-file>step2.5_show_log_buff.log</log-file>
			<telnet target="ap1" timeout="300">
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log all"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(r\) mgt0 ${sta1.tif.ip}-&gt;${ap1.mgt0.ip}.+ icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(i\) mgt0 ${ap1.mgt0.ip}-&gt;${sta1.tif.ip}.+ icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(i\) mgt0 ${ap1.mgt0.ip}-&gt;${ap2.mgt0.ip}.+ proto\(47\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(o\) eth0 ${ap1.mgt0.ip}-&gt;${ap2.mgt0.ip}.+ proto\(47\)" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) mgt0 ${sta1.tif.mac}-&gt;${ap1.mgt0.mac} arp ${sta1.tif.ip}(${sta1.tif.mac})-&gt;${ap1.mgt0.ip}(${ap1.mgt0.mac})"</log-match>
			<log-match>-c -i "(r) mgt0 ${sta1.tif.mac}-&gt;${ap1.mgt0.mac} arp ${sta1.tif.ip}(${sta1.tif.mac})-&gt;${ap1.mgt0.ip}(${ap1.mgt0.mac})"</log-match>
			<no-error-check />
		</step>

		<step no="3.1a">
			<desc>
				-clear arp on windows laptop1
			</desc>
			<if>"${tb.os}" == "windows"</if>
			<log-file>step3.1a_clear_sta1_arp.log</log-file>
			<staf target="sta1">
				-v "arp -d ${ap2.mgt0.ip}"
			</staf>
		</step>

		<step no="3.1b">
			<desc>
				-clear arp on linux laptop1
			</desc>
			<if>"${tb.os}" == "linux"</if>
			<log-file>step3.1b_clear_sta1_arp.log</log-file>
			<ssh target="sta1">
				-v "ip neigh flush dev ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="3.1c">
			<desc>
				-clear log all
			</desc>
			<telnet target="ap2">
				-v "clear log all"
			</telnet>
		</step>

		<step no="3.1d">
			<desc>
				-clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<include prefix="3.2" file="subs/sta_ping.xml" args="sta1, ${ap2.mgt0.ip}, 10" />

		<step no="3.3" delay="5">
			<desc>
				check log info on AP2
			</desc>
			<log-file>step3.3_show_log_buff.log</log-file>
			<telnet target="ap2" timeout="300">
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log all"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(i\) wifi0.1 ${sta1.tif.ip}-&gt;${ap2.mgt0.ip}.+ icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(i\) mgt0 ${ap2.mgt0.ip}-&gt;${ap1.mgt0.ip}.+ proto\(47\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(o\) eth0 ${ap2.mgt0.ip}-&gt;${ap1.mgt0.ip}.+ proto\(47\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(i\) eth0 ${sta1.tif.ip}-&gt;${ap2.mgt0.ip}.+ icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(u\) mgt0 ${sta1.tif.ip}-&gt;${ap2.mgt0.ip}.+ icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(i\) mgt0 ${ap2.mgt0.ip}-&gt;${sta1.tif.ip}.+ icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(o\) wifi0.1 ${ap2.mgt0.ip}-&gt;${sta1.tif.ip}.+ icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(o\) eth0 ${ap2.mgt0.ip}-&gt;${sta1.tif.ip}.+ icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(r\) mgt0 ${ap2.mgt0.ip}-&gt;${sta1.tif.ip}.+ icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="3.4">
			<desc>
				check log info on AP1
			</desc>
			<log-file>step3.4_show_log_buff.log</log-file>
			<telnet target="ap1" timeout="300">
				-v "show log buff"
				-v ""
				-v ""
				-v "clear log all"
			</telnet>
			<log-match>-c -i "(i) eth0 ${ap2.mgt0.ip}-&gt;${sta1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(o) eth0 ${sta1.tif.ip}-&gt;${ap2.mgt0.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(r) mgt0 ${sta1.tif.ip}-&gt;${ap2.mgt0.ip}" -i "icmp-echo-req"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(i\) mgt0 ${ap1.mgt0.ip}-&gt;${ap2.mgt0.ip}.+ proto\(47\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(o\) eth0 ${ap1.mgt0.ip}-&gt;${ap2.mgt0.ip}.+ proto\(47\)" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
	</stage>
</testcase>