<testcase>
	<brief>unknown unicast from mp interface </brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>windows</tbtype>
	<description>
		Topology to use
		pc+++++Switch++++++Portal-----MP------laptop
		Objective
		unknown unicast from mp interface
		Pre-condition
		-laptop connects with mp, pass authentication
		-laptop get ip address. Etc. 1.1.1.2
		Test procedure
		-add a static arp on laptop,etc 1.1.1.100-11-22-33-44-55
		-laptop ping 1.1.1.1.
		Then mp will receive a unknown unicast pkt.
		Result 1.
		Expect result
		1: mp will send the unknown unicast pkt to wifi1, portal will receive the packet from mp, then sends to default interfaces.
		3.2.3. Broadcast/Multicast dapath
	</description>
	<stage>
		<property name="test.mac" value="00-11-22-33-44-55" />
		<property name="test.mac2" value="0011:2233:4455" />
		<step no="1">
			<desc>Set up Portal interface through sw menu</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "user-profile datapath"
				-v "user-profile datapath vlan ${tb.vlan1}"
				-v "user-profile datapath attribute 2"
				-v "hive ${hive.name}"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-f basic_apsetup.cfg
			</console>
		</step>

		<step no="2">
			<desc>Set up MP interface through sw menu</desc>
			<console target="ap2">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "user-profile datapath"
				-v "user-profile datapath vlan ${tb.vlan1}"
				-v "user-profile datapath attribute 2"
				-v "security-object autoap"
				-v "security-object autoap default-user-profile-attr 2"
				-v "hive ${hive.name}"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface eth0 shutdown"
				-f basic_apsetup.cfg
			</console>
		</step>

		<step no="2">
			<if>"${ap1.eth1.existed}" == "true"</if>
			<desc>Set up MP interface through sw menu</desc>
			<console target="ap2">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="3">
			<desc>Set SSID for mp </desc>
			<console target="ap2">
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "save config"
			</console>
		</step>

		<step no="3">
			<desc>show wifi1.1's mac of portal</desc>
			<log-file>ap1.wifi.mac_portal.log</log-file>
			<console target="ap1">
				-v "show interface wifi1.1"
				-v ""
			</console>
		</step>
		<step no="4">
			<desc>get wifi1.1' mac of portal</desc>
			<setvar name="ap1.wifi.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap1.wifi.mac_portal.log -i wifi1.1 -o aero -m -width
			</setvar>
		</step>

		<step no="5" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>check mesh network</desc>
			<log-file>amrp_nei_${loop_check.idx}.log</log-file>
			<console target="ap2">
				-v "interface wifi1 radio channel 36"
				-v "show amrp nei"
			</console>
			<log-match>-i "${ap1.wifi.mac}" -i "TWO-WAY"</log-match>
		</step>

		<property name="conn1.ssid" value="${ssid.name}" />
		<property name="conn1.proto" value="open" />		
		<include prefix="6" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="7">
			<desc>add a static arp on laptop</desc>
			<script>
				perl ${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "arp -s ${tb.unreach.ip1} ${test.mac}" -l ${log.dir}
			</script>
		</step>

		<step no="8">
			<desc>add a _ff and open fe debug on Portal </desc>
			<telnet target="ap1">
				-v "_ff id 1 src-mac ${sta1.tif.mac} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
			</telnet>
		</step>

		<step no="8">
			<desc>add a _ff and open fe debug on MP </desc>
			<console target="ap2">
				-v "_ff id 1 src-mac ${sta1.tif.mac} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
			</console>
		</step>
		<step no="9">
			<desc> laptop ping </desc>
			<script>
				perl ${bin.dir}/stafcmd.pl -d ${sta1.mif.ip} -v "ping ${tb.unreach.ip1} -n 1" -l ${log.dir};exit 0
			</script>
			<no-error-check />
		</step>

		<step no="10">
			<desc>show log buffer at Portal</desc>
			<log-file>buffer_portal.log</log-file>
			<telnet target="ap1" timeout="300">
				-v "show logging buffered";exit 0
			</telnet>
			<log-match>-c -i "eth0 Tx ${sta1.tif.mac} -> ${test.mac2}"</log-match>
			<log-match>-i "(o) eth0 ${sta1.tif.ip}->${tb.unreach.ip1}"</log-match>
			<log-match>-n -i "(o) wifi0.1 ${sta1.tif.ip}->${tb.unreach.ip1}"</log-match>
			<log-match>-n -i "(o) wifi1.1 ${sta1.tif.ip}->${tb.unreach.ip1}"</log-match>
		</step>
		
		<step no="10.1">
			<if>"${tb.bridge_support}" == "true" &amp;&amp; "${ap1.eth1.existed}" == "true"</if>
			<log-file>buffer_portal.log</log-file>
			<log-match>-i "(!) eth1 ${sta1.tif.ip}->${tb.unreach.ip1}"</log-match>
		</step>
		
		<step no="11">
			<desc>show log buffer at MP</desc>
			<log-file>buffer_mp.log</log-file>
			<console target="ap2" timeout="600">
				-v "show logging buffered" ;exit 0
			</console>
			<no-error-check />
			<log-match>-c -i "Tx:wifi1.1:1> ${sta1.tif.mac}->${test.mac2}"</log-match>
			<log-match>-i "(i) wifi0.1 ${sta1.tif.ip}->${tb.unreach.ip1}"</log-match>
			<log-match>-n -i "(o) wifi0.1 ${sta1.tif.ip}->${tb.unreach.ip1}"</log-match>
		</step>

	</stage>
</testcase>
