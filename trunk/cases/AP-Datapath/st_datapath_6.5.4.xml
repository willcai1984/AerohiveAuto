<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>pkt process for L3 roaming (two laptops roaming intercrossing)</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-construct this topology
		-ap1 and ap2 in different subnet
		-disable proxy-arp on all ap

		Test Procedure:
		-laptop1 and laptop2 link to ap1 ap2 respectively first, then laptop1
		roaming to ap2, laptop2 roaming to ap1(change the power or
		shutdown the interface)
		- laptop1 ping laptop2, should meet result 1.
		- laptop2 ping laptop1, should meet result 2.
	</description>
	<numofap>2</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn2.ssid" value="${ssid.name}-test" />

	<stage>
		<step no="1">
			<desc>
				-config ap1
				-disable proxy-arp on ap1
			</desc>
			<console target="ap1">
				-v "hive ${hive.name}123"
				-v "interface mgt0 hive ${hive.name}123"
				-v "interface mgt0 vlan ${tb.vlan2}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "ssid ${ssid.name}-test"
				-v "interface wifi0 ssid ${ssid.name}-test"
				-v "interface wifi0 ssid ${ssid.name}-test shutdown"
				-v "interface wifi0 radio channel 1"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 1"
				-v "ssid ${ssid.name} security-object FWtest"
				-v "ssid ${ssid.name}-test security-object FWtest"
				-v "mobility-policy FWtest dnxp"
				-v "user-profile ttt qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy FWtest attribute 1"
				-v "no forwarding-engine proxy-arp enable"
				-v "no bonjour-gateway enable"
			</console>
		</step>

		<step no="1.1">
			<desc>
				close dhcp client
			</desc>
			<console target="ap1">
				-v "no interface mgt0 dhcp client"
			</console>
		</step>

		<step no="1.2">
			<desc>
				open dhcp client
			</desc>
			<console target="ap1">
				-v "interface mgt0 dhcp client"
			</console>
		</step>

		<step no="1.3">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step1.3_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="1.4">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step1.3_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="1.5">
			<desc>
				show interface wifi0 info
			</desc>
			<log-file>show_interface_wifi0_info_ap1.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="1.6">
			<desc>
				get wifi0's mac address
			</desc>
			<setvar name="ap1.wifi0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi0_info_ap1.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="3">
			<desc>
				-config ap2
				-disable proxy-arp on ap2
			</desc>
			<console target="ap2">
				-v "hive ${hive.name}123"
				-v "interface mgt0 hive ${hive.name}123"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name} shutdown"
				-v "ssid ${ssid.name}-test"
				-v "interface wifi0 ssid ${ssid.name}-test"
				-v "interface wifi0 radio channel 1"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 1"
				-v "ssid ${ssid.name} security-object FWtest"
				-v "ssid ${ssid.name}-test security-object FWtest"
				-v "mobility-policy FWtest dnxp"
				-v "user-profile ttt qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy FWtest attribute 1"
				-v "no forwarding-engine proxy-arp enable"
				-v "no bonjour-gateway enable"
			</console>
		</step>

		<step no="3.1">
			<desc>
				show interface wifi0 info
			</desc>
			<log-file>show_interface_wifi0.2_info_ap2.log</log-file>
			<telnet target="ap2">
				-v "show interface wifi0.2"
			</telnet>
		</step>

		<step no="3.2">
			<desc>
				get wifi0's mac address
			</desc>
			<setvar name="ap2.wifi0.2.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface_wifi0.2_info_ap2.log -i wifi0.2 -o aero -m -width
			</setvar>
		</step>

		<include prefix="4" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta2, ap2" />

		<step no="5" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				Show roaming cache
			</desc>
			<log-file>step5_show_roaming_cache_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${ap1.wifi0.mac}"</log-match>
		</step>

		<step no="5.1" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				Show roaming cache
			</desc>
			<log-file>step5.1_show_roaming_cache_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta2.tif.mac} *${ap2.wifi0.2.mac}"</log-match>
		</step>

		<step no="5.2" delay="10" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show amrp dnxp neighbor
			</desc>
			<log-file>step5.2_show_amrp_dnxp_neighbor_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match>-c -i "${ap2.mgt0.ip}"</log-match>
		</step>

		<step no="5.3" delay="10" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show amrp dnxp neighbor
			</desc>
			<log-file>step5.3_show_amrp_dnxp_neighbor_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match>-c -i "${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="6">
			<desc>
				up wifi0 interface of ssidA on portal2
			</desc>
			<telnet target="ap2">
				-v "no interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="6.1">
			<desc>
				Shutdown wifi0 interface of ssidA on portal1
			</desc>
			<telnet target="ap1">
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="6.2" delay="10" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show route on ap1
			</desc>
			<log-file>step6.2_show_route_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "mgt0" -i "LTO"</log-match>
		</step>

		<step no="6.3" delay="10" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show route on ap2
			</desc>
			<log-file>step6.3_show_route_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show route"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "wifi0.1" -i "LTO"</log-match>
		</step>

		<step no="7">
			<desc>
				up wifi0 interface of ssidB on portal1
			</desc>
			<telnet target="ap1">
				-v "no interface wifi0 ssid ${ssid.name}-test shutdown"
			</telnet>
		</step>

		<step no="7.1">
			<desc>
				Shutdown wifi0 interface of ssidB on portal2
			</desc>
			<telnet target="ap2">
				-v "interface wifi0 ssid ${ssid.name}-test shutdown"
			</telnet>
		</step>

		<step no="7.2" delay="10" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show route on ap1
			</desc>
			<log-file>step7.2_show_route_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-c -i "${sta2.tif.mac}" -i "wifi0.2" -i "LTO"</log-match>
		</step>

		<step no="7.3" delay="10" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show route on ap2
			</desc>
			<log-file>step7.3_show_route_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show route"
			</telnet>
			<log-match>-c -i "${sta2.tif.mac}" -i "mgt0" -i "LTO"</log-match>
		</step>

		<step no="8" delay="10" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show station on ap2
			</desc>
			<log-file>step8_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
			<log-match>-n -c -i "${sta2.tif.mac}" -i "${sta2.tif.ip}"</log-match>
		</step>

		<step no="8.1" delay="10" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show station on ap1
			</desc>
			<log-file>step8.1_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-n -c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
			<log-match>-c -i "${sta2.tif.mac}" -i "${sta2.tif.ip}"</log-match>
		</step>

		<step no="9">
			<desc>
				open debug mode and clear log on AP1
			</desc>
			<telnet target="ap1">
				-v "clear log all"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_ff src-ip ${sta1.tif.ip} bidirectional"
			</telnet>
		</step>

		<step no="9.1">
			<desc>
				open debug mode and clear log on AP2
			</desc>
			<telnet target="ap2">
				-v "clear log all"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_ff src-ip ${sta1.tif.ip} bidirectional"
			</telnet>
		</step>

		<include prefix="10" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5" />

		<step no="11">
			<desc>
				show logging buffered on ap1
			</desc>
			<log-file>step11_show_log_buffered.log</log-file>
			<telnet target="ap1" timeout="120">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(r\) mgt0 ${sta1.tif.ip}-&gt;${sta2.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-i "(o) wifi0.2 ${sta1.tif.ip}-&gt;${sta2.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(i) wifi0.2 ${sta2.tif.ip}-&gt;${sta1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-i "(i) mgt0 ${ap1.mgt0.ip}-&gt;${ap2.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-i "(o) eth0 ${ap1.mgt0.ip}-&gt;${ap2.mgt0.ip}" -i "proto(47)"</log-match>
		</step>

		<step no="11.1">
			<desc>
				show logging buffered on ap2
			</desc>
			<log-file>step11.1_show_log_buffered.log</log-file>
			<telnet target="ap2" timeout="120">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(r\) mgt0 ${sta2.tif.ip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-i "(i) mgt0 ${ap2.mgt0.ip}-&gt;${ap1.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-i "(o) eth0 ${ap2.mgt0.ip}-&gt;${ap1.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-i "(o) wifi0.1 ${sta2.tif.ip}-&gt;${sta1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-i "(i) wifi0.1 ${sta1.tif.ip}-&gt;${sta2.tif.ip}" -i "icmp-echo-req"</log-match>
		</step>

		<step no="12">
			<desc>
				clear log on AP1
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<step no="12.1">
			<desc>
				clear log on AP2
			</desc>
			<telnet target="ap2">
				-v "clear log all"
			</telnet>
		</step>

		<include prefix="13" file="subs/sta_ping.xml" args="sta2, ${sta1.tif.ip}, 5" />

		<step no="13">
			<desc>
				show logging buffered on ap1
			</desc>
			<log-file>step13_show_log_buffered.log</log-file>
			<telnet target="ap1" timeout="180">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(r\) mgt0 ${sta1.tif.ip}-&gt;${sta2.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-i "(i) mgt0 ${ap1.mgt0.ip}-&gt;${ap2.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-i "(o) eth0 ${ap1.mgt0.ip}-&gt;${ap2.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-i "(o) wifi0.2 ${sta1.tif.ip}-&gt;${sta2.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-i "(i) wifi0.2 ${sta2.tif.ip}-&gt;${sta1.tif.ip}" -i "icmp-echo-req"</log-match>
		</step>

		<step no="13.1">
			<desc>
				show logging buffered on ap2
			</desc>
			<log-file>step13.1_show_log_buffered.log</log-file>
			<telnet target="ap2" timeout="180">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(r\) mgt0 ${sta2.tif.ip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-i "(o) wifi0.1 ${sta2.tif.ip}-&gt;${sta1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-i "(i) wifi0.1 ${sta1.tif.ip}-&gt;${sta2.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-i "(i) mgt0 ${ap2.mgt0.ip}-&gt;${ap1.mgt0.ip}" -i "proto(47)"</log-match>
			<log-match>-i "(o) eth0 ${ap2.mgt0.ip}-&gt;${ap1.mgt0.ip}" -i "proto(47)"</log-match>
		</step>
	</stage>
</testcase>