<testcase>
    <name>tc_ST_Datapath_9.1.2.xml</name>
    <emaildesc> when a new laptop connect to ap(portal), make sure the ap send gratuitous arp to eth0 (laptop is not in native vlan) </emaildesc>
<priority>High</priority>
    <description>
    Topology to use
                     laptop----------ap-------------switch
    Objective
    when a new laptop connect to ap(portal), make sure the ap send gratuitous arp to eth0 (laptop is not in native vlan)
    Pre-condition
    -laptop connect with ap, pass authentication
    Test procedure
    - Laptop associates with ap
    - Ensure that route about this laptop can be added
    - Capture packets from eth0. result 1.
    Expect result
    1: make sure box has send the gratuitous arp in right vlan

    </description>
    <id>
        <manual>1234</manual>
        <auto>3456</auto>

    </id>
    <code>
    </code>
    <stage>
		    <step>
            <name>0</name>
            <desc>Set up ap1's interface through sw menu</desc>
            <script>perl $U_COMMONBIN/clicfg.pl -o 80 -d $G_TS_IP0 -i 782 -e $G_TS_CONSNAME0_0_0 -m $U_AP_PROMPT -p $G_TS_PWD0 -u $G_TS_USR0 -l $G_CURRENTLOG -v "interface mgt0 vlan $G_VLAN_1" -v "interface mgt0 native-vlan $G_VLAN_1" -v "user-profile datapath" -v "user-profile datapath vlan $G_VLAN_2" -v "user-profile datapath attribute $G_UPID_3" -v "security-object autoap" -v "security-object autoap security protocol-suite wpa-auto-psk ascii $G_TS_PWD0" -v "security-object autoap default-user-profile-attr $G_UPID_3" -f $U_TESTCONF/basic_apsetup.cfg</script>  
            <passed></passed>
            <failed></failed>
        </step>
		<step>
            <name>1</name>
            <desc>show mgt0's ip of ap1</desc>	  
            <script>sleep 10;perl $U_COMMONBIN/clicfg.pl -o 80 -d $G_TS_IP0 -i 782 -e  $G_TS_CONSNAME0_0_0 -m $U_AP_PROMPT -p $G_TS_PWD0 -u $G_TS_USR0 -l $G_CURRENTLOG   -v  "show interface mgt0" -t mgt0_info.log</script>
            <passed></passed>
            <failed></failed>
			<noerrorcheck>1</noerrorcheck>
        </step>
		<step>
            <name>2</name>
            <desc>Get ap1's ip</desc>
            <getenv>echo MGT_IP=$(perl $U_COMMONBIN/getrmtip.pl -f $G_CURRENTLOG/mgt0_info.log  -i mgt0  -o aero -nomask)</getenv>
            <passed></passed>
            <failed></failed>
        </step>
        <step>
            <name>3</name>
            <desc>Remove the current ~/.ssh/known_hosts of Master PC to avoid the denial access to the DUT</desc>	            <script> rm -f ~/.ssh/known_hosts </script>
            <passed></passed>
            <failed></failed>
        </step>
        <step>
            <name>4</name>
            <desc>Set SSID for ap1</desc>	  
            <script> perl $U_COMMONBIN/clicfg.pl -o 80 -d $G_TS_IP0 -i 782 -e  $G_TS_CONSNAME0_0_0 -m $U_AP_PROMPT -p $G_TS_PWD0 -u $G_TS_USR0 -l $G_CURRENTLOG   -v  "ssid $G_TESTBED-$G_PROD_DESC0"   -v "ssid $G_TESTBED-$G_PROD_DESC0 security-object autoap"  -v "interface wifi0 ssid $G_TESTBED-$G_PROD_DESC0"  -v "save config" </script>
            <passed></passed>
            <failed></failed>
        </step>
        <step>
            <name>5</name>
            <desc>ifconfig to show the ip add</desc>
            <script>sleep 10;perl $U_COMMONBIN/clicfg.pl -o 80 -i 22 -d ${G_HOST_TIP1_0_0%/*} -m ".*#" -p $G_HOST_PWD1 -u $G_HOST_USR1 -l $G_CURRENTLOG \
            -v "ifconfig $G_HOST_IF1_1_0" \
            -t ifconfig.log
            </script>
            <passed></passed>
            <failed></failed>
        </step>
		  <step>
            <name>6</name>
            <desc>Get laptop's mac</desc>
            <getenv>echo LAPTOP_MAC=$(perl $U_COMMONBIN/getrmtip.pl -f $G_CURRENTLOG/ifconfig.log  -i $G_HOST_IF1_1_0 -m -width)</getenv>
            <passed></passed>
            <failed></failed>
        </step>
		<step>
         <name>7</name>
         <desc>open debug cli</desc>
         <script>perl $U_COMMONBIN/clicfg.pl  -o 80 -d $G_TS_IP0 -i 782 -e  $G_TS_CONSNAME0_0_0 -m $U_AP_PROMPT -p $G_TS_PWD0 -u $G_TS_USR0 -l $G_CURRENTLOG  -v "_ff src-mac $LAPTOP_MAC etype 0806 bi" -v "_kdebug fe ba" -v "_kdebug fe_arp ba" -v "clear log all"</script>
		<noerrorcheck>1</noerrorcheck>
         <passed></passed>
         <failed></failed>
        </step>
        <step>
            <name>8</name>
            <desc>transport a ssid profile to client</desc>
            <script>perl $U_COMMONBIN/clicfg.pl -o 10  -i 22 -d ${G_HOST_TIP1_0_0%/*} -m $U_AP_PROMPT -p $G_HOST_PWD1 -u $G_HOST_USR1 -l $G_CURRENTLOG \
            -v "echo \"ctrl_interface=/var/run/wpa_supplicant\" > /tmp/wpa_supplicant.cfg" \
            -v "ifconfig $G_HOST_IF1_1_0 down"
            </script>
            <noerrorcheck></noerrorcheck> 
            <passed></passed>
            <failed></failed>
        </step>
        <step>
            <name>9</name>
            <desc>start the wpa_supplicant on client side</desc>
            <script>perl $U_COMMONBIN/clicfg.pl -o 20  -i 22 -d ${G_HOST_TIP1_0_0%/*} -m $U_AP_PROMPT -p $G_HOST_PWD1 -u $G_HOST_USR1 -l $G_CURRENTLOG \
            -v "ifconfig $G_HOST_IF1_1_0 up";			
            sleep 5;
            perl $U_COMMONBIN/clicfg.pl -o 20  -i 22 -d ${G_HOST_TIP1_0_0%/*} -m $U_AP_PROMPT -p $G_HOST_PWD1 -u root -l $G_CURRENTLOG \
			-v "killall wpa_supplicant" \
            -v "wpa_supplicant -i $G_HOST_IF1_1_0 -c /tmp/wpa_supplicant.cfg -B" 
            </script>
            <passed></passed>
            <failed></failed>
        </step>        
        <step>
            <name>10</name>
            <desc>config the laptop to apply the ssid profile,then start to associate</desc>
            <script> perl $U_COMMONBIN/clicfg.pl -o 10 -i 22 -d ${G_HOST_TIP1_0_0%/*} -m ">|.*#" -p $G_HOST_PWD1 -u $G_HOST_USR1 -l $G_CURRENTLOG \
            -v "wpa_cli" \
            -v "reconfig" \
            -v "add_network" \
            -v "set_network 0 ssid \"$G_TESTBED-$G_PROD_DESC0\"" \
            -v "set_network 0 key_mgmt WPA-PSK" \
			-v "set_network 0 proto WPA" \
			-v "set_network 0 pairwise TKIP" \
            -v "set_network 0 group TKIP" \
			-v "set_network 0 psk \"aerohive\"" \
			-v "set_network 0 priority 100" \
            -v "select_network 0" \
            -v "reas" \
            -v "quit"
            </script>
            <passed></passed>
            <failed></failed>
        </step>
		<step>
            <name>11</name>
            <desc>show the connection status</desc>
            <script>sleep 60;perl $U_COMMONBIN/clicfg.pl -o 10  -i 22 -d ${G_HOST_TIP1_0_0%/*} -m ">|.*#" -p $G_HOST_PWD1 -u  $G_HOST_USR1 -l $G_CURRENTLOG \
            -v "wpa_cli" \
            -v "stat" \
            -v "quit" \
            -t stat.log
            </script>
            <passed></passed>
            <failed></failed>
        </step>        
        <step>
            <name>12</name>
            <desc>check if the client was associated successfully</desc>
            <script>perl $U_COMMONBIN/searchoperation.pl -f $G_CURRENTLOG/stat.log \
            -e "wpa_state=COMPLETED" </script>
            <passed></passed>
            <failed></failed>
        </step>
		<step>
         <name>13</name>
         <desc>show log buf on ap</desc>
         <script>perl $U_COMMONBIN/clicfg.pl -o 80 -d $G_TS_IP0 -i 782 -e  $G_TS_CONSNAME0_0_0 -m $U_AP_PROMPT -p $G_TS_PWD0 -u $G_TS_USR0 -l $G_CURRENTLOG -v "show log buf" -t log_buf.log</script>
		<noerrorcheck>1</noerrorcheck>
         <passed></passed>
         <failed></failed>
        </step>		
		<step>
         <name>14</name>
		 <desc>check log buffer step 1</desc>
		<script>perl $U_COMMONBIN/searchoperation.pl -f $G_CURRENTLOG/log_buf.log -c -e "\[fe_arp\]: $G_PROD_IF_ETH0_0_0 send gratuitous ARP $LAPTOP_MAC vlan $G_VLAN_2"</script>
		 <passed></passed>
		  <failed></failed>
		</step>	
		<step>
         <name>15</name>
		 <desc>check log buffer step 2</desc>
		<script>perl $U_COMMONBIN/searchoperation.pl -f $G_CURRENTLOG/log_buf.log -n -c -e "\[fe_arp\]: $G_PROD_IF_ETH1_0_0 send gratuitous ARP $LAPTOP_MAC vlan $G_VLAN_2"</script>
		 <passed></passed>
		  <failed></failed>
		</step>		
    </stage>
</testcase>
