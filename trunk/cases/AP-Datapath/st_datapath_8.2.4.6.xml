<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>proxy arp process for L3 roaming (two laptops roaming)</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		-construct this topology
		-ap1 and ap2 in different subnet

		Test Procedure:

		-laptop1 laptop3 link to ap1 first, then all roaming to ap2(change the
		power or shutdown the interface)
		-make sure ap2 has the arp entries of laptop1 laptop3, clear arp on
		laptop1, then laptop1 ping laptop3, result 1
	</description>
	<numofap>2</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />

	<stage>
		<if>"${ap1.wifi1.existed}" =="true" &amp;&amp; "${ap2.wifi1.existed}" =="true"</if>

		<step no="pre0.2">
			<desc>
				-Config ap1's vlan and native-vlan
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="pre0.3" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>pre0.3_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="pre0.4">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/pre0.3_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="pre0.4a">
			<desc>get mac address of ap1</desc>
			<setvar name="ap1.mgt0.mac">
				${bin.dir}/getbyrexp.py -p "MAC addr=([\da-fA-F:]+)" -f ${log.dir}/pre0.3_show_interface_mgt0_info.log -t str
			</setvar>
		</step>

		<step no="pre0.5">
			<desc>
				-Config ap2's vlan and native-vlan
			</desc>
			<console target="ap2">
				-v "interface mgt0 vlan ${tb.vlan2}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="pre0.6">
			<desc>
				close dhcp client
			</desc>
			<console target="ap2">
				-v "no interface mgt0 dhcp client"
			</console>
		</step>

		<step no="pre0.7">
			<desc>
				open dhcp client
			</desc>
			<console target="ap2">
				-v "interface mgt0 dhcp client"
			</console>
		</step>

		<step no="pre0.8" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>pre0.8_show_interface_mgt0_info.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="pre0.9">
			<desc>Get ap2's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/pre0.8_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="pre0.9a">
			<desc>get mac address of ap2</desc>
			<setvar name="ap2.mgt0.mac">
				${bin.dir}/getbyrexp.py -p "MAC addr=([\da-fA-F:]+)" -f ${log.dir}/pre0.8_show_interface_mgt0_info.log -t str
			</setvar>
		</step>

		<step no="pre1.1">
			<desc>
				Config AP1
			</desc>
			<console target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${conn1.ssid}"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 77"
				-v "ssid ${conn1.ssid} security-object FWtest"
				-v "mobility-policy FWtest dnxp"
				-v "user-profile ${tb.vlan1} qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy FWtest attribute 77"
				-v "interface wifi1 radio channel 165"
				-v "interface wifi0 radio channel 1"
				-v "amrp interface eth0 priority 100"
			</console>
		</step>

		<step no="pre1.2">
			<desc>
				Config AP2: -ap1 and ap2 in different subnet
			</desc>
			<console target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${conn1.ssid}"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "interface wifi0 ssid ${conn1.ssid} shutdown"
				-v "interface wifi1 radio channel 165"
				-v "interface wifi0 radio channel 1"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 77"
				-v "ssid ${conn1.ssid} security-object FWtest"
				-v "mobility-policy FWtest dnxp"
				-v "user-profile ${tb.vlan1} qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy FWtest attribute 77"
				-v "amrp interface eth0 priority 50"
			</console>
		</step>

		<step no="pre2.1" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				show roaming neighbor on AP1
			</desc>
			<log-file>step_pre2.1_show_roaming_neighbor_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-c -i "${ap2.mgt0.mac}" -i "${ap2.mgt0.ip}"</log-match>
		</step>

		<step no="pre2.2" type="loop-check" loop-max-times="3" loop-interval="10">
			<desc>
				show roaming neighbor on AP2
			</desc>
			<log-file>step_pre2.2_show_roaming_neighbor_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-c -i "${ap1.mgt0.mac}" -i "${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="pre2.3" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				show amrp dnxp neighbor on AP1
			</desc>
			<log-file>step_pre2.3_show_amrp_dnxp_neighbor_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match>-c -i "${ap2.mgt0.mac}" -i "${ap2.mgt0.ip}/24" -i "L3"</log-match>
		</step>

		<step no="pre2.4" type="loop-check" loop-max-times="3" loop-interval="10">
			<desc>
				show amrp dnxp neighbor on AP2
			</desc>
			<log-file>step_pre2.4_show_amrp_dnxp_neighbor_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match>-c -i "${ap1.mgt0.mac}" -i "${ap1.mgt0.ip}/24" -i "L3"</log-match>
		</step>

		<include prefix="1.1a" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<include prefix="1.1b" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta2, ap1" />

		<step no="translate_mac">
			<multi-setvar>
				echo "sta1.tif.mac=$(echo ${sta1.tif.mac} | tr "A-F" "a-f")"
				echo "sta2.tif.mac=$(echo ${sta2.tif.mac} | tr "A-F" "a-f")"
			</multi-setvar>
		</step>

		<step no="1.2">
			<desc>
				open wifi0 on ap2 for roaming to AP2
			</desc>
			<telnet target="ap2">
				-v "no interface wifi0 ssid ${conn1.ssid} shutdown"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				On ap1 interface wifi0 ssid shutdown
			</desc>
			<telnet target="ap1">
				-v "interface wifi0 ssid ${conn1.ssid} shutdown"
			</telnet>
		</step>

		<step no="1.4" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check tunnel build succeed
			</desc>
			<log-file>step1.4_show_route_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show route"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${ap2.mgt0.mac}" -i "77" -i "LTO"</log-match>
			<log-match>-c -i "${sta2.tif.mac}" -i "${ap2.mgt0.mac}" -i "77" -i "LTO"</log-match>
		</step>

		<step no="1.5">
			<desc>
				show tunnel build succeed
			</desc>
			<log-file>step1.5_show_route.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${ap1.mgt0.mac}" -i "mgt0" -i "77" -i "LTO"</log-match>
			<log-match>-c -i "${sta2.tif.mac}" -i "${ap1.mgt0.mac}" -i "mgt0" -i "77" -i "LTO"</log-match>
		</step>

		<step no="1.6" delay="10" type="loop-check" loop-max-times="30" loop-interval="10">
			<desc>
				show station on ap2
			</desc>
			<log-file>step1.6_show_station_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
			<log-match>-c -i "${sta2.tif.mac}" -i "${sta2.tif.ip}"</log-match>
		</step>

		<include prefix="2.1" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 3" />

		<step no="2.2" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				make sure ap2 has the arp entries of laptop1 laptop3
			</desc>
			<log-file>step2.2_show_arp_cache_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show arp-cache"
			</telnet>
			<log-match>-c -i "${sta2.tif.mac}" -i "${sta2.tif.ip}"</log-match>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>

		<step no="2.3a">
			<desc>
				enable debug on AP1
			</desc>
			<telnet target="ap1">
				-v "_ff id 1 src-ip ${sta1.tif.ip} protocol 1 bidirectional"
				-v "_ff id 2 src-ip ${sta2.tif.ip} protocol 1 bidirectional"
				-v "_ff id 3 src-mac ${sta1.tif.mac} etype 0806 bidirectional"
				-v "_kdebug fe_arp basic"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
			</telnet>
		</step>

		<step no="2.3b">
			<desc>
				enable debug on AP2
			</desc>
			<telnet target="ap2">
				-v "_ff id 1 src-ip ${sta1.tif.ip} protocol 1 bidirectional"
				-v "_ff id 2 src-ip ${sta2.tif.ip} protocol 1 bidirectional"
				-v "_ff id 3 src-mac ${sta1.tif.mac} etype 0806 bidirectional"
				-v "_kdebug fe_arp basic"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
			</telnet>
		</step>

		<step no="3.1a">
			<desc>
				-clear arp on windows laptop1
			</desc>
			<if>"${tb.os}" == "windows"</if>
			<log-file>step3.1a_clear_sta1_arp.log</log-file>
			<staf target="sta1">
				-v "arp -d"
			</staf>
		</step>

		<step no="3.1b">
			<desc>
				-clear arp on linux laptop1
			</desc>
			<if>"${tb.os}" == "linux"</if>
			<log-file>step3.1b_clear_sta1_arp.log</log-file>
			<ssh target="sta1">
				-v "ip neigh flush dev ${sta1.tif.name}"
			</ssh>
		</step>

		<include prefix="3.2" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 10" />

		<step no="3.3" delay="5">
			<desc>
				check log info on AP2
			</desc>
			<log-file>step3.3_show_log_buff.log</log-file>
			<telnet target="ap2" timeout="300">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(i\) wifi0.\d+ ${sta1.tif.mac}-&gt;ffff:ffff:ffff arp ${sta1.tif.ip}\(${sta1.tif.mac}\)-&gt;${sta2.tif.ip}\(0000:0000:0000\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[fe\]: proxy-ARP, reinject ARP reply pak back to flow" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(o\) wifi0.\d+ ${sta2.tif.mac}-&gt;${sta1.tif.mac} arp ${sta2.tif.ip}\(${sta2.tif.mac}\)-&gt;${sta1.tif.ip}\(${sta1.tif.mac}\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(o\) wifi0.\d+ ${sta2.tif.mac}-&gt;${sta1.tif.mac} arp ${sta2.tif.ip}\(${sta2.tif.mac}\)-&gt;${sta1.tif.ip}\(${sta1.tif.mac}\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(o\)\s*wifi0.1\s*${sta2.tif.ip}-&gt;${sta1.tif.ip}.*icmp-echo-reply" -ps p "\(i\)\s*wifi0.1\s*${sta2.tif.ip}-&gt;${sta1.tif.ip}.*icmp-echo-reply" p "\(o\)\s*wifi0.1\s*${sta1.tif.ip}-&gt;${sta2.tif.ip}.*icmp-echo-req" p0 "\(i\)\s*mgt0\s*${ap2.mgt0.ip}-&gt;${ap1.mgt0.ip}.*proto\(47\)" p0 "\(r\)\s*mgt0\s*{ap1.mgt0.ip}-&gt;${ap2.mgt0.ip}.*proto(47)" p0 "\(o\)\s*eth0\s*${ap2.mgt0.ip}-&gt;{ap1.mgt0.ip}.*proto(47)" -e "\(i\)\s*wifi0.1\s*${sta1.tif.ip}-&gt;${sta2.tif.ip}.*icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
			<failed>next</failed>
		</step>

		<step no="3.4">
			<desc>
				check log info on AP1
			</desc>
			<log-file>step3.4_show_log_buff.log</log-file>
			<telnet target="ap1" timeout="300">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(r\) mgt0 ${sta1.tif.ip}-&gt;${sta2.tif.ip}.+ icmp-echo-req" -c 0 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(u\) mgt0 ${sta1.tif.ip}-&gt;${sta2.tif.ip}.+ icmp-echo-req" -c 0 -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
	</stage>
</testcase>