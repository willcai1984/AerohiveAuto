<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Tracing a client with mac auth, local radius</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-AP connected to capwap server success
		-config a ssid with mac open
		-config the AP as local radius
		-add the mac addr of STA1 to radius server

		Test Procedure:
		-add the STA1 to monitor
		'exec client-monitor 001e:65f2:5628'
		-check the Client Trace Table, result 1
		-STA1 connects to ssid, check debug info, '_de capwap itk' to make
		sure, result 2,3,4
		-revoke monitor of STA1
		'no exec client-monitor 0026:b654:b335'
		- add the STA2 to monitor
		-STA2 connects to AP, check debug, result 5
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn2.ssid" value="${ssid.name}" />
	<property name="conn2.auth_negative_test" value="true" />
	<property name="conn2.dhcp_negative_test" value="true" />

	<stage>
		<step no="0">
			<desc>
				-show interface info
			</desc>
			<log-file>step0_sta1_ifconfig.log</log-file>
			<ssh target="sta1">
				-v "ifconfig ${sta1.tif.name} up"
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="get.mac.linux">
			<desc>
				-get sta mac
			</desc>
			<setvar name="sta1.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step0_sta1_ifconfig.log -i ${sta1.tif.name} -m -uppercase -width
			</setvar>
		</step>

		<step no="1">
			<desc>setup ap</desc>
			<telnet target="ap1">
				-v "capwap client server name ${pub.hm1.ip}"
				-v "capwap client enable"
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "security-object ${ssid.name} security aaa radius-server primary ${ap1.mgt0.ip}"
				-v "security-object ${ssid.name} security additional-auth-method mac-based-auth"
				-v "aaa mac-format case-sensitivity upper-case"
				-v "aaa mac-format delimiter colon"
				-v "aaa mac-format style two-delimiter"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 1"
				-v "user-profile ${ssid.name} vlan-id 1 attribute 1"
			</telnet>
		</step>

		<step no="2" delay="30" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>check the capwap connection is success</desc>
			<log-file>capwap_conn_check_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show capwap client"
			</telnet>
			<log-match>-i "RUN state: Connected securely to the CAPWAP server"</log-match>
		</step>

		<step no="3">
			<desc>STA up wifi interface</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "ifconfig ${sta1.tif.name} up"
			</ssh>
		</step>

		<step no="3.1">
			<desc>STA2 up wifi interface</desc>
			<ssh target="sta2" prompt=">|.*#">
				-v "ifconfig ${sta2.tif.name} up"
			</ssh>
		</step>

		<step no="4.1">
			<desc>get mac of sta1's sta1.tif.name</desc>
			<setvar name="sta1.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m -width 2
			</setvar>
		</step>

		<step no="4.2">
			<desc>get mac of sta2's ${sta2.tif.name}</desc>
			<setvar name="sta2.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta2.mif.ip} -u ${sta2.user} -p ${sta2.passwd} -i ${sta2.tif.name} -m -width 2
			</setvar>
		</step>

		<step no="5">
			<desc>config user</desc>
			<telnet target="ap1">
				-v "user ${sta1.mac}"
				-v "user ${sta1.mac} password ${sta1.mac}"
				-v "user-group group_${tb.name}"
				-v "user ${sta1.mac} group group_${tb.name}"
				-v "aaa radius-server local db-type local"
				-v "aaa radius-server local user-group group_${tb.name}"
				-v "aaa radius-server local enable"
			</telnet>
		</step>

		<step no="6">
			<desc>add STA1 to monitor</desc>
			<telnet target="ap1">
				-v "exec client-monitor ${sta1.tif.mac}"
			</telnet>
		</step>

		<step no="7">
			<desc>check the Client Trace Table</desc>
			<log-file>check_client_trace_table.log</log-file>
			<telnet target="ap1">
				-v "_show client-monitor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Entry\(${sta1.tif.mac}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="8">
			<desc>enable debug on AP trace the client</desc>
			<telnet target="ap1">
				-v "_debug capwap itk"
			</telnet>
		</step>

		<step no="8.1">
			<desc>clear log all</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<include prefix="9" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="10">
			<desc>check the STA1 connection process</desc>
			<log-file>trace_client1.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)module\(802.11\).*?report sta\(${sta1.tif.mac}\).*?Rx auth &lt;open&gt; \(frame 1.*?step\(3\/6\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)module\(802.11\).*?report sta\(${sta1.tif.mac}\).*?Tx auth &lt;open&gt; \(frame 2.*?step\(4\/6\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)module\(802.11\).*?report sta\(${sta1.tif.mac}\).*?Rx assoc req.*?step\(5\/6\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)module\(802.11\).*?report sta\(${sta1.tif.mac}\).*?Tx assoc resp &lt;accept&gt;.*?step\(6\/6\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)module\(AUTH\).*?report sta\(${sta1.tif.mac}\).*?MAC auth is starting.*?step\(1\/3\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)module\(AUTH\).*?report sta\(${sta1.tif.mac}\).*?Open auth is starting.*?step\(2\/3\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)module\(AUTH\).*?report sta\(${sta1.tif.mac}\).*?Authentication is successfully finished.*?step\(0\/0\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)module\(DHCP\).*?report sta\(${sta1.tif.mac}\).*?DHCP session completed for station.*?step\(0\/0\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "module(RADIUS) in AP" -i "RADIUS: accepted user '${sta1.tif.mac}' through the NAS at ${ap1.mgt0.ip}"</log-match>
<!--		<log-match>-c -i "authentication OK, username ${sta1.tif.mac}, service (unknown)"</log-match> -->
			<log-match>-c -i "authentication OK, username" -i "${sta1.tif.mac}" -i "service \(unknown\)" -re</log-match>
		</step>

		<step no="11">
			<desc>
				-revoke monitor of STA1
				- add the STA2 to monitor
			</desc>
			<telnet target="ap1">
				-v "no exec client-monitor ${sta1.tif.mac}"
				-v "exec client-monitor ${sta2.tif.mac}"
				-v "_debug capwap itk"
			</telnet>
		</step>

		<step no="11.1">
			<desc>clear log on ap1</desc>
			<telnet target="ap1">
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="11.2">
			<desc>check the Client Trace Table</desc>
			<log-file>step11.2_check_client_trace_table.log</log-file>
			<telnet target="ap1">
				-v "_show client-monitor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Entry\(${sta1.tif.mac}" -c 0 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Entry\(${sta2.tif.mac}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<include prefix="12" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta2, ap1" />

		<step no="13" delay="10">
			<desc>check the STA2 connection process</desc>
			<log-file>trace_client2.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)module\(AUTH\).*?report sta\(${sta2.tif.mac}\).*?MAC auth is starting.*?step\(1\/3\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)module\(RADIUS\).*?report sta\(${sta2.tif.mac}\).*?RADIUS: rejected user '${sta2.tif.mac}' through the NAS at ${ap1.mgt0.ip}.*?step\(0\/0\) FAILED" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)module\(802.11\).*?report sta\(${sta2.tif.mac}\).*?Tx disassoc \(reason 1.*?step\(0\/0\) FAILED" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)module\(AUTH\).*?report sta\(${sta2.tif.mac}\).*?MAC auth is failed.*?step\(0\/0\) FAILED" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "authentication FAILED, type RADIUS, username" -i "${sta2.tif.mac}"</log-match>
		</step>
	</stage>
	
			 <failed-process>
	 <stage>
        <step no="fp_1">
			<desc>
				shutdown wlan interface on sta
			</desc>
			<log-file>fp_1.log</log-file>
			<ssh target="sta1" prompt=".*#">
            -v "ifconfig ${sta1.tif.name} down"
			</ssh>
		</step>
		
		<step no="fp_2">
			<desc>
				shutdown wlan interface on sta
			</desc>
			<log-file>fp_2.log</log-file>
			<ssh target="sta2" prompt=".*#">
            -v "ifconfig ${sta2.tif.name} down"
			</ssh>
		</step>
		</stage>
    </failed-process>
	
</testcase>