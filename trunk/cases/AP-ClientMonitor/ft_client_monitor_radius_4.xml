<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Trace eap-leap auth on local radius</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		-AP connected to capwap server success
		-config a ssid with wpa 802.1x
		-config the AP as local radius

		Test Procedure:

		-add the STA1,2 to monitor
		'exec client-monitor 001e:65f2:5628'
		-check the Client Trace Table, result 1
		-STA1 connects to ssid with EAP-LEAP, correct password, check debug
		info, '_de capwap itk' to make sure, result 2,3,4
		-STA2 connects to ssid with wrong passwd, result 5
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn1.proto" value="wpa-aes-8021x" />
	<property name="conn1.username" value="${pub.radius1.username}" />
	<property name="conn1.passwd" value="${pub.radius1.passwd}" />
	<property name="conn1.eap_type" value="LEAP" />
	<property name="conn2.ssid" value="${ssid.name}" />
	<property name="conn2.proto" value="wpa-aes-8021x" />
	<property name="conn2.username" value="${pub.radius1.username}" />
	<property name="conn2.passwd" value="123456789" />
	<property name="conn2.eap_type" value="LEAP" />
	<property name="conn2.auth_negative_test" value="true" />

	<stage>
		<step no="0.1">
			<desc>ifconfig to show the ip add</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name} up"
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="0.2">
			<desc>Get laptop1's mac</desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -m -width
			</setvar>
		</step>

		<step no="0.3">
			<desc>ifconfig to show the ip add</desc>
			<log-file>ifconfig2.log</log-file>
			<ssh target="sta2" timeout="80">
				-v "ifconfig ${sta2.tif.name} up"
				-v "ifconfig ${sta2.tif.name}"
			</ssh>
		</step>

		<step no="0.4">
			<desc>Get laptop2's mac</desc>
			<setvar name="sta2.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig2.log -i ${sta2.tif.name} -m -width
			</setvar>
		</step>

		<step no="1">
			<desc>
				-AP connected to capwap server success
			</desc>
			<telnet target="ap1">
				-v "capwap client enable"
				-v "capwap client server name ${pub.hm1.ip}"
			</telnet>
		</step>

		<include prefix="1" file="subs/ssid_and_so_create.xml" args="ap1, wpa-auto-8021x" />

		<step no="ex.hive">
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="2">
			<desc>set security-object parameters</desc>
			<telnet target="ap1">
				-v "security-object autoap security aaa radius primary ${ap1.mgt0.ip}"
				-v "save config"
			</telnet>
		</step>

		<step no="3">
			<desc>Set radius service for DUT1 </desc>
			<telnet target="ap1">
				-v "user-group autotest"
				-v "user ${pub.radius1.username}"
				-v "user ${pub.radius1.username} pass ${pub.radius1.passwd}"
				-v "user ${pub.radius1.username} group autotest"
				-v "aaa rad lo db local"
				-v "aaa radius-server local user-group autotest"
				-v "aaa radius-server lo enable"
				-v "save config"
				-v "save config users"
				-v "save radius-server-key radius-server tftp://${pub.tftp1.tip}:certs/cacert.pem"
				-v "save radius-server-key radius-server tftp://${pub.tftp1.tip}:certs/server_cert.pem"
				-v "save radius-server-key radius-server tftp://${pub.tftp1.tip}:certs/server_key.pem"
				-v "aaa radius-server local sta-auth ca-cert cacert.pem server-cert server_cert.pem private-key server_key.pem"
				-v "aaa radius-server local sta-auth type tls check-cert-cn"
			</telnet>
		</step>

		<include prefix="3" file="subs/ssid_bind_and_check.xml" args="ap1, wpa-auto-8021x" />

		<step no="5">
			<desc>
				-add the STA1,2 to monitor
				'exec client-monitor 001e:65f2:5628'
			</desc>
			<telnet target="ap1">
				-v "exec client-monitor ${sta1.tif.mac}"
				-v "exec client-monitor ${sta2.tif.mac}"
			</telnet>
		</step>

		<step no="6">
			<desc>
				-check the Client Trace Table, result 1
			</desc>
			<log-file>check_the_Client_Trace_Table.log</log-file>
			<telnet target="ap1">
				-v "_sh client-monitor"
				-v "_debug capwap itk"
			</telnet>
			<log-match>-c -i "Client Trace Table(sta_num=2)"</log-match>
			<log-match>-c -i "Entry(${sta1.tif.mac} cookie_num=1): 1"</log-match>
			<log-match>-c -i "Entry(${sta2.tif.mac} cookie_num=1): 1"</log-match>
		</step>
		
		<include prefix="7" file="subs/sta_wifi_connect_${tb.os}_new.xml" rargs="conn1, sta1, ap1" />

		<step no="7.1">
			<desc>
				check log
			</desc>
			<log-file>step7.1_show_log.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
				-v "clear log all"
			</telnet>
			<log-match>-c -i "Eap start with type leap"</log-match>
			<log-match>-c -i "Receive MS-CHAP response from the client"</log-match>
			<log-match>-c -i "MS-CHAP response verified successfully"</log-match>
			<log-match>-c -i "RADIUS: accepted user '${pub.radius1.username}' through the NAS at ${ap1.mgt0.ip}."</log-match>
			<no-error-check />
		</step>
		<include prefix="8" file="subs/sta_wifi_connect_${tb.os}_new.xml" rargs="conn2, sta2, ap1" />

		<step no="8.1">
			<desc>
				check log
			</desc>
			<log-file>step8.1_show_log.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<log-match>-c -i "MS-CHAP response verified failure"</log-match>
			<log-match>-c -i "RADIUS: rejected user '${pub.radius1.username}' through the NAS at ${ap1.mgt0.ip}."</log-match>
			<no-error-check />
		</step>

	</stage>
	
			 <failed-process>
	 <stage>
        <step no="fp_1">
			<desc>
				shutdown wlan interface on sta
			</desc>
			<log-file>fp_1.log</log-file>
			<ssh target="sta1" prompt=".*#">
            -v "ifconfig ${sta1.tif.name} down"
			</ssh>
		</step>
		
		<step no="fp_2">
			<desc>
				shutdown wlan interface on sta
			</desc>
			<log-file>fp_2.log</log-file>
			<ssh target="sta2" prompt=".*#">
            -v "ifconfig ${sta2.tif.name} down"
			</ssh>
		</step>
		</stage>
    </failed-process>
	
</testcase>