<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Tracing a client with open auth success</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		-AP connected to capwap server success
		-config a ssid with open

		Test Procedure:

		-add the STA1 to monitor
		'exec client-monitor 001e:65f2:5628'
		-check the Client Trace Table, result 1
		-STA1 connects to ssid, check debug info, '_de capwap itk' to make
		sure, result 2,3,4,5,6
		- STA1 disassoc from AP, result 7
		-STA2 connects to ssid, result 8
		-revoke STA1 from the client monitor table, result 9
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>
	<stage>
		<step no="1">
			<desc>setup ap</desc>
			<telnet target="ap1">
				-v "capwap client server name ${pub.hm1.ip}"
				-v "capwap client enable"
				-v "security-object ${ssid.name}"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>
		<step no="2" delay="30" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>check the capwap connection is success</desc>
			<log-file>capwap_conn_check_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show capwap client"
			</telnet>
			<log-match>-e "RUN state: Connected securely to the CAPWAP server"</log-match>
		</step>
		<step no="3">
			<desc>get mac of sta1's ${sta1.tif.name}</desc>
			<setvar name="sta1.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m -width 2 | tr '[A-F]' '[a-f]'
			</setvar>
		</step>
		<step no="4">
			<desc>add STA1 to monitor</desc>
			<telnet target="ap1">
				-v "exec client-monitor ${sta1.tif.mac}"
			</telnet>
		</step>
		<step no="5">
			<desc>check the Client Trace Table</desc>
			<log-file>check_client_trace_table.log</log-file>
			<telnet target="ap1">
				-v "_show client-monitor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Entry\(${sta1.tif.mac}" -f ${log.dir}/${log.file}</log-match>
		</step>
		<step no="6">
			<desc>enable debug on AP trace the client</desc>
			<telnet target="ap1">
				-v "_debug capwap itk"
			</telnet>
		</step>

		<step no="7.1">
			<desc>STA up wifi interface</desc>
			<ssh target="sta1" prompt=">|.*#">
			-v "ifconfig ${sta1.tif.name} down"
			-v "ifconfig ${sta1.tif.name} up"
			</ssh>
		</step>

		<step no="7.2">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=wifi0"
				echo "ssid_bind_interface=wifi0"
			</multi-setvar>
		</step>

		<include prefix="7.3" file="subs/sta_wifi_connect_${tb.os}_new.xml" obj-args="conn1, sta1, ap1"/>

		<step no="8">
			<desc>check the STA connection process</desc>
			<log-file>trace_open.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered | in capwap_itk"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "module\(802.11\).*?report sta\(${sta1.tif.mac}\).*?Rx.*?probe req.*?step\(1\/6\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "module\(802.11\).*?report sta\(${sta1.tif.mac}\).*?Tx probe resp.*?step\(2\/6\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "module\(802.11\).*?report sta\(${sta1.tif.mac}\).*?Rx auth &lt;open&gt; \(frame 1.*?step\(3\/6\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "module\(802.11\).*?report sta\(${sta1.tif.mac}\).*?Tx auth &lt;open&gt; \(frame 2.*?step\(4\/6\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "module\(802.11\).*?report sta\(${sta1.tif.mac}\).*?Rx assoc req.*?step\(5\/6\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "module\(802.11\).*?report sta\(${sta1.tif.mac}\).*?Tx assoc resp &lt;accept&gt;.*?step\(6\/6\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "module\(AUTH\).*?report sta\(${sta1.tif.mac}\).*?Open auth is starting.*?step\(1\/2\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "module\(AUTH\).*?report sta\(${sta1.tif.mac}\).*?Authentication is successfully finished.*?step\(0\/0\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "module\(DHCP\).*?report sta\(${sta1.tif.mac}\).*?DHCP DISCOVER.*?step\(1\/4\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "module\(DHCP\).*?report sta\(${sta1.tif.mac}\).*?DHCP OFFER.*?step\(2\/4\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "module\(DHCP\).*?report sta\(${sta1.tif.mac}\).*?DHCP REQUEST.*?step\(3\/4\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "module\(DHCP\).*?report sta\(${sta1.tif.mac}\).*?DHCP ACKNOWLEDGE.*?step\(4\/4\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "module\(DHCP\).*?report sta\(${sta1.tif.mac}\).*?DHCP session completed for station.*?step\(0\/0\) SUCCESS" -f ${log.dir}/${log.file}</log-match>
		</step>
		<step no="9">
			<desc>STA1 disassoc from AP</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "disc"
				-v "quit"
			</ssh>
		</step>
		<step no="10">
			<desc>check the disassoc process</desc>
			<log-file>trace_sta1_disassoc.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered | in capwap_itk"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)module\(AUTH\).*?report sta\(${sta1.tif.mac}\).*?is de-authenticated because of notification of driver.*?step\(0\/0\) FAILED" -f ${log.dir}/${log.file}</log-match>
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)module\(802.11\).*?report sta\(${sta1.tif.mac}\).*?Rx deauth \(reason \d"</log-match> -->
		</step>
		
		<step no="11.1">
			<desc>get mac of sta2's ${sta2.tif.name}</desc>
			<setvar name="sta2.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta2.mif.ip} -u ${sta2.user} -p ${sta2.passwd} -i ${sta2.tif.name} -m -width 2 | tr '[A-F]' '[a-f]'
			</setvar>
		</step>
		
		<step no="11.2">
			<desc>revoke STA2 from the client monitor table</desc>
			<telnet target="ap1">
				-v "no exec client-monitor ${sta2.tif.mac}"
			</telnet>	
			<no-error-check />
		</step>
		
		<step no="12">
			<desc>check the Client Trace Table</desc>
			<log-file>step12_check_client_trace_table.log</log-file>
			<telnet target="ap1">
				-v "_show client-monitor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Entry\(${sta2.tif.mac}" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>		

		<step no="13.1">
			<desc>STA up wifi interface</desc>
			<ssh target="sta2" prompt=">|.*#">
			-v "ifconfig ${sta2.tif.name} down"
			-v "ifconfig ${sta2.tif.name} up"
			</ssh>
		</step>

		<step no="13.2">
			<multi-setvar>
				echo "conn2.ssid=${ssid.name}"
				echo "conn2.proto=open"
				echo "conn2.pif=wifi0"
				echo "ssid_bind_interface=wifi0"
			</multi-setvar>
		</step>

		<include prefix="13.3" file="subs/sta_wifi_connect_${tb.os}_new.xml" obj-args="conn2, sta2, ap1"/>

		<step no="14">
			<desc>check the sta2 should not be traced</desc>
			<log-file>step14_trace_sta2.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered | in capwap_itk"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "report sta\(${sta2.tif.mac}" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>
		
		<step no="15">
			<desc>revoke STA1 from the client monitor table</desc>
			<telnet target="ap1">
				-v "no exec client-monitor ${sta1.tif.mac}"
			</telnet>
		</step>
		
		<step no="16">
			<desc>check the Client Trace Table</desc>
			<log-file>step16_check_client_trace_table.log</log-file>
			<telnet target="ap1">
				-v "_show client-monitor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "Entry\(${sta1.tif.mac}" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>
	
		 <failed-process>
	 <stage>
        <step no="fp_1">
			<desc>
				shutdown wlan interface on sta
			</desc>
			<log-file>fp_1.log</log-file>
			<ssh target="sta1" prompt=".*#">
            -v "ifconfig ${sta1.tif.name} down"
			</ssh>
		</step>
		
		<step no="fp_2">
			<desc>
				shutdown wlan interface on sta
			</desc>
			<log-file>fp_2.log</log-file>
			<ssh target="sta2" prompt=".*#">
            -v "ifconfig ${sta2.tif.name} down"
			</ssh>
		</step>
		</stage>
    </failed-process>
</testcase>
