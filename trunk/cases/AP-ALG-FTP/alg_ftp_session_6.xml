<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Alg l3-Roaming and recover several times</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		-Configure AP1
		"security-object ALGtest"
		"security-object ALGtest default-user-profile-attr 1"
		"ssid ALGtest"
		"ssid ALGtest security-object ALGtest"
		"interface wifi0 ssid ALGtest"
		"interface mgt0 vlan 1"
		"interface mgt0 native-vlan 1"
		"user-profile ALG qos-policy def-user-qos vlan-id &lt;mgt0 vlan&gt; attribute 1"
		"ip-policy fw"
		"ip-policy fw service ftp action permit"
		"ip-policy fw service dhcp-server action permit"
		"ip-policy fw service dhcp-client action permit"
		"mobility-policy roaming dnxp"
		"user-profile ALG security ip-policy from-access fw to-access fw mobility-
		policy roaming"
		"alg ftp enable"
		-Configure AP2
		"security-object ALGtest"
		"security-object ALGtest default-user-profile-attr 1"
		"ssid ALGtest"
		"ssid ALGtest security-object ALGtest"
		"interface wifi0 ssid ALGtest"
		"interface mgt0 vlan 10"
		"interface mgt0 native-vlan 10"
		"user-profile ALG qos-policy def-user-qos vlan-id &lt;mgt0 vlan&gt; attribute 1"
		"ip-policy fw"
		"ip-policy fw from &lt;LaptopIPaddr&gt; service ftp
		action permit"
		"ip-policy fw service dhcp-server action permit"
		"ip-policy fw service dhcp-client action permit"
		"mobility-policy roaming dnxp"
		"user-profile ALG security ip-policy from-access fw to-access fw mobility-
		policy roaming"
		"alg ftp enable"
		-AP1 and AP2 is in different vlan

		Test Procedure:

		1.Laptop connect to server and download files (PORT/PASV/EPRT/EPSV) through
		AP1
		2.Look up ip-sessions
		"show forwarding-engine ip-sessions"
		3.Open debug switch
		"_kdebug fe sync"
		"_kdebug fe session"
		4.Shutdown ssid on AP1
		"interface wifi0 ssid ALGtest shutdown"
		5. Look up ip-sessions , log info and download state
		"show forwarding-engine ip-sessions"
		6.Recover AP1
		"no interface wifi0 ssid ALGtest shutdown"
		7. Shutdown ssid on AP2
		"interface wifi0 ssid ALGtest shutdown"
		8. Look up ip-sessions , log info and download state
		"show forwarding-engine ip-sessions"
		9.Recover AP2
		"no interface wifi0 ssid ALGtest shutdown"
		10.Repeat step 1-9
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="ftp_test_file_local_dir" value="/tmp" />
	<property name="tail_line" value="30" />
	<property name="wifi1_channel" value="44" />
	<stage>
		<step no="0">
			<desc>
				clear sta1 tmp firstly
			</desc>
			<log-file>step0_clear_tmp.log</log-file>
			<ssh target="sta1">
				-v "rm -f -r /${ftp_test_file_local_dir}/*"
			</ssh>
		</step>

		<step no="1.1">
			<desc>
				-Configure AP1 via ssh
			</desc>
			<ssh target="ap1">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${ap.def.passwd}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 ssid ${ssid.name}"
				-v "mobility-policy l3roaming dnxp"
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "ip-policy fw"
				-v "ip-policy fw service ftp action permit"
				-v "ip-policy fw service dhcp-server action permit"
				-v "ip-policy fw service dhcp-client action permit"
				-v "user-profile ${ssid.name} security ip-policy from-access fw to-access fw"
				-v "alg ftp enable"
				-v "interface wifi1 radio channel ${wifi1_channel}"
			</ssh>
		</step>


		<step no="1.2">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=wifi1"
			</multi-setvar>
		</step>

		<include prefix="1.3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="1.4">
			<desc>
				-Show ap1's interface
			</desc>
			<log-file>step1.2_ap1_interface_info.log</log-file>
			<ssh target="ap1">
				-v "show interface"
			</ssh>
		</step>

		<step no="1.5">
			<desc>
				-Gain ap1's eth0's mac address
			</desc>
			<setvar name="ap1_eth0_mac">
				${bin.dir}/getstring.pl -k "Eth0" -p 2 -f ${log.dir}/step1.2_ap1_interface_info.log
			</setvar>
		</step>

		<step no="3.1">
			<desc>
				-Configure ap2 via ssh
			</desc>
			<console target="ap2">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${ap.def.passwd}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 ssid ${ssid.name}"
				-v "interface mgt0 vlan ${tb.vlan2}"
				-v "mobility-policy l3roaming dnxp"
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "ip-policy fw"
				-v "ip-policy fw service ftp action permit"
				-v "ip-policy fw service dhcp-server action permit"
				-v "ip-policy fw service dhcp-client action permit"
				-v "user-profile ${ssid.name} security ip-policy from-access fw to-access fw"
				-v "alg ftp enable"
				-v "interface wifi1 radio channel ${wifi1_channel}"
			</console>
		</step>

		<include prefix="3.2" file="subs/ap_renew_ip.xml" obj-args="ap2" />

		<step no="3.5">
			<desc>
				-Show ap2's interface
			</desc>
			<log-file>step3.5_ap2_interface_info.log</log-file>
			<ssh target="ap2">
				-v "show interface"
			</ssh>
		</step>

		<step no="3.6">
			<desc>
				-Gain ap2's eth0's mac address
			</desc>
			<setvar name="ap2_eth0_mac">
				${bin.dir}/getstring.pl -k "Eth0" -p 2 -f ${log.dir}/step3.5_ap2_interface_info.log
			</setvar>
		</step>

		<step no="3.7" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				-Check amrp neighbor status on ap1
			</desc>
			<log-file>step.3.7_amrp_dnxp_neighbor_ap1_${loop_check.idx}.log</log-file>
			<ssh target="ap1">
				-v "show amrp dnxp neighbor"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2_eth0_mac}\s+${ap2.mgt0.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<include prefix="3.8.0" file="subs/get_ap_ip_mac.xml" rargs="ap1" />

		<include prefix="3.8.1" file="subs/get_ap_ip_mac.xml" rargs="ap2" />

		<step no="3.8" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				-Check amrp dnxp neighbor status on ap2
			</desc>
			<log-file>step.3.8_amrp_dnxp_neighbor_ap2_${loop_check.idx}.log</log-file>
			<ssh target="ap2">
				-v "show amrp dnxp neighbor"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap1_eth0_mac}\s+${ap1.mgt0.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.first.1">
			<desc>
				-Confirm station state on ap1
			</desc>
			<log-file>step.ap1.roaming.ap2.first.1_show_station.log</log-file>
			<ssh target="ap1">
				-v "show station"
			</ssh>
			<log-match>-e "${sta1.tif.ip}"</log-match>
		</step>

		<step no="ap1.roaming.ap2.first.2.1">
			<desc>
				-Open debug switch on ap1 and clear log buffer
			</desc>
			<ssh target="ap1">
				-v "_kdebug fe sync"
				-v "_kdebug fe session"
				-v "clear log buffered "
			</ssh>
		</step>

		<step no="ap1.roaming.ap2.first.2.2">
			<desc>
				-Open debug switch on ap2 and clear log buffer
			</desc>
			<ssh target="ap2">
				-v "_kdebug fe sync"
				-v "_kdebug fe session"
				-v "clear log buffered "
			</ssh>
		</step>

		<step no="ap1.roaming.ap2.first.3.1">
			<desc>
				-Laptop connect to server and download files (PORT/PASV/EPRT/EPSV) through ap1
				-Clear local file
			</desc>
			<ssh target="sta1">
				-v "rm -f ${ftp_test_file_local_dir}/${tb.ftp.file3_small}"
				-v "rm -f ${ftp_test_file_local_dir}/ap1.roaming.ap2.first.3.2_stdout.log"
			</ssh>
		</step>

		<step no="ap1.roaming.ap2.first.3.2">
			<desc>
				-Get file from ftp server
			</desc>
			<log-file>step.ap1.roaming.ap2.first.3.2_curl_pid.log</log-file>
			<!-- origrinal rate is 15k modify to 10k ,medium to small -->
			<ssh target="sta1">
				-v "nohup curl -u ${tb.ftp.user}:${tb.ftp.passwd} ftp://${tb.ftp}/${tb.ftp.file3_small} -o ${ftp_test_file_local_dir}/${tb.ftp.file3_small} --limit-rate 10k --connect-timeout 150 > ${ftp_test_file_local_dir}/ap1.roaming.ap2.first.3.2_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="ap1.roaming.ap2.first.3.3" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				-Check "curl get" alive
			</desc>
			<log-file>step.ap1.roaming.ap2.first.3.3_curl_pid_chk_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep curl"
			</ssh>
			<log-match>-e "ftp"</log-match>
		</step>

		<step no="ap1.roaming.ap2.first.3.4">
			<desc>
				-Show forwarding-engine ip-sessions
			</desc>
			<log-file>step.ap1.roaming.ap2.first.3.4_show_forwarding_ip_sessions.log</log-file>
			<ssh target="ap1">
				-v "show forwarding-engine ip-sessions"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.first.3.5">
			<desc>
				-Get pid of "curl get""
			</desc>
			<setvar name="alg.curl.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step.ap1.roaming.ap2.first.3.2_curl_pid.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="ap1.roaming.ap2.first.4">
			<desc>
				-Shutdown ssid on ap1
			</desc>
			<ssh target="ap1">
				-v "interface wifi1 ssid ${ssid.name} shutdown"
			</ssh>
		</step>

		<step no="ap1.roaming.ap2.first.5.1" delay="15">
			<desc>
				-Look up log info on ap1
			</desc>
			<log-file>step.ap1.roaming.ap2.first.5.1_ap1_log.log</log-file>
			<ssh target="ap1">
				-v "show logging buffered"
			</ssh>
			<no-error-check />
			<!-- Bug 33562 -->
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "send ip-session.*${sta1.tif.ip}/\d+ &lt;-&gt; ${tb.ftp}/21," -c 1 -f ${log.dir}/${log.file}</log-match> -->
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "send ip-session.*${sta1.tif.ip}/\d+ &lt;-&gt; ${tb.ftp}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match> -->
		</step>

		<step no="ap1.roaming.ap2.first.5.2">
			<desc>
				-Look up log info on ap2
			</desc>
			<log-file>step.ap1.roaming.ap2.first.5.2_ap2_log.log</log-file>
			<ssh target="ap2">
				-v "show logging buffered"
			</ssh>
			<no-error-check />
			<!-- Bug 33562 -->
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "receive ip session from sync ${sta1.tif.ip}/\d+\s+-&gt; ${tb.ftp}/21," -c 1 -f ${log.dir}/${log.file}</log-match> -->
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "receive ip data session from sync ${sta1.tif.ip}/\d+ &lt;-&gt; ${tb.ftp}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match> -->
		</step>

		<step no="ap1.roaming.ap2.first.5.3" delay="10">
			<desc>
				-Look up ip-sessions on ap1,sessions should be deleted
			</desc>
			<log-file>step.ap1.roaming.ap2.first.5.3_ap1_ip_session.log</log-file>
			<ssh target="ap1">
				-v "show forwarding-engine ip-sessions"
			</ssh>
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 0 -f ${log.dir}/${log.file}</log-match> -->
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 0 -f ${log.dir}/${log.file}</log-match> -->
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 0 -f ${log.dir}/${log.file}</log-match> -->
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 0 -f ${log.dir}/${log.file}</log-match> -->
		</step>

		<step no="ap1.roaming.ap2.first.5.4">
			<desc>
				-Look up ip-sessions on ap2, sessions should be created
			</desc>
			<log-file>step.ap1.roaming.ap2.first.5.4_ap2_ip_session.log</log-file>
			<ssh target="ap2">
				-v "show forwarding-engine ip-sessions"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.first.5.5">
			<desc>
				-Check l3 roaming status on ap1
			</desc>
			<log-file>step.ap1.roaming.ap2.first.5.5_ap1_log.log</log-file>
			<ssh target="ap1">
				-v "show route"
			</ssh>
			<!-- <log-match>-i "mgt0" -i "LTO" </log-match> -->
		</step>

		<step no="ap1.roaming.ap2.first.5.6">
			<desc>
				-Check l3 roaming status on ap2
			</desc>
			<log-file>step.ap1.roaming.ap2.first.5.6_ap2_log.log</log-file>
			<ssh target="ap2">
				-v "show route"
			</ssh>
			<!-- <log-match>-i "wifi" -i "LTO"</log-match> -->
		</step>

		<step no="parent.ip.session.check.ap1.roaming.ap2.first.1">
			<desc>
				-Get control session id info1
			</desc>
			<log-file>parent.ip.session.check.1.ap1.roaming.ap2.first.log</log-file>
			<ssh target="ap2">
				-v "show forwarding-engine ip-sessions"
			</ssh>
		</step>

		<step no="parent.ip.session.check.ap1.roaming.ap2.first.2">
			<desc>
				-Get control session id info2
			</desc>
			<script>
				grep "${tb.ftp}/21 " -B 2 ${log.dir}/parent.ip.session.check.1.ap1.roaming.ap2.first.log > ${log.dir}/parent.ip.session.control.session.ap1.roaming.ap2.first.log
			</script>
		</step>

		<step no="parent.ip.session.check.ap1.roaming.ap2.first.3">
			<desc>
				-Get control session id
			</desc>
			<setvar name="ap1.roaming.ap2.first.control_session_id">
				${bin.dir}/getbyrexp.py -p "Id:(\d+); Ageout" -f ${log.dir}/parent.ip.session.control.session.ap1.roaming.ap2.first.log
			</setvar>
		</step>

		<step no="parent.ip.session.check.ap1.roaming.ap2.first.4">
			<desc>
				-Remove control session
			</desc>
			<log-file>parent.ip.session.remove.control.session.ap1.roaming.ap2.first.log</log-file>
			<script>
				grep -v "${tb.ftp}/21 " ${log.dir}/parent.ip.session.check.1.ap1.roaming.ap2.first.log | grep -v "${tb.ftp}/21;" | grep -v "Id:${ap1.roaming.ap2.first.control_session_id};" > ${log.dir}/${log.file}
			</script>
		</step>

		<step no="parent.ip.session.check.ap1.roaming.ap2.first.5">
			<desc>
				-Get data session and check
			</desc>
			<log-file>parent.ip.session.check.5.ap1.roaming.ap2.first.log</log-file>
			<script>
				grep "${tb.ftp}" -B 1 ${log.dir}/parent.ip.session.remove.control.session.ap1.roaming.ap2.first.log > ${log.dir}/${log.file}
			</script>
			<log-match>-e "Parent-IP-Sess:${ap1.roaming.ap2.first.control_session_id}"</log-match>
		</step>

		<step no="ap1.roaming.ap2.first.6">
			<desc>
				-Recover ap1 and clear log buffer
			</desc>
			<ssh target="ap1">
				-v "no interface wifi1 ssid ${ssid.name} shutdown"
				-v "clear log buffered"
			</ssh>
		</step>

		<step no="ap1.roaming.ap2.first.7">
			<desc>
				-Clear ap2 log buffer
			</desc>
			<ssh target="ap2">
				-v "clear log buffered"
			</ssh>
		</step>

		<step no="5.1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>
				-Wait for process end.
			</desc>
			<log-file>step5.1_wait_process_stop_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep ${alg.curl.pid}"
			</ssh>
			<log-match>-n -e "curl"</log-match>
		</step>

		<step no="5.2">
			<desc>
				-Check "curl get" result
			</desc>
			<log-file>5.2_curl_get_check_file.log</log-file>
			<ssh target="sta1">
				-v "tail -n ${tail_line} ${ftp_test_file_local_dir}/ap1.roaming.ap2.first.3.2_stdout.log"
			</ssh>
			<log-match>-e "curl:.*(timed out|Timeout|couldn't connect to host|Connection time-out)" -re -n</log-match>
			<log-match>-e "100\s+\d+\w\s+100" -re</log-match>
		</step>

		<step no="5.3">
			<desc>
				-Local file should exist
			</desc>
			<log-file>5.3_local_file_check.log</log-file>
			<ssh target="sta1">
				-v "ls ${ftp_test_file_local_dir}"
			</ssh>
			<log-match>-e "${tb.ftp.file3_small}"</log-match>
		</step>

	</stage>
</testcase>
