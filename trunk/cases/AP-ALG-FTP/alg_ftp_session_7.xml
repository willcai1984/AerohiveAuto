<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Alg l3-Roaming in several APs</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		-Configure AP1
		"security-object ALGtest"
		"security-object ALGtest default-user-profile-attr 1"
		"ssid ALGtest"
		"ssid ALGtest security-object ALGtest"
		"interface wifi0 ssid ALGtest"
		"interface mgt0 vlan 1"
		"interface mgt0 native-vlan 1"
		"user-profile ALG qos-policy def-user-qos vlan-id &lt;mgt0 vlan&gt; attribute 1"
		"ip-policy fw"
		"ip-policy fw from &lt;LaptopIPaddr&gt; service ftp action permit"
		"ip-policy fw service dhcp-server action permit"
		"ip-policy fw service dhcp-client action permit"
		"mobility-policy roaming dnxp"
		"user-profile ALG security ip-policy from-access fw to-access fw mobility-
		policy roaming"
		"alg ftp enable"
		-Configure AP2
		"security-object ALGtest"
		"security-object ALGtest default-user-profile-attr 1"
		"ssid ALGtest"
		"ssid ALGtest security-object ALGtest"
		"interface wifi0 ssid ALGtest"
		"interface mgt0 vlan 10"
		"interface mgt0 native-vlan 10"
		"user-profile ALG qos-policy def-user-qos vlan-id &lt;mgt0 vlan&gt; attribute 1"
		"ip-policy fw"
		"ip-policy fw from
		&lt;LaptopIPaddr&gt; service ftp action permit"
		"ip-policy fw service dhcp-server action permit"
		"ip-policy fw service dhcp-client action permit"
		"mobility-policy roaming dnxp"
		"user-profile ALG security ip-policy from-access fw to-access fw mobility-
		policy roaming"
		"alg ftp enable"
		-Configure AP3
		"security-object ALGtest"
		"security-object ALGtest default-user-profile-attr 1"
		"ssid ALGtest"
		"ssid ALGtest security-object ALGtest"
		"interface wifi0 ssid ALGtest"
		"interface mgt0 vlan 100"
		"interface mgt0 native-vlan 100"
		"user-profile ALG qos-policy def-user-qos vlan-id &lt;mgt0 vlan&gt; attribute 1"
		"ip-policy fw"
		"ip-policy fw from &lt;LaptopIPaddr&gt; service ftp action permit"
		"ip-policy fw service dhcp-server action permit"
		"ip-policy fw service dhcp-client action permit"
		"mobility-policy roaming dnxp"
		"user-profile ALG security ip-policy from-access fw to-access fw mobility-
		policy roaming"
		"alg ftp enable"
		-AP1 , AP2 and AP3 is in different vlan

		Test Procedure:

		1.Laptop connect to server and download
		files (PORT/PASV/EPRT/EPSV) through
		AP1
		2.Look up ip-sessions
		"show forwarding-engine ip-sessions"
		3.Open debug switch
		"_kdebug fe sync"
		"_kdebug fe session"
		4.Shutdown ssid on AP3(Confirm the first roaming is AP1 to AP2)
		"interface wifi0 ssid ALGtest shutdown"
		4.Shutdown ssid on AP1
		"interface wifi0 ssid ALGtest shutdown"
		5. Look up ip-sessions , log info and download state on AP2
		"show forwarding-engine ip-sessions"
		6.Recover AP3
		"no interface wifi0 ssid ALGtest shutdown"
		7. Shutdown ssid on AP2
		"interface wifi0 ssid ALGtest shutdown"
		8. Look up ip-sessions , log info and download state on AP3
		"show forwarding-engine ip-sessions"
	</description>
	<numofap>3</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="ftp_test_file_local_dir" value="/tmp" />
	<property name="tail_line" value="30" />

	<stage>
		<step no="0">
			<desc>
				clear sta1 tmp firstly
			</desc>
			<log-file>step0_clear_tmp.log</log-file>
			<ssh target="sta1">
				-v "rm -f -r /${ftp_test_file_local_dir}/*"
			</ssh>
		</step>

		<step no="1.1">
			<desc>
				-Configure AP1 via console
			</desc>
			<console target="ap1">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${ap.def.passwd}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi1 radio channel 165"
				<!-- -v "interface mgt0 vlan ${tb.vlan1}" -->
				<!-- -v "interface mgt0 native-vlan ${tb.vlan1}" -->
				-v "mobility-policy l3roaming dnxp"
				<!-- -v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy l3roaming attribute 1" -->
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "ip-policy fw"
				-v "ip-policy fw service ftp action permit"
				-v "ip-policy fw service dhcp-server action permit"
				-v "ip-policy fw service dhcp-client action permit"
				-v "user-profile ${ssid.name} security ip-policy from-access fw to-access fw"
				-v "alg ftp enable"
			</console>
		</step>

		<step no="1.2">
			<desc>
				-Show ap1's interface
			</desc>
			<log-file>step1.2_ap1_interface_info.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				-Gain ap1's eth0's mac address
			</desc>
			<setvar name="ap1_eth0_mac">
				${bin.dir}/getstring.pl -k "Eth0" -p 2 -f ${log.dir}/step1.2_ap1_interface_info.log
			</setvar>
		</step>

		<step no="2.1">
			<desc>
				-Laptop1 has been associated with AP1 and assigned an ip addres
				-Create config file of wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "echo \"ctrl_interface=/var/run/wpa_supplicant\" > /tmp/wpa_supplicant.cfg"
				-v "ifconfig ${sta1.tif.name} down"
				-v "ifconfig ${sta1.tif.name} up"
			</ssh>
		</step>

		<step no="2.2" delay="5">
			<desc>
				-Start wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "killall wpa_supplicant"
				-v "wpa_supplicant -i ${sta1.tif.name} ${sta1.wpa_flag} -c /tmp/wpa_supplicant.cfg -B"
			</ssh>
		</step>

		<step no="2.3">
			<desc>
				-Laptop connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<step no="2.4" delay="10" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				-Check if the client was associated successfully
			</desc>
			<log-file>step2.3_wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="2.5">
			<desc>
				-Client gets IP by dhclient
			</desc>
			<ssh target="sta1">
				-v "dhclient ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="2.6" delay="10">
			<desc>
				-Ifconfig to show the ip address
			</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="2.7">
			<desc>
				-Get laptop1's ip
			</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.8">
			<desc>
				-Get laptop1's mac
			</desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -m -width
			</setvar>
		</step>

		<step no="3.1">
			<desc>
				-Configure ap2 via console
			</desc>
			<console target="ap2">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${ap.def.passwd}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi1 radio channel 165"
				-v "interface mgt0 vlan ${tb.vlan2}"
				<!-- -v "interface mgt0 native-vlan ${tb.vlan1}" -->
				-v "mobility-policy l3roaming dnxp"
				<!-- -v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy l3roaming attribute 1" -->
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "ip-policy fw"
				-v "ip-policy fw service ftp action permit"
				-v "ip-policy fw service dhcp-server action permit"
				-v "ip-policy fw service dhcp-client action permit"
				-v "user-profile ${ssid.name} security ip-policy from-access fw to-access fw"
				-v "alg ftp enable"
			</console>
		</step>

		<step no="3.2">
			<desc>
				-Renew ap2's mgt0 IPaddr
			</desc>
			<console target="ap2">
				-v "no interface mgt0 dhcp client"
				-v "interface mgt0 dhcp client"
			</console>
		</step>

		<step no="3.3">
			<desc>
				-Show ap2's mgt0
			</desc>
			<log-file>step3.3_show_ap2_mgt0.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="3.4">
			<desc>
				-Get ap2's mgt0
			</desc>
			<setvar name="ap2.mgt0.ip">
				${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -t str -f ${log.dir}/step3.3_show_ap2_mgt0.log
			</setvar>
		</step>

		<step no="3.5">
			<desc>
				-Show ap2's interface
			</desc>
			<log-file>step3.5_ap2_interface_info.log</log-file>
			<telnet target="ap2">
				-v "show interface"
			</telnet>
		</step>

		<step no="3.6">
			<desc>
				-Gain ap2's eth0's mac address
			</desc>
			<setvar name="ap2_eth0_mac">
				${bin.dir}/getstring.pl -k "Eth0" -p 2 -f ${log.dir}/step3.5_ap2_interface_info.log
			</setvar>
		</step>

		<step no="3.7" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				-Check amrp neighbor status on ap1
			</desc>
			<log-file>step.3.7_amrp_dnxp_neighbor_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2_eth0_mac}\s+${ap2.mgt0.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.8" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				-Check amrp dnxp neighbor status on ap2
			</desc>
			<log-file>step.3.8_amrp_dnxp_neighbor_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap1_eth0_mac}\s+${ap1.mgt0.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.1">
			<desc>
				-Confirm station state on ap1
			</desc>
			<log-file>step.ap1.roaming.ap2.1_show_station.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-e "${sta1.tif.ip}"</log-match>
		</step>

		<step no="ap1.roaming.ap2.2.1">
			<desc>
				-Open debug switch on ap1 and clear log buffer
			</desc>
			<telnet target="ap1">
				-v "_kdebug fe sync"
				-v "_kdebug fe session"
				-v "clear log buffered "
			</telnet>
		</step>

		<step no="ap1.roaming.ap2.2.2">
			<desc>
				-Open debug switch on ap2 and clear log buffer
			</desc>
			<telnet target="ap2">
				-v "_kdebug fe sync"
				-v "_kdebug fe session"
				-v "clear log buffered "
			</telnet>
		</step>

		<step no="ap1.roaming.ap2.3.1">
			<desc>
				-Laptop connect to server and download files (PORT/PASV/EPRT/EPSV) through ap1
				-Clear local file
			</desc>
			<ssh target="sta1">
				-v "rm -f ${ftp_test_file_local_dir}/${tb.ftp.file3_small}"
				-v "rm -f ${ftp_test_file_local_dir}/ap1.roaming.ap2.3.2_stdout.log"
			</ssh>
		</step>

		<step no="ap1.roaming.ap2.3.2">
			<desc>
				-Get file from ftp server
			</desc>
			<log-file>step.ap1.roaming.ap2.3.2_curl_pid.log</log-file>
			<!-- origrinal rate is 16k modify to 10k ,medium to small -->
			<ssh target="sta1">
				-v "nohup curl -u ${tb.ftp.user}:${tb.ftp.passwd} ftp://${tb.ftp}/${tb.ftp.file3_small} -o ${ftp_test_file_local_dir}/${tb.ftp.file3_small} --limit-rate 5k --connect-timeout 150 > ${ftp_test_file_local_dir}/ap1.roaming.ap2.3.2_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="ap1.roaming.ap2.3.3" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				-Check "curl get" alive
			</desc>
			<log-file>step.ap1.roaming.ap2.3.3_curl_pid_chk_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep curl"
			</ssh>
			<log-match>-e "ftp"</log-match>
		</step>

		<step no="ap1.roaming.ap2.3.4">
			<desc>
				-Show forwarding-engine ip-sessions
			</desc>
			<log-file>step.ap1.roaming.ap2.3.4_show_forwarding_ip_sessions.log</log-file>
			<telnet target="ap1">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.3.5">
			<desc>
				-Get pid of "curl get""
			</desc>
			<setvar name="alg.curl.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step.ap1.roaming.ap2.3.2_curl_pid.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="ap1.roaming.ap2.4">
			<desc>
				-Shutdown ssid on ap1
			</desc>
			<telnet target="ap1">
				-v "interface wifi1 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="ap1.roaming.ap2.5.1" delay="15">
			<desc>
				-Look up log info on ap1
			</desc>
			<log-file>step.ap1.roaming.ap2.5.1_ap1_log.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "send ip-session.*${sta1.tif.ip}/\d+ &lt;-&gt; ${tb.ftp}/21," -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "send ip-session.*${sta1.tif.ip}/\d+ &lt;-&gt; ${tb.ftp}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.5.2">
			<desc>
				-Look up log info on ap2
			</desc>
			<log-file>step.ap1.roaming.ap2.5.2_ap2_log.log</log-file>
			<telnet target="ap2">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "receive ip session from sync ${sta1.tif.ip}/\d+\s+-&gt; ${tb.ftp}/21," -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "receive ip data session from sync ${sta1.tif.ip}/\d+ &lt;-&gt; ${tb.ftp}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.5.3" delay="10">
			<desc>
				-Look up ip-sessions on ap1,sessions should be deleted
			</desc>
			<log-file>step.ap1.roaming.ap2.5.3_ap1_ip_session.log</log-file>
			<telnet target="ap1">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 0 -f ${log.dir}/${log.file}</log-match> -->
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 0 -f ${log.dir}/${log.file}</log-match> -->
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 0 -f ${log.dir}/${log.file}</log-match> -->
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 0 -f ${log.dir}/${log.file}</log-match> -->
		</step>

		<step no="ap1.roaming.ap2.5.4">
			<desc>
				-Look up ip-sessions on ap2, sessions should be created
			</desc>
			<log-file>step.ap1.roaming.ap2.5.4_ap2_ip_session.log</log-file>
			<telnet target="ap2">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.5.5">
			<desc>
				-Check l3 roaming status on ap1
			</desc>
			<log-file>step.ap1.roaming.ap2.5.5_ap1_log.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<!-- <log-match>-i "mgt0" -i "LTO" </log-match> -->
		</step>

		<step no="ap1.roaming.ap2.5.6">
			<desc>
				-Check l3 roaming status on ap2
			</desc>
			<log-file>step.ap1.roaming.ap2.5.6_ap2_log.log</log-file>
			<telnet target="ap2">
				-v "show route"
			</telnet>
			<!-- <log-match>-i "wifi" -i "LTO"</log-match> -->
		</step>

		<step no="parent.ip.session.check.ap1.roaming.ap2.1">
			<desc>
				-Get control session id info1
			</desc>
			<log-file>parent.ip.session.check.1.ap1.roaming.ap2.log</log-file>
			<telnet target="ap2">
				-v "show forwarding-engine ip-sessions"
			</telnet>
		</step>

		<step no="parent.ip.session.check.ap1.roaming.ap2.2">
			<desc>
				-Get control session id info2
			</desc>
			<script>
				grep "${tb.ftp}/21 " -B 2 ${log.dir}/parent.ip.session.check.1.ap1.roaming.ap2.log > ${log.dir}/parent.ip.session.control.session.ap1.roaming.ap2.log
			</script>
		</step>

		<step no="parent.ip.session.check.ap1.roaming.ap2.3">
			<desc>
				-Get control session id
			</desc>
			<setvar name="ap1.roaming.ap2.control_session_id">
				${bin.dir}/getbyrexp.py -p "Id:(\d+); Ageout" -f ${log.dir}/parent.ip.session.control.session.ap1.roaming.ap2.log
			</setvar>
		</step>

		<step no="parent.ip.session.check.ap1.roaming.ap2.4">
			<desc>
				-Remove control session
			</desc>
			<log-file>parent.ip.session.remove.control.session.ap1.roaming.ap2.log</log-file>
			<script>
				grep -v "${tb.ftp}/21 " ${log.dir}/parent.ip.session.check.1.ap1.roaming.ap2.log | grep -v "${tb.ftp}/21;" | grep -v "Id:${ap1.roaming.ap2.control_session_id};" > ${log.dir}/${log.file}
			</script>
		</step>

		<step no="parent.ip.session.check.ap1.roaming.ap2.5">
			<desc>
				-Get data session and check
			</desc>
			<log-file>parent.ip.session.check.5.ap1.roaming.ap2.log</log-file>
			<script>
				grep "${tb.ftp}" -B 1 ${log.dir}/parent.ip.session.remove.control.session.ap1.roaming.ap2.log > ${log.dir}/${log.file}
			</script>
			<log-match>-e "Parent-IP-Sess:${ap1.roaming.ap2.control_session_id}"</log-match>
		</step>

		<step no="ap1.roaming.ap2.6">
			<desc>
				-Clear ap2 log buffer
			</desc>
			<telnet target="ap2">
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="4.1">
			<desc>
				-Configure ap3 via console
			</desc>
			<console target="ap3">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${ap.def.passwd}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi1 radio channel 165"
				-v "interface mgt0 vlan ${tb.vlan3}"
				<!-- -v "interface mgt0 native-vlan ${tb.vlan1}" -->
				-v "mobility-policy l3roaming dnxp"
				<!-- -v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy l3roaming attribute 1" -->
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "ip-policy fw"
				-v "ip-policy fw service ftp action permit"
				-v "ip-policy fw service dhcp-server action permit"
				-v "ip-policy fw service dhcp-client action permit"
				-v "user-profile ${ssid.name} security ip-policy from-access fw to-access fw"
				-v "alg ftp enable"
				-v "clear log buffered"
			</console>
		</step>

		<step no="4.2">
			<desc>
				-Renew ap3's mgt0 IPaddr
			</desc>
			<console target="ap3">
				-v "no interface mgt0 dhcp client"
				-v "interface mgt0 dhcp client"
			</console>
		</step>

		<step no="4.3">
			<desc>
				-Show ap3's mgt0
			</desc>
			<log-file>step4.3_show_ap3_mgt0.log</log-file>
			<console target="ap3">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="4.4">
			<desc>
				-Get ap3's mgt0
			</desc>
			<setvar name="ap3.mgt0.ip">
				${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -t str -f ${log.dir}/step4.3_show_ap3_mgt0.log
			</setvar>
		</step>

		<step no="4.5">
			<desc>
				-Show ap3's interface
			</desc>
			<log-file>step4.5_ap3_interface_info.log</log-file>
			<telnet target="ap3">
				-v "show interface"
			</telnet>
		</step>

		<step no="4.6">
			<desc>
				-Gain ap3's eth0's mac address
			</desc>
			<setvar name="ap3_eth0_mac">
				${bin.dir}/getstring.pl -k "Eth0" -p 2 -f ${log.dir}/step4.5_ap3_interface_info.log
			</setvar>
		</step>

		<step no="4.7" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				-Check amrp neighbor status on ap2
			</desc>
			<log-file>step.4.7_amrp_dnxp_neighbor_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap3_eth0_mac}\s+${ap3.mgt0.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.8" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				-Check amrp dnxp neighbor status on ap3
			</desc>
			<log-file>step.4.8_amrp_dnxp_neighbor_ap3_${loop_check.idx}.log</log-file>
			<telnet target="ap3">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2_eth0_mac}\s+${ap2.mgt0.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap2.roaming.ap3.1.1">
			<desc>
				-Confirm station state on ap2
			</desc>
			<log-file>step.ap2.roaming.ap3.1_show_station.log</log-file>
			<telnet target="ap2">
				-v "show station"
			</telnet>
			<log-match>-e "${sta1.tif.ip}"</log-match>
		</step>

		<step no="ap2.roaming.ap3.1.2">
			<desc>
				-Open debug switch on ap3 and clear log buffer
			</desc>
			<telnet target="ap3">
				-v "_kdebug fe sync"
				-v "_kdebug fe session"
				-v "clear log buffered "
			</telnet>
		</step>

		<step no="ap2.roaming.ap3.2">
			<desc>
				-Shutdown ssid on ap2
			</desc>
			<telnet target="ap2">
				-v "interface wifi1 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="ap2.roaming.ap3.3.1" delay="15">
			<desc>
				-Look up log info on ap2
			</desc>
			<log-file>step.ap2.roaming.ap3.3.1_ap2_log.log</log-file>
			<telnet target="ap2">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "send ip-session.*${sta1.tif.ip}/\d+ &lt;-&gt; ${tb.ftp}/21," -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "send ip-session.*${sta1.tif.ip}/\d+ &lt;-&gt; ${tb.ftp}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap2.roaming.ap3.3.2">
			<desc>
				-Look up log info on ap3
			</desc>
			<log-file>step.ap2.roaming.ap3.3.2_ap3_log.log</log-file>
			<telnet target="ap3">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "receive ip session from sync ${sta1.tif.ip}/\d+\s+-&gt; ${tb.ftp}/21," -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "receive ip data session from sync ${sta1.tif.ip}/\d+ &lt;-&gt; ${tb.ftp}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap2.roaming.ap3.3.3" delay="10">
			<desc>
				-Look up ip-sessions on ap2
			</desc>
			<log-file>step.ap2.roaming.ap3.3.3_ap2_ip_session.log</log-file>
			<telnet target="ap2">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 0 -f ${log.dir}/${log.file}</log-match> -->
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 0 -f ${log.dir}/${log.file}</log-match> -->
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 0 -f ${log.dir}/${log.file}</log-match> -->
			<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 0 -f ${log.dir}/${log.file}</log-match> -->
		</step>

		<step no="ap2.roaming.ap3.3.4">
			<desc>
				-Look up ip-sessions on ap3
			</desc>
			<log-file>step.ap2.roaming.ap3.3.4_ap3_ip_session.log</log-file>
			<telnet target="ap3">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap2.roaming.ap3.3.5">
			<desc>
				-Check l3 roaming status on ap1
			</desc>
			<log-file>step.ap2.roaming.ap3.3.5_ap2_log.log</log-file>
			<telnet target="ap2">
				-v "show route"
			</telnet>
			<!-- <log-match>-e "LTO" -n</log-match> -->
		</step>

		<step no="ap2.roaming.ap3.3.6">
			<desc>
				-Check l3 roaming status on ap3
			</desc>
			<log-file>step.ap2.roaming.ap3.3.6_ap3_log.log</log-file>
			<telnet target="ap3">
				-v "show route"
			</telnet>
			<!-- <log-match>-i "wifi" -i "LTO"</log-match> -->
		</step>

		<step no="ap2.roaming.ap3.3.7">
			<desc>
				-Check l3 roaming status on ap1
			</desc>
			<log-file>step.ap2.roaming.ap3.3.7_ap1_log.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<!-- <log-match>-i "mgt0" -i "LTO"</log-match> -->
		</step>

		<step no="parent.ip.session.check.ap2.roaming.ap3.1">
			<desc>
				-Get control session id info1
			</desc>
			<log-file>parent.ip.session.check.1.ap2.roaming.ap3.log</log-file>
			<telnet target="ap3">
				-v "show forwarding-engine ip-sessions"
			</telnet>
		</step>

		<step no="parent.ip.session.check.ap2.roaming.ap3.2">
			<desc>
				-Get control session id info2
			</desc>
			<script>
				grep "${tb.ftp}/21 " -B 2 ${log.dir}/parent.ip.session.check.1.ap2.roaming.ap3.log > ${log.dir}/parent.ip.session.control.session.ap2.roaming.ap3.log
			</script>
		</step>

		<step no="parent.ip.session.check.ap2.roaming.ap3.3">
			<desc>
				-Get control session id
			</desc>
			<setvar name="ap2.roaming.ap3.control_session_id">
				${bin.dir}/getbyrexp.py -p "Id:(\d+); Ageout" -f ${log.dir}/parent.ip.session.control.session.ap2.roaming.ap3.log
			</setvar>
		</step>

		<step no="parent.ip.session.check.ap2.roaming.ap3.4">
			<desc>
				-Remove control session
			</desc>
			<log-file>parent.ip.session.remove.control.session.ap2.roaming.ap3.log</log-file>
			<script>
				grep -v "${tb.ftp}/21 " ${log.dir}/parent.ip.session.check.1.ap2.roaming.ap3.log | grep -v "${tb.ftp}/21;" | grep -v "Id:${ap2.roaming.ap3.control_session_id};" > ${log.dir}/${log.file}
			</script>
		</step>

		<step no="parent.ip.session.check.ap2.roaming.ap3.5">
			<desc>
				-Get data session and check
			</desc>
			<log-file>parent.ip.session.check.5.ap2.roaming.ap3.log</log-file>
			<script>
				grep "${tb.ftp}" -B 1 ${log.dir}/parent.ip.session.remove.control.session.ap2.roaming.ap3.log > ${log.dir}/${log.file}
			</script>
			<log-match>-e "Parent-IP-Sess:${ap2.roaming.ap3.control_session_id}"</log-match>
		</step>

		<step no="ap2.roaming.ap3.4">
			<desc>
				-Recover ap1 and clear log buffer
			</desc>
			<telnet target="ap1">
				-v "no interface wifi1 ssid ${ssid.name} shutdown"
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="ap2.roaming.ap3.5">
			<desc>
				-Clear ap3 log buffer
			</desc>
			<telnet target="ap3">
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="5.1" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				-Check amrp neighbor status on ap3
			</desc>
			<log-file>step.5.1_amrp_dnxp_neighbor_ap3_${loop_check.idx}.log</log-file>
			<telnet target="ap3">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap1_eth0_mac}\s+${ap1.mgt0.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.2" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				-Check amrp dnxp neighbor status on ap1
			</desc>
			<log-file>step.5.2_amrp_dnxp_neighbor_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap3_eth0_mac}\s+${ap3.mgt0.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<!-- <step no="ap3.roaming.ap1.1"> -->
		<!-- <desc> -->
		<!-- -Confirm station state on ap3 -->
		<!-- </desc> -->
		<!-- <log-file>step.ap3.roaming.ap1.1_show_station.log</log-file> -->
		<!-- <telnet target="ap3"> -->
		<!-- -v "show station" -->
		<!-- </telnet> -->
		<!-- <log-match>-e "${sta1.tif.ip}"</log-match> -->
		<!-- </step> -->

		<!-- <step no="ap3.roaming.ap1.2"> -->
		<!-- <desc> -->
		<!-- -Shutdown ssid on ap3 -->
		<!-- </desc> -->
		<!-- <telnet target="ap3"> -->
		<!-- -v "interface wifi1 ssid ${ssid.name} shutdown" -->
		<!-- </telnet> -->
		<!-- </step> -->

		<!-- <step no="ap3.roaming.ap1.3.1" delay="3"> -->
		<!-- <desc> -->
		<!-- -Look up log info on ap3 -->
		<!-- </desc> -->
		<!-- <log-file>step.ap3.roaming.ap1.3.1_ap3_log.log</log-file> -->
		<!-- <telnet target="ap3"> -->
		<!-- -v "show logging buffered" -->
		<!-- </telnet> -->
		<!-- <no-error-check /> -->
		<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "send ip-session.*${sta1.tif.ip}/\d+ &lt;-&gt; ${tb.ftp}/21," -c 1 -f ${log.dir}/${log.file}</log-match> -->
		<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "send ip-session.*${sta1.tif.ip}/\d+ &lt;-&gt; ${tb.ftp}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match> -->
		<!-- </step> -->

		<!-- <step no="ap3.roaming.ap1.3.2"> -->
		<!-- <desc> -->
		<!-- -Look up log info on ap1 -->
		<!-- </desc> -->
		<!-- <log-file>step.ap3.roaming.ap1.3.2_ap1_log.log</log-file> -->
		<!-- <telnet target="ap1"> -->
		<!-- -v "show logging buffered" -->
		<!-- </telnet> -->
		<!-- <no-error-check /> -->
		<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "receive ip session from sync ${sta1.tif.ip}/\d+\s+-&gt; ${tb.ftp}/21," -c 1 -f ${log.dir}/${log.file}</log-match> -->
		<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "receive ip data session from sync ${sta1.tif.ip}/\d+ &lt;-&gt; ${tb.ftp}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match> -->
		<!-- </step> -->

		<!-- <step no="ap3.roaming.ap1.3.3" delay="20"> -->
		<!-- <desc> -->
		<!-- -Look up ip-sessions on ap3 -->
		<!-- </desc> -->
		<!-- <log-file>step.ap3.roaming.ap1.3.3_ap3_ip_session.log</log-file> -->
		<!-- <telnet target="ap3"> -->
		<!-- -v "show forwarding-engine ip-sessions" -->
		<!-- </telnet> -->
		<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 0 -f ${log.dir}/${log.file}</log-match> -->
		<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 0 -f ${log.dir}/${log.file}</log-match> -->
		<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 0 -f ${log.dir}/${log.file}</log-match> -->
		<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 0 -f ${log.dir}/${log.file}</log-match> -->
		<!-- </step> -->

		<!-- <step no="ap3.roaming.ap1.3.4"> -->
		<!-- <desc> -->
		<!-- -Look up ip-sessions on ap1 -->
		<!-- </desc> -->
		<!-- <log-file>step.ap3.roaming.ap1.3.4_ap1_ip_session.log</log-file> -->
		<!-- <telnet target="ap1"> -->
		<!-- -v "show forwarding-engine ip-sessions" -->
		<!-- </telnet> -->
		<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 1 -f ${log.dir}/${log.file}</log-match> -->
		<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match> -->
		<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match> -->
		<!-- <log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match> -->
		<!-- </step> -->

		<!-- <step no="ap3.roaming.ap1.3.5"> -->
		<!-- <desc> -->
		<!-- -Check l3 roaming status on ap3 -->
		<!-- </desc> -->
		<!-- <log-file>step.ap3.roaming.ap1.3.5_ap3_log.log</log-file> -->
		<!-- <telnet target="ap3"> -->
		<!-- -v "show route" -->
		<!-- </telnet> -->
		<!-- <log-match>-e "LTO" -n</log-match> -->
		<!-- </step> -->

		<!-- <step no="ap3.roaming.ap1.3.6"> -->
		<!-- <desc> -->
		<!-- -Check l3 roaming status on ap1 -->
		<!-- </desc> -->
		<!-- <log-file>step.ap3.roaming.ap1.3.6_ap1_log.log</log-file> -->
		<!-- <telnet target="ap1"> -->
		<!-- -v "show route" -->
		<!-- </telnet> -->
		<!-- <log-match>-e "LTO" -n</log-match> -->
		<!-- </step> -->

		<!-- <step no="parent.ip.session.check.ap3.roaming.ap1.1"> -->
		<!-- <desc> -->
		<!-- -Get control session id info1 -->
		<!-- </desc> -->
		<!-- <log-file>parent.ip.session.check.1.ap3.roaming.ap1.log</log-file> -->
		<!-- <telnet target="ap1"> -->
		<!-- -v "show forwarding-engine ip-sessions" -->
		<!-- </telnet> -->
		<!-- </step> -->

		<!-- <step no="parent.ip.session.check.ap3.roaming.ap1.2"> -->
		<!-- <desc> -->
		<!-- -Get control session id info2 -->
		<!-- </desc> -->
		<!-- <script> -->
		<!-- grep "${tb.ftp}/21 " -B 2 ${log.dir}/parent.ip.session.check.1.ap3.roaming.ap1.log > ${log.dir}/parent.ip.session.control.session.ap3.roaming.ap1.log -->
		<!-- </script> -->
		<!-- </step> -->

		<!-- <step no="parent.ip.session.check.ap3.roaming.ap1.3"> -->
		<!-- <desc> -->
		<!-- -Get control session id -->
		<!-- </desc> -->
		<!-- <setvar name="ap3.roaming.ap1.control_session_id"> -->
		<!-- ${bin.dir}/getbyrexp.py -p "Id:(\d+); Ageout" -f ${log.dir}/parent.ip.session.control.session.ap3.roaming.ap1.log -->
		<!-- </setvar> -->
		<!-- </step> -->

		<!-- <step no="parent.ip.session.check.ap3.roaming.ap1.4"> -->
		<!-- <desc> -->
		<!-- -Remove control session -->
		<!-- </desc> -->
		<!-- <log-file>parent.ip.session.remove.control.session.ap3.roaming.ap1.log</log-file> -->
		<!-- <script> -->
		<!-- grep -v "${tb.ftp}/21 " ${log.dir}/parent.ip.session.check.1.ap3.roaming.ap1.log | grep -v "${tb.ftp}/21;" | grep -v "Id:${ap3.roaming.ap1.control_session_id};" > ${log.dir}/${log.file} -->
		<!-- </script> -->
		<!-- </step> -->

		<!-- <step no="parent.ip.session.check.ap3.roaming.ap1.5"> -->
		<!-- <desc> -->
		<!-- -Get data session and check -->
		<!-- </desc> -->
		<!-- <log-file>parent.ip.session.check.5.ap3.roaming.ap1.log</log-file> -->
		<!-- <script> -->
		<!-- grep "${tb.ftp}" -B 1 ${log.dir}/parent.ip.session.remove.control.session.ap3.roaming.ap1.log > ${log.dir}/${log.file} -->
		<!-- </script> -->
		<!-- <log-match>-e "Parent-IP-Sess:${ap3.roaming.ap1.control_session_id}"</log-match> -->
		<!-- </step> -->

		<step no="6.1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>
				-Wait for process end.
			</desc>
			<log-file>step6.1_wait_process_stop_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep ${alg.curl.pid}"
			</ssh>
			<log-match>-n -e "curl"</log-match>
		</step>

		<step no="6.2">
			<desc>
				-Check "curl get" result
			</desc>
			<log-file>5.2_curl_get_check_file.log</log-file>
			<ssh target="sta1">
				-v "tail -n ${tail_line} ${ftp_test_file_local_dir}/ap1.roaming.ap2.3.2_stdout.log"
			</ssh>
			<log-match>-e "curl:.*(timed out|Timeout|couldn't connect to host|Connection time-out)" -re -n</log-match>
			<log-match>-e "100\s+\d+\w\s+100" -re</log-match>
		</step>

		<step no="6.3">
			<desc>
				-Local file should exist
			</desc>
			<log-file>5.3_local_file_check.log</log-file>
			<ssh target="sta1">
				-v "ls ${ftp_test_file_local_dir}"
			</ssh>
			<log-match>-e "${tb.ftp.file3_small}"</log-match>
		</step>

	</stage>

</testcase>
