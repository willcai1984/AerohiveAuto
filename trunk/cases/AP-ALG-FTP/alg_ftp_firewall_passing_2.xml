<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>The FTP control/data session and ALG(FTP Passive mode)</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:
		-Laptop has been associated with AP and assigned an ip address
		- Configure ip-policy and bind it to the userprofile of the laptop on AP
		"ip-policy fw"
		"ip-policy fw from &lt;LaptopIPaddr&gt; service ftp action permit"
		"ip-policy fw service dhcp-server action permit"
		"ip-policy fw service dhcp-client action permit"
		"user-profile &lt;AP-profile&gt; security ip-policy from-acces fw to-access fw"

		Test Procedure:

		1.Laptop use tools such as cuteftp connect to FTP server and download
		files(Passive mode);
		2.Look up IP-sessions;
		"show forwarding-engine ip-sessions"
		3.Clear sessions and enable ALG-FTP;
		"clear forwarding-engine ip-sessions"
		"alg ftp enable"
		4. Laptop use tools such as cuteftp connect to FTP server and download files;
		5.Look up IP-sessions;
		"show forwarding-engine ip-sessions"
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<property name="ftp_test_file_local_dir" value="/tmp" />

	<stage>
		<step no="1.1.1">
			<desc>
				-Configure AP1 vlan via console
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<include prefix="1.1.2" file="subs/ap_renew_ip.xml" obj-args="ap1" />

		<step no="1.1.3">
			<desc>
				-Configure AP1
			</desc>
			<ssh target="ap1">
				-v "ssid ${ssid.name}"
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} security protocol-suite open"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
				-v "user-profile fw qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
				-v "ip-policy fw"
				-v "ip-policy fw service ftp action permit"
				-v "ip-policy fw service dhcp-server action permit"
				-v "ip-policy fw service dhcp-client action permit"
				-v "ip-policy fw service icmp action permit"
				-v "user-profile fw security ip-policy from-acces fw to-access fw"
				-v "save config"
			</ssh>
		</step>

		<step no="1.2">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>
		<include prefix="1.3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />


		<step no="2.1">
			<desc>
				-Laptop connect to FTP server and download files(Port mode)(alg-disable);
				-Clear local file
			</desc>
			<ssh target="sta1">
				-v "rm -f ${ftp_test_file_local_dir}/${tb.ftp.file3_small}"
				-v "rm -f ${ftp_test_file_local_dir}/2.2_stdout.log"
				-v "rm -f ${ftp_test_file_local_dir}/3.2_stdout.log"
			</ssh>
		</step>

		<step no="2.2">
			<desc>
				-Get file from ftp server
			</desc>
			<log-file>2.2_curl_pid.log</log-file>
			<ssh target="sta1">
				-v "nohup curl -u ${tb.ftp.user}:${tb.ftp.passwd} ftp://${tb.ftp}/${tb.ftp.file3_small} -o ${ftp_test_file_local_dir}/${tb.ftp.file3_small} --limit-rate 50k --connect-timeout 20 --ftp-pasv --disable-epsv > ${ftp_test_file_local_dir}/2.2_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="2.3" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				-Check "curl get" alive
			</desc>
			<log-file>2.3_curl_pid_chk_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep curl"
			</ssh>
			<log-match>-e "ftp"</log-match>
		</step>

		<step no="2.4">
			<desc>
				-Show forwarding-engine ip-sessions
			</desc>
			<log-file>2.4_show_forwarding_ip_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine ip-sessions"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2.5">
			<desc>
				-Get pid of "curl get""
			</desc>
			<setvar name="noalg.curl.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/2.2_curl_pid.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>


		<!-- <step no="2.6" delay="10" type="loop-check" loop-max-times="20" loop-interval="10"> -->
		<step no="2.6" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				-Wait for process end.
			</desc>
			<log-file>step2.6_wait_process_stop_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep ${noalg.curl.pid}"
			</ssh>
			<log-match>-n -e "curl"</log-match>
		</step>

		<step no="2.7">
			<desc>
				-Check "curl get" result
			</desc>
			<log-file>2.7_check_file.log</log-file>
			<ssh target="sta1">
				-v "cat ${ftp_test_file_local_dir}/2.2_stdout.log"
			</ssh>
			<no-error-check />
			<log-match>-e "curl:.*(timed out|Timeout|couldn't connect to host|Connection time-out|The server failed to connect to data port)" -re</log-match>
		</step>

		<step no="2.8">
			<desc>
				-Local file should not exist
			</desc>
			<log-file>2.8_local_file_chk.log</log-file>
			<ssh target="sta1">
				-v "ls ${ftp_test_file_local_dir}"
			</ssh>
			<log-match>-n -e "${tb.ftp.file3_small}"</log-match>
		</step>

		<step no="3">
			<desc>
				-Enable FTP-alg and clear ip-sessions
			</desc>
			<ssh target="ap1">
				-v "alg ftp enable"
				-v "clear forwarding-engine ip-sessions"
			</ssh>
		</step>

		<step no="3.1">
			<desc>
				-Laptop connect to FTP server and download files(Port mode)(alg-enable);
				-Clear local file
			</desc>
			<ssh target="sta1">
				-v "rm -f ${ftp_test_file_local_dir}/${tb.ftp.file3_small}"
				-v "rm -f ${ftp_test_file_local_dir}/2.2_stdout.log"
				-v "rm -f ${ftp_test_file_local_dir}/3.2_stdout.log"
			</ssh>
		</step>

		<step no="3.2">
			<desc>
				-Get file from ftp server
			</desc>
			<log-file>3.2_curl_pid.log</log-file>
			<ssh target="sta1">
				-v "nohup curl -u ${tb.ftp.user}:${tb.ftp.passwd} ftp://${tb.ftp}/${tb.ftp.file3_small} -o ${ftp_test_file_local_dir}/${tb.ftp.file3_small} --limit-rate 50k --connect-timeout 20 --ftp-pasv --disable-epsv > ${ftp_test_file_local_dir}/3.2_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="3.3" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				-Check "curl get" alive
			</desc>
			<log-file>3.3_curl_pid_chk_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep curl"
			</ssh>
			<log-match>-e "ftp"</log-match>
		</step>

		<step no="parent.ip.session.check.1" type="loop-check" loop-max-times="20" loop-interval="2">
			<desc>
				-Get control session id info1
			</desc>
			<log-file>parent.ip.session.check.1.log</log-file>
			<ssh target="ap1">
				-v "show forwarding-engine ip-sessions"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="parent.ip.session.check.2">
			<desc>
				-Get control session id info2
			</desc>
			<script>
				grep "${tb.ftp}/21 " -B 2 ${log.dir}/parent.ip.session.check.1.log > ${log.dir}/parent.ip.session.control.session.log
			</script>
		</step>

		<step no="parent.ip.session.check.3">
			<desc>
				-Get control session id
			</desc>
			<setvar name="control_session_id">
				${bin.dir}/getbyrexp.py -p "Id:(\d+); Ageout" -f ${log.dir}/parent.ip.session.control.session.log
			</setvar>
		</step>

		<step no="parent.ip.session.check.4">
			<desc>
				-Remove control session
			</desc>
			<script>
				grep -v "${tb.ftp}/21 " ${log.dir}/parent.ip.session.check.1.log | grep -v "${tb.ftp}/21;" | grep -v "Id:${control_session_id};" > ${log.dir}/parent.ip.session.remove.control.session.log
			</script>
		</step>

		<step no="parent.ip.session.check.5">
			<desc>
				-Get data session and check
			</desc>
			<log-file>parent.ip.session.check.5.log</log-file>
			<script>
				grep "${tb.ftp}" -B 1 ${log.dir}/parent.ip.session.remove.control.session.log > ${log.dir}/${log.file}
			</script>
			<log-match>-e "Parent-IP-Sess:${control_session_id}"</log-match>
		</step>

		<step no="3.4">
			<desc>
				-Show forwarding-engine ip-sessions
			</desc>
			<log-file>3.4_show_forwarding_ip_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine ip-sessions"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.5">
			<desc>
				-Get pid of "curl get""
			</desc>
			<setvar name="alg.curl.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/3.2_curl_pid.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<!-- <step no="3.6" delay="10" type="loop-check" loop-max-times="20" loop-interval="10"> -->
		<step no="3.6" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				-Wait for process end.
			</desc>
			<log-file>step3.6_wait_process_stop_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep ${alg.curl.pid}"
			</ssh>
			<log-match>-n -e "curl"</log-match>
		</step>

		<step no="3.7">
			<desc>
				-Check "curl get" result
			</desc>
			<log-file>3.7_check_file.log</log-file>
			<ssh target="sta1">
				-v "cat ${ftp_test_file_local_dir}/3.2_stdout.log"
			</ssh>
			<log-match>-n -e "curl:.*(timed out|Timeout|couldn't connect to host|Connection time-out|The server failed to connect to data port)" -re</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "100\s+\d+\w\s+100" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.8">
			<desc>
				-Local file should exist
			</desc>
			<log-file>3.8_local_file_chk.log</log-file>
			<ssh target="sta1">
				-v "ls ${ftp_test_file_local_dir}"
			</ssh>
			<log-match>-e "${tb.ftp.file3_small}"</log-match>
		</step>

	</stage>

</testcase>

