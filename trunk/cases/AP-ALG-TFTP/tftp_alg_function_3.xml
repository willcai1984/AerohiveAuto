<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Wireless client send RRQ to tftp server, when the first data packet hit the ALG, verify data session will be created</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		security-object zhhtest
		security-object zhhtest default-user-profile-attr 1
		ssid zhhtest
		ssid zhhtest security-object zhhtest
		interface wifi0 ssid zhhtest
		user-profile uu qos-policy def-user-qos vlan-id 1 attribute 1
		ip-policy xx
		ip-policy xx id 1 service tftp action permit
		ip-policy xx id 2 service dhcp-server action permit
		ip-policy xx id 3 service dhcp-client action permit
		ip-policy xx id 4 service icmp action permit
		user-profile uu security ip-policy from-access xx
		alg tftp enable
		Laptop connect to SSID and obtain ip address
		_debug fe alg_tftp_error
		_debug fe alg_tftp_fsm
		_debug fe alg_tftp_gate
		_debug fe alg_tftp_pkt
		_ff id 1 src-mac xxxx:yyyy:zzzz bidirectional
		_kdebug fe basic
		_kdebug fe detail
		debug console
		clear forwarding-engine ip-sessions

		Test Procedure:

		Laptop send RRQ to tftp server and transfer data, when the first data packet hit
		the ALG, check if data session be created by show forwarding-engine ip-session
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="tftp_test_file_local_dir" value="/tmp" />
	<stage>
		<step no="1">
			<desc>
				config
			</desc>
			<ssh target="ap1">
				-v "ssid ${ssid.name}"
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "user-profile uu attribute 1"
				-v "ip-policy xx"
				-v "ip-policy xx id 1 service tftp action permit"
				-v "ip-policy xx id 2 service dhcp-server action permit"
				-v "ip-policy xx id 3 service dhcp-client action permit"
				-v "ip-policy xx id 4 service icmp action permit"
				-v "user-profile uu security ip-policy from-access xx to-access xx"
				-v "alg tftp enable"
				-v "save config"
			</ssh>
		</step>

		<include prefix="1.1.2" file="subs/ap_renew_ip.xml" obj-args="ap1" />

		<step no="1.2">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>

		<include prefix="1.3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="2">
			<desc>Check traffic between client and tftp server</desc>
			<log-file>ping_${sta1.tif.ip}_tftp.log</log-file>
			<ssh target="sta1">
				-v "ping ${tb.tftp} -c 4"
			</ssh>
			<log-match>-n -e "0 received" -c</log-match>
		</step>

		<step no="3">
			<desc>
				Set filter and open some debug, clear ip-session and clear log all
				_ff id 1 src-mac xxxx:yyyy:zzzz bidirectional
				_kdebug fe basic
				clear forwarding-engine ip-sessions
				Set syslog server to AP
			</desc>
			<ssh target="ap1">
				-v "_ff id 1 src-mac ${sta1.tif.mac} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear forwarding-engine ip-sessions"
				-v "clear log all"
			</ssh>
		</step>

		<step no="4.1">
			<desc>
				Download a file from tftp server to client,alg tftp disbale
			</desc>
			<log-file>4.1_curl_pid.log</log-file>
			<ssh target="sta1">
				-v "nohup curl --connect-timeout 5 tftp://${tb.tftp}/${tb.ftp.file3_small} -o ${tftp_test_file_local_dir}/${tb.ftp.file3_small} --limit-rate 1k> ${tftp_test_file_local_dir}/4.1_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>


		<step no="4.2.2">
			<desc>
				show log buffer,alg tftp disbale
			</desc>
			<log-file>4.2.2_show_log_buffer.log</log-file>
			<ssh target="ap1">
				-v "show log buffer"
			</ssh>
			<log-match>-e "matched gate ${tb.tftp}/0 ->${sta1.tif.ip}/" -c </log-match>
			<log-match>-e "create new IP session" -i "from-gate" -c</log-match>
			<log-match>-e "QoS: first pkt processing:ALG=2" -c</log-match>
			<log-match>-e "QoS: first pkt IP session action=1001 qos=0" -c</log-match>
			<no-error-check />
		</step>

		<step no="12">
			<desc>
				Check control session and data session by show forwarding-engine ip-sessions
			</desc>
			<log-file>show_session.log</log-file>
			<ssh target="ap1">
				-v "show forwarding-engine ip-sessions"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.tftp}/69 -> ${sta1.tif.ip}/\d+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.tftp}/69" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.tftp}/\d+ -> ${sta1.tif.ip}/\d+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.tftp}/\d+" -f ${log.dir}/${log.file}</log-match>
		</step>

	</stage>

</testcase>
