<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Configure one ip-address in walled garden</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		1:Configure one ip-address in walled garden and other relative e-CWP on ap, result 1
		2:Client accesses the ip which is configured in walled garden, result 2
		3:Client passes authentication, then accesses the ip which is configured in walled garden, result 2

	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<property name="url" value="www.sina.com" />
	<property name="url1" value="http://192.168.10.201" />
	<property name="url2" value="http://10.155.21.1" />
	<property name="per_url" value="https://192.168.10.202"/>
	<property name="selenium_path" value="/root/selenium-server-standalone-2.42.2.jar" />
	<stage>
		<step no="0.1">
			<desc>
				start selenium server
			</desc>
			<ssh target="sta1">
				-v "export DISPLAY=:1"
				-v "nohup java -jar ${selenium_path} 1>logfile.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="0.2">
			<desc>
				start selenium server
			</desc>
			<ssh target="sta1">
				-v "printenv"
			</ssh>
		</step>
		<step no="0.3">
			<setvar name="ssh_server">
				echo "192.168.21.1"
			</setvar>
		</step>
		<step no="0.4">
			<setvar name="ssh_servernot">
				echo "192.168.21.2"
			</setvar>
		</step>
		<step no="1">
			<desc>
				1: Configure authentication type CWP (passthrough/e-cwp) on ap
			</desc>
			<ssh target="ap1">
				-v "security-object auto-cwp"
				-v "security-object auto-cwp security aaa radius-server primary ${pub.radius2.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object auto-cwp security aaa radius-server accounting primary ${pub.radius2.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object auto-cwp security additional-auth-method captive-web-portal auth-user-profile-attr 1"
				-v "security-object auto-cwp web-server"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object auto-cwp"
				-v "security-object auto-cwp walled-garden ip-address 192.168.10.1/24"
				-v "security-object auto-cwp walled-garden ip-address 192.168.21.1/24 service all"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
				-v "user-profile 1 qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "_debug auth all"
			</ssh>
		</step>

		<step no="1.1">
			<desc>
				show interface wifi0 info
			</desc>
			<log-file>step1.1_show_interface_wifi0_info.log</log-file>
			<ssh target="ap1" timeout="180">
				-v "show interface ${ssid_bind_interface}"
			</ssh>
		</step>

		<step no="1.2">
			<desc>Get ap1's wifi0â€˜s mac</desc>
			<setvar name="ap1.wifi0.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step1.1_show_interface_wifi0_info.log -i ${ssid_bind_interface} -o aero -m -width
			</setvar>
		</step>

		<step no="1.3">
			<desc>
				open debug mode and clear log all
			</desc>
			<ssh target="ap1">
				-v "_debug cgic basic"
				-v "_debug auth all"
				-v "_kdebug fe detail"
				-v "_ff dst-port 80"
				-v "clear log all"
			</ssh>
		</step>
		<step no="1.4">
			<desc>
				check entries in walled-garden
			</desc>
			<log-file>step1.4_show_walled-garden.log</log-file>
			<ssh target="ap1">
				-v "show security-object auto-cwp walled-garden"
			</ssh>
			<log-match>-c -i "192.168.10.0\s+255.255.255.0\s+80" -re</log-match>
			<log-match>-c -i "192.168.10.0\s+255.255.255.0\s+443" -re</log-match>
			<log-match>-c -i "192.168.21.0\s+255.255.255.0\s+0\s+0" -re</log-match>
		</step>
		<step no="2.1">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>
		<include prefix="2.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />
		<step no="3">
			<desc>
				ssh server1 which is configured in walled garden
			</desc>
			<log-file>step3_ssh_IP.log</log-file>
			<ssh target="sta1" timeout="500">
				-v "clicfg.pl -i 22 -o 600 -d ${ssh_server} -u root -p aerohive -m \".*#\" -n -z ssh_IP.log -l /tmp/ -v \"ls\"" ; exit 0
			</ssh>
		</step>
		<step no="3.1">
			<desc>
				-check the result of ssh server1
			</desc><log-file>step3.1_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/ssh_IP.log"
			</ssh>
			<log-match>-i "root@${ssh_server}'s password:"</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "root@${ssh_server}'s password:" -ps p1 "Last login:" -e "ls" -f ${log.dir}/${log.file}</log-match>
		</step>
		<step no="4">
			<desc>
				ssh server2 which is configured in walled garden
			</desc>
			<log-file>step4_ssh_IP.log</log-file>
			<ssh target="sta1" timeout="500">
				-v "clicfg.pl -i 22 -o 600 -d ${ssh_server} -u root -p aerohive -m \".*#\" -n -z ssh_IP.log -l /tmp/ -v \"ls\"" ; exit 0
			</ssh>
		</step>
		<step no="4.1">
			<desc>
				-check the result of ssh server1
			</desc><log-file>step4.1_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/ssh_IP.log"
			</ssh>
			<log-match>-i "root@${ssh_server}'s password:"</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "root@${ssh_server}'s password:" -ps p1 "Last login:" -e "ls" -f ${log.dir}/${log.file}</log-match>
		</step>
		<step no="5">
			<desc>
				client request a web page and get the page from walled-garden'ip1
			</desc>
			<log-file>cwp_walled_garden_ip1.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/AerohiveGUI/scripts/cwp/cwp_login.py -r http://${sta1.mif.ip}:4444/wd/hub --parameters login.is_permit=true visit.url=${url} visit.permit_url=${url1} login.username=${pub.radius1.username} login.password=${pub.radius1.passwd} -t ff -l info -f ${log.dir}/${log.file}
			</script>
		</step>
		<step no="6">
			<desc>Get laptop1's ip after authentication</desc>
			<setvar name="sta1.tif.ip.auth">
				python ${bin.dir}/getinfo_ip.py -d '${sta1.mif.ip}' -i '${sta1.tif.name}' -v 'ip' -u 'root'
			</setvar>
		</step>
		<step no="7">
			<desc>
				show roam cache
			</desc>
			<log-file>step5_show_roam.log</log-file>
			<ssh target="ap1">
				-v "show roam cache"
			</ssh>
			<no-error-check />
			<log-match>-c -i "${sta1.tif.mac}" -i "YYNN"</log-match>
		</step>
		<step no="8">
			<desc>
				client access Internet
			</desc>
			<log-file>cwp_access_Internet.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/AerohiveGUI/scripts/cwp/cwp_access_Internet.py -r http://${sta1.mif.ip}:4444/wd/hub --parameters login.is_success=true visit.permit_url=${per_url} -t ff -l info -f ${log.dir}/${log.file}
			</script>
		</step>
	</stage>
</testcase>
