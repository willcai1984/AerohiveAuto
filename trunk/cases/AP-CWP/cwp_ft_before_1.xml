<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Client could send some type traffic before login (passthrough/e-cwp authenticate)</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		Test Procedure:
		1: Configure one of type CWP (passthrough/e-cwp) on ap
		2: Client links to ap successfully.
		3: Client tries to get ip address from dhcp server, result 1
		4: Client ping a hostname ,such as www.sohu.com, result 2
		5: Client tries to access internet or other service, result 3
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="hostname" value="hztb-ip2" />
	<property name="hostname_ip" value="192.168.10.254" />

	<stage>
		<step no="1">
			<desc>
				1: Configure one of type CWP (passthrough/e-cwp) on ap
			</desc>
			<ssh target="ap1">
				-v "security-object ${ssid.name}"
				-v "ssid ${ssid.name}"
				-v "security-object ${ssid.name} security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object ${ssid.name} security additional-auth-method captive-web-portal external-server primary login-page https://${pub.radius1.ip}/weblogin.php/7"
				-v "security-object ${ssid.name} walled-garden ip-address ${pub.radius1.ip}"				
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
			</ssh>
		</step>

		<step no="1.1">
			<desc>
				show interface wifi0 info
			</desc>
			<log-file>step1.1_show_interface_wifi0_info.log</log-file>
			<ssh target="ap1" timeout="180">
				-v "show interface ${ssid_bind_interface}"
			</ssh>
		</step>

		<step no="1.2">
			<desc>Get ap1's wifi0â€˜s mac</desc>
			<setvar name="ap1.wifi0.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step1.1_show_interface_wifi0_info.log -i ${ssid_bind_interface} -o aero -m -width
			</setvar>
		</step>

		<step no="1.3">
			<desc>
				open debug mode and clear log all
			</desc>
			<ssh target="ap1">
				-v "_debug auth all"
				-v "clear log all"
			</ssh>
		</step>

		<step no="2.1">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>
		<include prefix="2.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />
		<step no="3.1" delay="10">
			<desc>ifconfig to show the ip add</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>
		<step no="3.2">
			<desc>Get laptop1's mac</desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -m -width
			</setvar>
		</step>

		<step no="3.3">
			<desc>Get laptop1's ip</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="4">
			<desc>
				4: Client ping a hostname ,such as www.sohu.com, result 2
				setup debugger
			</desc>
			<ssh target="ap1">
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_ff src-mac ${sta1.tif.mac} bidirectional"
				-v "clear log all"
			</ssh>
		</step>

		<step no="4.1">
			<desc>
				Client ping a hostname
			</desc>
			<log-file>step4.1_sta_ping_host.log</log-file>
			<ssh target="sta1">
				-v "ping ${hostname} -c 10"
			</ssh>
			<log-match>-e "from ${hostname_ip}"</log-match>
		</step>

		<step no="4.2">
			<desc>
				show logging buffered
			</desc>
			<log-file>step4.2_show_logging_buffered.log</log-file>
			<ssh target="ap1" timeout="120">
				-v "show logging buffered"
				-v "clear log all"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth0 ${sta1.tif.ip}->${hostname_ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid_bind_interface}.* ${sta1.tif.ip}->${hostname_ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid_bind_interface}.* ${hostname_ip}->${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="5">
			<desc>
				5: Client tries to access internet or other service, result 3
			</desc>
			<log-file>step5_sta_download_file_by_tftp.log</log-file>
			<ssh target="sta1" timeout="150">
				-v "tftp ${pub.tftp1.tip} -c get test"
			</ssh>
			<log-match>-e "Transfer timed out"</log-match>
		</step>

		<step no="5.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step5.1_show_logging_buffered.log</log-file>
			<ssh target="ap1" timeout="120">
				-v "show logging buffered"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ssid_bind_interface}.1 ${sta1.tif.ip}->${pub.tftp1.tip}\(\d+\) ttl\(\d+\) UDP \d+->\d+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "MAC session \(id \[\d+\]\) found" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "fflow acl 0x0/0x0, rflow acl 0x0/0x0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "invalid udp port \d+->\d+, drop" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "incorrect protocol, drop pak" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
	</stage>
</testcase>