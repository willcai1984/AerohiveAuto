<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>CWP compatibility test with Mac-auth</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-condition
		-Create accounts on amigopod, including username, password and expired time, including mac-auth account
		-The normal account and mac-auth account are belonged to different user roles
		Test procedure
		1:Configure (internal/passthrough/e-cwp, include auth/reg/both/ecwp), mac-auth  on ap
		2:Configure different user-profile attribute on RADIUS server as follow
			-Tunnel-Type : GRE
			-Tunnel-Medium-Type: IP
			-Tunnel-Private-Group-Id: input the user-profile attribute number here
			Assume normal account’s attribute is 100, mac-auth account’ attribute is 1000
		3:Client links to ap successfully, result 1
		4:Client passes the authentication, and gets web page, result 2
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<property name="url" value="http://www.google.com.hk" />
	<property name="selenium_path" value="/root/selenium-server-standalone-2.42.2.jar" />
	<stage>
		<step no="0.1">
			<desc>
				start selenium server
			</desc>
			<ssh target="sta1">
				-v "export DISPLAY=:1"
				-v "nohup java -jar ${selenium_path} 1>logfile.log 2>&amp;1 &amp;"
			</ssh>
		</step>
		<step no="0.2">
			<desc>
				start selenium server
			</desc>
			<ssh target="sta1">
				-v "printenv"
			</ssh>
		</step>
		<step no="0.3">
			<setvar name="sta1.auth_mac">
				echo "${sta1.tif.smac}" | tr '[A-Z]' '[a-z]'
			</setvar>
		</step>
		<include prefix="0.4" file="subs/ldap_add.xml" args="${sta1.auth_mac}, ${sta1.auth_mac}" />
		<step no="1">
			<desc>
					config mac-auth and cwp on AP1
			</desc>
			<telnet target="ap1">
					-v "security-object auto-cwp"
					-v "security-object auto-cwp security additional-auth-method mac-based-auth" 
					-v "security-object auto-cwp security additional-auth-method captive-web-portal"
					-v "security-object auto-cwp security aaa radius-server primary ${pub.radius2.ip} shared-secret ${pub.radius1.sharesecret} "
					-v "ssid ${ssid.name}"
					-v "ssid ${ssid.name} security-object auto-cwp"
					-v "int ${ssid_bind_interface} ssid ${ssid.name}"
					-v "user-profile 1000 vlan-id 1 attribute 1000"
					-v "user-profile 100 vlan-id 1 attribute 100"
					-v "save config"
			</telnet>
		</step>
		<step no="2">
			<desc>
				show security-object to make sure mac-auth and cwp is enable.
			</desc>
			<log-file>step2_show_security-object.log</log-file>
			<telnet target="ap1">
				-v "show security-object auto-cwp"
			</telnet>
			<log-match>-c -i "MAC-based auth:\s+Enabled" -re</log-match>
			<log-match>-c -i "Captive Web Portal:\s+Enabled" -re</log-match>
		</step>
		<step no="3">
			<desc>
				open debug on AP
			</desc>
			<telnet target="ap1">
				-v "_debug auth all"
				-v "clear log b"
			</telnet>
		</step>
		<step no="4.1">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>
		<include prefix="4.2" file="${case.dir}/subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />
		<step no="5">
			<desc>
				show logging buffer
			</desc>
			<log-file>step5_show_log_buffer.log</log-file>
			<ssh target="ap1">
				-v "show logging buffer"
			</ssh>
			<log-match>-c -i "start MAC-based auth for sta ${sta1.tif.mac}" -re</log-match>
			<log-match>-c -i "MAC-based auth: RADIUS server send OK to station ${sta1.tif.mac}" -re</log-match>
		</step>
		<step no="6">
			<desc>
				show roaming cache
			</desc>
			<log-file>step6_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "YNNN" -re</log-match>
		</step>
		<step no="7">
			<desc>
				show roaming cache mac xxx
			</desc>
			<log-file>step7_show_roaming_cache_mac.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache mac ${sta1.tif.mac}"
			</telnet>
			<log-match>-c -i "MAC based auth flag: set" -re</log-match>
			<log-match>-c -i "CWP flag: not set" -re</log-match>
			<log-match>-c -i "User Profile ID: 1000" -re</log-match>
		</step>
		<step no="8">
			<desc>
				access public HM through CWP
			</desc>
			<log-file>cwp_ft_int_dhcp_2_login_in.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/AerohiveGUI/scripts/cwp/cwp_login.py -r http://${sta1.mif.ip}:4444/wd/hub --parameters login.mode=normal visit.url=${url} login.username=${pub.radius2.username3} login.password=aerohive -t ff -l info -f ${log.dir}/${log.file}
			</script>
		</step>
		<step no="9">
			<desc>
				show roaming cache
			</desc>
			<log-file>step6_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "YYNN" -re</log-match>
		</step>
		<step no="10">
			<desc>
				show roaming cache mac xxx
			</desc>
			<log-file>step7_show_roaming_cache_mac.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache mac ${sta1.tif.mac}"
			</telnet>
			<log-match>-c -i "MAC based auth flag: set" -re</log-match>
			<log-match>-c -i "CWP flag: set"</log-match>
			<log-match>-c -i "User Profile ID: 100"</log-match>
		</step>
		<step no="11" delay="60">
			<desc>
				show auth
			</desc>
			<log-file>step10_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<no-error-check />
		    <log-match>-c -e "${sta1.tif.mac}\s*${ssid_bind_interface}.*\s*\d*04\s*${sta1.tif.ip.auth}" -re</log-match>
		</step>
	</stage>
	<post-process>
		<stage>
			<include prefix="0.2" file="subs/ldap_delete.xml" args="${sta1.auth_mac}" />
		</stage>

		<include prefix="def_post" file="include/default_post_process.xml" />
	</post-process>
</testcase>
