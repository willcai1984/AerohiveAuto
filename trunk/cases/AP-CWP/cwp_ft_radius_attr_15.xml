<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>No session time from RADIUS server 1</brief>
	<priority>Middle</priority>
	<automated>yes</automated>
	<description>
		- Create an account on RADIUS server, including username, password
		1:Configure (internal/passthrough/e-cwp) on ap, don’t configure timeout on ap, and don’t configure expiration time of account on RADIUS server
		“ssid aaa
		ssid aaa default-user-profile-attr 1
		ssid aaa security aaa radius-server dynamic-auth-extension
		ssid aaa security additional-auth-method captive-web-portal auth-user-profile-attr  1 timer-display
		…… cwp configuration……
		user-profile xxx qos-policy def-user-qos vlan-id 60 attribute 1”
		2:Client requests a web page and enters a valid username and password, result 1

	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<property name="url" value="http://www.google.com.hk" />
	<property name="selenium_path" value="/root/selenium-server-standalone-2.42.2.jar" />
	<stage>
		<step no="0.1">
			<desc>
				start selenium server
			</desc>
			<ssh target="sta1">
				-v "export DISPLAY=:1"
				-v "nohup java -jar ${selenium_path} 1>logfile.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="0.2">
			<desc>
				start selenium server
			</desc>
			<ssh target="sta1">
				-v "printenv"
			</ssh>
		</step>

		<step no="1">
			<desc>
				1: Configure authentication type CWP (passthrough/e-cwp) on ap
			</desc>
			<ssh target="ap1">
				-v "security-object auto-cwp"
				-v "security-object auto-cwp security aaa radius-server primary ${pub.radius2.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object auto-cwp security aaa radius-server accounting primary ${pub.radius2.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object auto-cwp security additional-auth-method captive-web-portal auth-user-profile-attr 10"
				-v "security-object auto-cwp default-user-profile-attr 10"
				-v "security-object auto-cwp web-server"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object auto-cwp"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
				-v "user-profile 10 qos-policy def-user-qos vlan-id 1 attribute 10"
				-v "_debug auth all"
			</ssh>
		</step>

		<step no="1.1">
			<desc>
				show interface wifi0 info
			</desc>
			<log-file>step1.1_show_interface_wifi0_info.log</log-file>
			<ssh target="ap1" timeout="180">
				-v "show interface ${ssid_bind_interface}"
			</ssh>
		</step>

		<step no="1.2">
			<desc>Get ap1's wifi0‘s mac</desc>
			<setvar name="ap1.wifi0.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step1.1_show_interface_wifi0_info.log -i ${ssid_bind_interface} -o aero -m -width
			</setvar>
		</step>

		<step no="1.3">
			<desc>
				open debug mode and clear log all
			</desc>
			<ssh target="ap1">
				-v "_debug auth all"
				-v "clear log all"
			</ssh>
		</step>

		<step no="2.1">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>
		<include prefix="2.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />
		<step no="3">
			<desc>
				show  log buffer
			</desc>
			<log-file>step3_show_log_buffer.log</log-file>
			<ssh target="ap1">
				-v "show log buffer"
			</ssh>
			<log-match>-c -e "Got vlan ID 1 by User Profile ID 10 for station ${sta1.tif.mac}" -r </log-match>
			<no-error-check />
		</step>
		<step no="4">
			<desc>
				client request a web page and get login page,input correct
				username and password
			</desc>
			<log-file>cwp_ft_pass_1_log_in.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/AerohiveGUI/scripts/cwp/cwp_login.py -r http://${sta1.mif.ip}:4444/wd/hub --parameters visit.url=${url} login.username=${pub.radius1.username} login.password=${pub.radius1.passwd} -t ff -l info -f ${log.dir}/${log.file}
			</script>
		</step>
		<step no="5">
			<desc>
				station disconnect and reconnect to get a new ip
			</desc>
			<ssh target="sta1">
				-v "dhclient wlan0 -r"
				-v "dhclient wlan0"
			</ssh>
		</step>
		<step no="6">
			<desc>
				show log buffer
			</desc>
			<ssh target="ap1">
				-v "show log buffer"
			</ssh>
			<log-file>step9_show_log_buffer.log</log-file>
			<log-match>-c -e "authentication OK, username '${pub.radius1.username}', service" -r </log-match>
			<log-match>-c -e "User Type=Employee User Name=\W*${pub.radius1.username}\W* Password=" -r </log-match>
		</step>
		<step no="7">
			<desc>
				get session time from show roaming cache
			</desc>
			<log-file>step7_show_roaming_cache.log</log-file>
			<ssh target="ap1">
				-v "show roaming cache"
			</ssh>
			<log-match>-c -e "43200" -r </log-match>
		</step>
	</stage>
</testcase>
