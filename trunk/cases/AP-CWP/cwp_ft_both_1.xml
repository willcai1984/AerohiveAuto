<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Both auth and register test through http</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		- Create an account on GM, including username, password and expiration time
		Test Procedure:
		1:Configure relative CWP (internal/passthrough/e-cwp) on ap, both auth
		and register mode
		2:Client links to ap, and gets web page, result 1
		3:From step 2, client enters a valid username and password, result 2
		4:From step 2,client fills all mandatory fields and submit, result 3
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<property name="url" value="http://www.google.com.hk" />
	<property name="selenium_path" value="/root/selenium-server-standalone-2.42.2.jar" />

	<stage>
		<step no="0.1">
			<desc>
				start selenium server
			</desc>
			<ssh target="sta1">
				-v "export DISPLAY=:1"
				-v "nohup java -jar ${selenium_path} 1>logfile.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="0.2">
			<desc>
				start selenium server
			</desc>
			<ssh target="sta1">
				-v "printenv"
			</ssh>
		</step>


		<step no="1.1">
			<desc>
				config vlan ,ssids and bind them to interface
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<include prefix="1.2" file="subs/ap_renew_ip.xml" obj-args="ap1" />

		<step no="2">
			<desc>
				1:Configure (internal/passthrough/e-cwp) on ap, both auth and register mode
			</desc>
			<ssh target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${ssid.name}"
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "security-object ${ssid.name} security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object ${ssid.name} security additional-auth-method captive-web-portal reg-user-profile-attr 1 auth-user-profile-attr 1 timer-display"
				-v "security-object ${ssid.name} security additional-auth-method captive-web-portal timer-display alert 10"
				<!-- -v "security-object ${ssid.name} security additional-auth-method captive-web-portal internal-servers" -->
				-v "security-object ${ssid.name} security additional-auth-method captive-web-portal failure-redirect login-page"
				-v "security-object ${ssid.name} web-server"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
				-v "user-profile ttt qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
			</ssh>
		</step>

		<step no="3.1">
			<desc>
				show interface wifi0 info
			</desc>
			<log-file>step1.1_show_interface_wifi0_info.log</log-file>
			<telnet target="ap1" timeout="180">
				-v "show interface ${ssid_bind_interface}"
			</telnet>
		</step>

		<step no="3.2">
			<desc>Get ap1's wifi0â€˜s mac</desc>
			<setvar name="ap1.wifi0.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step1.1_show_interface_wifi0_info.log -i ${ssid_bind_interface} -o aero -m -width
			</setvar>
		</step>

		<step no="4.1">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>
		<include prefix="4.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />
		<step no="5">
			<desc>
				open debug 
			</desc>
			<telnet target="ap1">
				-v "_debug auth all"
				-v "_debug cgic all"
				-v "clear log b"
			</telnet>
		</step>
		<step no="5.1">
			<desc>
				access public HM through CWP
			</desc>
			<log-file>cwp_ft_both_1_auth_log_in.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/AerohiveGUI/scripts/cwp/cwp_login.py -r http://${sta1.mif.ip}:4444/wd/hub --parameters login.mode=normal visit.url=${url} login.username=${pub.radius1.username} login.password=${pub.radius1.passwd} -t ff -l info -f ${log.dir}/${log.file} -l info --preserve-session &gt; ${log.dir}/session_id.log
			</script>
		</step>

		<step no="5.2">
			<desc>
				get session id
			</desc>
			<setvar name="session.id">
				${bin.dir}/getbyrexp.py -p "- session preserved - (\S+)" -f ${log.dir}/session_id.log -t str
			</setvar>
		</step>

		<step no="6">
			<desc>Get laptop1's ip after authentication</desc>
			<setvar name="sta1.tif.ip.auth">
				python ${bin.dir}/getinfo_ip.py -d '${sta1.mif.ip}' -i '${sta1.tif.name}' -v 'ip' -u 'root'
			</setvar>
		</step>

		<step no="7" delay="60">
			<desc>
				show auth
			</desc>
			<log-file>step7_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<no-error-check />
			<log-match>-c -e "${sta1.tif.mac}\s*${ssid_bind_interface}.*\s*04\s*${sta1.tif.ip.auth}" -re</log-match>
		</step>

		<step no="8">
			<desc>
				show roam cache
			</desc>
			<log-file>step9_show_roam.log</log-file>
			<telnet target="ap1">
				-v "show roam cache"
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta1.tif.mac}" -i "YYNN"</log-match>
		</step>

		<step no="9">
			<desc>
				show logging buffered
			</desc>
			<log-file>step9_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchblocks.py">-b "User Type=Employee User Name=\W*${pub.radius1.username}\W*" -ps p "User Type=Employee User Name=\W*\W* joined in" -e "authentication OK, username '${pub.radius1.username}', service \(unknown\)" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="10">
			<desc>
				do log out
			</desc>
			<log-file>cwp_ft_both_1_auth_log_out.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/AerohiveGUI/scripts/cwp/cwp_logout.py -r http://${sta1.mif.ip}:4444/wd/hub --parameters visit.url=${url} -t ff -l info -f ${log.dir}/${log.file} -l info --parameters visit.url=${url} --session-id ${session.id}
			</script>
			<no-error-check />
		</step>
	<step no="11" delay="5">
			<desc>
				show logging buffer
			</desc>
			<log-file>step12_show_logging_buffer.log</log-file>
			<telnet target="ap1">
				-v "show logging buffer"
			</telnet>
			<log-match>-c -i "deauthenticated due to local deauth request"</log-match>
		</step>
		<include prefix="11.1" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />
		<step no="12">
			<desc>
				show roam cache
			</desc>
			<log-file>step12_show_roam.log</log-file>
			<telnet target="ap1" delay="15">
				-v "show roam cache"
				-v "show station"
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta1.tif.mac}" -i "YNNN"</log-match>
		</step>
	
		<step no="13" delay="10">
			<desc>
				show auth
			</desc>
			<log-file>step13_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta1.tif.mac}\s*${ssid_bind_interface}.*\s*01\s*${sta1.tif.ip.auth}"</log-match> 
		</step>
		<step no="14">
			<desc>
				clear log all
			</desc>
			<telnet target="ap1">
				-v "_kdebug fe detail"
				-v "_ff src-mac ${sta1.tif.mac} bi"
				-v "clear log all"
			</telnet>
		</step>

		<step no="15">
			<desc>
				access public HM through CWP(register)
			</desc>
			<log-file>cwp_ft_both_1_register_log_in.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/AerohiveGUI/scripts/cwp/cwp_login.py -r http://${sta1.mif.ip}:4444/wd/hub --parameters login.mode=register -t ff -f ${log.dir}/${log.file} -l info --preserve-session &gt; ${log.dir}/register_session_id.log
			</script>
		</step>

		<step no="15.1">
			<desc>
				get session id
			</desc>
			<setvar name="session.id.register">
				${bin.dir}/getbyrexp.py -p "- session preserved - (\S+)" -t str -f ${log.dir}/register_session_id.log
			</setvar>
		</step>

		<step no="16">
			<desc>Get laptop1's ip after authentication</desc>
			<setvar name="sta1.tif.ip.register">
				python ${bin.dir}/getinfo_ip.py -d '${sta1.mif.ip}' -i '${sta1.tif.name}' -v 'ip' -u 'root'
			</setvar>
		</step>
		<step no="16.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step16.1_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchblocks.py"> -b "Guest CWP user is registered on if" -ps p "User Type=Guest User" -e "A CWP user registered from interface" -f ${log.dir}/${log.file}</log-match> 
		</step>
		<step no="17">
			<desc>
				show roam cache
			</desc>
			<log-file>step18_show_roam.log</log-file>
			<telnet target="ap1">
				-v "show roam cache"
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta1.tif.mac}" -i "YYNN"</log-match>
		</step>
		<step no="18" delay="60">
			<desc>
				show auth
			</desc>
			<log-file>step12_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta1.tif.mac} *${ssid_bind_interface}.* *\d*04 *${sta1.tif.ip.register}"</log-match>
		</step>
		<step no="19">
			<desc>
				do log out
			</desc>
			<log-file>cwp_ft_both_1_register_log_out.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/AerohiveGUI/scripts/cwp/cwp_logout.py -r http://${sta1.mif.ip}:4444/wd/hub --parameters visit.url=${url} -t ff -l info -f ${log.dir}/${log.file} -l info --parameters visit.url=${url} --session-id ${session.id.register}
			</script>
			<no-error-check />
		</step>

		<step no="19" delay="10">
			<desc>
				show auth
			</desc>
			<log-file>step15_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta1.tif.mac}\s*${ssid_bind_interface}.*\s*01\s*${sta1.tif.ip.register}"</log-match>
		</step>

		<step no="20">
			<desc>
				show roam cache
			</desc>
			<log-file>step16_show_roam.log</log-file>
			<telnet target="ap1">
				-v "show roam cache"
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta1.tif.mac}" -i "YNNN"</log-match> 
		</step>
	</stage>

	<post-process>
		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>