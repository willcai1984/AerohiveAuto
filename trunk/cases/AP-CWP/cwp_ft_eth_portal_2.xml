<?xml version="1.0" encoding="UTF-8"?>
<testcase>
<brief>Passthrough cwp access successfully</brief>
<priority>Accept</priority>
<automated>yes</automated>
<description>
		Pre-Condition:
		Test Procedure:
		1:Configure passthrough/ecwp on ap, and configure one ethernet port
		bridge mode, enable mac-learning, bind cwp to the bridge ethernet port
		2:Client links to ap through the bridge ethernet port, result 1
		3:Client ping a hostname ,such as www.sohu.com, result 2
		4:Client tries to access internet or other service, result 3
</description>
<numofap>1</numofap>
<numofsta>1</numofsta>
<tbtype>linux</tbtype>
<property name="url" value="http://www.google.com.hk" />
<property name="selenium_path" value="/root/selenium-server-standalone-2.42.2.jar" />
<stage>
	<if>
		"${tb.bridge_support}" == "true" &amp;&amp; "${ap1.eth1.existed}" =="true"
	</if>
<include prefix="0" file="subs/bpc_reboot.xml" obj-args="ap1.bpc"/>

	<step no="1">
		<desc>
				1:Configure (internal/passthrough/e-cwp) on ap, both auth and register mode
			</desc>
			<ssh target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "security-object ${ssid.name} security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object ${ssid.name} security additional-auth-method captive-web-portal reg-user-profile-attr 1 auth-user-profile-attr 1 timer-display"
				-v "security-object ${ssid.name} security additional-auth-method captive-web-portal timer-display alert 10"
				-v "security-object ${ssid.name} security additional-auth-method captive-web-portal failure-redirect login-page"
				-v "security-object ${ssid.name} web-server"
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "interface eth1 mac-learning enable"
				-v "interface eth1 security-object ${ssid.name}"
				-v "user-profile ttt qos-policy def-user-qos vlan-id 1 attribute 1"
			</ssh>
	</step>
	<include prefix="1.1" file="subs/bpc_wired_connect_${tb.os}.xml" obj-args="ap1.bpc"/>
	<step no="0.1">
			<desc>
				start selenium server
			</desc>
			<ssh target="${ap1.bpc.mif.ip}">
				-v "export DISPLAY=:1"
				-v "nohup java -jar ${selenium_path} 1>logfile.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="0.2">
			<desc>
				start selenium server
			</desc>
			<ssh target="${ap1.bpc.mif.ip}">
				-v "printenv"
			</ssh>
		</step>
	<step no="2" delay="20">
		<desc>ifconfig to show the ip adrr</desc>
		<log-file>ifconfig.log</log-file>
		<ssh target="${ap1.bpc.mif.ip}">
				-v "ifconfig  ${ap1.bpc.tif.name}"
		</ssh>
		<log-match> -e "inet addr"</log-match>
	</step>
	<step no="2.2">
		<desc>Get clinet's mac</desc>
		<setvar name="bpc1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${ap1.bpc.tif.name} -m -width
		</setvar>
	</step>
	<step no="2.3">
		<desc>Get client's ip</desc>
		<setvar name="bpc1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${ap1.bpc.tif.name} -nomask
		</setvar>
	</step>
	<step no="2.4">
		<desc>setup debugger</desc>
		<telnet target="ap1">
				-v "_debug auth all"
				-v "_debug cgic all"
				-v "clear log b"
		</telnet>
	</step>
	<step no="5.1">
			<desc>
				access public HM through CWP
			</desc>
			<log-file>cwp_ft_both_1_auth_log_in.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/AerohiveGUI/scripts/cwp/cwp_login.py -r http://${ap1.bpc.mif.ip}:4444/wd/hub --parameters login.mode=normal visit.url=${url} login.username=${pub.radius1.username} login.password=${pub.radius1.passwd} -t ff -l info -f ${log.dir}/${log.file} -l info --preserve-session &gt; ${log.dir}/session_id.log
			</script>
		</step>

		<step no="5.2">
			<desc>
				get session id
			</desc>
			<setvar name="session.id">
				${bin.dir}/getbyrexp.py -p "- session preserved - (\S+)" -f ${log.dir}/session_id.log -t str
			</setvar>
		</step>

		<step no="6">
			<desc>Get laptop1's ip after authentication</desc>
			<setvar name="sta1.tif.ip.auth">
				python ${bin.dir}/getinfo_ip.py -d '${ap1.bpc.mif.ip}' -i '${ap1.bpc.tif.name}' -v 'ip' -u 'root'
			</setvar>
		</step>

		<step no="7" delay="60">
			<desc>
				show auth
			</desc>
			<log-file>step7_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<no-error-check />
			<log-match>-c -e "${ap1.bpc.tif.mac}\s*${ap1.bpc.tif.name}.*\s*04\s*${sta1.tif.ip.auth}" -re</log-match>
		</step>

		<step no="8">
			<desc>
				show roam cache
			</desc>
			<log-file>step9_show_roam.log</log-file>
			<telnet target="ap1">
				-v "show roam cache"
			</telnet>
			<no-error-check />
			<log-match>-c -i "${ap1.bpc.tif.mac}" -i "YYNN"</log-match>
		</step>

		<step no="9">
			<desc>
				show logging buffered
			</desc>
			<log-file>step9_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "User Type=Employee User Name=\W*${pub.radius1.username}\W*" -re</log-match>
			<log-match>-c -i "User Type=Employee User Name=\W*\W* joined in" -re</log-match>
			<log-match>-c -i "authentication OK, username '${pub.radius1.username}', service \(unknown\)" -re</log-match>
		</step>

		<step no="10">
			<desc>
				do log out
			</desc>
			<log-file>cwp_ft_both_1_auth_log_out.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/AerohiveGUI/scripts/cwp/cwp_logout.py -r http://${ap1.bpc.mif.ip}:4444/wd/hub --parameters visit.url=${url} -t ff -l info -f ${log.dir}/${log.file} -l info --parameters visit.url=${url} --session-id ${session.id}
			</script>
			<no-error-check />
		</step>
	<step no="11" delay="5">
			<desc>
				show logging buffer
			</desc>
			<log-file>step12_show_logging_buffer.log</log-file>
			<ssh target="ap1">
				-v "show logging buffer"
			</ssh>
			<log-match>-c -i "deauthenticated due to local deauth request"</log-match>
			<no-error-check />
		</step>
		<step no="12" type="loop-check" loop-max-times="6" loop-interval="20">
  		 	<desc>show roam cache</desc>
  			<log-file>step12_show_roaming_cache_${loop_check.idx}.log</log-file>
  			 <ssh target="ap1">
    			-v "show roaming cache"
  			 </ssh>
  			 <no-error-check />
  			 <log-match>-c -i "${ap1.bpc.tif.mac}" -i "YNNN"</log-match>
  		</step>
		<step no="13" delay="10">
			<desc>
				show auth
			</desc>
			<log-file>step13_show_auth.log</log-file>
			<ssh target="ap1">
				-v "show auth"
			</ssh>
			<no-error-check />
			<log-match>-c -i "${ap1.bpc.tif.mac}\s*${ap1.bpc.tif.name}.*\s*01\s*${sta1.tif.ip.auth}"</log-match> 
		</step>
		<step no="14">
			<desc>
				clear log all
			</desc>
			<ssh target="ap1">
				-v "_kdebug fe detail"
				-v "_ff src-mac ${ap1.bpc.tif.mac} bi"
				-v "clear log all"
			</ssh>
		</step>

		<step no="15">
			<desc>
				access public HM through CWP(register)
			</desc>
			<log-file>cwp_ft_both_1_register_log_in.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/AerohiveGUI/scripts/cwp/cwp_login.py -r http://${ap1.bpc.mif.ip}:4444/wd/hub --parameters login.mode=register -t ff -f ${log.dir}/${log.file} -l info --preserve-session &gt; ${log.dir}/register_session_id.log
			</script>
		</step>

		<step no="15.1">
			<desc>
				get session id
			</desc>
			<setvar name="session.id.register">
				${bin.dir}/getbyrexp.py -p "- session preserved - (\S+)" -t str -f ${log.dir}/register_session_id.log
			</setvar>
		</step>

		<step no="16">
			<desc>Get laptop1's ip after authentication</desc>
			<setvar name="sta1.tif.ip.register">
				python ${bin.dir}/getinfo_ip.py -d '${ap1.bpc.mif.ip}' -i '${ap1.bpc.tif.name}' -v 'ip' -u 'root'
			</setvar>
		</step>
		<step no="16.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step16.1_show_logging_buffered.log</log-file>
			<ssh target="ap1" timeout="500">
				-v "show logging buffered"
			</ssh>
			<no-error-check />
			<log-match bin="${bin.dir}/searchblocks.py"> -b "Guest CWP user is registered on if" -ps p "User Type=Guest User" -e "A CWP user registered from interface" -f ${log.dir}/${log.file}</log-match> 
		</step>
		<step no="17">
			<desc>
				show roam cache
			</desc>
			<log-file>step18_show_roam.log</log-file>
			<ssh target="ap1">
				-v "show roam cache"
			</ssh>
			<no-error-check />
			<log-match>-c -i "${ap1.bpc.tif.mac}" -i "YYNN"</log-match>
		</step>
		<step no="18" delay="60">
			<desc>
				show auth
			</desc>
			<log-file>step12_show_auth.log</log-file>
			<ssh target="ap1">
				-v "show auth"
			</ssh>
			<no-error-check />
			<log-match>-c -i "${ap1.bpc.tif.mac}\s*${ap1.bpc.tif.name}.*\s*04\s*${sta1.tif.ip.auth}"</log-match>
		</step>
		<step no="19">
			<desc>
				do log out
			</desc>
			<log-file>cwp_ft_both_1_register_log_out.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/AerohiveGUI/scripts/cwp/cwp_logout.py -r http://${ap1.bpc.mif.ip}:4444/wd/hub --parameters visit.url=${url} -t ff -l info -f ${log.dir}/${log.file} -l info --parameters visit.url=${url} --session-id ${session.id.register}
			</script>
			<no-error-check />
		</step>

		<step no="20" delay="30">
			<desc>
				show auth
			</desc>
			<log-file>step15_show_auth.log</log-file>
			<ssh target="ap1">
				-v "sh clock"
				-v "show auth"
			</ssh>
			<no-error-check />
			<log-match>-c -i "${ap1.bpc.tif.mac}\s*${ap1.bpc.tif.name}.*\s*01\s*${sta1.tif.ip.auth}"</log-match>
		</step>

		<step no="21">
			<desc>
				show roam cache
			</desc>
			<log-file>step16_show_roam.log</log-file>
			<ssh target="ap1">
				-v "show roam cache"
			</ssh>
			<no-error-check />
			<log-match>-c -i "${ap1.bpc.tif.mac}" -i "YNNN"</log-match> 
		</step>
	</stage>
	<post-process>
	<stage>
	<step no="22">
		<desc>clear client</desc>
		<ssh target="${ap1.bpc.mif.ip}">
					-v "ifconfig ${ap1.bpc.tif.name} down"
					-v "dhclient ${ap1.bpc.tif.name} -r"
		</ssh>
	</step>
	</stage>
	<include file="include/default_post_process.xml"/>
	</post-process>
	</testcase>