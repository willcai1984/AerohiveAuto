<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Three type CWP regression test</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		-Create accounts on amigopod, including username, password and
		expired time

		Test Procedure:

		1:Configure e-CWP, internal CWP and pass through mode to different
		ssid , result 1
		2:Check the basic function of all type CWP (maybe can refer the CWP
		accept or some high priority cases), result 2
	</description>
	<numofap>1</numofap>
	<numofsta>3</numofsta>
	<tbtype>windows</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn2.ssid" value="${ssid.name}_1" />
	<property name="conn3.ssid" value="${ssid.name}_2" />

	<stage>
		<include prefix="start_selenium_server1" file="subs/start_selenium_server.xml" args="${sta1.mif.ip}, ${job_selenium_dir}, ${job_selenium_jar}, ${job_selenium_workload}" />

		<include prefix="start_selenium_server2" file="subs/start_selenium_server.xml" args="${sta2.mif.ip}, ${job_selenium_dir}, ${job_selenium_jar}, ${job_selenium_workload}" />

		<include prefix="start_selenium_server3" file="subs/start_selenium_server.xml" args="${sta3.mif.ip}, ${job_selenium_dir}, ${job_selenium_jar}, ${job_selenium_workload}" />

		<step no="1">
			<desc>
				config vlan ,ssids and bind them to interface
			</desc>
			<console target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "ssid ${ssid.name}_2"
				-v "security-object ${ssid.name}_2"
				-v "ssid ${ssid.name}"
				-v "security-object ${ssid.name}"
				-v "ssid ${ssid.name}_1"
				-v "security-object ${ssid.name}_1"
			</console>
		</step>

		<step no="1">
			<desc>
				-config e-cwp
			</desc>
			<telnet target="ap1">
				-v "security-object ${ssid.name}_2 security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret} acct-port ${pub.radius1.acctport}"
				-v "security-object ${ssid.name}_2 security additional-auth-method captive-web-portal auth-user-profile-attr 1 timer-display"
				-v "security-object ${ssid.name}_2 default-user-profile-attr 1"
				-v "security-object ${ssid.name}_2 security additional-auth-method captive-web-portal external-server primary login-page http://${pub.ecwp1.ip}/weblogin.php/7"
				-v "security-object ${ssid.name}_2 walled-garden ip-address ${pub.ecwp1.ip}"
				-v "security-object ${ssid.name}_2 security additional-auth-method captive-web-portal failure-redirect login-page"
				-v "security-object ${ssid.name}_2 web-server"
				-v "security-object ${ssid.name}_2 security additional-auth-method captive-web-portal timer-display alert 10"
				-v "ssid ${ssid.name}_2 security-object ${ssid.name}_2"
				-v "interface wifi0 ssid ${ssid.name}_2"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				1:Configure passthrough CWP on ap
				"ssid pass
				ssid pass default-user-profile-attr 1
				ssid pass security aaa radius-server primary 10.155.30.219 shared-secret
				*** acct-port 1813
				ssid pass security protocol-suite wpa2-aes-psk ascii-key ***
				ssid pass security additional-auth-method captive-web-portal reg-user-
				profile-attr 60 timer-display
				ssid pass security additional-auth-method captive-web-portal timer-
				display alert 10
				ssid pass security additional-auth-method captive-web-portal redirect
				ssid pass web-server
			</desc>
			<telnet target="ap1">
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "security-object ${ssid.name} security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object ${ssid.name} security additional-auth-method captive-web-portal reg-user-profile-attr 1 auth-user-profile-attr 1 timer-display"
				-v "security-object ${ssid.name} security additional-auth-method captive-web-portal timer-display alert 10"
				-v "security-object ${ssid.name} security additional-auth-method captive-web-portal pass-through vlan ${tb.vlan1}"
				-v "security-object ${ssid.name} security additional-auth-method captive-web-portal failure-redirect login-page"
				-v "security-object ${ssid.name} web-server"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "user-profile ttt qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				1:Configure internal CWP on ap
				"ssid in_cwp
				ssid in_cwp default-user-profile-attr 1
				ssid in_cwp security aaa radius-server primary 10.155.30.219 shared-
				secret *** acct-port 1813
				ssid in_cwp security protocol-suite wpa2-aes-psk ascii-key ***
				ssid in_cwp security additional-auth-method captive-web-portal reg-user-
				profile-attr 60 timer-display
				ssid in_cwp security additional-auth-method captive-web-portal timer-
				display alert 10
				ssid in_cwp security additional-auth-method captive-web-portal internal-
				servers
				ssid in_cwp web-server
				ssid in_cwp dhcp-server
				ssid in_cwp dns-server"
			</desc>
			<telnet target="ap1">
				-v "security-object ${ssid.name}_1 default-user-profile-attr 1"
				-v "security-object ${ssid.name}_1 security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object ${ssid.name}_1 security additional-auth-method captive-web-portal reg-user-profile-attr 1 auth-user-profile-attr 1 timer-display"
				-v "security-object ${ssid.name}_1 security additional-auth-method captive-web-portal timer-display alert 10"
				-v "security-object ${ssid.name}_1 security additional-auth-method captive-web-portal internal-servers"
				-v "security-object ${ssid.name}_1 security additional-auth-method captive-web-portal failure-redirect login-page"
				-v "security-object ${ssid.name}_1 web-server"
				-v "ssid ${ssid.name}_1 security-object ${ssid.name}_1"
				-v "interface wifi0 ssid ${ssid.name}_1"
			</telnet>
		</step>

		<include prefix="2" file="${case.dir}/subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta1, ap1" />

		<step no="3">
			<desc>
				access public HM through CWP
			</desc>
			<log-file>internal_login_in.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/cwp/cwp_login_positive.py -r http://${sta1.mif.ip}:4444/wd/hub -t ff -f ${log.dir}/${log.file} -l info --parameters visit.url=${pub.hm2.ip} visit.pre_url=www.aerohive.com login.username=${pub.radius1.username} login.password=${pub.radius1.passwd} --preserve-session &gt; ${log.dir}/internal_session_id.log
			</script>
		</step>

		<step no="3.1">
			<desc>
				get session id
			</desc>
			<setvar name="internal.session.id">
				${bin.dir}/getbyrexp.py -p "- session preserved - (\S+) pic:" -f ${log.dir}/internal_session_id.log
			</setvar>
		</step>

		<step no="4">
			<desc>Show interface on laptop after authentication</desc>
			<log-file>step4_show_ip.log</log-file>
			<staf target="sta1">
				-v "ipconfig /all"
			</staf>
		</step>

		<step no="4.1">
			<desc>Get laptop1's ip after authentication</desc>
			<setvar name="sta1.tif.ip.second">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step4_show_ip.log -i ${sta1.tif.name} -o win -nomask
			</setvar>
		</step>

		<step no="5">
			<desc>
				show auth
			</desc>
			<log-file>step5_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta1.tif.mac} *wifi0.3 *04 *${sta1.tif.ip.second}"</log-match>
		</step>

		<step no="6">
			<desc>
				show roam cache
			</desc>
			<log-file>step6_show_roam.log</log-file>
			<telnet target="ap1">
				-v "show roam cache" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta1.tif.mac}" -i "YYNN"</log-match>
		</step>

		<step no="6.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step6.1_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "User Type=Employee User Name=${pub.radius1.username} Password=" -p "authentication OK, username ${pub.radius1.username}, service \(unknown\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "User Type=Employee User Name=${pub.radius1.username} Password=" -p "(?i)A CWP user registered from interface wifi0.3: MAC=${sta1.tif.mac}, IP=${sta1.tif.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "User Type=Employee User Name=${pub.radius1.username} Password=" -p "(?i)DHCP: Sent a DHCP ACK message assigning IP address ${sta1.tif.ip} to client ${sta1.tif.mac}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7">
			<desc>
				do log out
			</desc>
			<log-file>internal_login_out.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/cwp/cwp_login_positive.py -r http://${sta1.mif.ip}:4444/wd/hub -t ff -f ${log.dir}/${log.file} -l info --parameters visit.url=${pub.hm2.ip} visit.pre_url=www.aerohive.com login.username=${pub.radius1.username} login.password=${pub.radius1.passwd} --session-id ${internal.session.id}
			</script>
		</step>

		<step no="8" delay="10">
			<desc>
				show auth
			</desc>
			<log-file>step8_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta1.tif.mac} *wifi0.3 *01 *${sta1.tif.ip.second}"</log-match>
		</step>

		<step no="8.1">
			<desc>
				show roam cache
			</desc>
			<log-file>step8.1_show_roam.log</log-file>
			<telnet target="ap1">
				-v "show roam cache" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta1.tif.mac}" -i "YNNN"</log-match>
		</step>

		<step no="8.2">
			<desc>
				clear log all
			</desc>
			<telnet target="ap1" timeout="500">
				-v "_debug cgic basic"
				-v "clear log all"
			</telnet>
		</step>

		<include prefix="9" file="${case.dir}/subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta2, ap1" />

		<step no="10">
			<desc>
				access public HM through CWP
			</desc>
			<log-file>passthrough_log_in.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/cwp/cwp_login_positive.py -r http://${sta2.mif.ip}:4444/wd/hub --parameters visit.url=${pub.hm2.ip} login.username=${pub.radius1.username} login.password=${pub.radius1.passwd} -t ff -f ${log.dir}/${log.file} -l info --preserve-session &gt; ${log.dir}/passthrough_session_id.log
			</script>
		</step>

		<step no="11">
			<desc>
				get session id
			</desc>
			<setvar name="passthrough.session.id">
				${bin.dir}/getbyrexp.py -p "- session preserved - (\S+) pic:" -f ${log.dir}/passthrough_session_id.log
			</setvar>
		</step>

		<step no="12">
			<desc>
				show auth
			</desc>
			<log-file>step12_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta2.tif.mac} *wifi0.2 *04 *${sta2.tif.ip}"</log-match>
		</step>

		<step no="13">
			<desc>
				show roam cache
			</desc>
			<log-file>step13_show_roam.log</log-file>
			<telnet target="ap1">
				-v "show roam cache" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta2.tif.mac}" -i "YYNN"</log-match>
		</step>

		<step no="13.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step11.1_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)\[cgic_basic\]: init cgic for station ${sta2.tif.mac} \(.*\), if wifi0.2, remote ip ${sta2.tif.ip}" -p "User Type=Employee User Name=${pub.radius1.username} Password=" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)\[cgic_basic\]: init cgic for station ${sta2.tif.mac} \(.*\), if wifi0.2, remote ip ${sta2.tif.ip}" -p "authentication OK, username ${pub.radius1.username}, service \(unknown\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)\[cgic_basic\]: init cgic for station ${sta2.tif.mac} \(.*\), if wifi0.2, remote ip ${sta2.tif.ip}" -p "(?i)A CWP user registered from interface wifi0.2: MAC=${sta2.tif.mac}, IP=" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="14">
			<desc>
				do log out operate
			</desc>
			<log-file>passthrough_log_out.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/cwp/cwp_login_positive.py -r http://${sta2.mif.ip}:4444/wd/hub --parameters visit.url=${pub.hm2.ip} login.username=${pub.radius1.username} login.password=${pub.radius1.passwd} -t ff -f ${log.dir}/${log.file} -l info --session-id ${passthrough.session.id}
			</script>
		</step>

		<step no="15" delay="10">
			<desc>
				show auth
			</desc>
			<log-file>step15_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta2.tif.mac} *wifi0.2 *01 *${sta2.tif.ip}"</log-match>
		</step>

		<step no="16">
			<desc>
				show roam cache
			</desc>
			<log-file>step16_show_roam.log</log-file>
			<telnet target="ap1">
				-v "show roam cache" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta2.tif.mac}" -i "YNNN"</log-match>
		</step>

		<include prefix="17" file="${case.dir}/subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn3, sta3, ap1" />

		<step no="18">
			<desc>
				access public HM through CWP
			</desc>
			<log-file>ecwp_log_in.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/cwp/cwp_login_positive_amigoopod.py -r http://${sta3.mif.ip}:4444/wd/hub --parameters visit.url=${pub.hm2.ip} login.username=${pub.radius1.username} login.password=${pub.radius1.passwd} -t ff -f ${log.dir}/${log.file} -l info --preserve-session &gt; ${log.dir}/ecwp_session_id.log
			</script>
		</step>

		<step no="19">
			<desc>
				get session id
			</desc>
			<setvar name="ecwp.session.id">
				${bin.dir}/getbyrexp.py -p "- session preserved - (\S+) pic:" -f ${log.dir}/ecwp_session_id.log
			</setvar>
		</step>

		<step no="20">
			<desc>
				show auth
			</desc>
			<log-file>step20_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta3.tif.mac} *wifi0.1 *04 *${sta3.tif.ip}"</log-match>
		</step>

		<step no="21">
			<desc>
				show roam cache
			</desc>
			<log-file>step21_show_roam.log</log-file>
			<telnet target="ap1">
				-v "show roam cache" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta3.tif.mac}" -i "YYNN"</log-match>
		</step>

		<step no="21.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step21.1_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "\[cgic_basic\]: exit cgic, station ${sta3.tif.mac}"</log-match>
			<log-match>-i "\[cgic_basic\]: use plaintext password without challenge"</log-match>
			<log-match>-i "\[cgic_basic\]: Assamble login page url for external server"</log-match>
			<log-match>-i "\[cgic_basic\]: post input: username=${pub.radius1.username}&amp;password=${pub.radius1.passwd}"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)\[cgic_basic\]: init cgic for station ${sta3.tif.mac} \(.*\), if wifi0.1, remote ip ${sta3.tif.ip}" -p "User Type=Employee User Name=${pub.radius1.username} Password=" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)\[cgic_basic\]: init cgic for station ${sta3.tif.mac} \(.*\), if wifi0.1, remote ip ${sta3.tif.ip}" -p "authentication OK, username ${pub.radius1.username}, service \(unknown\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)\[cgic_basic\]: init cgic for station ${sta3.tif.mac} \(.*\), if wifi0.1, remote ip ${sta3.tif.ip}" -p "(?i)A CWP user registered from interface wifi0.1: MAC=${sta3.tif.mac}, IP=" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="22">
			<desc>
				do log out operate
			</desc>
			<log-file>ecwp_log_out.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/cwp/cwp_login_positive_amigoopod.py -r http://${sta3.mif.ip}:4444/wd/hub --parameters visit.url=${pub.hm2.ip} login.username=${pub.radius1.username} login.password=${pub.radius1.passwd} -t ff -f ${log.dir}/${log.file} -l info --session-id ${ecwp.session.id}
			</script>
		</step>

		<step no="23" delay="10">
			<desc>
				show auth
			</desc>
			<log-file>step23_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta3.tif.mac} *wifi0.1 *01 *${sta3.tif.ip}"</log-match>
		</step>

		<step no="24">
			<desc>
				show roam cache
			</desc>
			<log-file>step24_show_roam.log</log-file>
			<telnet target="ap1">
				-v "show roam cache" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-c -i "${sta3.tif.mac}" -i "YNNN"</log-match>
		</step>
	</stage>

	<post-process>
		<stage>

			<include prefix="stop_selenium_server1" file="subs/stop_selenium_server.xml" args="${sta1.mif.ip}, ${job_selenium_workload}" />

			<include prefix="stop_selenium_server2" file="subs/stop_selenium_server.xml" args="${sta2.mif.ip}, ${job_selenium_workload}" />

			<include prefix="stop_selenium_server3" file="subs/stop_selenium_server.xml" args="${sta3.mif.ip}, ${job_selenium_workload}" />

		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>