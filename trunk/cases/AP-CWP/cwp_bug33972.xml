<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Roaming before authentication in topo3/topo6</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		summary:
		[hollywood-auth]internal CWP,radius return attribute vlan id,client roaming after CWP login in,the vlan for client changed
		Network Topology:
		client----ap(internal ap)------router(dhcp)
		Test Preconditions:
		Test Procedure:
		1.Configure internal cwp on ap1,ap2
		2.radius server return attribute vlan id 888
		3.Client requests a web page with valid username and password on ap1 ,belong to vlan 888
		4.client roaming from ap1 to ap2
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<property name="url" value="http://www.google.com.hk" />
	<property name="selenium_path" value="/root/selenium-server-standalone-2.42.2.jar" />
	<stage>
		<step no="0.1">
			<desc>
				start selenium server
			</desc>
			<ssh target="sta1">
				-v "export DISPLAY=:1"
				-v "nohup java -jar ${selenium_path} 1>logfile.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="0.2">
			<desc>
				start selenium server
			</desc>
			<ssh target="sta1">
				-v "printenv"
			</ssh>
		</step>
		<step no="1">
			<desc>
				config same ssid ,cwp on AP1 and AP2,first config AP1
			</desc>
			<ssh target="ap1">
				-v "interface mgt0 vlan 1"
				-v "interface mgt0 native-vlan 1"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password aerohive"
				-v "interface mgt0 hive ${hive.name}"
				-v "security-object auto-cwp"
				-v "security-object auto-cwp security aaa radius-server primary ${pub.radius2.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object auto-cwp security aaa radius-server accounting primary ${pub.radius2.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object auto-cwp security additional-auth-method captive-web-portal auth-user-profile-attr 1"
				-v "security-object auto-cwp security additional-auth-method captive-web-portal internal-servers"
				-v "security-object auto-cwp web-server"
				-v "security-object auto-cwp default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object auto-cwp"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
				-v "user-profile 1 qos-policy def-user-qos vlan-id 22 attribute 1"
				-v "_debug auth all"
			</ssh>
		</step>
		<step no="2">
			<desc>
				config same ssid ,cwp on AP1 and AP2,second config AP2
			</desc>
			<ssh target="ap2">
				-v "interface mgt0 vlan 1"
				-v "interface mgt0 native-vlan 1"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password aerohive"
				-v "interface mgt0 hive ${hive.name}"
				-v "security-object auto-cwp"
				-v "security-object auto-cwp security aaa radius-server primary ${pub.radius2.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object auto-cwp security aaa radius-server accounting primary ${pub.radius2.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object auto-cwp security additional-auth-method captive-web-portal auth-user-profile-attr 1"
				-v "security-object auto-cwp security additional-auth-method captive-web-portal internal-servers"
				-v "security-object auto-cwp web-server"
				-v "security-object auto-cwp default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object auto-cwp"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name} shutdown"
				-v "user-profile 1 qos-policy def-user-qos vlan-id 22 attribute 1"
				-v "_debug auth all"
			</ssh>
		</step>
		<step no="3" delay="20" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				check roaming neibour in AP1
			</desc>
			<log-file>cwp_ft_roaming_step3.log</log-file>
			<ssh target="ap1">
				-v "show roaming neighbor"
			</ssh>
			<log-match>-c -i "${ap2.mgt0.mac}\s*D" -re</log-match>
		</step>
		<step no="4">
			<desc>
				check roaming neighbor in AP2
			</desc>
			<log-file>cwp_ft_roaming_step4.log</log-file>
			<ssh target="ap2">
				-v "show roaming neighbor"
			</ssh>
			<log-match>-c -i  "${ap1.mgt0.mac}\s+D" -re</log-match>
		</step>
		<step no="5">
			<desc>
				open debug mode and clear log all on AP1
			</desc>
			<ssh target="ap1">
				-v "_debug cgic basic"
				-v "_debug auth all"
				-v "_kdebug fe detail"
				-v "_ff dst-port 80"
				-v "clear log all"
			</ssh>
		</step>
		<step no="5.1">
			<desc>
				open debug mode and clear log all on AP2
			</desc>
			<ssh target="ap2">
				-v "_debug cgic basic"
				-v "_debug auth all"
				-v "_kdebug fe detail"
				-v "_ff dst-port 80"
				-v "clear log all"
			</ssh>
		</step>
		<step no="6">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>
		<include prefix="6.1" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />
		<step no="7">
			<log-file>cwp_ft_roaming_step7.log</log-file>
			<ssh target="ap1">
				-v "show roaming cache"
			</ssh>
			<log-match>-c -i  "0\s+YNNN" -re</log-match>
		</step>
		<step no="8">
			<log-file>cwp_ft_roaming_step8.log</log-file>
			<ssh target="ap2">
				-v "show roaming cache"
			</ssh>
			<log-match>-c -i  "1\s+YNNN" -re</log-match>
		</step>
		<step no="9">
			<desc>
				get the vlan from show station
			</desc>
			<log-file>step4_show_station.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-c -e "${sta1.tif.mac} .* open\s+\w+\s+\d+:\d+:\d+\s+22" -r </log-match>
		</step>
		<step no="10">
			<desc>
				client request a web page and get login page,input correct
				username and password
			</desc>
			<log-file>cwp_ft_pass_1_log_in.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/AerohiveGUI/scripts/cwp/cwp_login.py -r http://${sta1.mif.ip}:4444/wd/hub --parameters visit.url=${url} login.username=passvlan login.password=${pub.radius1.passwd} -t ff -l info -f ${log.dir}/${log.file}
			</script>
		</step>
		<step no="11" delay="30">
			<desc>Get laptop1's ip after authentication</desc>
			<setvar name="sta1.tif.ip.auth">
				python ${bin.dir}/getinfo_ip.py -d '${sta1.mif.ip}' -i '${sta1.tif.name}' -v 'ip' -u 'root'
			</setvar>
		</step>
		
		<step no="12">
			<desc>
				show roam cache in ap1
			</desc>
			<log-file>cwp_ft_roaming_step15.log</log-file>
			<telnet target="ap1">
				-v "show roam cache"
			</telnet>
			<no-error-check />
			<log-match>-c -i  "${sta1.tif.mac}" -i "0\s+YYNN" -re</log-match>
		</step>
		<step no="13" delay="30">
			<desc>
				get the vlan from show station
			</desc>
			<log-file>step13_show_station.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-c -e "${sta1.tif.mac} .* open\s+\w+\s+\d+:\d+:\d+\s+1" -r </log-match>
		</step>
		<step no="14">
			<desc>
				show roam cache in ap2
			</desc>
			<log-file>cwp_ft_roaming_step14.log</log-file>
			<telnet target="ap2">
				-v "show roam cache"
			</telnet>
			<no-error-check />
			<log-match>-c -i  "${sta1.tif.mac}" -i "1\s*YYNN" -re</log-match>
		</step>
		<step no="15">
			<desc>
				show logging buffered
			</desc>
			<log-file>cwp_ft_roaming_step15.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
		<!--	<log-match bin="${bin.dir}/searchblocks.py">-b "User Type=Employee User Name='passvlan' Password=" -ps p "User Type=Employee User Name='' joined in." -e "authentication OK, username 'passvlan', service" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "A CWP user registered" -ps p "from interface wifi0.1" -e "MAC=${sta1.tif.mac}," -f ${log.dir}/${log.file}</log-match>
		-->
		</step>
		<step no="16">
			<desc>client roaming to ap2,no shutdown ssid on ap2</desc>
			<log-file>cwp_ft_roaming_step16.log</log-file>
			<ssh target="ap2">
				-v "no interface ${ssid_bind_interface} ssid ${ssid.name} shutdown"
			</ssh>
		</step>
		<step no="17">
			<desc>client roaming to ap2,shutdown ssid on ap1</desc>
			<log-file>cwp_ft_roaming_step17.log</log-file>
			<ssh target="ap1">
				-v "interface ${ssid_bind_interface} ssid ${ssid.name} shutdown"
			</ssh>
		</step>
		<step no="18" delay="5" type="loop-check" loop-max-times="25" loop-interval="5">
			<log-file>cwp_ft_roaming_step11.log</log-file>
			<ssh target="ap1">
				-v "show roaming cache"
			</ssh>
			<log-match>-c -i  "1\s+YYNN" -re</log-match>
		</step>
		<step no="19">
			<log-file>cwp_ft_roaming_step19.log</log-file>
			<ssh target="ap2">
				-v "show roaming cache"
			</ssh>
			<log-match>-c -i  "0\s+YYNN" -re</log-match>
		</step>
		<step no="20">
			<desc>
				get the vlan from show station
			</desc>
			<log-file>step20_show_station.log</log-file>
			<telnet target="ap2">
				-v "show station"
			</telnet>
			<log-match>-c -e "${sta1.tif.mac} .* open\s+\w+\s+\d+:\d+:\d+\s+1" -r </log-match>
		</step>
		<step no="21">
			<log-file>cwp_ft_roaming_step21.log</log-file>
			<ssh target="ap2">
				-v "show roaming cache mac ${sta1.tif.mac}"
			</ssh>
			<log-match>-c -i  "VLAN ID: 1" -re</log-match>
			<log-match>-c -i  "Hops: 0" -re</log-match>
		</step>
		<step no="23">
			<log-file>cwp_ft_roaming_step23.log</log-file>
			<ssh target="ap1">
				-v "show roaming cache mac ${sta1.tif.mac}"
			</ssh>
			<log-match>-c -i  "VLAN ID: 1" -re</log-match>
			<log-match>-c -i  "Hops: 1" -re</log-match>
		</step>
		<step no="24">
			<desc>client roaming to back to ap1,no shutdown ssid on ap1,shutdown ssid on ap2</desc>
			<log-file>cwp_ft_roaming_step24.log</log-file>
			<ssh target="ap1">
				-v "no interface ${ssid_bind_interface} ssid ${ssid.name} shutdown"
			</ssh>
		</step>
		<step no="25">
			<desc>client roaming to ap2,shutdown ssid on ap1</desc>
			<log-file>cwp_ft_roaming_step25.log</log-file>
			<ssh target="ap2">
				-v "interface ${ssid_bind_interface} ssid ${ssid.name} shutdown"
			</ssh>
		</step>
		<step no="26" delay="5" type="loop-check" loop-max-times="25" loop-interval="5">
			<log-file>cwp_ft_roaming_step26.log</log-file>
			<ssh target="ap2">
				-v "show roaming cache"
			</ssh>
			<log-match>-c -i  "1\s+YYNN" -re</log-match>
		</step>
		<step no="27">
			<log-file>cwp_ft_roaming_step27.log</log-file>
			<ssh target="ap1">
				-v "show roaming cache"
			</ssh>
			<log-match>-c -i  "0\s+YYNN" -re</log-match>
		</step>
		<step no="28">
			<desc>
				get the vlan from show station
			</desc>
			<log-file>step28_show_station.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-c -e "${sta1.tif.mac} .* open\s+\w+\s+\d+:\d+:\d+\s+1" -r </log-match>
		</step>
		<step no="29">
			<log-file>cwp_ft_roaming_step29.log</log-file>
			<ssh target="ap1">
				-v "show roaming cache mac ${sta1.tif.mac}"
			</ssh>
			<log-match>-c -i  "VLAN ID: 1" -re</log-match>
			<log-match>-c -i  "Hops: 0" -re</log-match>
		</step>
		<step no="30">
			<log-file>cwp_ft_roaming_step30.log</log-file>
			<ssh target="ap2">
				-v "show roaming cache mac ${sta1.tif.mac}"
			</ssh>
			<log-match>-c -i  "VLAN ID: 1" -re</log-match>
			<log-match>-c -i  "Hops: 1" -re</log-match>
		</step>
		<step no="31">
			<desc>
				client request a web page and get login page,input correct
				username and password
			</desc>
			<log-file>cwp_ft_pass_1_log_in1.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/AerohiveGUI/scripts/cwp/cwp_access_Internet.py -r http://${sta1.mif.ip}:4444/wd/hub --parameters login.is_success=true -t ff -l info -f ${log.dir}/${log.file}
			</script>
		</step>
	</stage>
</testcase>
