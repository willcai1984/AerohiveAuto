<?xml version="1.0" encoding="UTF-8"?>
<testcase>
    <brief>In-net detection works</brief>
    <priority>Accept</priority>
    <automated>yes</automated>
    <description>
    Pre-Condition:
        1. Config wifi0 and wifi1 as sensor mode
    	2. Create WIPS profle with in-net detection enabled

        Test Procedure:

    	1. Bind WIPS profile to wifi0 and wifi1
    	2. Create rogue AP in testbed
    	3. Check mac learning of eth0
    	4. Check rogue ap in-net detection on wifi0 and wifi1
        
        
    </description>
    <numofap>2</numofap>
    <numofsta>1</numofsta>
    <tbtype>linux</tbtype>
    <stage>
        <step no="1">
            <desc>Config wifi0 as sensor and bind WIPS profile</desc>
            <log-file>SensorMode_Function_WIPS_03_1.log</log-file>
            <console target="ap1">
            	-v "int w0 mode sensor"
            	-v "int w1 mode sensor"
            	-v "security wlan-idp profile idp"
            	-v "security wlan-idp profile idp ap-policy"
            	-v "security wlan-idp profile idp ap-policy ssid"
            	-v "security wlan-idp profile idp ap-detection connected"
            	-v "int w0 wlan-idp profile idp"
            	-v "int w1 wlan-idp profile idp"
            </console>
            <no-error-check />
        </step>
        
        <step no="2">
            <desc>Create rogue AP in testbed</desc>
            <log-file>SensorMode_Function_WIPS_03_2.log</log-file>
            <console target="ap2">
            	-v "int w0 mode access"
            	-v "int w0 radio channel 1"
            	-v "int w1 mode access"
            	-v "int w1 radio channel 36"
            	-v "ssid ap2-0"
            	-v "ssid ap2-1"
            	-v "int w0 ssid ap2-0"
            	-v "int w1 ssid ap2-1"
            </console>
            <no-error-check />
        </step>
        
        <step no="3.1">
            <desc>show interface mgt0</desc>
            <log-file>SensorMode_Function_WIPS_03_3-1.log</log-file>
            <console target="ap2">
                -v "show interface eth0"
            </console>
        </step>

        <step no="3.2">
            <desc>Get mgt0 mac</desc>
            <setvar name="ap2_mgt0_mac">
            ${bin.dir}/getbyrexp.py -p "(?i)Mac addr=(.*?);" -f ${log.dir}/SensorMode_Function_WIPS_03_3-1.log -t str
            </setvar>
        </step>
        
        <step no="3.3" delay="10">
            <desc>Check mac learning of eth0</desc>
            <log-file>SensorMode_Function_WIPS_03_3-3.log</log-file>
            <console target="ap1">
            	-v "_sh interface eth0 mac-learning all"
            </console>
            <no-error-check />
            <log-match>-c -i "${ap2_mgt0_mac}"</log-match>
        </step>
        
        <step no="4" delay="10">
            <desc>Check WIPS result on wifi0</desc>
            <log-file>SensorMode_Function_WIPS_03_4.log</log-file>
            <console target="ap1">
            	-v "sh int w0 wlan ap | inc ap2-0"
            </console>
            <no-error-check />
            <log-match>-c -e "rog" -e "ap2-0"</log-match>
        </step>
        
        <step no="5">
            <desc>Check WIPS result on wifi1</desc>
            <log-file>SensorMode_Function_WIPS_03_5.log</log-file>
            <console target="ap1">
            	-v "sh int w1 wlan ap | include ap2-1"
            </console>
            <no-error-check />
            <log-match>-c -e "rog" -e "ap2-1"</log-match>
        </step>
        
       
    </stage>
</testcase>
