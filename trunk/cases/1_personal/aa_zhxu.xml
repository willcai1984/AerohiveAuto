<?xml version="1.0" encoding="UTF-8"?>

<testcase>

	<brief>Check the 3G connection status via USB modem</brief>
	
	<priority>Accept</priority>
	
	<automated>yes</automated>
	
	<description>
		Precondition:
		1) Config usbmodem mode as on-demand
		2) The 3g service is activated and available
		Test Step:
		1) Check the usbmodem status while WAN is eth0 by default
		2) Trigger failover to usbmodem WAN via shut eth0
		3) Check the WAN and usbmodem status
		4) Trigger failback to eth0 WAN via enable eth0
		5) Repeat step 3)
		Expect Result:
		1) WAN is eth0 by default, and 3g connection is “Backup” and “Attached”
		2) WAN is usbmodem once failover, and 3g connection is "Backup" and "Failover”
		3) WAN is eth0 after failback, and 3g connection is "Backup" and "Attached”
	</description>
	
	<numofcvg>0</numofcvg>
	
	<numofbr>1</numofbr>
	
	<tbtype>winlin</tbtype>

	<stage>
		<step no="1.0">
			<desc>
				Config for usbmodem
			</desc>
			<log-file>step1.0_usbmodem_config.log</log-file>
			<console target="br1.br" slow="yes">
				-v "usbmodem enable"
				-v "usbmodem mode on-demand"
				-v "usbmodem modem-id huawei_e1752 apn 3gnet"
				-v "no track wan_failover_test ip 8.8.8.8"
				-v "no track wan_failover_test ip 192.168.10.254"
				-v "track wan_failover_test default-gateway"
			</console>
			
			<no-error-check/>
			
		</step>
		
		<step no="1.1">
			<desc>
				Config for usbmodem
			</desc>
			<log-file>step1.1_running_config.log</log-file>
			<console target="br1.br" slow="yes">
				-v "sh ru"
			</console>
		</step>

		<step no="1.2" delay="60">
			<desc>
				Check the mode of usbmodem
			</desc>
			<log-file>step1.2_usbmodem_mode.log</log-file>
			<console target="br1.br" slow="yes">
				-v "sh usbm modem-id huawei_e1752"
			</console>
			<log-match>-i "Enabled:" -i "yes" -c </log-match>
			<log-match>-i "Mode:" -i "on-demand" -c </log-match>
			<log-match>-i "Modem Id:" -i "huawei_e1752" -c </log-match>
		</step>
	</stage>

	<stage>
		<step no="1.3" delay="60">
			<desc>
				Check the status of usbmodem before failover
			</desc>
			<log-file>step1.3_usbmodem_status.log</log-file>
			<console target="br1.br" slow="yes">
				-v "sh usbm s"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b 'Primary' -e 'Backup' -p 'Interface: eth0' -p 'WAN Monitor State: up' -p 'Active: yes' -f ${log.dir}/${log.file}
			</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b 'Backup' -p 'Interface: ppp0' -p 'WAN Monitor State: down' -p 'Active: no' -p 'Current State: ATTACHED' -f ${log.dir}/${log.file}
			</log-match>
		</step>
	</stage>

	<stage>
		<step no="1.4">
			<desc>
				Shut eth0 to trigger WAN failover to usbmodem
			</desc>
			<console target="br1.br" slow="yes">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<step no="1.5" delay="60">
			<desc>
				Check the status of usbmodem after failover
			</desc>
			<log-file>step1.5_usbmodem_status.log</log-file>
			<console target="br1.br" slow="yes">
				-v "sh usbm s"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b 'Primary' -e 'Backup' -p 'Interface: eth0' -p 'WAN Monitor State: down' -p 'Active: no' -f ${log.dir}/${log.file}
			</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b 'Backup'	-p 'Interface: ppp0' -p 'WAN Monitor State: up'	-p 'Active: yes' -p 'Current State: FAILOVER' -f ${log.dir}/${log.file}
			</log-match>
		</step>
	</stage>

	<stage>
		<step no="1.6">
			<desc>
				Restore eth0 to trigger WAN failback to eth0
			</desc>
			<console target="br1.br" slow="yes">
				-v "no interface eth0 shutdown"
			</console>
		</step>

		<step no="1.7" delay="60">
			<desc>
				Check the status of usbmodem after failback
			</desc>
			<log-file>step1.7_usbmodem_status.log</log-file>
			<console target="br1.br" slow="yes">
				-v "sh usbm s"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b 'Primary' -e 'Backup' -p 'Interface: eth0' -p 'WAN Monitor State: up' -p 'Active: yes' -f ${log.dir}/${log.file}
			</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">
				-b 'Backup'	-p 'Interface: ppp0' -p 'WAN Monitor State: down' -p 'Active: no' -p 'Current State: ATTACHED' -f ${log.dir}/${log.file}
			</log-match>
		</step>
	</stage>

</testcase>