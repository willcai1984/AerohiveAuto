<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check cvg will distribute static route to br client</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		BR1:
		Mgt0.x: 10.2.2.1/24
		Network1: 192.168.10.0/24
		BR2:
		Mgt0.x : 10.2.3.1/24
		L3sw (connecting to br of vpn client br1):
		Ip: 10.2.3.11/24, gateway: 10.2.3.1/32
		Network2: 192.168.20.0/24 Network3: 192.168.30.0/24
		CVG:

		Test Procedure:
		1. Network2 ping network1 to verify
		2. Set static routing to network2 on br, and push the static route to cvg
		CLI: ip route net 192.168.20.0 255.255.255.0 gateway 10.2.3.11
		routing internal-sub-network 192.168.20.0/24
		3. Check static route be learned on cvg by "show ip route"
		4. Check static route be learned on br1 by "show ip route"
		5. Network4 ping network2 to verify
	</description>
	<numofbr>2</numofbr>
	<numofcvg>1</numofcvg>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>linux</tbtype>

	<property name="route.netmask" value="255.255.255.0" />

	<stage>
		<step no="0">
			<desc>
				config CVG act as l3 VPN server
			</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="3">
				-v "save vpn ee-cert tftp://${pub.tftp1.tip}:certs/server_cert.pem"
				-v "save vpn private-key tftp://${pub.tftp1.tip}:certs/server_key.pem"
				-v "vpn xauth-client-list ${hive.name}_List local"
				-v "vpn xauth-client-list ${hive.name}_List client-name ${br1.br.name} password aerohive"
				-v "vpn server-ipsec-tunnel ${hive.name}_Server vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${hive.name}_Server client-list ${hive.name}_List"
				-v "vpn tunnel-policy vpn_tunnel_policy server ipsec-tunnel ${hive.name}_Server"
				-v "routing internal-sub-network ${br1.br.mgt0.ip}/${br.mgt0.supermask}"
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${br.mgt0.supermask}"
				-v "routing internal-sub-network ${br2.br.mgt0.ip}/${br.mgt0.supermask}"
				-v "routing internal-sub-network ${br1.br.mgt0.2.ip}/${br.mgt0.supermask}"
			</telnet>
		</step>

		<step no="0.1">
			<desc>
				enable ospf on CVG eth1
			</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="3">
				-v "routing protocol ospf advertise eth1"
				-v "routing protocol ospf router-id ${cvg1.cvg.lan.ip}"
				-v "routing protocol type ospf"
				-v "routing protocol enable"
				-v "_debug brd basic"
				-v ""
				-v "_debug brd info"
				-v ""
			</telnet>
		</step>

		<step no="0.2">
			<desc>
				config mgt0.1 with dhcp service enable
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${cvg1.cvg.wan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>

		<step no="0.3">
			<desc>
				Set interface eth0 to wan mode,eth1/eth2 to access mode and enable mac-learning
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "interface eth1 mac-learning enable"
			</telnet>
		</step>

		<step no="0.4">
			<desc>br1.vpc1 get ip addr from dhcp server of mgt0.1</desc>
			<log-file>ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
			        -v "dhclient ${br1.vpc1.tif.name} -r"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="0.5">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="0.6">
			<desc>
				config BR as l3 VPN client
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "save vpn ca-cert tftp://${pub.tftp1.tip}:certs/cacert.pem"
				-v "vpn client-ipsec-tunnel ${br1.br.name}_client_ipsec_1 vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${br1.br.name}_client_ipsec_1 gateway ${cvg1.cvg.mip.ip} client-name ${br1.br.name} password aerohive"
				-v "vpn tunnel-policy vpn_tunnel_policy client ipsec-tunnel ${br1.br.name}_client_ipsec_1 primary"
				-v "routing route-request enable"
				-v "_debug brd basic"
				-v ""
				-v "_debug brd info"
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.ip}/${br.mgt0.supermask}"
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${cvg1.cvg.wan.netmask}"
			</telnet>
		</step>

		<step no="1">
			<desc>
				config mgt0.2 with dhcp service enable
			</desc>
			<telnet target="${br2.br.wan.ip}">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0.2 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.2 ip ${br1.br.mgt0.2.ip}/${cvg1.cvg.wan.netmask}"
				-v "interface mgt0.2 dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface mgt0.2 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.2 dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface mgt0.2 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.2 dhcp-server enable"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				config BR as l3 VPN client
			</desc>
			<telnet target="${br2.br.wan.ip}">
				-v "save vpn ca-cert tftp://${pub.tftp1.tip}:certs/cacert.pem"
				-v "vpn client-ipsec-tunnel ${br1.br.name}_client_ipsec_1 vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${br1.br.name}_client_ipsec_1 gateway ${cvg1.cvg.mip.ip} client-name ${br1.br.name} password aerohive"
				-v "vpn tunnel-policy vpn_tunnel_policy client ipsec-tunnel ${br1.br.name}_client_ipsec_1 primary"
				-v "routing route-request enable"
				-v "routing internal-sub-network ${br2.br.mgt0.ip}/${br.mgt0.supermask}"
				-v "routing internal-sub-network ${br1.br.mgt0.2.ip}/${cvg1.cvg.wan.netmask}"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				config br2
			</desc>
			<telnet target="${br2.br.wan.ip}">
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"
				-v "interface eth4 mode bridge-access user-profile-attribute 1"
				-v "interface eth4 mac-learning enable"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				-set interface down,then up
			</desc>
			<ssh target="br2.vpc4" timeout="120">
				-v "ifconfig ${br2.vpc4.tif.name} down"
				-v "ifconfig ${br2.vpc4.tif.name} up"
				-v "dhclient ${br2.vpc4.tif.name} -r"
			</ssh>
		</step>
		
		<step no="1.4">
			<desc>
				get ip address
			</desc>
			<log-file>step1.4_ifconfig_vpc4.log</log-file>
			<ssh target="br2.vpc4" timeout="120">
			        -v "dhclient ${br2.vpc4.tif.name} -r"
				-v "dhclient ${br2.vpc4.tif.name}"
				-v "ifconfig ${br2.vpc4.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="1.4a">
			<desc>set br2.vpc4.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br2.vpc4.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br2.vpc4.mif.ip} -u ${br2.vpc4.user} -p ${br2.vpc4.passwd} -i ${br2.vpc4.tif.name} -nomask
			</setvar>
		</step>

		<step no="2" delay="20" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>
				check vpn ike sa on BR1 side
			</desc>
			<log-file>step2_ike_sa_br_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.mip.ip}\[4500\]"</log-match>
			<no-error-check />
		</step>

		<step no="2.1" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>
				check vpn ike sa on BR2 side
			</desc>
			<log-file>step2.1_ike_sa_br_${loop_check.idx}.log</log-file>
			<telnet target="${br2.br.wan.ip}">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.mip.ip}\[4500\]"</log-match>
			<no-error-check />
		</step>

		<step no="2.2" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>
				check vpn ike sa on CVG side
			</desc>
			<log-file>step2.2_ike_sa_cvg_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="3">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "R" -i "${pub.br_fw.ip}"</log-match>
			<no-error-check />
		</step>

		<step no="2.3">
			<desc>
				check gre tunnel on br1 side
			</desc>
			<log-file>step2.3_show_gre_tunnel_br.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "${cvg1.cvg.wan.ip}" -p 4 -i "${br1.br.mgt0.ip}" -p 6 -i "${cvg1.cvg.mip.ip}"</log-match>
			<no-error-check />
		</step>

		<step no="2.4">
			<desc>
				check gre tunnel on br2 side
			</desc>
			<log-file>step2.4_show_gre_tunnel_br.log</log-file>
			<telnet target="${br2.br.wan.ip}">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "${cvg1.cvg.wan.ip}" -p 4 -i "${br2.br.mgt0.ip}" -p 6 -i "${cvg1.cvg.mip.ip}"</log-match>
			<no-error-check />
		</step>

		<step no="2.5">
			<desc>
				check gre tunnel on cvg side
			</desc>
			<log-file>step2.5_show_gre_tunnel_cvg.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="3">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "any" -p 4 -i "${cvg1.cvg.wan.ip}" -p 6 -i "anonymous"</log-match>
			<no-error-check />
		</step>

		<step no="3">
			<desc>
				BR check route
			</desc>
			<log-file>step3_show_ip_route.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				br check route
			</desc>
			<log-file>step3.1_show_ip_route.log</log-file>
			<telnet target="${br2.br.wan.ip}">
				-v "show ip route"
			</telnet>
		</step>

		<step no="3.2">
			<desc>
				cvg1 check route
			</desc>
			<log-file>step3.2_show_ip_route.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="3">
				-v "show ip route"
			</telnet>
		</step>

		<step no="4" delay="30">
			<desc>
				vpc1 ping cvg
			</desc>
			<log-file>step4_pc1_ping_cvg.log</log-file>
			<ssh target="br2.vpc4">
				-v "ping ${br1.vpc4.trip} -c 10"
			</ssh>
			<log-match>-n -c -i "from ${br1.vpc4.trip}: " -i "ttl="</log-match>
		</step>

		<step no="3.1">
			<multi-setvar>
				echo "br2.vpc4.trip.net=$(echo ${br2.vpc4.trip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<step no="4">
			<desc>
				config br
			</desc>
			<telnet target="${br2.br.wan.ip}">
				-v "ip route net ${br2.vpc4.trip.net} ${route.netmask} gateway ${br2.vpc4.tif.ip}"
				-v "routing route-request enable"
				-v "routing internal-sub-network ${br2.vpc4.trip.net}/24"
			</telnet>
		</step>

		<step no="5" type="loop-check" loop-max-times="10" loop-interval="30">
			<desc>
				-show ip route
			</desc>
			<log-file>step5_show_ip_route_${loop_check.idx}.log</log-file>
			<telnet target="${br2.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-c -i "${br2.vpc4.trip.net} *${br2.vpc4.tif.ip}" -i "${route.netmask}" -i "mgt0"</log-match>
			<failed>next</failed>
		</step>

		<step no="5.1" type="loop-check" loop-max-times="10" loop-interval="30">
			<desc>
				cvg1 check route
			</desc>
			<log-file>step5.1_show_ip_route_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "show ip route"
			</telnet>
			<log-match>-c -i "${br2.vpc4.trip.net} *${br2.br.mgt0.ip}" -i "${route.netmask}" -i "tunnel0"</log-match>
		</step>

		<step no="5.2" type="loop-check" loop-max-times="10" loop-interval="30">
			<desc>
				-show ip route
			</desc>
			<log-file>step5.2_show_ip_route_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-c -i "${br2.vpc4.trip.net} *0.0.0.0" -i "${route.netmask}" -i "tunnel0"</log-match>
		</step>

		<step no="6" type="loop-check" loop-max-times="10" loop-interval="30">
			<desc>
				vpc ping pc2
			</desc>
			<log-file>step6_vpc_ping_pc2_${loop_check.idx}.log</log-file>
			<ssh host="${cvg1.vpc1.mif.ip}">
				-v " ping ${br2.vpc4.trip} -c 10"
			</ssh>
			<log-match>-c -i "from ${br2.vpc4.trip}: " -i "ttl="</log-match>
		</step>
		<step no="7" type="loop-check" loop-max-times="10" loop-interval="30">
			<desc>
				vpc ping pc2
			</desc>
			<log-file>step6_vpc_ping_pc2_${loop_check.idx}.log</log-file>
			<ssh host="${br1.vpc1.mif.ip}">
				-v " ping ${br2.vpc4.trip} -c 10"
			</ssh>
			<log-match>-c -i "from ${br2.vpc4.trip}: " -i "ttl="</log-match>
		</step>
	</stage>
</testcase>