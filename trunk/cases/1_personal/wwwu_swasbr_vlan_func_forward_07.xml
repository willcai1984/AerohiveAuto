<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check packets forwarding when router works with AP</brief>
	<priority>High</priority>
	<automated>yes</automated>
	
	<description>
Topology to use:
	DUT(Router trunk)++++AP-------station1
         |
        PC1
Description:	Check packets forwarding when router works with AP
Platform Dependence:	SR2024
Pre-condition:
•	DUT work with router mode
•	Create vlan related vlan first on switch
•	Create vlan interface on vlan 10,20,30
•	Router trunk port associate with AP, trunk port pvid is 10, allow-vlan 10,20
•	PC1 connect to Router, with pvid 30
Test procedure:
1.	Check AP mgt0 ip address       Result1
2.	Configure AP mgt0 vlan 20, renew ip address of mgt0, check AP mgt0 ip address        Result2
3.	Create an ssid on AP, and the ssid associated upid bind vlan 30
4.	Check station1 ip address    Result3
5.	Switch trunk port add allow vlan 30 
6.	Check station1 ip address       Result4
7.	Station1 send unicast to PC1      Result5
		Station1 ping PC1
8.	Station1 send unicast to AP        Result6
		Station1 ping AP
9.	AP send unicast to PC1           Result7
		AP ping PC1
Expect result:
Result1:  AP got ip address from vlan 10 dhcp server
Result2:  AP got ip address from vlan 20 dhcp server
Result3:   station1 can’t get ip address
Result4:   station1 can get ip address from vlan 30 dhcp server.
Result5:   station1 ping PC1 success
Result6:   station1 ping AP success
Result7:   AP ping PC1 success


	</description>
	
	<numofcvg>0</numofcvg>
	<numofbr>1</numofbr>
	<tbtype>linux</tbtype>
	
	<property name="br.route.netmask" value="255.255.255.0" />
	<property name="ssid.name" value="vlan_mgmt_auto" />
	
	<stage>
		<step no="pre_1">
			<desc>create vlan and vlan interface first</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "vlan ${br1.vpc1.vlan}"
				-v "vlan ${br1.vpc2.vlan}"
				-v "vlan ${br1.vpc3.vlan}"
				-v ""
				-v ""
				-v "interface vlan ${br1.vpc1.vlan}"
				-v "interface vlan${br1.vpc1.vlan} ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options netmask ${br.route.netmask}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server enable"
				-v ""
				-v "interface vlan ${br1.vpc2.vlan}"
				-v "interface vlan${br1.vpc2.vlan} ip ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
				-v "interface vlan${br1.vpc2.vlan} dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface vlan${br1.vpc2.vlan} dhcp-server options netmask ${br.route.netmask}"
				-v "interface vlan${br1.vpc2.vlan} dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface vlan${br1.vpc2.vlan} dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface vlan${br1.vpc2.vlan} dhcp-server enable"
				-v ""
				-v "interface vlan ${br1.vpc3.vlan}"
				-v "interface vlan${br1.vpc3.vlan} ip ${br1.br.mgt0.3.ip}/${br.lan.netmask}"
				-v "interface vlan${br1.vpc3.vlan} dhcp-server ip-pool ${br1.br.mgt0.3.ip_pool_start} ${br1.br.mgt0.3.ip_pool_end}"
				-v "interface vlan${br1.vpc3.vlan} dhcp-server options netmask ${br.route.netmask}"
				-v "interface vlan${br1.vpc3.vlan} dhcp-server options default-gateway ${br1.br.mgt0.3.ip}"
				-v "interface vlan${br1.vpc3.vlan} dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface vlan${br1.vpc3.vlan} dhcp-server enable"
				-v ""	
			</telnet>
		</step>
		
		<step no="pre_2">
			<desc>get prefix of switch created vlan interfaces ip address</desc>
			<multi-setvar>
				echo "br1.vlanint1.prefix=$(echo ${br1.br.mgt0.1.ip} | cut -d. -f1,2,3)"
				echo "br1.vlanint2.prefix=$(echo ${br1.br.mgt0.2.ip} | cut -d. -f1,2,3)"
				echo "br1.vlanint3.prefix=$(echo ${br1.br.mgt0.3.ip} | cut -d. -f1,2,3)"
			</multi-setvar>
		</step>
		
		<step no="pre_3">
			<desc> configure ap connect switch port as trunk port, configure pvid/allow-vlan</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface ${br1.br.lan.int3} switchport mode trunk"
				-v "no interface ${br1.br.lan.int3} switchport trunk allow vlan all"
				-v "interface ${br1.br.lan.int3} switchport trunk native vlan ${br1.vpc1.vlan}"
				-v "interface ${br1.br.lan.int3} switchport trunk allow vlan ${br1.vpc1.vlan}"
				-v "interface ${br1.br.lan.int3} switchport trunk allow vlan ${br1.vpc2.vlan}"
				-v ""
			</telnet>
		</step>
		
		<step no="pre_4">
			<desc> configure vpc1 connect switch port vlan </desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface ${br1.br.lan.int1} switchport mode access"
				-v "interface ${br1.br.lan.int1} switchport access vlan ${br1.vpc1.vlan}"
				-v ""
			</telnet>
		</step>
		
		<step no="1.1">
			<desc>AP mgt0 get ip address</desc>
			<log-file>step1.1_get_ip.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "no interface mgt0 dhcp client"
				-v "show interface mgt0"
				-v ""
				-v "interface mgt0 dhcp client"
				-v ""
			</console>
		</step>
		
		<step no="1.2">
			<desc>show ap mgt0 ip address</desc>
			<log-file>step1.2_show_ip.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "show interface mgt0"
			</console>
		</step>
		
		<step no="1.3">
			<desc>
				get ap ip address of interface mgt0
			</desc>
			<setvar name="ap1.mgt0.ip">
				${bin.dir}/getbyrexp.py -p "IP addr=([\d.]+)" -f ${log.dir}/step1.2_show_ip.log -t str
			</setvar>
		</step>
		
		<step no="1.4">
			<desc>get prefix of ap mgt0 ip address</desc>
			<multi-setvar>
				echo "ap1.mgt0.ip.prefix=$(echo ${ap1.mgt0.ip} | cut -d. -f1,2,3)"
			</multi-setvar>
		</step>
		
		<step no="1.5">
			<desc>check if ap get ip address from switch vlan interface ${br1.vpc1.vlan} successfully when switch works as router</desc>
			<script>
				if [ "${ap1.mgt0.ip.prefix}" == "${br1.vlanint1.prefix}" ]; then exit 0; else exit 1; fi
			</script>
		</step>
		
		<step no="2.1">
			<desc>Configure AP mgt0 vlan same as vlan interface ${br1.vpc2.vlan}, renew ip address of mgt0</desc>
			<console target="br1.ap1" slow="yes">
				-v "interface mgt0 vlan ${br1.vpc2.vlan}"
				-v "interface mgt0 dhcp client"
				-v ""
				-v ""
			</console>
		</step>
		
		<step no="2.2">
			<desc>show ap mgt0 ip address</desc>
			<log-file>step2.2_show_ip.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "show interface mgt0"
			</console>
		</step>
		
		<step no="2.3">
			<desc>
				get ap ip address of interface mgt0
			</desc>
			<setvar name="ap1.mgt0.ip">
				${bin.dir}/getbyrexp.py -p "IP addr=([\d.]+)" -f ${log.dir}/step2.2_show_ip.log -t str
			</setvar>
		</step>
		
		<step no="2.4">
			<desc>get prefix of ap mgt0 ip address</desc>
			<multi-setvar>
				echo "ap1.mgt0.ip.prefix=$(echo ${ap1.mgt0.ip} | cut -d. -f1,2,3)"
			</multi-setvar>
		</step>
		
		<step no="2.5">
			<desc>check if ap get ip address from switch vlan interface ${br1.vpc1.vlan} successfully when switch works as router</desc>
			<script>
				if [ "${ap1.mgt0.ip.prefix}" == "${br1.vlanint2.prefix}" ]; then exit 0; else exit 1; fi
			</script>
		</step>	
		
		<!-- test bed don't support have station, so ignore below steps -->
		
		<!--
		<step no="3">
			<desc>Create an ssid on AP, and the ssid associated upid bind vlan ${br1.vpc3.vlan}</desc>
			<log-file>step3_ssid.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "user-profile ${br1.vpc3.vlan} qos-policy def-user-qos vlan-id ${br1.vpc3.vlan} attribute 1"
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</console>
		</step>
		
		<step no="4.1">
			<desc>
				create config file of wpa_supplicant
			</desc>
			<ssh target="br1.sta1">
				-v "echo \"ctrl_interface=/var/run/wpa_supplicant\" > /tmp/wpa_supplicant.cfg"
				-v "ifconfig ${br1.br1.sta1.tif.name} down"
				-v "ifconfig ${br1.br1.sta1.tif.name} up"
			</ssh>
		</step>

		<step no="4.2" delay="5">
			<desc>
				start wpa_supplicant
			</desc>
			<ssh target="br1.sta1">
				-v "killall wpa_supplicant"
				-v "wpa_supplicant -i ${br1.sta1.tif.name} ${br1.sta1.wpa_flag} -c /tmp/wpa_supplicant.cfg -B"
			</ssh>
		</step>

		<step no="4.3">
			<desc>
				station connect ap
			</desc>
			<ssh target="br1.sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<step no="4.4" delay="10" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>check if the client was associated successfully</desc>
			<log-file>step4.4_wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="br1.sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="4.5">
			<desc>client gets IP by dhclient</desc>
			<ssh target="br1.sta1">
				-v "dhclient ${br1.sta1.tif.name}"
			</ssh>
		</step>

		<step no="4.6" delay="10">
			<desc>ifconfig to show the ip address</desc>
			<log-file>step4.6_ifconfig.log</log-file>
			<ssh target="br1.sta1">
				-v "ifconfig ${br1.sta1.tif.name}"
			</ssh>
			<log-match> -n -e "inet addr"</log-match>
		</step>
		
		<step no="5">
			<desc> configure ap connect switch port as trunk port, configure pvid/allow-vlan</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface ${br1.br.lan.int3} switchport trunk allow vlan ${br1.vpc3.vlan}
			</telnet>
		</step>
		
		<step no="6.1">
			<desc>client gets IP by dhclient</desc>
			<ssh target="br1.sta1">
				-v "dhclient ${br1.sta1.tif.name} -r"
				-v "dhclient ${br1.sta1.tif.name}"
				-v ""
			</ssh>
		</step>

		<step no="6.2" delay="10">
			<desc>ifconfig to show the ip address</desc>
			<log-file>step6.2_ifconfig.log</log-file>
			<ssh target="br1.sta1">
				-v "ifconfig ${br1.sta1.tif.name}"
			</ssh>
			<log-match>-e "inet addr"</log-match>
		</step>
		
		
		<step no="6.3">
			<desc>Get station's ip</desc>
			<setvar name="br1.sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step6.2_ifconfig.log -i ${br1.sta1.tif.name} -nomask
			</setvar>
		</step>
		
		<step no="6.4">
			<desc>get prefix of station ip address</desc>
			<multi-setvar>
				echo "sta.ip.prefix=$(echo ${br1.sta1.tif.ip} | cut -d. -f1,2,3)"
			</multi-setvar>
		</step>
		
		<step no="6.5">
			<desc>check if station get ip address from switch vlan interface ${br1.vpc3.vlan} successfully</desc>
			<script>
				if [ "${sta.ip.prefix}" == "${br1.vlanint3.prefix}" ]; then exit 0; else exit 1; fi
			</script>
		</step>	
		-->
		
		
		<step no="7.1">
			<desc>vpc1 get ip address </desc>
			<log-file>ifconfig_vpc1_ip.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name} -r"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>		
		</step>
		
		<step no="7.2">
			<desc>show ip address of vpc1 ip</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>
		
		<step no="7.3">
			<desc>get prefix of vpc1 ip address</desc>
			<multi-setvar>
				echo "br1.vpc1.ip.prefix=$(echo ${br1.vpc1.tif.ip} | cut -d. -f1,2,3)"
			</multi-setvar>
		</step>
		
		<step no="7.4">
			<desc>check if br1.vpc1 get ip address from switch vlan interface ${br1.vpc1.vlan} successfully </desc>
			<script>
				if [ "${br1.vpc1.ip.prefix}" == "${br1.vlanint1.prefix}" ]; then exit 0; else exit 1; fi
			</script>
		</step>		
		
		<!-- test bed don't support have station, so ignore below steps -->
		
		<!--
		<step no="8">
			<desc>
				station send unicast packet to vpc1, like ping.
			</desc>
			<log-file>step8_ping.log</log-file>		
			<script>
				ping ${br1.vpc1.tif.ip} -c 4 &gt; ${log.dir}/${log.file}
			</script>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "from ${br1.vpc1.tif.ip}:.+ttl=" -f ${log.dir}/step8_ping.log</log-match>
		</step>
		
		<step no="9">
			<desc>
				station send unicast packet to ap1, like ping.
			</desc>
			<log-file>step9_ping.log</log-file>		
			<script>
				ping ${ap1.mgt0.ip} -c 4 &gt; ${log.dir}/${log.file}
			</script>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "from ${ap1.mgt0.ip}:.+ttl=" -f ${log.dir}/step9_ping.log</log-match>
		</step>
		-->
		
		<step no="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				10.ap send packets to vpc1, like ping.
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "ping ${br1.vpc1.tif.ip}"
			</console>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>
		
	
	</stage>
	

	
	<post-process>
		<stage>
			<!-- self defined steps, no need script now -->
		</stage>
		<include file="include/br_default_process.xml" />
	</post-process>
	
	
</testcase>