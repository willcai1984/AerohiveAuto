<include arg-names="console_name">
    <description>
        Pre-Condition:
        Test Procedure:
            1. input CLI.
            2. check whether there's error in these CLIs.
    </description>


    <step no="pre_process">
        <console cons-name="${console_name}" cons-host="localhost">
            -v ""
			-v "reset config"
        </console>
    </step>

	<step no="check_admin" delay="120">
        <console cons-name="${console_name}" cons-host="localhost">
            -v ""
			-v "show admin"
        </console>
        <log-match>-e "admin\s*root-admin"</log-match>
        <failed>next</failed>
    </step>

    <step no="check_bootparam">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show boot-param"
        </console>
        <failed>next</failed>
    </step>

    <step no="check_cmds">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show cmds > tftp://10.155.3.243:cmds.txt"
        </console>
        <failed>next</failed>
    </step>

    <step no="check_config">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show config backup"
            -v "show config bootstrap"
            -v "show config current"
            -v "show config default"
            -v "show config running"
            -v "show config running password"
            -v "show config version"
            -v "show config rollback"
        </console>
        <log-match>-c -e "Status:\s*disabled"</log-match>
        <failed>next</failed>
    </step>

    <step no="check_console">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show console"
        </console>
        <log-match>-c -e "Console page lines:\s*22"</log-match>
        <log-match>-c -e "Console timeout in minutes:\s*10"</log-match>
        <log-match>-c -e "Serial port status:\s*Enabled"</log-match>
        <log-match>-c -e "Console echo obscure-passwords:\s*Enabled"</log-match>
        <failed>next</failed>
    </step>

    <step no="check_cpu">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show cpu"
        </console>
        <failed>next</failed>
    </step>

    <step no="check_data_collection">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show data-collection"
        </console>
        <log-match>-c -e "Data Collection Status: Disabled"</log-match>
        <failed>next</failed>
    </step>

    <step no="check_interface">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show interface"
        </console>
        <log-match>-e "eth1/1"</log-match>
        <log-match>-e "eth1/2"</log-match>
        <log-match>-e "eth1/3"</log-match>
        <log-match>-e "eth1/4"</log-match>
        <log-match>-e "eth1/5"</log-match>
        <log-match>-e "eth1/6"</log-match>
        <log-match>-e "eth1/7"</log-match>
        <log-match>-e "eth1/8"</log-match>
        <log-match>-e "eth1/9"</log-match>
        <log-match>-e "eth1/10"</log-match>
        <log-match>-e "eth1/11"</log-match>
        <log-match>-e "eth1/12"</log-match>
        <log-match>-n -e "eth1/13"</log-match>
        <failed>next</failed>
    </step>

    <step no="check_memory">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show memory"
        </console>
        <failed>next</failed>
    </step>

    <step no="check_os_object">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show os-object"
        </console>
        <failed>next</failed>
    </step>

    <step no="check_report_stat">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show report statistic"
        </console>
        <log-match>-c -e "Stats: Disabled"</log-match>
        <failed>next</failed>
    </step>

    <step no="check_resetbutton">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show reset-button"
        </console>
        <log-match>-c -e "Reset configure: Enabled"</log-match>
        <failed>next</failed>
    </step>

    <step no="check_system_info">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show system disk-info"
            -v "show system led"
            -v "show system power status"
            -v "show system processes"
            -v "show system temperature"
        </console>
        <failed>next</failed>
    </step>

    <step no="check_fan_info">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show system fans"
        </console>
        <log-match>-c -e "Fan is not supported on SR2010"</log-match>
        <failed>next</failed>
    </step>

    <step no="check_usb_info">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show usb-device"
        </console>
        <log-match>-c -e "Bus 001 Device 001: ID"</log-match>
        <failed>next</failed>
    </step>

    <step no="check_version">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show version"
        </console>
        <failed>next</failed>
    </step>

    <step no="check_pse">
        <console cons-name="${console_name}" cons-host="localhost">
            -v "show pse"
        </console>
        <log-match>-c -e "Power management type\s*Dynamic"</log-match>
        <failed>next</failed>
    </step>
</include>
