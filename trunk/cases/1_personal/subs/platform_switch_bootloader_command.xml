<include arg-names="console_name, platform, bp, imagename">
		<step no="go_into_bootloader">
		<desc>get bootloader prompt and go into bootloader with default password</desc>
		<console cons-name="${console_name}" cons-host="localhost" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]*#">
			-bp ${bp}
			-v "reboot"
			-v "version"
		</console>
		<no-error-check />
		<failed>next</failed>
    </step>

	<step no="productName">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="10" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "ah_prod"
		</console>
		<log-match>-e "Product"</log-match>
		<failed>next</failed>
	</step>
	<step no="boardInfo">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="10" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "bdinfo"
		</console>
		<log-match>-e "arch_number"</log-match>
		<failed>next</failed>
    </step>
	<step no="dhcp">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "dhcp"
		</console>
		<log-match>-e "DHCP client bound to address"</log-match>
		<failed>next</failed>
    </step>
	<step no="dump_hw_info">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="10" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "dump_hw_info"
            -v ""
		</console>
		<log-match>-e "Serial Num"</log-match>
		<failed>next</failed>
	</step>
	<step no="flash_dump_info">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "flash_dump_info"
		</console>
		<log-match>-e "Flash size"</log-match>
		<failed>next</failed>
	</step>
	<step no="format_flash_fs">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "format_flash_fs"
		</console>
		<log-match>-e "OK"</log-match>
		<failed>next</failed>
	</step>
	<step no="imd">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "imd 7f 7c 2"
		</console>
		<log-match>-e "7c:"</log-match>
		<failed>next</failed>
	</step>
	<step no="imw">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "imw 7f 7e 1"
		</console>
		<failed>next</failed>
	</step>
	<step no="iprobe">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "iprobe"
		</console>
		<log-match>-e "Valid chip addresses:"</log-match>
		<failed>next</failed>
	</step>
	<step no="mw_md">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "mw 0x02000000 1f1f1f1f 1"
            -v "md 0x02000000"
            -v ""
		</console>
		<log-match>-e "02000000: 1f1f1f1f"</log-match>
		<failed>next</failed>
	</step>
	<step no="nandInfo">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "nand info"
		</console>
		<log-match>-e "size [0-9]* KiB"</log-match>
		<failed>next</failed>
	</step>
	<step no="nandDevice">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "nand device"
		</console>
		<log-match>-e "NAND [0-9]*GiB"</log-match>
		<failed>next</failed>
	</step>
	<step no="nandDump">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "nand dump 0x40000"
            -v ""
		</console>
		<log-match>-e "Page 00400000 dump:" -e "OOB:"</log-match>
		<failed>next</failed>
	</step>
	<step no="nandRead">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "nand read 0x02000000 0x400000 20000"
		</console>
		<log-match>-e "read: OK"</log-match>
		<failed>next</failed>
	</step>
	<step no="nandErase">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "nand erase 0x400000 20000"
		</console>
		<log-match>-e "NAND erase:" -e "OK" </log-match>
		<failed>next</failed>
    </step>
	<step no="nandWrite">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "nand write 0x02000000 0x400000 20000"
		</console>
		<log-match>-e "written: OK"</log-match>
		<failed>next</failed>
	</step>
	<step no="nandBad">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "nand bad"
		</console>
		<log-match>-e "bad blocks:"</log-match>
		<failed>next</failed>
	</step>
	<step no="ping">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "dhcp"
			-v "ping 10.155.3.243"
		</console>
		<log-match>-e "host 10.155.3.243 is alive"</log-match>
		<failed>next</failed>
	</step>
	<step no="printBootinfo">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "print_bootinfo"
		</console>
		<log-match>-e "Bootloader boot info:"</log-match>
		<failed>next</failed>
    </step>
	<step no="printBootparam">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "print_bootparam"
		</console>
		<log-match>-e "Boot Parameters:"</log-match>
		<failed>next</failed>
    </step>
	<step no="printEnv">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "printenv baudrate"
		</console>
		<log-match>-e "baudrate=9600"</log-match>
		<failed>next</failed>
    </step>
	<step no="Run">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "setenv ver version"
			-v "run ver"
		</console>
		<log-match>-e "Aerohive Boot Loader"</log-match>
		<failed>next</failed>
    </step>
	<step no="setEnv">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "setenv abc 18181818"
            -v "printenv abc"
		</console>
		<log-match>-e "abc=18181818"</log-match>
		<failed>next</failed>
    </step>
	<step no="saveEnv_1_set">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "setenv abc 18181818"
            -v "saveenv"
		</console>
		<log-match>-e "done"</log-match>
		<failed>next</failed>
    </step>
	<step no="saveEnv_2_reset">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "reset"
		</console>
		<failed>next</failed>
    </step>
	<step no="saveEnv_3_go_into_bootloader" delay="600">
	    <desc>get bootloader prompt and go into bootloader with default password</desc>
        <console cons-name="${console_name}" cons-host="localhost" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]*#">
            -v ""
		    -bp ${bp}
		    -v "reboot"
		    -v "version"
	    </console>
	    <no-error-check />
	    <failed>next</failed>
    </step>
	<step no="saveEnv_4_check_clear">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "printenv abc"
            -v "setenv abc"
            -v "saveenv"
		</console>
		<log-match>-e "abc=18181818"</log-match>
		<failed>next</failed>
    </step>
	<step no="setBootparam_1_set">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:|Device IP|TFTP Server IP|Management Port|VLAN ID|NVLAN ID|Boot File|Netboot after flashboot failed|Netdump after crash|Are you sure to save">
            -v "set_bootparam"
			-v ""
			-v "10.155.30.230"
            -v ""
            -v "0"
			-v "0"
            -v "newimg/${imagename}"
			-v "0"
            -v "0"
			-v "y"
		</console>
        <log-match>-e "Parameter saved"</log-match>
        <no-error-check />
		<failed>next</failed>
    </step>
	<step no="setBootparam_2_check">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "print_bootparam"
		</console>
        <log-match>-e "10.155.30.230"</log-match>
        <log-match>-e "${imagename}"</log-match>
		<failed>next</failed>
    </step>
	<step no="setHwinfo">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "set_hw_aid 0"
            -v "set_hw_ver 01"
            -v "dump_hw_info"
            -v ""
		</console>
        <log-match>-e "Ant ID:\s*0000"</log-match>
		<log-match>-e "HW Ver:\s*01"</log-match>
		<failed>next</failed>
    </step>
	<step no="tftpboot">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v ""
            -v "dhcp"
            -v "setenv serverip 10.155.3.243"
            -v "setenv bootfile ynmo/u-boot.bin"
            -v "tftpboot"
		</console>
        <log-match>-e "done"</log-match>
		<failed>next</failed>
    </step>
	<step no="version">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "version"
            -v ""
        </console>
        <log-match>-e "Aerohive Boot Loader"</log-match>
		<failed>next</failed>
    </step>

	<step no="image_flash_1_exec">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="SR2010P>|AH-[0-9A-Za-z]* login:">
            -v ""
            -v "dhcp"
            -v "setenv serverip 10.155.30.230"
            -v "setenv bootfile newimg/${imagename}"
            -v "image_flash"
            -v ""
            -v "reset"
        </console>
        <no-error-check />
		<failed>next</failed>
    </step>
	<step no="image_flash_2_check">
		<desc>check version</desc>
		<console cons-name="${console_name}" cons-host="localhost">
			-v "show version"
		</console>
		<log-match>-e "Version:"</log-match>
		<failed>next</failed>
    </step>

	<step no="image_netboot_1_go_into_bootloader">
		<desc>get bootloader prompt and go into bootloader with default password</desc>
        <console cons-name="${console_name}" cons-host="localhost" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]*#">
            -v ""
			-bp ${bp}
			-v "reboot"
            -v "version"
		</console>
		<no-error-check />
		<failed>next</failed>
	</step>
	<step no="image_netboot_2_exec">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "dhcp"
            -v "setenv serverip 10.155.30.230"
            -v "setenv bootfile newimg/${imagename}"
            -v "image_netboot"
        </console>
        <no-error-check />
		<failed>next</failed>
    </step>
	<step no="image_netboot_3_check">
		<desc>check version</desc>
		<console cons-name="${console_name}" cons-host="localhost">
			-v "show version"
		</console>
		<log-match>-e "Version:"</log-match>
		<failed>next</failed>
    </step>


	<step no="go_into_bootloader_for_next">
		<desc>get bootloader prompt and go into bootloader with default password</desc>
        <console cons-name="${console_name}" cons-host="localhost" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]*#">
            -v ""
			-bp ${bp}
			-v "reboot"
			-v "version"
		</console>
		<no-error-check />
		<failed>next</failed>
	</step>

    <!--<step no="usbStart">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "usb start"
		</console>
        <log-match>-e "[0-9]* Storage Device(s) found"</log-match>
		<failed>next</failed>
    </step>
	<step no="usbTree">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "usb tree"
		</console>
        <log-match>-e "Mass Storage"</log-match>
		<failed>next</failed>
    </step>
	<step no="usbInfo">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "usb info"
		</console>
        <log-match>-e "Vendor:"</log-match>
		<failed>next</failed>
    </step>
	<step no="usbStorage">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "usb storage"
		</console>
        <log-match>-e "Capacity:"</log-match>
		<failed>next</failed>
    </step>
	<step no="usbDev">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "usb dev"
		</console>
        <log-match>-e "USB device 0"</log-match>
		<failed>next</failed>
    </step>
    <step no="usbRead">
		<desc>execute some CLIs in bootloader</desc>
        <console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
            -v "usb read 0x02000000 0 1"
		</console>
        <log-match>-e "read: OK"</log-match>
		<failed>next</failed>
    </step>-->

	<!--step no="bdinfo">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "bdinfo"
		</console>
		<log-match>-e "memstart"</log-match>
		<log-match>-e "baudrate"</log-match>
		<failed>next</failed>
	</step>
	<step no="coninfo">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "coninfo"
		</console>
		<log-match>-e "List of"</log-match>
		<failed>next</failed>
	</step-->
	<step no="go_back_to_HIVEOS">
		<desc>execute some CLIs in bootloader</desc>
		<console cons-name="${console_name}" cons-host="localhost" timeout="1000" prompt="[=0-9A-Za-z]+>|AH-[0-9A-Za-z]* login:">
			-v "reset"
		</console>
		<failed>next</failed>
	</step>
	</include>
