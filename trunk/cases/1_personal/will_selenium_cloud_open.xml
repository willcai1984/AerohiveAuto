<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>cloud psk</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		cloud psk
	</description>
	<numofap>1</numofap>
	<tbtype>winlin</tbtype>
	<property name="policy.name" value="CloudTest" />
	<property name="ssid.name" value="CloudTest" />

	<property name="ap1.mgt0.mac" value="E01C41781A40" />
	<property name="job_selenium_jar" value="${job_selenium_jar}" />
	<property name="owner.id" value="102" />
	<property name="access_addr" value="${tb.http_server}" />
	<property name="login_addr" value="${tb.http_server}/login" />
	<property name="ssid.security" value="open" />
	<property name="ssid.key" value="" />
	<property name="tb.browser_type" value="chrome" />
	<property name="tb.browser_path" value="C:/Program Files (x86)/Google/Chrome/Application/chromedriver.exe" />
	
	<stage>
		<include prefix="start_selenium_server1" file="subs/start_selenium_server.xml" args="${wpc.mif.ip}, ${job_selenium_dir}, ${job_selenium_jar}, ${job_selenium_workload},${tb.browser_type},${tb.browser_path}" />
			
		<step no="pre.0">
			<desc>
				get access addr
			</desc>
			<setvar name="access_addr">
				echo "${tb.http_server}"
			</setvar>
		</step>

		<step no="pre.1">
			<desc>
				get login addr
			</desc>
			<setvar name="login_addr">
				echo "${tb.http_server}/login"
			</setvar>
		</step>

		<step no="pre.2">
			<desc>
				get random number
			</desc>
			<setvar name="random.number">
				echo $RANDOM
			</setvar>
		</step>

		<step no="1">
			<desc>
				access cloud3.0
			</desc>
			<log-file>login_cloud.html</log-file>
			<file>session_id.log</file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/cloud/cloud_login_positive.py -r http://${wpc.mif.ip}:4444/wd/hub -t chrome -f ${log.dir}/${log.file} -l info --preserve-session --parameters visit.pre_url=${login_addr} visit.url=${access_addr} &gt; ${log.dir}/session_id.log
			</script>
		</step>

		<step no="2">
			<desc>
				get session id
			</desc>
			<setvar name="session.id">
				${bin.dir}/getbyrexp.py -p "- session preserved - (\S+) pic:" -f ${log.dir}/session_id.log -t str
			</setvar>
		</step>

		<step no="3">
			<desc>
				create policy ssid name
			</desc>
			<log-file>new_policy_ssid.html</log-file>
			<script timeout="500">
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/cloud/new_network_policy.py -r http://${wpc.mif.ip}:4444/wd/hub --parameters device.mac=${ap1.mgt0.mac} policy.name=${policy.name}-${random.number} ssid.name=${ssid.name}-${random.number} visit.pre_url=${login_addr} visit.url=${access_addr} ssid.security=${ssid.security} ssid.key=${ssid.key} -t chrome -f ${log.dir}/${log.file} -l debug  --session-id=${session.id}
			</script>
		</step>
		
		<step no="4" delay="120">
			<desc>
				1. show run config
			</desc>
			<log-file>check_hiveaps_capwap_state.log</log-file>
			<console target="ap1">
				-v "show running-config"
			</console>
			<log-match>-i "security mac-filter ${ssid.name}-${random.number} default permit"</log-match>
			<log-match>-i "security-object ${ssid.name}-${random.number}"</log-match>
			<log-match>-i "ssid ${ssid.name}-${random.number}"</log-match>
			<log-match>-i "ssid ${ssid.name}-${random.number} security-object ${ssid.name}-${random.number}"</log-match>
			<log-match>-i "ssid ${ssid.name}-${random.number} security mac-filter ${ssid.name}-${random.number}"</log-match>
			<log-match>-i "interface wifi0 ssid ${ssid.name}-${random.number}"</log-match>
			<log-match>-i "interface wifi1 ssid ${ssid.name}-${random.number}"</log-match>
		</step>
	</stage>
	<post-process>
		<stage>
			<include prefix="stop_selenium_server1" file="subs/stop_selenium_server.xml" args="${wpc.mif.ip}, ${job_selenium_workload}" />
		</stage>
	</post-process>
</testcase>