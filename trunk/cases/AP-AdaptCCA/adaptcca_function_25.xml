<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>stress test: change default cca value frequently</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Test Procedure:
		1. set wifi1 mode to access
		2. create ssid and bind to wifi1
		3. create ssid and bind to wifi0
		4. build a scripts to keep changing wifi0/wifi1 default cca value,
		enable/disable cca
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<if>"${ap1.wifi1.existed}" == "true"</if>
		<step no="1">
			<desc>
				1. set wifi1 mode to access
			</desc>
			<telnet target="ap1">
				-v "interface wifi1 mode access"
			</telnet>
		</step>

		<step no="2">
			<desc>
				2. create ssid and bind to wifi1
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi1 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="3">
			<desc>
				3. create ssid and bind to wifi0
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}_1"
				-v "interface wifi0 ssid ${ssid.name}_1"
			</telnet>
		</step>
	</stage>

	<stage loop-values="15,16,17,18,19,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65" var-name="def_cca">
		<step no="4.1">
			<desc>
				get the changed cca value
			</desc>
			<setvar name="changed_cca_value">
				echo -95+${def_cca}|bc
			</setvar>
		</step>

		<step no="4.2">
			<desc>
				4. changing wifi0 default cca value, check the wifi0 default cca value is changed
			</desc>
			<log-file>check_wifi0_cca_value_${loop.idx}.log</log-file>
			<telnet target="ap1">
				-v "interface wifi0 radio adaptive-cca default-cca ${def_cca}"
				-v "show interface wifi0"
			</telnet>
			<no-error-check />
			<log-match>-i "Default CCA Threshold=${changed_cca_value}dBm"</log-match>
		</step>
	</stage>

	<stage loop-values="15,16,17,18,19,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65" var-name="def_cca">
		<step no="5.1">
			<desc>
				get the changed cca value
			</desc>
			<setvar name="changed_cca_value">
				echo -95+${def_cca}|bc
			</setvar>
		</step>

		<step no="5.2">
			<desc>
				5 check the wifi1 default cca value is changed
			</desc>
			<log-file>check_wifi1_cca_value_${loop.idx}.log</log-file>
			<telnet target="ap1">
				-v "interface wifi1 radio adaptive-cca default-cca ${def_cca}"
				-v "show interface wifi1"
			</telnet>
			<no-error-check />
			<log-match>-i "Default CCA Threshold=${changed_cca_value}dBm"</log-match>
		</step>
	</stage>

	<stage loop-values="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20" var-name="loop.idx">
		<step no="6">
			<desc>
				6 disable cca, show wifi0 cca
			</desc>
			<log-file>wifi0_cca_info_${loop.idx}.log</log-file>
			<telnet target="ap1">
				-v "no interface wifi0 radio adaptive-cca enable"
				-v "show interface wifi0"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Adaptive CCA=disabled"</log-match>
		</step>

		<step no="7">
			<desc>
				7. recover wifi0 default cca value, enable cca, show wifi0 default cca info
			</desc>
			<log-file>wifi0_check_cca_info_${loop.idx}.log</log-file>
			<telnet target="ap1">
				-v "interface wifi0 radio adaptive-cca enable"
				-v "show interface wifi0"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Adaptive CCA=enabled"</log-match>
		</step>
	</stage>

	<stage loop-values="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20" var-name="loop.idx">
		<step no="8">
			<desc>
				8. disable cca, show wifi1 cca
			</desc>
			<log-file>wifi1_cca_info_${loop.idx}.log</log-file>
			<telnet target="ap1">
				-v "no interface wifi1 radio adaptive-cca enable"
				-v "show interface wifi1"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Adaptive CCA=disabled"</log-match>
		</step>

		<step no="9">
			<desc>
				9. recover wifi1 default cca value, enable cca, show wifi1 default cca info
			</desc>
			<log-file>wifi1_check_cca_info_${loop.idx}.log</log-file>
			<telnet target="ap1">
				-v "interface wifi1 radio adaptive-cca enable"
				-v "show interface wifi1"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Adaptive CCA=enabled"</log-match>
		</step>
	</stage>
</testcase>