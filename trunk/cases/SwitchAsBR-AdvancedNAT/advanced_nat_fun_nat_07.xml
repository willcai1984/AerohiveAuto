<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief> 1:1 NAT address mapping between non-routable ip and routable ip Platform Dependence BR100,BR200,BRAP330,BRAP350</brief>
	<priority>Middle</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		1. The primary wan interface is eth0 on br
		2. establish vpn tunnel between wan interface of br and CVG
		3. the private ip subnet on br:192.168.1.0/24

		Test Procedure:
		1. Configure non-routable subnet on br
		Sunbet : 192.168.1.0/24
		2. Configure routable subnet on br
		Subnet: 100.10.1.0/24
		3. Configure a 1:1 nat policy on br
		ip nat-policy nat192-100 type match-net inside
		192.168.1.0/24 outside 100.10.1.0/24
		4. Apply nat-policy nat192-100 on tunnel interface on br
		vpn ipsec-tunnel ipsec_1 nat-policy nat192-100
		5. pc connect to the br lan interface
		6. pc get the non-routable ip 192.168.1.2 from subnet 192.168.1.0/24
		7. pc send traffic to vpn network, check result1
		8. change the ip address of pc to 192.168.1.x(x=3~254) and pc send
		traffic to vpn network, check result 2
	</description>
	<numofbr>1</numofbr>
	<numofcvg>1</numofcvg>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>winlin</tbtype>

	<property name="vpc1.outside.subnet" value="101.1.1.0" />
	<!-- <property name="vpc1.outside.ip" value="101.1.1.2" /> -->
	<property name="vpc1.outside.ip.second" value="101.1.1.5" />
	<property name="vpc1.outside.ip.last" value="101.1.1.254" />

	<stage>
		<include prefix="1" file="subs/vpn_setup_one_sw.xml" obj-args="cvg1, br1" />
		
		<step no="define_the_new_ip_pool_end">
			<multi-setvar>
				echo "br1.br.mgt0.1.ip_pool_end1=$(echo ${br1.br.mgt0.1.ip_pool_end} | cut -d. -f1,2,3).254"
			</multi-setvar>
		</step>

		<step no="2">
			<desc>
				Enable dhcp server（vlan${br1.vpc1.vlan}）
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface ${br1.br.wan.int1} mode wan"
				-v "vlan ${br1.vpc1.vlan}"
				-v "interface vlan ${br1.vpc1.vlan}"
				-v "interface vlan${br1.vpc1.vlan} ip ${br1.br.mgt0.1.ip}/24"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end1}"
				-v "interface vlan${br1.vpc1.vlan} dhcp-server enable"
			</telnet>
			<no-error-check />
		</step>

		<step no="2.1">
			<desc>
				-set ${br1.br.lan.int1}'s mode and permit mac-learning
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface ${br1.br.lan.int1} switchport mode access"
				-v "interface ${br1.br.lan.int1} switchport access vlan ${br1.vpc1.vlan}"
			</telnet>
		</step>

		<step no="2.2">
			<multi-setvar>
				echo "vpc1.inside.subnet=$(echo ${br1.br.mgt0.1.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<step no="3">
			<desc>
				Configure a 1:1 nat policy on br
			</desc>
			<telnet target="${br1.br.wan.ip}" timeout="300">
				-v "ip nat-policy n1 type match-net inside ${vpc1.inside.subnet}/${br.lan.netmask} outside ${vpc1.outside.subnet}/${br.lan.netmask}"
				-v "routing internal-sub-network ${vpc1.outside.subnet}/${br.lan.netmask}"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				Apply nat-policy nat192-100 on tunnel interface on br
			</desc>
			<telnet target="${br1.br.wan.ip}" timeout="300">
				-v "vpn ipsec-tunnel ${br1.tunnel.name} nat-policy n1"
			</telnet>
		</step>

		<step no="4">
			<desc>br1.vpc1 get ip addr from dhcp server of vlan${br1.vpc1.vlan}</desc>
			<log-file>step4_ifconfig_vpc1.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient -r ${br1.vpc1.tif.name}"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="4.1.1">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="4.1.2">
			<desc>set vpc1.outside.ip</desc>
			<multi-setvar>
				echo "vpc1.outside.ip=101.1.1.$(echo ${br1.vpc1.tif.ip} | cut -d. -f4)"
			</multi-setvar>
		</step>

		<step no="4.2">
			<desc>
				pc1 send traffic to vpn network
			</desc>
			<log-file>step4.2_show_route.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="300">
				-v "show ip route"
			</telnet>
		</step>

		<step no="4.3">
			<multi-setvar>
				echo "br1.vpc1.static.ip=$(echo ${br1.vpc1.tif.ip} | cut -d. -f1,2,3).5"
				echo "br1.vpc1.static.ip.last=$(echo ${br1.vpc1.tif.ip} | cut -d. -f1,2,3).254"
			</multi-setvar>
		</step>

		<step no="open.debug">
			<desc>
				open debug mode and clear log all
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "_ff id 1 src-ip ${br1.vpc1.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="5" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				pc1 send traffic to vpn network,ping is successful
			</desc>
			<log-file>step5_br1.vpc1_ping_cvg1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.cvg.lan.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${cvg1.cvg.lan.ip}" -i "ttl="</log-match>
		</step>

		<step no="5.1" delay="20">
			<desc>
				show logging buffered,the ping traffic is forwarded on tunnel and there are the 1:1 nat
			</desc>
			<log-file>step5.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =>${br1.br.mgt0.ip}->${cvg1.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${vpc1.outside.ip}\(&lt;NULL&gt;\)->${cvg1.cvg.lan.ip}\(tunnel0\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) ${br1.br.lan.kport1} ${br1.vpc1.tif.ip}->${cvg1.cvg.lan.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) tunnel0 ${vpc1.outside.ip}->${cvg1.cvg.lan.ip}\(\d+\) ttl\(\d+\)\s*mtu\(\d+\)\s*icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6">
			<desc>
				change the ip address of pc
			</desc>
			<log-file>step6_change_ip.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ifconfig ${br1.vpc1.tif.name} ${br1.vpc1.static.ip}"
				-v "ifconfig ${br1.vpc1.tif.name}"
				-v "route add -host ${cvg1.cvg.lan.ip} gw ${br1.br.mgt0.1.ip}"
			</ssh>
			<log-match>-c -i "inet addr:${br1.vpc1.static.ip}"</log-match>
		</step>

		<step no="open.debug.1">
			<desc>
				open debug mode and clear log all
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "no _ff id 1"
				-v "_ff id 1 dst-ip ${cvg1.cvg.lan.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="7" delay="10" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				pc1 send traffic to vpn network,ping is successful
			</desc>
			<log-file>step7_br1.vpc1_ping_cvg1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.cvg.lan.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${cvg1.cvg.lan.ip}" -i "ttl="</log-match>
		</step>

		<step no="7.1" delay="30">
			<desc>
				show logging buffered,the ping traffic is forwarded on tunnel and there are the 1:1 nat
			</desc>
			<log-file>step7.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =>${br1.br.mgt0.ip}->${cvg1.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${vpc1.outside.ip.second}\(&lt;NULL&gt;\)->${cvg1.cvg.lan.ip}\(tunnel0\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) tunnel0 ${vpc1.outside.ip.second}->${cvg1.cvg.lan.ip}\(\d+\) ttl\(\d+\)\s*mtu\(\d+\)\s*icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) ${br1.br.lan.kport1} ${br1.vpc1.static.ip}->${cvg1.cvg.lan.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
		</step>
		
		<step no="8">
			<desc>
				change the ip address of pc
			</desc>
			<log-file>step8_change_ip.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ifconfig ${br1.vpc1.tif.name} ${br1.vpc1.static.ip.last}"
				-v "ifconfig ${br1.vpc1.tif.name}"
				-v "route add -host ${cvg1.cvg.lan.ip} gw ${br1.br.mgt0.1.ip}"
			</ssh>
			<log-match>-c -i "inet addr:${br1.vpc1.static.ip.last}"</log-match>
		</step>
		
		<step no="9" delay="10" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				pc1 send traffic to vpn network,ping is successful
			</desc>
			<log-file>step9_br1.vpc1_ping_cvg1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.cvg.lan.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${cvg1.cvg.lan.ip}" -i "ttl="</log-match>
		</step>

		<step no="9.1" delay="30">
			<desc>
				show logging buffered,the ping traffic is forwarded on tunnel and there are the 1:1 nat
			</desc>
			<log-file>step9.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =>${br1.br.mgt0.ip}->${cvg1.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${vpc1.outside.ip.last}\(&lt;NULL&gt;\)->${cvg1.cvg.lan.ip}\(tunnel0\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) tunnel0 ${vpc1.outside.ip.last}->${cvg1.cvg.lan.ip}\(\d+\) ttl\(\d+\)\s*mtu\(\d+\)\s*icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) ${br1.br.lan.kport1} ${br1.vpc1.static.ip.last}->${cvg1.cvg.lan.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					Release address
				</desc>
				<ssh target="br1.vpc1" timeout="120">
					-v "dhclient ${br1.vpc1.tif.name} -r"
					-v "ifconfig ${br1.vpc1.tif.name}"
					-v "route del -host ${cvg1.cvg.lan.ip} gw ${br1.br.mgt0.1.ip}"
					-v "route -n"
				</ssh>
				<log-match>-n -c -i "inet addr"</log-match>
			</step>
		</stage>

		<include file="include/br_default_post_process.xml" />
	</post-process>
</testcase>