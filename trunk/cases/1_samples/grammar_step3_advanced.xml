<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>grammar step3, advanced</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		In the script, you will learn that the basic automation case script grammar.
		1) More complex logical expression
		2) Loop run and check for one step until result is successful
		3) Free-extensible "log-match"
	</description>
	<numofap>0</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="1">
			<if>(1 == 1 &amp;&amp; 2 > 1) || (3 >= 2)</if>
			<desc>more complex logical expression</desc>
			<script>
				echo "Test more complex logical expression"
			</script>
		</step>

		<step no="2" type="loop-check" loop-max-times="5" loop-interval="3">
			<desc>Loop run until result is successful</desc>
			<log-file>my_${loop_check.idx}.log</log-file>
			<script>
				echo "hidden inner-variable loop_check.idx is ${loop_check.idx}" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "is 5"</log-match>
		</step>

		<step no="3">
			<script>
				echo "AAAA"
				echo "free-extensible log-match test"
				echo "BBBB"
				echo "BBBB"
				echo "CCCC"
			</script>
			<log-match bin="grep">free-exten ${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "BBBB" -c 2 -f ${log.file}</log-match>
		</step>
	</stage>

</testcase>
