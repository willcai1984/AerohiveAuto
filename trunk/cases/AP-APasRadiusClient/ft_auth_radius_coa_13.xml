<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>CWP compatibility test with 802.1X mode and CoA</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>CWP auth for client
	
		Pre-condition
		- Create an account on radius server, including username, password, assign a Vlan ID or UPID for this account.
		- wireless auth for client
		- UPID x and y are binded to same vlan
		Test procedure
		1. Configure CWP auth for client on AP1
		2. Client connects to AP1 to do Auth and gets UPID x
		3. send CoA packet with UPID y by using free radius
		4. check clientâ€™s UPID,result1
		5. client tries to access internet ,result2
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<property name="url" value="http://www.google.com.hk" />
	<property name="selenium_path" value="/root/selenium-server-standalone-2.42.2.jar" />
	
	<property name="UPID_X" value="1000" />
	<property name="UPID_Y" value="2000" />
	
	<stage>
		<step no="0.1">
			<desc>start selenium server</desc>
			<ssh target="sta1">
				-v "export DISPLAY=:1"
				-v "nohup java -jar ${selenium_path} 1>logfile.log 2>&amp;1 &amp;"
			</ssh>
		</step>
		
		<step no="0.2">
			<desc>start selenium server</desc>
			<ssh target="sta1">
				-v "printenv"
			</ssh>
		</step>
		
		<step no="0.3">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=wpa2-aes-8021x"
				echo "conn1.pif=wifi0"
				echo "conn1.username=${pub.radius1.username}"
				echo "conn1.passwd=${pub.radius1.passwd}"
				echo "conn1.eap_type=TLS"
			</multi-setvar>
		</step>
		
		<step no="1">
			<desc>config mac-auth and cwp on AP1</desc>
			<ssh target="ap1">
					-v "security-object auto-cwp"
					-v "security-object auto-cwp security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius2.sharesecret}" 
					-v "security-object auto-cwp security aaa radius-server accounting primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}" 
					-v "security-object auto-cwp security protocol-suite wpa2-aes-8021x" 
					-v "security-object auto-cwp security aaa radius-server dynamic-auth-extension"
					-v "web-directory 802.1x+cwp"
					-v "save web-page web-directory 802.1x+cwp tftp://10.155.81.20:cwp/802.1x+cwp.tar.gz"
					-v "security-object auto-cwp security additional-auth-method captive-web-portal reg-user-profile-attr 1"
					-v "security-object auto-cwp web-server web-page mandatory-field 0 optional-field 0"
					-v "security-object auto-cwp web-directory 802.1x+cwp"
					-v "security-object auto-cwp web-server index-file eula.html"
					-v "security-object auto-cwp default-user-profile-attr ${UPID_X} "	
					-v "ssid ${ssid.name}"
					-v "ssid ${ssid.name} security-object auto-cwp"
					-v "int wifi0 ssid ${ssid.name}"
					-v "save config"
			</ssh>
		</step>
		
		<step no="2">
			<desc>config two user-profiles, UPID x and y are binded to same vlan</desc>
			<ssh target="ap1">
				-v "user-profile x qos-policy def-user-qos vlan-id ${tb.vlan2} attribute ${UPID_X}"
				-v "user-profile y qos-policy def-user-qos vlan-id ${tb.vlan2} attribute ${UPID_Y}"
			</ssh>
		</step>
		
		<step no="3">
			<desc>
				show security-object to make sure wep and cwp is enable.
			</desc>
			<log-file>step3_show_security-object.log</log-file>
			<telnet target="ap1">
				-v "show security-object auto-cwp"
			</telnet>
			<log-match>-c -i "Protocol suite:\s+wpa2-aes-8021x" -re</log-match>
			<log-match>-c -i "Captive Web Portal:\s+Enabled" -re</log-match>
		</step>
		
		<step no="4">
			<desc>open debug on AP</desc>
			<telnet target="ap1">
				-v "_debug auth all"
				-v "clear log buffer"
			</telnet>
		</step>
		
		<include prefix="5" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />
		
		<step no="6">
			<desc>show auth</desc>
			<log-file>show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "Protocol-suite=WPA2-AES-802.1X" -re</log-match>
			<log-match>-c -e "${sta1.tif.mac}\s*${ssid_bind_interface}.*\s*01\s*${sta1.tif.ip.auth}" -re</log-match>
		</step>
		
		<step no="7">
			<desc>show roaming cache</desc>
			<log-file>show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "YNNN" -re</log-match>
		</step>
		
		<step no="8">
			<desc>access public HM through CWP</desc>
			<log-file>cwp_ft_int_dhcp_2_login_in.html</log-file>
			<script>
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/AerohiveGUI/scripts/cwp/cwp_login.py -r http://${sta1.mif.ip}:4444/wd/hub --parameters login.mode=accept visit.url=${url}  -t ff -l info -f ${log.dir}/${log.file}
			</script>
		</step>
		
		<step no="9">
			<desc>show roaming cache</desc>
			<log-file>step9_show_roaming_cache.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "YYNN" -re</log-match>
		</step>
		
		<step no="10">			
			<desc>show roaming cache mac xxx</desc>
			<log-file>step10_show_roaming_cache_mac.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache mac ${sta1.tif.mac}"
			</telnet>
			<log-match>-c -i "CWP flag: set"</log-match>
		</step>
		
		<step no="11" delay="60">
			<desc>show auth</desc>
			<log-file>step11_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<no-error-check />
		    <log-match>-c -e "${sta1.tif.mac}\s*${ssid_bind_interface}.*\s*\d*04\s*${sta1.tif.ip.auth}" -re</log-match>
		</step>
		
			
		<step no="12">
			<desc>show station and check the client's UPID is UPID_X</desc>
			<log-file>step12_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}" -i "${UPID_X}"</log-match>
		</step>
		
		
		<!--************************** Send Coa Packet **************************-->
		<step no="pre13.1">
			<desc>get mac from client with five dash</desc>
			<setvar name="sta1.tif.mac_5dash">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m -dash -uppercase
			</setvar>
		</step>
		
		<step no="pre13.2">
			<desc>show intface on wifi0</desc>
			<log-file>show_interface.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0.1"
			</telnet>
		</step>
		
		<step no="pre13.3">
			<desc>get mac from bssid of wifi0.1</desc>
			<setvar name="ssid.wifi0.bssid">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface.log -o aero -i wifi0.1 -m -dash -uppercase
			</setvar>
		</step>
		
		<step no="pre13.4">
			<desc>get mac from bssid of wifi0.1</desc>
			<setvar name="ap.wifi0.bssid">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface.log -o aero -i wifi0.1 -m -width
			</setvar>
		</step>
		
		<step no="pre13.5">
			<desc>enable auth debug to check COA</desc>
			<telnet target="ap1">
				-v "_debug auth all"
				-v "clear log buffered"
			</telnet>
		</step>
		
		<step no="13">
			<desc>send CoA packet with UPID_Y by using free radius</desc>
			<log-file>coa_upid_y.log</log-file>
			<ssh host="${pub.radius1.ip}" prompt=".*#">
				-v "echo -e \"Calling-Station-Id=${sta1.tif.mac_5dash}\\nCalled-Station-Id=${ssid.wifi0.bssid}:${ssid.name}\\nNAS-IP-Address=${ap1.mgt0.ip}\\nTunnel-Type:0=10\nTunnel-Medium-Type:0=1\\nTunnel-Private-Group-ID:0=${UPID_Y}\" | radclient -x ${ap1.mgt0.ip}:3799 coa aerohive"
			</ssh>
			<log-match>-e "CoA-ACK"</log-match>
		</step>
		
		<step no="14">
			<desc>check debug on AP</desc>
			<log-file>show_buffer.log</log-file>
			<telnet target="ap1">
				-v "show logg buff"
			</telnet>
			<no-error-check />
		</step>
		
		<step no="15.1">
			<desc>extract a piece of log</desc>
			<script>
				tac ${log.dir}/show_buffer.log |sed -n '/Received a CoA request from radius server/,/Send a CoA-Ack message to ${pub.radius1.ip}/I'p > ${log.dir}/coa_ap.log
			</script>
		</step>
		<step no="15.2">
			<desc>check the COA process on AP</desc>
			<log-file>coa_ap.log</log-file>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Received a CoA request from radius server ${pub.radius1.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)event is sent to AMRP: event=join SPA=${sta1.tif.mac} AA=${ap.wifi0.bssid} .* uid=${UPID_Y} vlan=${tb.vlan2} flag=0:hit" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Send a CoA-Ack message to ${pub.radius1.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>
		
		
		<step no="16">
			<desc>show station and check the client's UPID is UPID_Y</desc>
			<log-file>step16_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}" -i "${UPID_Y}"</log-match>
		</step>
		
		<step no="17">
			<desc>Ping from station to master Server </desc>
			<log-file>pingmaster_${mpc.tif.ip}.log</log-file>
			<ssh target="sta1">
				-v "ping ${mpc.tif.ip} -c 4"
			</ssh>
			<log-match>-i "from ${mpc.tif.ip}" -i "ttl="</log-match>
		</step>
		
	</stage>
</testcase>
