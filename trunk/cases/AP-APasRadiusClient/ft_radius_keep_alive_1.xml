<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Enable radius server keep alive on radius auth server</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-config a ssid with 802.1x
		-config a primary radius server on the ssid, reachable
		-config a backup1 server,unreachable
		-config a backup2 server,reachable
		-config a backup3 server,reachable

		Test Procedure:
		-check the keepalive status by default, result 1
		-enable radius probe, result 2
		'aaa radius-server keepalive enable', wait for a while
		-check all of the server status are correct
		-change the primary auth server to be unreachable,wait a while,check the
		server status, result 3
		-client connected to ssid again, result 4,5
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<stage>
		<step no="1">
			<desc>
				-config a ssid with 802.1x
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa-auto-8021x"
				-v "security-object autoap security aaa radius primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap security aaa radius-server dynamic-auth-extension"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "_debug auth probe"
				-v "_debug auth info"
			</telnet>
		</step>

		<step no="2">
			<desc>
				-config a primary radius server on the ssid, reachable
			</desc>
			<telnet target="ap1">
				-v "security-object autoap security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
			</telnet>
		</step>

		<step no="3">
			<desc>
				-config a backup1 server,unreachable
			</desc>
			<telnet target="ap1">
				-v "security-object autoap security aaa radius-server backup1 ${pub.unreach.ip} shared-secret ${pub.radius1.sharesecret}"
			</telnet>
		</step>

		<step no="4">
			<desc>
				-config a backup2 server,reachable
			</desc>
			<telnet target="ap1">
				-v "security-object autoap security aaa radius-server backup2 ${pub.radius2.ip} shared-secret ${pub.radius2.sharesecret}"
			</telnet>
		</step>

		<step no="5">
			<desc>
				-config a backup3 server,reachable
			</desc>
			<telnet target="ap1">
				-v "security-object autoap security aaa radius-server backup3 ${pub.radius3.ip} shared-secret ${pub.radius3.sharesecret} auth-port ${pub.radius3.authport}"
			</telnet>
		</step>

		<step no="6">
			<desc>
				-check the keepalive status by default, result 1
			</desc>
			<log-file>show_aaa.log</log-file>
			<telnet target="ap1">
				-v "show aaa"
			</telnet>
			<log-match>-e "Keepalive: Disable"</log-match>
		</step>

		<step no="7">
			<desc>
				-enable radius probe, result 2
				'aaa radius-server keepalive enable', wait for a while
			</desc>
			<telnet target="ap1">
				-v "aaa radius-server keepalive enable"
			</telnet>
		</step>

		<step no="7.1" delay="10">
			<desc>
				-check the keepalive status by default, result 1
			</desc>
			<log-file>show_aaa_2.log</log-file>
			<telnet target="ap1">
				-v "show aaa"
			</telnet>
			<log-match>-e "Keepalive: Enable"</log-match>
		</step>

		<step no="8" delay="50">
			<desc>
				-check all of the server status are correct
			</desc>
			<telnet target="ap1">
				-v "show aaa"
			</telnet>
			<log-match>-c -i "primary" -i "${pub.radius1.ip}" -i "N Y"</log-match>
			<log-match>-c -i "backup1" -i "${pub.unreach.ip}" -i "N N"</log-match>
			<log-match>-c -i "backup2" -i "${pub.radius2.ip}" -i "N Y"</log-match>
			<log-match>-c -i "backup3" -i "${pub.radius3.ip}" -i "N Y"</log-match>
		</step>

		<step no="8.1">
			<desc>
				show logging buffered
			</desc>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-i "Check AUTH server ${pub.unreach.ip} status..."</log-match>
			<log-match>-i "Send Access-Request to ${pub.unreach.ip}"</log-match>
			<log-match>-i "RADIUS AUTH server ${pub.unreach.ip} status is 1"</log-match>
			<log-match>-i "Update status of RADIUS AUTH server ${pub.unreach.ip}: unreachable"</log-match>
			<log-match>-i "Check AUTH server ${pub.radius1.ip} status..."</log-match>
			<log-match>-i "Send Access-Request to ${pub.radius1.ip}"</log-match>
			<log-match>-i "RADIUS AUTH server ${pub.radius1.ip} status is 2"</log-match>
			<log-match>-i "Update status of RADIUS AUTH server ${pub.radius1.ip}: reachable"</log-match>
			<log-match>-i "Check AUTH server ${pub.radius2.ip} status..."</log-match>
			<log-match>-i "Send Access-Request to ${pub.radius2.ip}"</log-match>
			<log-match>-i "RADIUS AUTH server ${pub.radius2.ip} status is 2"</log-match>
			<log-match>-i "Update status of RADIUS AUTH server ${pub.radius2.ip}: reachable"</log-match>
			<log-match>-i "Check AUTH server ${pub.radius3.ip} status..."</log-match>
			<log-match>-i "Send Access-Request to ${pub.radius3.ip}"</log-match>
			<log-match>-i "RADIUS AUTH server ${pub.radius3.ip} status is 2"</log-match>
			<log-match>-i "Update status of RADIUS AUTH server ${pub.radius3.ip}: reachable"</log-match>
		</step>

		<step no="9">
			<desc>
				-change the primary auth server to be unreachable
			</desc>
			<telnet target="ap1">
				-v "clear log all"
				-v "ip route host ${pub.radius1.ip} gateway ${tb.vlan1.dhcp_start}"
			</telnet>
		</step>

		<step no="9.1" delay="120">
			<desc>
				check the server status
			</desc>
			<telnet target="ap1">
				-v "show aaa"
			</telnet>
			<log-match>-c -i "primary" -i "${pub.radius1.ip}" -i "N N"</log-match>
			<log-match>-c -i "backup1" -i "${pub.unreach.ip}" -i "N N"</log-match>
			<log-match>-c -i "backup2" -i "${pub.radius2.ip}" -i "N Y"</log-match>
			<log-match>-c -i "backup3" -i "${pub.radius3.ip}" -i "N Y"</log-match>
		</step>

		<step no="10">
			<desc>
				Laptop has been associated with AP1
				create config file of wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "echo \"ctrl_interface=/var/run/wpa_supplicant\" > /tmp/wpa_supplicant.cfg"
				-v "ifconfig ${sta1.tif.name} down"
				-v "ifconfig ${sta1.tif.name} up"
			</ssh>
		</step>

		<step no="10.1" delay="5">
			<desc>
				start wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "killall wpa_supplicant"
				-v "wpa_supplicant -i ${sta1.tif.name} ${sta1.wpa_flag} -c /tmp/wpa_supplicant.cfg -B"
			</ssh>
		</step>

		<step no="10.2">
			<desc>config the laptop to apply the ssid profile,then start to associate</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt WPA-EAP"
				-v "set_network 0 proto RSN"
				-v "set_network 0 eap PEAP"
				-v "set_network 0 phase2 \"auth=MSCHAPV2\""
				-v "set_network 0 priority 1000"
				-v "set_network 0 identity \"${pub.radius2.username}\""
				-v "set_network 0 password \"${pub.radius2.passwd}\""
				-v "select_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<step no="10.3" delay="15" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>check if the client was associated successfully</desc>
			<log-file>wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="10.4" delay="10">
			<desc>ifconfig to show the ip add</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="10.5">
			<desc>Get laptop1's mac</desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -m -width
			</setvar>
		</step>

		<step no="10.6">
			<desc>
				check the server status
			</desc>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-e "${sta1.tif.mac}" -c</log-match>
		</step>

		<step no="10.7">
			<desc>
				show logging buffered
			</desc>
			<log-file>show_buff.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "No response from Authentication server ${pub.radius1.ip}:\d+ \- failover" -f ${log.dir}/${log.file}</log-match>
			<log-match>-e "Select a new reachable radius server"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p " RADIUS AUTH server ${pub.radius2.ip}:\d+ is reachable, make it as current server." -f ${log.dir}/${log.file}</log-match>
			<log-match>-e "Authentication server ${pub.radius2.ip}:${pub.radius2.authport}"</log-match>
			<log-match>-e "Resolved radius ${pub.radius2.ip} to ${pub.radius2.ip}"</log-match>
		</step>
	</stage>
</testcase>