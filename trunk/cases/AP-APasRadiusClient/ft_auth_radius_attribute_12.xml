<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Got multiple uid pairs from server,matched allowed-user-profile item</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-create two ssids, wpa 802.1x
		-config two user profiles with different vlan-id set, e.g., vlan 16 and
		vlan17
		-the two ssid with different allowed user profiles, e.g., ssid1 allows
		user-profile1, and ssid2 allows user-profile 2
		'security-object xxx user-profile-allowed vlan16'
		-cofing a radius account to return the above two uid from access-
		accept

		Test Procedure:
		-STA1 connects to ssid1 with above radius account
		-check the uid and vid got fro this STA, 'sh roa ca', 'sh ssid xxx sta' to
		make sure, result 1,2,3
		-STA1 connects to ssid2 with above radius account
		-check the uid and vid got fro this STA, 'sh roa ca', 'sh ssid xxx sta' to
		make sure
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn1.proto" value="wpa2-aes-8021x" />
	<property name="conn1.username" value="${pub.radius1.username}" />
	<property name="conn1.passwd" value="${pub.radius1.passwd}" />
	<property name="conn2.ssid" value="${ssid.name}_1" />
	<property name="conn2.proto" value="wpa2-aes-8021x" />
	<property name="conn2.username" value="${pub.radius1.username}" />
	<property name="conn2.passwd" value="${pub.radius1.passwd}" />

	<stage>
		<step no="1">
			<desc>
				-create two ssids, wpa 802.1x
				-config two user profiles with different vlan-id set
				-the two ssid with different allowed user profiles
				-cofing a radius account to return the above two uid from access-accept
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "ssid ${ssid.name}_1"
				-v "interface wifi0 ssid ${ssid.name}_1"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa2-aes-8021x"
				-v "security-object autoap security aaa radius-server dynamic-auth-extension"
				-v "security-object autoap security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap security aaa radius-server accounting primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "ssid ${ssid.name}_1 security-object autoap"
				-v "user-profile sta1 vlan-id ${tb.vlan1}"
				-v "security-object autoap user-profile-allowed sta1"
				-v "user-profile sta2 vlan-id ${tb.vlan2}"
				-v "security-object autoap user-profile-allowed sta2"
				-v "_debug auth probe"
				-v "_debug auth info"
			</telnet>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="3">
			<desc>show logging buffered to check</desc>
			<log-file>step3_show_logging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="4">
			<desc>
				- 'sh ssid xxx sta',
			</desc>
			<log-file>step4_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<failed>next</failed>
		</step>

		<step no="5">
			<desc>
				-'sh roa ca mac xxx'
			</desc>
			<log-file>step5_show_roaming.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache mac ${sta1.mac.ip}"
			</telnet>
		</step>

		<step no="6.1">
			<desc>realse</desc>
			<ssh target="sta1">
				-v "dhclient -r ${sta1.tif.name}"
			</ssh>
		</step>
		<step no="6.2">
			<desc>terminate wpa_supplicant on sta1</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "disc"
				-v "ter"
				-v "quit"
			</ssh>
		</step>

		<step no="7">
			<desc>clear log all</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="7">
			<desc>
				-STA1 connects to ssid2 with above radius account
			</desc>
			<log-file></log-file>
			<telnet target="ap1"></telnet>
			<ssh target="sta1"></ssh>
			<setvar name=""></setvar>
			<script></script>
			<log-match></log-match>
		</step>

		<step no="8">
			<desc>show logging buffered to check</desc>
			<log-file>step8_show_logging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="9">
			<desc>
				- 'sh ssid xxx sta',
			</desc>
			<log-file>step9_show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<failed>next</failed>
		</step>

		<step no="10">
			<desc>
				-'sh roa ca mac xxx'
			</desc>
			<log-file>step10_show_roaming.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache mac ${sta1.mac.ip}"
			</telnet>
		</step>
	</stage>
</testcase>