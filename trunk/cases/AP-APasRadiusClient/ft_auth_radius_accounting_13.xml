<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Data statistic of the client</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-config a ssid on AP, wpa 802.1x
		-enable accounting on the AP
		-STA1,2 connects to ssid success

		Test Procedure:
		-STA1 ping gateway, ping times, result 1
		-STA1 downloads a file, larger than 4GB, result 2
		-STA1 uploads the 4GB+ file to a remote site, result 3
		-check the Acct-Input-Packets and
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn1.proto" value="wpa2-aes-8021x" />
	<property name="conn1.username" value="${pub.radius1.username}" />
	<property name="conn1.passwd" value="${pub.radius1.passwd}" />
	<property name="ftp_test_file_local_dir" value="/tmp" />
	<property name="ftp_test_file_remote_file" value="big_file.log" />

	<stage>
		<step no="0">
			<desc>touch a file</desc>
			<ssh host="${tb.ftp}">
				-v "rm -f ${ftp_test_file_remote_file}"
				-v "touch ${ftp_test_file_remote_file}"
			</ssh>
		</step>

		<step no="0.1">
			<desc>make sure the file larger than 4 GB</desc>
			<ssh host="${tb.ftp}" timeout="2000">
				-v "cat ${tb.ftp.file1_large} ${tb.ftp.file1_large} ${tb.ftp.file1_large} ${tb.ftp.file1_large} ${tb.ftp.file2_medium} &gt; ${ftp_test_file_remote_file}"
			</ssh>
		</step>

		<step no="1">
			<desc>Set SSID for ap1</desc>
			<telnet target="ap1">
				-v "security-object autoap"
				-v "security-object autoap default-user-profile-attr 1"
				-v "security-object autoap security protocol-suite wpa2-aes-8021x"
				-v "security-object autoap security aaa radius primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap security aaa radius-server accounting primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "user-profile normal qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "interface wif0 radio channel 1"
				-v "aaa radius-server account-interim-interval 10"
				-v "alg tftp enable"
				-v "_debug auth all"
				-v "clear log all"
			</telnet>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta2, ap1" />

		<include prefix="4" file="subs/sta_ping.xml" args="sta1, ${tb.vlan1.gw}, 50" />

		<step no="4.1" delay="10">
			<desc>show ssid xxx counter station xxx</desc>
			<log-file>step4.1_show_ssid_counter.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} counter station ${sta1.tif.mac}"
			</telnet>
			<no-error-check />
		</step>

		<step no="4.2">
			<desc>Get the second number of times in default mode</desc>
			<setvar name="received.packet.number">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4.1_show_ssid_counter.log -p "(\d+) tx data frames" -t str
			</setvar>
		</step>

		<step no="4.3">
			<desc>Get the second number of times in default mode</desc>
			<setvar name="transmit.packet.number">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4.1_show_ssid_counter.log -p "(\d+) rx data frames" -t str
			</setvar>
		</step>

		<step no="5" delay="20">
			<desc>show logging buffered</desc>
			<log-file>step5_show_logging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-i " Sending RADIUS message to accounting server ${pub.radius1.ip}"</log-match>
			<log-match>-i "RADIUS message" -i "Accounting-Response"</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "Value: \d+" -ps p1 "Value: 0" p0 "Value: 0\d+" p1 "Attribute \d+ \(Acct-Input-Gigawords\)" -e "Attribute \d+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "Value: \d+" -ps p1 "Value: 0" p0 "Value: 0\d+" p1 "Attribute \d+ \(Acct-Output-Gigawords\)" -e "Attribute \d+" -f ${log.dir}/${log.file}</log-match>
			<failed>next</failed>
		</step>

		<step no="5.1">
			<desc>Get the second number of times in default mode</desc>
			<setvar name="acct.return.transmit.packet.number">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step5_show_logging_buffered.log -b "Value:" -p "Value:\s*(\d+)" -ne -e "Value: ${sta1.tif.ip}" -t str -g-2 -s none
			</setvar>
		</step>

		<step no="5.2">
			<desc>Get the second number of times in default mode</desc>
			<setvar name="acct.return.received.packet.number">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step5_show_logging_buffered.log -b "Value:" -p "Value:\s*(\d+)" -ne -e "Value: ${sta1.tif.ip}" -t str -g-7 -s none
			</setvar>
		</step>

		<step no="5.3">
			<desc>
				check if the value of (acct.return.received.data.number-received.data.number) is between 1 to 5.
			</desc>
			<log-file>step5.3_check_result.log</log-file>
			<script>
				${bin.dir}/pyeval.py "${acct.return.transmit.packet.number} - ${transmit.packet.number} &gt;= 0 and ${acct.return.transmit.packet.number} - ${transmit.packet.number} &lt;= 10" &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "true"</log-match>
			<failed>next</failed>
		</step>

		<step no="5.4">
			<desc>
				check if the value of (acct.return.received.data.number-received.data.number) is between 1 to 1000.
			</desc>
			<log-file>step5.4_check_result.log</log-file>
			<script>
				${bin.dir}/pyeval.py "${acct.return.received.packet.number} - ${received.packet.number} &gt;= 0 and ${acct.return.received.packet.number} - ${received.packet.number} &lt;= 10" &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "true"</log-match>
			<failed>next</failed>
		</step>

		<step no="5.5">
			<desc>
				clear local file
			</desc>
			<ssh target="sta1">
				-v "rm -f ${ftp_test_file_local_dir}/${ftp_test_file_remote_file}"
				-v "rm -f ${ftp_test_file_local_dir}/step6_stdout.log"
				-v "rm -f ${ftp_test_file_local_dir}/step10_stdout.log"
			</ssh>
		</step>

		<step no="6" delay="5">
			<desc>
				download files
			</desc>
			<log-file>step6_download_file.log</log-file>
			<ssh target="sta1" timeout="500">
				-v "nohup curl -u ${tb.ftp.user}:${tb.ftp.passwd} ftp://${tb.ftp}/${ftp_test_file_remote_file} -o ${ftp_test_file_local_dir}/${ftp_test_file_remote_file} --connect-timeout 500 &gt; ${ftp_test_file_local_dir}/step6_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="7" delay="1800" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				wait for process end.
			</desc>
			<log-file>step7_curl_pid_chk_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep curl"
			</ssh>
			<log-match>-n -i "curl" -i "ftp"</log-match>
		</step>

		<step no="7.1">
			<desc>
				check "curl get" result
			</desc>
			<log-file>step7.1_check_file.log</log-file>
			<ssh target="sta1">
				-v "cat ${ftp_test_file_local_dir}/step6_stdout.log"
			</ssh>
			<log-match>-n -i "curl" -i "Connection time-out"</log-match>
			<failed>next</failed>
		</step>

		<step no="7.2">
			<desc>
				cat files
			</desc>
			<log-file>step7.2_cat_file.log</log-file>
			<ssh target="sta1" timeout="500">
				-v "ll -n ${ftp_test_file_local_dir}"
			</ssh>
			<log-match>-i "${ftp_test_file_remote_file}"</log-match>
			<failed>next</failed>
		</step>

		<step no="8" delay="10">
			<desc>show ssid xxx counter station xxx</desc>
			<log-file>step8_show_ssid_counter.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} counter station ${sta1.tif.mac}"
			</telnet>
			<no-error-check />
		</step>

		<step no="8.1">
			<desc>Get the second number of times in default mode</desc>
			<setvar name="received.packet.number.after.download">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step8_show_ssid_counter.log -p "(\d+) tx data frames" -t str
			</setvar>
		</step>

		<step no="9">
			<desc>show logging buffered</desc>
			<log-file>step9_show_logging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchblocks.py">-b "Value: \d+" -ps p1 "Value: 1" p0 "Value: 1\d+" p1 "Attribute \d+ \(Acct-Input-Gigawords\)" -e "Attribute \d+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "Value: \d+" -ps p1 "Value: 1" p "Attribute \d+ \(Acct-Input-Gigawords\)" -p "Value: ${sta1.tif.ip}" -p "Attribute \d+ \(Framed-IP-Address\)" -e "RADIUS message:" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="9.1">
			<desc>Get the second number of times in default mode</desc>
			<setvar name="acct.return.received.packet.number.after.download">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step9_show_logging_buffered.log -b "Value:" -p "Value:\s*(\d+)" -ne -e "Value: ${sta1.tif.ip}" -t str -g-7 -s none
			</setvar>
		</step>

		<step no="9.2">
			<desc>
				check if the packet increased correctly
			</desc>
			<log-file>step9.2_check_result.log</log-file>
			<script>
				${bin.dir}/pyeval.py "${acct.return.received.packet.number.after.download} - ${received.packet.number.after.download} &gt;= 0 and ${acct.return.received.packet.number.after.download} - ${received.packet.number.after.download} &lt;= 10000" &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "true"</log-match>
			<failed>next</failed>
		</step>

		<step no="9.3">
			<desc>create tftpboot dirctory</desc>
			<ssh host="${tb.ftp}">
				-v "rm -f ${ftp_test_file_remote_file}"
			</ssh>
		</step>

		<step no="10" delay="5">
			<desc>
				upload files
			</desc>
			<log-file>step10_upload_file.log</log-file>
			<ssh target="sta1" timeout="500">
				-v "nohup curl -u ${tb.ftp.user}:${tb.ftp.passwd} ftp://${tb.ftp} -T ${ftp_test_file_local_dir}/${ftp_test_file_remote_file} --connect-timeout 500 &gt; ${ftp_test_file_local_dir}/step10_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="11" delay="1800" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				wait for process end.
			</desc>
			<log-file>step11_curl_pid_chk_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep curl"
			</ssh>
			<log-match>-n -i "curl" -i "ftp"</log-match>
		</step>

		<step no="11.1">
			<desc>
				check "curl get" result
			</desc>
			<log-file>step11.1_check_file.log</log-file>
			<ssh target="sta1">
				-v "cat ${ftp_test_file_local_dir}/step10_stdout.log"
			</ssh>
			<log-match>-n -i "curl" -i "Connection time-out"</log-match>
			<failed>next</failed>
		</step>

		<step no="11.2">
			<desc>
				cat files
			</desc>
			<log-file>step11.2_cat_file.log</log-file>
			<ssh host="${tb.ftp}">
				-v "ll -n"
			</ssh>
			<log-match>-i "${ftp_test_file_remote_file}"</log-match>
			<failed>next</failed>
		</step>

		<step no="12" delay="10">
			<desc>show ssid xxx counter station xxx</desc>
			<log-file>step12_show_ssid_counter.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} counter station ${sta1.tif.mac}"
			</telnet>
			<no-error-check />
		</step>

		<step no="12.1">
			<desc>Get the second number of times in default mode</desc>
			<setvar name="transmit.packet.number.after.upload">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step12_show_ssid_counter.log -p "(\d+) rx data frames" -t str
			</setvar>
		</step>

		<step no="13">
			<desc>show logging buffered</desc>
			<log-file>step13_show_logging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchblocks.py">-b "Value: \d+" -ps p1 "Value: 1" p0 "Value: 1\d+" p1 "Attribute \d+ \(Acct-Output-Gigawords\)" -e "Attribute \d+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "Value: \d+" -ps p1 "Value: 1" p "Attribute \d+ \(Acct-Output-Gigawords\)" -p "Value: ${sta1.tif.ip}" -p "Attribute \d+ \(Framed-IP-Address\)" -e "RADIUS message:" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="14">
			<desc>Get the second number of times in default mode</desc>
			<setvar name="acct.return.transmit.packet.number.after.upload">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step13_show_logging_buffered.log -b "Value:" -p "Value:\s*(\d+)" -ne -e "Value: ${sta1.tif.ip}" -t str -g-2 -s none
			</setvar>
		</step>

		<step no="14.1">
			<desc>
				check if the packet increased correctly
			</desc>
			<log-file>step14.1_check_result.log</log-file>
			<script>
				${bin.dir}/pyeval.py "${acct.return.transmit.packet.number.after.upload} - ${transmit.packet.number.after.upload} &gt;= 0 and ${acct.return.transmit.packet.number.after.upload} - ${transmit.packet.number.after.upload} &lt;= 10000" &gt; ${log.dir}/${log.file}
			</script>
			<log-match>-c -i "true"</log-match>
			<failed>next</failed>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					delete local files
				</desc>
				<ssh target="sta1">
					-v "killall -q curl"
					-v "rm -f ${ftp_test_file_local_dir}/${ftp_test_file_remote_file}"
					-v "rm -f ${ftp_test_file_local_dir}/step6_stdout.log"
					-v "rm -f ${ftp_test_file_local_dir}/step10_stdout.log"
				</ssh>
			</step>

			<step no="1">
				<desc>delete remote files</desc>
				<ssh host="${tb.ftp}">
					-v "rm -f ${ftp_test_file_remote_file}"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>