<testcase>
	<brief>Redirect option in user profile</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<description>Redirect for one user-profile</description>
	
	<property name="UPID_X" value="1000" />
	<property name="UPID_Y" value="2000" />
	<property name="VLANID_X" value="${tb.vlan2}" />
	<property name="VLANID_Y" value="${tb.vlan3}" />
	<property name="Hive_Name" value="redirect_test" />
	
	<property name="Access_URL" value="www.baidu.com" />
	<property name="Redirect_URL" value="dinner.aerohive.com" />
	
<stage>
		<step no="1">
			<desc>setup ssid and 802.1x on AP1</desc>
			<ssh target="ap1">
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa2-aes-8021x"
				-v "security-object autoap security aaa radius primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap security aaa radius-server accounting primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
		        -v "security-object autoap default-user-profile-attr ${UPID_X} "			
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "hive ${Hive_Name}"
				-v "interface  mgt0 hive  ${Hive_Name}"
				-v "save config"
			</ssh>
		</step>
		
		<step no="2">
			<desc>config two user-profiles</desc>
			<ssh target="ap1">
				-v "user-profile redirect-zyj qos-policy def-user-qos vlan-id ${VLANID_X} attribute ${UPID_X}"
				-v "user-profile default-zyj  qos-policy def-user-qos vlan-id ${VLANID_Y} attribute ${UPID_Y}"
			</ssh>
		</step>
		
		<step no="3">
			<desc>config redirect on AP</desc>
			<ssh target="ap1">
				-v "user-profile redirect-zyj ip-policy-redirect-url http://${Redirect_URL}"
				-v "ip-policy Redirect-Only "
				-v "ip-policy Redirect-Only id 1023 from 0.0.0.0 0.0.0.0 to ${Redirect_URL} service any action permit"
				-v "ip-policy Redirect-Only id 1 from 0.0.0.0 0.0.0.0 to 0.0.0.0 0.0.0.0 service DHCP-Server action permit"
				-v "ip-policy Redirect-Only id 2 from 0.0.0.0 0.0.0.0 to 0.0.0.0 0.0.0.0 service DHCP-Client action permit"
				-v "ip-policy Redirect-Only id 3 from 0.0.0.0 0.0.0.0 to 0.0.0.0 0.0.0.0 service DNS action permit"
				-v "ip-policy Redirect-Only id 4 from 0.0.0.0 0.0.0.0 to 0.0.0.0 0.0.0.0 service HTTP action redirect"
				-v "ip-policy Redirect-Only id 5 from 0.0.0.0 0.0.0.0 to 0.0.0.0 0.0.0.0 service HTTPS action redirect"
				-v "user-profile redirect-zyj security ip-policy from-access Redirect-Only to-access Redirect-Only"
			</ssh>
		</step>
		
		<!-- ********************************************************************** -->
		<property name="conn1.proto" value="wpa2-aes-8021x" />
		<step no="pre4.1">
			<desc>set username</desc>
			<setvar name="conn1.username">
				echo "${pub.radius1.username}"
			</setvar>
		</step>
		<step no="pre4.2">
			<desc>set password</desc>
			<setvar name="conn1.passwd">
				echo "${pub.radius1.passwd}"
			</setvar>
		</step>
		<include prefix="4" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn1, sta1, ap1" args="1" />
		
		
		<step no="5">
			<desc>show station and check the client's UPID and vlanID</desc>
			<log-file>show_station.log</log-file>
			<ssh target="ap1">
				-v "show ssid ${ssid.name} station"
			</ssh>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}" -i "${VLANID_X}" -i "${UPID_X}"</log-match>
		</step>
		
		
		
		<!-- ***************linux client use http to open a web page, check that the page is redirected successfully************** -->
		
		<step no="6">
			<desc>linux client use http to open a web page, check that the page is redirected successfully.</desc>
			<log-file>redirect_1.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "route add 10.155.50.65/32 gw ${tb.vlan2.gw} dev ${sta1.tif.name}"
				-v "curl -v -L http://${Access_URL}"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)url=http://${Redirect_URL}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Redirection" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Redirecting your browser to http://${Redirect_URL}" -f ${log.dir}/${log.file}</log-match>
		</step>	
		
		<step no="7">
			<desc>linux client open the redirected web page.</desc>
			<log-file>redirect_2.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "curl -v -L http://${Redirect_URL}"
				-v "sleep 5"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Host: ${Redirect_URL}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Accept: */*" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Connection #0 to host ${Redirect_URL} left intact" -f ${log.dir}/${log.file}</log-match>
		</step>	
		
		
		<!-- ***************linux client use https to open a web page, check that the page is redirected successfully************** -->
		
		<step no="8">
			<desc>linux client use https to open a web page, check that the page is redirected successfully.</desc>
			<log-file>redirect_3.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "route add 10.155.39.202/32 gw ${tb.vlan2.gw} dev ${sta1.tif.name}"
				-v "curl -k -v -L https://10.155.39.202"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)url=http://${Redirect_URL}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Redirection" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Redirecting your browser to http://${Redirect_URL}" -f ${log.dir}/${log.file}</log-match>
		</step>	
		
		<step no="9">
			<desc>linux client open the redirected web page.</desc>
			<log-file>redirect_4.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "curl -v -L http://${Redirect_URL}"
				-v "sleep 5"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Host: ${Redirect_URL}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Accept: */*" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Connection #0 to host ${Redirect_URL} left intact" -f ${log.dir}/${log.file}</log-match>
		</step>	
		
		
		<!-- ***************change the default-user-profile-attr************** -->
		
		<step no="10">
			<desc>change the default-user-profile-attr</desc>
			<ssh target="ap1">
		        -v "security-object autoap default-user-profile-attr ${UPID_Y}"			
			</ssh>
		</step>
		
		<include prefix="11" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn1, sta1, ap1" args="1" />
		
		<!-- <step no="12">
			<desc>get wireless IP from station</desc>
			<setvar name="sta1.tif.ip"> ${bin.dir}/getinfo_ip.py -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -v 'ip' </setvar>
		</step>
		 -->
		
		<step no="13">
			<desc>show station and check the client's UPID and vlanID</desc>
			<log-file>show_station.log</log-file>
			<ssh target="ap1">
				-v "show ssid ${ssid.name} station"
			</ssh>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}" -i "${VLANID_Y}" -i "${UPID_Y}"</log-match>
		</step>
		
		
		<!-- ********************linux client open a web page, check that the page will not be redirected.************************ -->
		<step no="14">
			<desc>linux client open a web page, check that the page will not be redirected.</desc>
			<log-file>redirect_4.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "curl -k -v -L https://10.155.39.202"
				-v "sleep 5"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Accept: */*" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Connection #0 to host 10.155.39.202 left intact" -f ${log.dir}/${log.file}</log-match>
		</step>	
		
		
		<!--*********************  clear configuration ***********************-->
		<step no="15">
			<desc>clear configuration</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "route del 10.155.39.202/32 gw ${tb.vlan2.gw} dev ${sta1.tif.name}"
				-v "route add 10.155.50.65/32 gw ${tb.vlan2.gw} dev ${sta1.tif.name}"
			</ssh>
		</step>	
		
		
	</stage>
</testcase>
		