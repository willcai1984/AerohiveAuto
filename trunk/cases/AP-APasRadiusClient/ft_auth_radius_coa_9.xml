<testcase>
	<brief>UPID reassign via COA packet</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<description>UPID reassign via COA packet</description>
	
	
	<property name="UPID_X" value="1000" />
	<property name="UPID_Y" value="2000" />

	<stage>
		<step no="0.1">
			<desc>get sta1's mac </desc>
			<setvar name="sta1.auth_mac">
				echo "${sta1.tif.smac}" | tr '[A-Z]' '[a-z]'
			</setvar>
		</step>
		
		<!-- config account(username and password) on radius server -->
		<include prefix="0.2" file="subs/ldap_add.xml" args="${sta1.auth_mac}, ${sta1.auth_mac}" />
		
		
		<step no="1">
			<desc>setup ssid and mac-auth on AP1</desc>
			<telnet target="ap1">
				-v "security-object autoap"
				-v "security-object autoap security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap security additional-auth-method mac-based-auth"
				-v "security-object autoap security aaa radius-server dynamic-auth-extension"
				-v "security-object autoap default-user-profile-attr ${UPID_X} "			
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "save config"
			</telnet>
		</step>
		
		<step no="2">
			<desc>config two user-profiles, UPID x and y are binded to same vlan</desc>
			<telnet target="ap1">
				-v "user-profile x qos-policy def-user-qos vlan-id ${tb.vlan2} attribute ${UPID_X}"
				-v "user-profile y qos-policy def-user-qos vlan-id ${tb.vlan2} attribute ${UPID_Y}"
			</telnet>
		</step>


		<step no="3">
			<desc>show protocol suite</desc>
			<log-file>show_proto.log</log-file>
			<telnet target="ap1">
				-v "show security- autoap security protocol-suite"
			</telnet>
			<log-match>-e "Method=open"</log-match>
		</step>
		
		<step no="4">
			<log-file>show_security_object.log</log-file>
			<telnet target="ap1">
				-v "show security- autoap"
			</telnet>
			<log-match>-e "Enabled" -i "MAC-based auth" -p 3</log-match>
		</step>
		
		<step no="5">
			<desc>show ssid</desc>
			<log-file>show_ssid.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name}"
			</telnet>
			<log-match>-e "autoap"</log-match>
		</step>
		
		
		<include prefix="6" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn1, sta1, ap1" args="1" />
		
		
		<step no="7">
			<desc>show station and check the client's UPID is UPID_X</desc>
			<log-file>show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}" -i "${UPID_X}"</log-match>
		</step>
		
		
		
	<!--************************** Send Coa Packet **************************-->
		<step no="pre8.1">
			<desc>get mac from client with five dash</desc>
			<setvar name="sta1.tif.mac_5dash">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m -dash -uppercase
			</setvar>
		</step>
		
		<step no="pre8.2">
			<desc>show intface on wifi0</desc>
			<log-file>show_interface.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0.1"
			</telnet>
		</step>
		
		<step no="pre8.3">
			<desc>get mac from bssid of wifi0.1</desc>
			<setvar name="ssid.wifi0.bssid">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface.log -o aero -i wifi0.1 -m -dash -uppercase
			</setvar>
		</step>
		
		<step no="pre8.4">
			<desc>get mac from bssid of wifi0.1</desc>
			<setvar name="ap.wifi0.bssid">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface.log -o aero -i wifi0.1 -m -width
			</setvar>
		</step>
		
		<step no="pre8.5">
			<desc>enable auth debug to check COA</desc>
			<telnet target="ap1">
				-v "_debug auth all"
				-v "clear log buffered"
			</telnet>
		</step>
		
		<step no="8">
			<desc>send CoA packet with UPID_Y by using free radius</desc>
			<log-file>coa_upid_y.log</log-file>
			<ssh host="${pub.radius1.ip}" prompt=".*#">
				-v "echo -e \"Calling-Station-Id=${sta1.tif.mac_5dash}\\nCalled-Station-Id=${ssid.wifi0.bssid}:${ssid.name}\\nNAS-IP-Address=${ap1.mgt0.ip}\\nTunnel-Type:0=10\nTunnel-Medium-Type:0=1\\nTunnel-Private-Group-ID:0=${UPID_Y}\" | radclient -x ${ap1.mgt0.ip}:3799 coa aerohive"
			</ssh>
			<log-match>-e "CoA-ACK"</log-match>
		</step>
		
		<step no="9">
		
			<desc>check debug on AP</desc>
			<log-file>show_buffer.log</log-file>
			<telnet target="ap1">
				-v "show logg buff"
			</telnet>
			<no-error-check />
		</step>

		
		<step no="10.1">
			<desc>extract a piece of log</desc>
			<script>
				tac ${log.dir}/show_buffer.log |sed -n '/Received a CoA request from radius server/,/Send a CoA-Ack message to ${pub.radius1.ip}/I'p > ${log.dir}/coa_ap.log
			</script>
		</step>
		<step no="10.2">
			<desc>check the COA process on AP</desc>
			<log-file>coa_ap.log</log-file>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Received a CoA request from radius server ${pub.radius1.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)event is sent to AMRP: event=join SPA=${sta1.tif.mac} AA=${ap.wifi0.bssid} .* uid=${UPID_Y} vlan=${tb.vlan2} flag=0:hit" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)Send a CoA-Ack message to ${pub.radius1.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>
		
		<step no="11">
			<desc>show station and check the client's UPID is UPID_Y</desc>
			<log-file>show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${sta1.tif.ip}" -i "${UPID_Y}"</log-match>
		</step>
		
		<step no="12">
			<desc>Ping from station to master Server </desc>
			<log-file>pingmaster_${mpc.tif.ip}.log</log-file>
			<ssh target="sta1">
				-v "ping ${mpc.tif.ip} -c 4"
			</ssh>
			<log-match>-i "from ${mpc.tif.ip}" -i "ttl="</log-match>
		</step>
	
		
	
	</stage>
	
	<post-process>
		<stage>
			<include prefix="0.3" file="subs/ldap_delete.xml" args="${sta1.auth_mac}" />
		</stage>

		<include prefix="def_post" file="include/default_post_process.xml" />
	</post-process>
	
</testcase>