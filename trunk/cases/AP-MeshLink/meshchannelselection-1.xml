<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Portal Ap work in dual mode,check the channel selection.</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Initial configuration:
		"hive acsp"
		"interface mgt0 hive acsp"
		"radio profile na"
		"radio profile na phymode 11na"
		"interface wifi1 radio profile na"
		"radio profile ng"
		"radio profile ng phymode 11ng"
		"interface wifi0 radio profile ng"

		Test Procedure:
		1.Set wifi1 to dual mode,wifi0 to access mode,then shutdown wifi1.
		"interface wifi1 mode dual"
		"interface wifi0 mode access"
		"interface wifi1 hive acsp shutdown"
		2.open debug mode.
		"_debug dcd chnl"
		"debug console"
		3.check wifi1's channel.save in channel list {ch}.
		"show interface wifi1 channel"
		4. Up interface wifi1,then it will scan wifi1's channel,the channel is same with
		channel list {ch},after selcect the lowest cost channel,it will skip listen state to run
		state immediately."LISTEN state" only appear once.it is in the debug information
		printed on screen.
		"no interface wifi1 hive acsp shutdown"
		5.Set wifi0 to dual mode,wifi1 to access mode,then shutdown wifi0.
		"interface wifi0 mode dual"
		"interface wifi1 mode access"
		"interface wifi0
		hive acsp shutdown"
		6.open debug mode.
		"_debug dcd chnl"
		"debug console"
		7. Up interface wifi0,then it will scan wifi0’s channel,the channel list is 1-6-11 
		on US(1-5-9-13 on Europe),after selcect the lowest cost channel.it is in the debug 
		information printed on screen.
		"no interface wifi1 hive acsp shutdown"
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="1">
			<desc>
				1.Initial configuration:
				"ssid ${ssid.name}"
				"interface wifi0 ssid xxx"
				"hive acsp"
				"interface mgt0 hive acsp"
				"radio profile na"
				"radio profile na phymode 11na"
				"interface wifi1 radio profile na"
				"radio profile ng"
				"radio profile ng phymode 11ng"
				"interface wifi0 radio profile ng"
			</desc>
			<log-file>step1_config_wifi0_wifi1.log</log-file>
			<console target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "radio profile na"
				-v "radio profile na phymode 11na"
				-v "interface wifi1 radio profile na"
				-v "radio profile ng"
				-v "radio profile ng phymode 11ng"
				-v "interface wifi0 radio profile ng"
			</console>
		</step>

		<step no="1.1">
			<desc>
				1.1.Set wifi1 to dual mode,wifi0 to access mode,then shutdown wifi1.
				"interface wifi1 mode dual"
				"interface wifi0 mode access"
				"interface wifi1 hive acsp shutdown"
			</desc>
			<log-file>step1.1_interface_wifi0_access_wifi1dual.log</log-file>
			<console target="ap1">
				-v "interface wifi1 mode dual"
				-v "interface wifi0 mode access"
				-v "interface wifi1 hive ${hive.name} shutdown"
			</console>
		</step>

		<step no="2">
			<desc>
				2.open debug mode.
				"_debug dcd chnl"
				"logging debug"
				"clear log all"
			</desc>
			<log-file>step2_open_debug_mode.log</log-file>
			<console target="ap1">
				-v "_debug dcd chnl"
				-v "logging debug"
				-v "clear log all"
			</console>
		</step>

		<step no="3">
			<desc>
				3.check wifi1's channel.save in channel list {ch}.
				"show interface wifi1 channel"
			</desc>
			<log-file>step3_show_interface_wifi1_channel.log</log-file>
			<console target="ap1">
				-v "show interface wifi1 channel"
			</console>
		</step>

		<step no="4">
			<desc>
				4.Up interface wifi1,then it will scan wifi1's channel,the channel is same with
				channel list {ch},after selcect the lowest cost channel,it will skip listen state to run
				state immediately."LISTEN state" only appear once.it is in the debug information
				printed on screen.
				"no interface wifi1 hive acsp shutdown"
			</desc>
			<console target="ap1">
				-v "no interface wifi1 hive ${hive.name} shutdown"
			</console>
		</step>

		<!--  
		<step no="4.1" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show acsp channel-info
			</desc>
			<log-file>step4.1show_acsp_ch.log</log-file>
			<console target="ap1">
				-v "show acsp channel-info"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "wifi1" -p "State:\s+RUN" -e "State:\s+RUN" -f ${log.dir}/${log.file}</log-match>
		</step>
		-->
		<step no="4.1" delay="120">
			<desc>
				show acsp channel-info
			</desc>
			<log-file>step4.1show_acsp_ch.log</log-file>
			<console target="ap1">
				-v "show acsp channel-info"
			</console>
			<log-match>-e "Channel *36 *Cost *:"</log-match> 
			<log-match>-e "Channel *40 *Cost *:"</log-match>
			<log-match>-e "Channel *44 *Cost *:"</log-match>
			<log-match>-e "Channel *48 *Cost *:"</log-match>
			<log-match>-e "Channel *149 *Cost *:"</log-match>
			<log-match>-e "Channel *153 *Cost *:"</log-match>
			<log-match>-e "Channel *157 *Cost *:"</log-match>
			<log-match>-e "Channel *161 *Cost *:"</log-match>	
			<log-match>-e "Channel *165 *Cost *:"</log-match>
		</step>		

		<step no="4.2">
			<if>"${img.prodtype}" != "AP230" &amp;&amp; "${img.prodtype}" == "AP1130"</if>
			<desc>
				4.2."show logging debug"
			</desc>
			<log-file>step4.2_show_log_debug.log</log-file>
			<console target="ap1">
				-v "show logging debug | include collecting"
			</console>
			<log-match>-re -e "wifi1.*collecting raw data for channel\(36\)"</log-match>
			<log-match>-re -e "wifi1.*collecting raw data for channel\(40\)"</log-match>
			<log-match>-re -e "wifi1.*collecting raw data for channel\(44\)"</log-match>
			<log-match>-re -e "wifi1.*collecting raw data for channel\(48\)"</log-match>
			<log-match>-re -e "wifi1.*collecting raw data for channel\(149\)"</log-match>
			<log-match>-re -e "wifi1.*collecting raw data for channel\(153\)"</log-match>
			<log-match>-re -e "wifi1.*collecting raw data for channel\(157\)"</log-match>
			<log-match>-re -e "wifi1.*collecting raw data for channel\(161\)"</log-match>
			<log-match>-re -e "wifi1.*collecting raw data for channel\(165\)"</log-match>
			<no-error-check />
		</step>

		<!--  
		<step no="4.3">
			<desc>
				checking the channel is same with channel list {ch},
			</desc>
			<log-file>step4.3_check_channel_list.log</log-file>
			<script>
				perl ${case.dir}/bin/CompareChannel.pl ${log.dir}/step3_show_interface_wifi1_channel.log ${log.dir}/step4.2_show_log_debug.log wifi1 > ${log.dir}/${log.file}
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>
		-->

		<step no="4.4" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show logging debug
			</desc>
			<log-file>step4.4_show_logging_debug.log</log-file>
			<console target="ap1">
				-v "show logging debug"
			</console>
			<no-error-check />
			<log-match>-c -e "wifi1" -i "find channel:"</log-match>
		</step>

		<step no="4.5">
			<desc>
				get find channel
			</desc>
			<setvar name="find_channel_1">
				${bin.dir}/getbyrexp.py -p "wifi1.*\s+find\s+channel: (\d+)," -f ${log.dir}/step4.4_show_logging_debug.log -t str
			</setvar>
		</step>

		<step no="4.6" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				check wifi1 lowest cost channel
			</desc>
			<log-file>step4.6_check_lowest_cost_channel_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show acsp channel-info"
			</console>
			<log-match>-c -e "Lowest cost channel: ${find_channel_1}"</log-match>
		</step>
		
		<!--  //Start from HOS_6.1r6, listen state will appear for many times. 
		<step no="4.7" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				4.4.it will skip listen state to run
				state immediately."LISTEN state" only appear once.
				"show logging debug"
			</desc>
			<log-file>step4.7_show_logging_debug_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show logging debug"
			</console>
			<no-error-check />
			<log-match>-c -e "wifi1" -i "RUN\ state"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "wifi1.*\s+LISTEN\s+state " -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>
		-->

		<step no="5">
			<desc>
				5.Set wifi0 to dual mode,wifi1 to access mode.
				"no interface wifi0 ssid xxx"
				"interface wifi0 mode dual"
				"interface wifi1 mode access"
				"interface wifi1 ssid xxx"
			</desc>
			<console target="ap1">
				-v "no interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 mode dual"
				-v "interface wifi1 mode access"
				-v "interface wifi1 ssid ${ssid.name}"
			</console>
		</step>

		<step no="5.1" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show acsp channel-info
			</desc>
			<log-file>step5.1_show_acsp_ch_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show acsp"
				-v "show acsp channel-info"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "wifi0" -p "State:\s+RUN" -e "State:\s+RUN" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6">
			<desc>
				then shutdown wifi0
				clear log
			</desc>
			<log-file>step6_open_debug_mode.log</log-file>
			<console target="ap1">
				-v "interface wifi0 hive ${hive.name} shutdown"
				-v "clear log all"
			</console>
		</step>

		<step no="7">
			<desc>
				7.check wifi0's channel.save in channel list {ch}.
				"show interface wifi0 channel"
			</desc>
			<log-file>step7_show_interface_wifi0_channel.log</log-file>
			<console target="ap1">
				-v "show interface wifi0 channel"
			</console>
		</step>

		<step no="8">
			<desc>
				8. Up interface wifi0,then it will scan wifi0’s channel,the channel list is 1-6-11 
				on US(1-5-9-13 on Europe),after selcect the lowest cost channel.it is in the debug 
				information printed on screen.
				"no interface wifi0 hive acsp shutdown"
			</desc>
			<console target="ap1">
				-v "no interface wifi0 hive ${hive.name} shutdown"
			</console>
		</step>
		
		<!-- //Start from HOS_6.1r6, reduce channels to scan in 2.4GHz band by default 
		<step no="8.1" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show acsp channel-info
			</desc>
			<log-file>step_8.1show_acsp_ch.log</log-file>
			<console target="ap1">
				-v "show acsp channel-info"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)State: RUN" -c 2 -f ${log.dir}/${log.file}</log-match>
		</step>
		-->
		<step no="8.1" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show acsp channel-info
			</desc>
			<log-file>step_8.1show_acsp_ch.log</log-file>
			<console target="ap1">
				-v "show acsp channel-info"
			</console>
			<log-match>-e "Channel *1 *Cost *:"</log-match> 
			<log-match>-e "Channel *6 *Cost *:"</log-match>
			<log-match>-e "Channel *11 *Cost *:"</log-match>
			<log-match>-n -e "Channel *12 *Cost *:"</log-match>
			<log-match>-n -e "Channel *13 *Cost *:"</log-match>
		</step>
		
		
		<step no="8.2">
			<if>"${img.prodtype}" != "AP230" &amp;&amp; "${img.prodtype}" == "AP1130"</if>
			<desc>
				8.2. "show logging buf"
			</desc>
			<log-file>step8.2_show_log_debug.log</log-file>
			<console target="ap1">
				-v "show logging debug | include collecting"
			</console>
			<log-match>-re -e "wifi0.*collecting raw data for channel\(1\)"</log-match>
			<log-match>-re -e "wifi0.*collecting raw data for channel\(6\)"</log-match>
			<log-match>-re -e "wifi0.*collecting raw data for channel\(11\)"</log-match>
			<no-error-check />
		</step>

		<!--  
		<step no="8.3">
			<desc>
				checking the channel is same with channel list {ch},
			</desc>
			<log-file>step8.3_check_channel_list.log</log-file>
			<script>
				perl ${case.dir}/bin/CompareChannel.pl ${log.dir}/step7_show_interface_wifi0_channel.log ${log.dir}/step8.2_show_log_debug.log wifi0 > ${log.dir}/${log.file}
			</script>
			<log-match>-e "SUCCESS"</log-match>
		</step>
		-->

		<step no="8.4" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				8.4. it will skip listen state to run state immediately."LISTEN state" only appear once.
				it is in the debug information printed on screen.
				"show logging debug"
			</desc>
			<log-file>step8.4_show_logging_debug.log</log-file>
			<console target="ap1">
				-v "show logging debug"
			</console>
			<no-error-check />
			<log-match>-c -e "wifi0" -i "find channel:"</log-match>
		</step>

		<step no="8.5">
			<desc>
				get find channel
			</desc>
			<setvar name="find_channel_2">
				${bin.dir}/getbyrexp.py -p "wifi0.*\s+find\s+channel: (\d+)," -f ${log.dir}/step8.4_show_logging_debug.log -t str
			</setvar>
		</step>

		<step no="8.6" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				check wifi0 lowest cost channel
			</desc>
			<log-file>step8.6_check_lowest_cost_channel_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show acsp channel-info"
			</console>
			<log-match>-c -e "Lowest cost channel: ${find_channel_2}"</log-match>
		</step>
		
		<!-- //Start from HOS_6.1r6, listen state will appear for many times. 
		<step no="8.7" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				8.7. it will skip listen state to run state immediately."LISTEN state" only appear once.
				it is in the debug information printed on screen.
				"show logging debug"
			</desc>
			<log-file>step8.7_show_logging_debug_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show logging debug"
			</console>
			<no-error-check />
			<log-match>-c -e "wifi0" -i "RUN state"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "wifi0.*\s+LISTEN\s+state " -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>
		-->
	</stage>
</testcase>