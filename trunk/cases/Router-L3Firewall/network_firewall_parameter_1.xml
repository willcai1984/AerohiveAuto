<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Network firewall "From" VPN test</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Configure AP1
		Enable tunnel1 between AP1 and Gateway1
		Enable 1 dhcp server（mgt0.1）
		Mgt0.1 vlan10 IPaddr 10.1.10.1 gateway 10.1.10.1
		Laptop1 connect to Mgt0.1 IPaddr 10.1.10.2 (wifi)
		-Configure AP2
		Enable tunnel2 between AP2 and Gateway1
		Enable 1 dhcp server（mgt0.1）
		Mgt0.1 vlan10 IPaddr 20.1.10.1 gateway 20.1.10.1
		Laptop2 connect to Mgt0.1 IPaddr 20.1.10.2 (wifi)

		Test Procedure:
		1) Laptop2 and Laptop3 ping Laptop1
		2) Configure network firewall rule
		"network-firewall name 1001 from vpn to network 10.1.10.2 255.255.255.255
		action permit logging on"
		"network-firewall name 1002 from any to any action deny logging on"
		3) Laptop2 and Laptop3 ping Laptop1
		4) Delete network firewall config on AP1
		"no network-firewall"
		5) Laptop2 and Laptop3 ping Laptop1
		6) Configure network firewall rule on AP1
		"network-firewall name 1001 from vpn to network 10.1.10.2 255.255.255.255
		action deny logging on"
		"network-firewall name 1002 from any to any action deny logging on"
		7) Laptop2 and Laptop3 ping
		Laptop1
		8) Delete network firewall config on AP1
		"no network-firewall"
		9) Laptop2 and Laptop3 ping Laptop1
	</description>
	<numofbr>2</numofbr>
	<numofcvg>1</numofcvg>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>winlin</tbtype>
		
	<property name="br1.br.nat.ip" value="${pub.br_fw.ip}" />
	<property name="br1.mgt0.1.vlan" value="${br1.vpc1.vlan}" />
	<property name="br1.vpc1.netmask" value="255.255.255.0" />

	<stage>
		<step no="1">
			<desc>
				config CVG with WAN interface, nat disable
			</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="3">
				-v "interface eth0 mode wan"
				-v "no interface eth0 mode wan nat"
				-v "no interface mgt0 dhcp client"
				-v "no interface eth0 dhcp client"
				-v "interface eth0 ip ${cvg1.cvg.wan.ip}/${cvg1.cvg.wan.netmask}"
				-v "interface mgt0 ip ${cvg1.cvg.mgt0.ip}/${cvg1.cvg.mgt0.netmask}"
				-v "ip route default gateway ${cvg1.cvg.wan.gateway}"
				-v "exec bypass-wan-hardening"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				config CVG lan if it has two arm
			</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="3">
				-v "interface eth1 mode wan"
				-v "no interface eth1 mode wan nat"
				-v "no interface eth1 dhcp client"
				-v "interface eth1 ip ${cvg1.cvg.lan.ip}/${cvg1.cvg.wan.netmask}"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				config CVG act as l3 VPN server
			</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="3">
				-v "save vpn ee-cert tftp://${pub.tftp1.tip}:certs/server_cert.pem"
				-v "save vpn private-key tftp://${pub.tftp1.tip}:certs/server_key.pem"
				-v "vpn xauth-client-list ${hive.name}_List local"
				-v "vpn xauth-client-list ${hive.name}_List client-name ${br1.br.name} password aerohive"
				-v "vpn server-ipsec-tunnel ${hive.name}_Server vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${hive.name}_Server client-list ${hive.name}_List"
				-v "vpn tunnel-policy vpn_tunnel_policy server ipsec-tunnel ${hive.name}_Server"
				-v "routing internal-sub-network ${br1.br.mgt0.ip}/${br.mgt0.supermask}"
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${br.mgt0.supermask}"
				-v "routing internal-sub-network ${br2.br.mgt0.ip}/${br.mgt0.supermask}"
				-v "routing internal-sub-network ${br1.br.mgt0.2.ip}/${br.mgt0.supermask}"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				enable ospf on CVG eth0
			</desc>
			<if>"${cvg1.cvg.arm_type}" == "one"</if>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="3">
				-v "routing protocol ospf advertise eth0"
				-v "routing protocol ospf router-id ${cvg1.cvg.wan.ip}"
				-v "routing protocol type ospf"
				-v "routing protocol enable"
			</telnet>
		</step>

		<step no="1.4">
			<desc>
				enable ospf on CVG eth1
			</desc>
			<if>"${cvg1.cvg.arm_type}" == "two"</if>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="3">
				-v "routing protocol ospf advertise eth1"
				-v "routing protocol ospf router-id ${cvg1.cvg.lan.ip}"
				-v "routing protocol type ospf"
				-v "routing protocol enable"
			</telnet>
		</step>

		<step no="2">
			<desc>
				config BR with WAN interface, nat enable
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "no interface mgt0 dhcp client"
				-v "no interface mgt0 dhcp-server enable"
				-v "interface mgt0 ip ${br1.br.mgt0.ip}/${cvg1.cvg.wan.netmask}"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				config mgt0.1 with dhcp service enable
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.mgt0.1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${cvg1.cvg.wan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				Set interface eth0 to wan mode,eth1/eth2 to access mode and enable mac-learning
			</desc>
			<telnet target="${br1.br.wan.ip}">
			        -v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"				
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "interface eth1 mac-learning enable"				
			</telnet>
		</step>
		
		<step no="2.3">
			<desc>br1.vpc1 get ip addr from dhcp server of mgt0.1</desc>
			<log-file>ifconfig_br1_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>
		
		<step no="2.4">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.3">
			<desc>
				config BR as l3 VPN client
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "save vpn ca-cert tftp://${pub.tftp1.tip}:certs/cacert.pem"
				-v "vpn client-ipsec-tunnel ${br1.br.name}_client_ipsec_1 vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${br1.br.name}_client_ipsec_1 gateway ${cvg1.cvg.mip.ip} client-name ${br1.br.name} password aerohive"
				-v "vpn tunnel-policy vpn_tunnel_policy client ipsec-tunnel ${br1.br.name}_client_ipsec_1 primary"
				-v "routing route-request enable"
				-v "routing internal-sub-network ${br1.br.mgt0.ip}/${br.mgt0.supermask}"
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${cvg1.cvg.wan.netmask}"
			</telnet>
		</step>

		<step no="3">
			<desc>
				config BR with WAN interface, nat enable
			</desc>
			<telnet target="${br2.br.wan.ip}">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "no interface mgt0 dhcp client"
				-v "no interface mgt0 dhcp-server enable"
				-v "interface mgt0 ip ${br2.br.mgt0.ip}/${cvg1.cvg.wan.netmask}";exit 0
			</telnet>
			<no-error-check />
		</step>

		<step no="3.1">
			<desc>
				config mgt0.2 with dhcp service enable
			</desc>
			<telnet target="${br2.br.wan.ip}">
				-v "interface mgt0.2 vlan ${br1.mgt0.1.vlan}"
				-v "interface mgt0.2 ip ${br1.br.mgt0.2.ip}/${cvg1.cvg.wan.netmask}"
				-v "interface mgt0.2 dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface mgt0.2 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.2 dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface mgt0.2 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.2 dhcp-server enable"
			</telnet>
		</step>

		<step no="3.2">
			<desc>
				Set interface eth0 to wan mode,eth1/eth2 to access mode and enable mac-learning
			</desc>
			<telnet target="${br2.br.wan.ip}">
			        -v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"				
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "interface eth1 mac-learning enable"				
			</telnet>
		</step>
		
		<step no="3.3">
			<desc>br2.vpc1 get ip addr from dhcp server of mgt0.2</desc>
			<log-file>ifconfig_br2_vpc1_.log</log-file>
			<ssh target="br2.vpc1" timeout="120">
				-v "dhclient ${br2.vpc1.tif.name}"
				-v "ifconfig ${br2.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>
		
		<step no="3.4">
			<desc>set br2.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br2.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br2.vpc1.mif.ip} -u ${br2.vpc1.user} -p ${br2.vpc1.passwd} -i ${br2.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="3.5">
			<desc>
				config BR as l3 VPN client
			</desc>
			<telnet target="${br2.br.wan.ip}">
				-v "save vpn ca-cert tftp://${pub.tftp1.tip}:certs/cacert.pem"
				-v "vpn client-ipsec-tunnel ${br1.br.name}_client_ipsec_1 vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${br1.br.name}_client_ipsec_1 gateway ${cvg1.cvg.mip.ip} client-name ${br1.br.name} password aerohive"
				-v "vpn tunnel-policy vpn_tunnel_policy client ipsec-tunnel ${br1.br.name}_client_ipsec_1 primary"
				-v "routing route-request enable"
				-v "routing internal-sub-network ${br2.br.mgt0.ip}/${br.mgt0.supermask}"
				-v "routing internal-sub-network ${br1.br.mgt0.2.ip}/${cvg1.cvg.wan.netmask}"
			</telnet>
		</step>

		<step no="4" delay="20" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>
				check vpn ike sa on BR1 side
			</desc>
			<log-file>step4_ike_sa_br_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.mip.ip}\[4500\]"</log-match>
			<no-error-check />
		</step>

		<step no="4.1" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>
				check vpn ike sa on BR2 side
			</desc>
			<log-file>step4.1_ike_sa_br_${loop_check.idx}.log</log-file>
			<telnet target="${br2.br.wan.ip}">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.mip.ip}\[4500\]"</log-match>
			<no-error-check />
		</step>

		<step no="4.2" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>
				check vpn ike sa on CVG side
			</desc>
			<log-file>step4.2_ike_sa_cvg_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="3">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "R" -i "${br1.br.nat.ip}"</log-match>
			<no-error-check />
		</step>

		<step no="4.3">
			<desc>
				check gre tunnel on br1 side
			</desc>
			<log-file>step4.3_show_gre_tunnel_br.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "${cvg1.cvg.wan.ip}" -p 4 -i "${br1.br.mgt0.ip}" -p 6 -i "${cvg1.cvg.mip.ip}"</log-match>
			<no-error-check />
		</step>

		<step no="4.4">
			<desc>
				check gre tunnel on br2 side
			</desc>
			<log-file>step4.4_show_gre_tunnel_br.log</log-file>
			<telnet target="${br2.br.wan.ip}">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "${cvg1.cvg.wan.ip}" -p 4 -i "${br2.br.mgt0.ip}" -p 6 -i "${cvg1.cvg.mip.ip}"</log-match>
			<no-error-check />
		</step>

		<step no="4.5">
			<desc>
				check gre tunnel on cvg side
			</desc>
			<log-file>step4.5_show_gre_tunnel_cvg.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="3">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "any" -p 4 -i "${cvg1.cvg.wan.ip}" -p 6 -i "anonymous"</log-match>
			<no-error-check />
		</step>		

		<step no="5" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				vpc ping Laptop1
			</desc>
			<log-file>step5_vpc_ping_Laptop1_${loop_check.idx}.log</log-file>
			<ssh host="${cvg1.vpc1.mif.ip}">
				-v " ping ${br1.vpc1.tif.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>
		
		<step no="6">
			<desc>br1.vpc1 ping br2.vpc1</desc>
			<log-file>vpc1_ping_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${br2.vpc1.tif.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${br2.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="7">
			<desc>
				Configure network firewall rule
				“network-firewall name 1001 from vpn to network 10.1.10.2 255.255.255.255 action permit logging on”
				“network-firewall name 1002 from any to any action deny logging on”
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "network-firewall name 1001 from vpn to network ${br1.vpc1.tif.ip} ${br1.vpc1.netmask} action permit logging on"
				-v "network-firewall name 1002 from any to any action deny logging on"
				-v "_ff id 1 src-ip ${br1.vpc1.tif.ip} protocol 1 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
			</telnet>
		</step>

		<step no="8" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				vpc ping Laptop1
			</desc>
			<log-file>step8_vpc_ping_Laptop1_${loop_check.idx}.log</log-file>
			<ssh host="${cvg1.vpc1.mif.ip}">
				-v " ping ${br1.vpc1.tif.ip} -c 20"
			</ssh>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<include prefix="8.1" file="subs/save_ap_log.xml" args="show logging buffered, br1.br, step8.1_show_logging_buffered.log" />

		<step no="8.2">
			<desc>
				check log
			</desc>
			<log-file>step8.1_show_logging_buffered.log</log-file>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "ACCEPT PACKET: SRC=${cvg1.vpc1.tif.ip} DST=${br1.vpc1.tif.ip} PROTO=ICMP TYPE=8 CODE=0 \(RULE=1001\)" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="8.3">
			<desc>
				clear log all
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear log all"
			</telnet>
		</step>
		
		<step no="9">
			<desc>br2.vpc1 ping br1.vpc1</desc>
			<log-file>vpc1_ping_vpc1_2.log</log-file>
			<ssh target="br2.vpc1" timeout="120">
				-v "ping ${br1.vpc1.tif.ip} -c 10"				
			</ssh>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<include prefix="9.1" file="subs/save_ap_log.xml" args="show logging buffered, br1.br, step9.1_show_logging_buffered.log" />

		<step no="9.2">
			<desc>
				check log
			</desc>
			<log-file>step9.1_show_logging_buffered.log</log-file>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "ACCEPT PACKET: SRC=${br2.vpc1.tif.ip} DST=${br1.vpc1.tif.ip} PROTO=ICMP TYPE=8 CODE=0 \(RULE=1001\)" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="10">
			<desc>
				Delete network firewall config
				"no network-firewall"
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "no network-firewall"
			</telnet>
		</step>

		<step no="11" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				vpc ping Laptop
			</desc>
			<log-file>step11_server_start_ping_${loop_check.idx}.log</log-file>
			<ssh host="${cvg1.vpc1.mif.ip}">
				-v " ping ${br1.vpc1.tif.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>
		
		<step no="12">
			<desc>br2.vpc1 ping br1.vpc1</desc>
			<log-file>vpc1_ping_vpc1_3.log</log-file>
			<ssh target="br2.vpc1" timeout="120">
				-v "ping ${br1.vpc1.tif.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="13">
			<desc>
				Configure network firewall rule
				“network-firewall name 1001 from vpn to network 10.1.10.2 255.255.255.255 action deny logging on”
				“network-firewall name 1002 from any to any action deny logging on”
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear log all"
				-v "network-firewall name 1001 from vpn to network ${br1.vpc1.tif.ip} ${br1.vpc1.netmask} action deny logging on"
				-v "network-firewall name 1002 from any to any action deny logging on"
			</telnet>
		</step>

		<step no="14" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				vpc ping Laptop
			</desc>
			<log-file>step14_server_start_ping_${loop_check.idx}.log</log-file>
			<ssh host="${cvg1.vpc1.mif.ip}">
				-v " ping ${br1.vpc1.tif.ip} -c 20"
			</ssh>
			<log-match>-n -c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<include prefix="14.1" file="subs/save_ap_log.xml" args="show logging buffered, br1.br, step14.1_show_logging_buffered.log" />

		<step no="14.2">
			<desc>
				check log
			</desc>
			<log-file>step14.1_show_logging_buffered.log</log-file>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DROP PACKET: SRC=${cvg1.vpc1.tif.ip} DST=${br1.vpc1.tif.ip} PROTO=ICMP TYPE=8 CODE=0 \(RULE=1001\)" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="14.3">
			<desc>
				clear log all
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear log all"
			</telnet>
		</step>
		
		<step no="15">
			<desc>br2.vpc1 ping br1.vpc1</desc>
			<log-file>vpc1_ping_vpc1_4.log</log-file>
			<ssh target="br2.vpc1" timeout="120">
				-v "ping ${br1.vpc1.tif.ip} -c 10"				
			</ssh>
			<log-match>-n -c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<include prefix="15.1" file="subs/save_ap_log.xml" args="show logging buffered, br1.br, step15.1_show_logging_buffered.log" />

		<step no="15.2">
			<desc>
				check log
			</desc>
			<log-file>step15.1_show_logging_buffered.log</log-file>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DROP PACKET: SRC=${br2.vpc1.tif.ip} DST=${br1.vpc1.tif.ip} PROTO=ICMP TYPE=8 CODE=0 \(RULE=1001\)" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="16">
			<desc>
				Delete network firewall config
				"no network-firewall"
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "no network-firewall"
			</telnet>
		</step>

		<step no="17" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				vpc ping Laptop
			</desc>
			<log-file>step19_server_start_ping_${loop_check.idx}.log</log-file>
			<ssh host="${cvg1.vpc1.mif.ip}">
				-v " ping ${br1.vpc1.tif.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>
                
                <step no="18">
			<desc>br2.vpc1 ping br1.vpc1</desc>
			<log-file>vpc1_ping_vpc1_4.log</log-file>
			<ssh target="br2.vpc1" timeout="120">
				-v "ping ${br1.vpc1.tif.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${br1.vpc1.tif.ip}: " -i "ttl="</log-match>
		</step>		
	</stage>
</testcase>