<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Network firewall the same user-profile but not the same attribute test</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Configure AP
		Enable 2 dhcp server（mgt0.1 mgt0.2）
		Mgt0.1 vlan10 IPaddr 10.1.10.1 gateway 10.1.10.1
		Mgt0.2 vlan20 IPaddr 10.1.20.1 gateway 10.1.20.1
		Laptop1 connect to Mgt0.1 IPaddr 10.1.10.2 (attribute 1)
		Laptop2 connect to Mgt0.2 IPaddr 10.1.20.2 (attribute 3)
		Laptop3 connect to Mgt0.1 IPaddr 10.1.10.3 (attribute 2)
		User-profile Upid10 binds attribute 1-2 vlan10
		User-profile Upid20 binds attribute 3 vlan 20

		Test Procedure:
		1) Laptop1 and Laptop3 ping Laptop2
		2) Configure network firewall rule
		"network-firewall name 1001 from user-profile upid10 action permit logging
		on"
		"network-firewall name 1002 from any to any action deny logging on"
		3) Laptop1 and Laptop3 ping Laptop2
		4) Delete network firewall config
		"no network-firewall"
		5) Laptop1 and Laptop3 ping Laptop2
		6) Configure network firewall rule
		"network-firewall name 1001 from user-profile upid10 action deny logging
		on"
		"network-firewall name 1002 from any to any action deny logging on"
		7) Laptop1 and Laptop3 ping Laptop2
		8)
		Delete network firewall config on AP1
		"no network-firewall"
		9) Laptop1 and Laptop3 ping Laptop2
	</description>
	<numofbr>1</numofbr>
	<numofcvg>1</numofcvg>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>winlin</tbtype>
	

	<stage>
		<step no="0">
			<desc>
				Configure AP
				Enable 2 dhcp server（mgt0.1 mgt0.2）
				Mgt0.1 vlan10 IPaddr 10.1.11.1 gateway 10.1.11.1
				Mgt0.2 vlan20 IPaddr 10.1.12.1 gateway 10.1.12.1
				Laptop1 connect to Mgt0.1 IPaddr 10.1.11.2 (attribute 1)
				Laptop2 connect to Mgt0.2 IPaddr 10.1.12.2 (attribute 3)
				Laptop3 connect to Mgt0.1 IPaddr 10.1.11.3 (attribute 2)
			</desc>
			<console target="br1.br">
				-v "interface eth0 mode wan"
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/24"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.2 vlan ${br1.vpc2.vlan}"
				-v "interface mgt0.2 ip ${br1.br.mgt0.2.ip}/24"
				-v "interface mgt0.2 dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface mgt0.2 dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server enable"
				-v "interface mgt0.2 dhcp-server enable"
			</console>
		</step>

		<step no="1">
			<desc>
				User-profile Upid10 binds attribute 1-2 vlan10
				User-profile Upid20 binds attribute 3 vlan 20
			</desc>
			<console target="br1.br">
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"				
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "interface eth1 mac-learning enable"
				-v "user-profile lan2 qos-policy def-user-qos vlan-id ${br1.vpc2.vlan} attribute 2"
				-v "interface eth3 mode bridge-access user-profile-attribute 1"
				-v "interface eth3 mac-learning enable"				
				-v "interface eth2 mode bridge-802.1q"
				-v "interface eth2 mac-learning enable"
			</console>
		</step>
		
		
		<step no="1.1">
			<desc>br1.vpc2 get ip addr from dhcp server of mgt0.2</desc>
			<log-file>ifconfig_vpc2_.log</log-file>
			<ssh target="br1.vpc2" timeout="120">
				-v "dhclient ${br1.vpc2.tif.name}"
				-v "ifconfig ${br1.vpc2.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>
		
		<step no="1.2">
			<desc>set br1.vpc2.tif.ip var for vpc2 on BR side</desc>
			<setvar name="br1.vpc2.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc2.mif.ip} -u ${br1.vpc2.user} -p ${br1.vpc2.passwd} -i ${br1.vpc2.tif.name} -nomask
			</setvar>
		</step>
		
		<step no="1.3">
			<desc>
				AP1 as Laptop1 connect to lan port eth3
			</desc>
			<console target="br1.ap1" slow="yes">
				-v "interface mgt0 vlan ${br1.vlan1}"
				-v "interface mgt0 native-vlan ${br1.vlan1}"
				-v "no interface mgt0 dhcp client"
				-v ""
				-v ""
				-v "interface mgt0 dhcp client"
				-v ""
				-v ""			
			</console>
		</step>

		<step no="1.4" delay="20">
			<desc>
				show AP1 mgt0
			</desc>
			<log-file>step1.5_show_int_mgt0.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="1.5">
			<desc>get ip address of ap1</desc>
			<setvar name="br1.ap1.mgt0.ip">
				${bin.dir}/getbyrexp.py -p "IP addr=([\d.]+)" -f ${log.dir}/step1.5_show_int_mgt0.log -t str
			</setvar>
		</step>
		
		<step no="1.6">
			<desc>br1.vpc1 get ip addr from dhcp server of mgt0.1</desc>
			<log-file>ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>
		
		<step no="1.7">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="1.8" delay="10">
			<desc>show interface eth0 on BR</desc>
			<log-file>step1.8_show_br1.br_eth0.log</log-file>
			<console target="br1.br">
				-v "show interface eth0"
			</console>
		</step>

		<step no="1.9">
			<desc>get eth0 ip of br</desc>
			<setvar name="br1.br.wan.ip">
				${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -f ${log.dir}/step1.8_show_br1.br_eth0.log -t str
			</setvar>
		</step>
		
		<step no="2">
			<desc>br1.vpc1 ping br1.vpc2</desc>
			<log-file>vpc1_ping_vpc2.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${br1.vpc2.tif.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${br1.vpc2.tif.ip}: " -i "ttl="</log-match>
		</step>
		
		<step no="3">
			<desc>
				AP1 ping br1.vpc2
			</desc>
			<log-file>ap_ping_vpc2.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "ping ${br1.vpc2.tif.ip}"				
			</console>
			<log-match>-c -i "from ${br1.vpc2.tif.ip}: " -i "ttl="</log-match>
		</step>		

		<step no="4">
			<desc>
				Configure network firewall rule
				"network-firewall name 1001 from user-profile upid10 action permit logging on"
				"network-firewall name 1002 from any to any action deny logging on"
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear log all"
				-v "network-firewall name 1001 from user-profile lan1 action permit logging on"
				-v "network-firewall name 1002 from any to any action deny logging on"
			</telnet>
		</step>
		
		<step no="5">
			<desc>br1.vpc1 ping br1.vpc2</desc>
			<log-file>vpc1_ping_vpc2_2.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${br1.vpc2.tif.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${br1.vpc2.tif.ip}: " -i "ttl="</log-match>
		</step>	

		<include prefix="5.1" file="subs/save_ap_log.xml" args="show logging buffered, br1.br, step5.1_show_logging_buffered.log" />

		<step no="5.2">
			<desc>
				check log
			</desc>
			<log-file>step5.1_show_logging_buffered.log</log-file>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "ACCEPT PACKET: SRC=${br1.vpc1.tif.ip} DST=${br1.vpc2.tif.ip} PROTO=ICMP TYPE=\d+ CODE=\d+ \(RULE=1001\)" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="5.3">
			<desc>
				clear log all
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear log all"
			</telnet>
		</step>
		
		<step no="6">
			<desc>
				AP1 ping br1.vpc2
			</desc>
			<log-file>ap_ping_vpc2_2.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "ping ${br1.vpc2.tif.ip}"				
			</console>
			<log-match>-c -i "from ${br1.vpc2.tif.ip}: " -i "ttl="</log-match>
		</step>		

		<include prefix="6.1" file="subs/save_ap_log.xml" args="show logging buffered, br1.br, step6.1_show_logging_buffered.log" />

		<step no="6.2">
			<desc>
				check log
			</desc>
			<log-file>step6.1_show_logging_buffered.log</log-file>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "ACCEPT PACKET: SRC=${br1.ap1.mgt0.ip} DST=${br1.vpc2.tif.ip} PROTO=ICMP TYPE=\d+ CODE=\d+ \(RULE=1001\)" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="6.3">
			<desc>
				clear log all
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear log all"
			</telnet>
		</step>

		<step no="7">
			<desc>
				Delete network firewall config
				"no network-firewall"
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "no network-firewall"
			</telnet>
		</step>
		
		<step no="8">
			<desc>br1.vpc1 ping br1.vpc2</desc>
			<log-file>vpc1_ping_vpc2_3.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${br1.vpc2.tif.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${br1.vpc2.tif.ip}: " -i "ttl="</log-match>
		</step>
		
		<step no="9">
			<desc>
				AP1 ping br1.vpc2
			</desc>
			<log-file>ap_ping_vpc2_3.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "ping ${br1.vpc2.tif.ip}"				
			</console>
			<log-match>-c -i "from ${br1.vpc2.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="10">
			<desc>
				Configure network firewall rule
				"network-firewall name 1001 from user-profile fw11 action deny logging on"
				"network-firewall name 1002 from any to any action deny logging on"
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "network-firewall name 1001 from user-profile lan1 action deny logging on"
				-v "network-firewall name 1002 from any to any action deny logging on"
			</telnet>
		</step>
		
		<step no="11">
			<desc>br1.vpc1 ping br1.vpc2</desc>
			<log-file>vpc1_ping_vpc2_4.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${br1.vpc2.tif.ip} -c 4"				
			</ssh>
			<log-match>-n -c -i "from ${br1.vpc2.tif.ip}: " -i "ttl="</log-match>
		</step>		

		<include prefix="11.1" file="subs/save_ap_log.xml" args="show logging buffered, br1.br, step11.1_show_logging_buffered.log" />

		<step no="11.2">
			<desc>
				check log
			</desc>
			<log-file>step11.1_show_logging_buffered.log</log-file>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DROP PACKET: SRC=${br1.vpc1.tif.ip} DST=${br1.vpc2.tif.ip} PROTO=ICMP TYPE=\d+ CODE=\d+ \(RULE=1001\)" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="11.3">
			<desc>
				clear log all
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear log all"
			</telnet>
		</step>
		
		<step no="12">
			<desc>
				AP1 ping br1.vpc2
			</desc>
			<log-file>ap_ping_vpc2_4.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "ping ${br1.vpc2.tif.ip}"				
			</console>
			<log-match>-n -c -i "from ${br1.vpc2.tif.ip}: " -i "ttl="</log-match>
		</step>
				
		<include prefix="12.1" file="subs/save_ap_log.xml" args="show logging buffered, br1.br, step12.1_show_logging_buffered.log" />

		<step no="12.2">
			<desc>
				check log
			</desc>
			<log-file>step12.1_show_logging_buffered.log</log-file>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DROP PACKET: SRC=${br1.ap1.mgt0.ip} DST=${br1.vpc2.tif.ip} PROTO=ICMP TYPE=\d+ CODE=\d+ \(RULE=1001\)" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="13.3">
			<desc>
				clear log all
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear log all"
			</telnet>
		</step>

		<step no="14">
			<desc>
				Delete network firewall config on br1.br
				"no network-firewall"
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "no network-firewall"
			</telnet>
		</step>
		
		<step no="15">
			<desc>br1.vpc1 ping br1.vpc2</desc>
			<log-file>vpc1_ping_vpc2_5.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${br1.vpc2.tif.ip} -c 4"				
			</ssh>
			<log-match>-c -i "from ${br1.vpc2.tif.ip}: " -i "ttl="</log-match>
		</step>
		
		<step no="16">
			<desc>
				AP1 ping br1.vpc2
			</desc>
			<log-file>ap_ping_vpc2_5.log</log-file>
			<console target="br1.ap1" slow="yes">
				-v "ping ${br1.vpc2.tif.ip}"				
			</console>
			<log-match>-c -i "from ${br1.vpc2.tif.ip}: " -i "ttl="</log-match>
		</step>		
	</stage>
</testcase>