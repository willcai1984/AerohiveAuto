<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Network firewall "To" hostname test</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Configure AP
		Enable 1 dhcp server（mgt0.1）
		Mgt0.1 vlan10 IPaddr 10.1.10.1 gateway 10.1.10.1
		Laptop1 connect to Mgt0.1 IPaddr 10.1.10.2
		AP get IPaddr(interface wan) &lt;IP1&gt; from server
		The server's hostname is &lt;hostname1&gt;

		Test Procedure:
		1) Laptop1 ping Server
		2) Configure network firewall rule
		"network-firewall name 1001 to hostname &lt;hostname1&gt; action permit logging
		on"
		"network-firewall name 1002 from any to any action deny logging on"
		3) Laptop1 ping Server
		4) Delete network firewall config
		"no network-firewall"
		5) Laptop1 ping Server
		6) Configure network firewall rule
		"network-firewall name 1001 to hostname &lt;hostname1&gt; action deny logging
		on"
		"network-firewall name 1002 from any to any action deny logging on"
		7) Laptop1 ping Server
		8) Delete network firewall config on AP1
		"no network-firewall"
		9) Laptop1 ping Server
	</description>
	<numofbr>1</numofbr>
	<numofcvg>1</numofcvg>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>winlin</tbtype>
	

	<stage>
		<step no="0">
			<desc>
				Configure AP
				Enable 1 dhcp server（mgt0.1）
				Mgt0.1 vlan10 IPaddr 10.1.10.1 gateway 10.1.10.1
				Laptop1 connect to Mgt0.1 IPaddr 10.1.10.2
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${cvg1.cvg.wan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dns-server enable"
				-v "dns server-ip ${pub.dns1.ip}"
			</telnet>
		</step>

		<step no="1">
			<desc>
				Set interface eth0 to wan mode,eth1/eth2 to access mode and enable mac-learning
			</desc>
			<telnet target="${br1.br.wan.ip}">
			        -v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"				
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "interface eth1 mac-learning enable"						
			</telnet>
		</step>
		
		<step no="2.1">
			<desc>br1.vpc1 get ip addr from dhcp server of mgt0.1</desc>
			<log-file>ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>
		
		<step no="2.2">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>
		
		<step no="3" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>br1.vpc1 ping pub.dns</desc>
			<log-file>step3_vpc1_ping_pub.dns_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dnstest.name1}.${pub.dns_server.domain1} -c 4"				
			</ssh>
			<log-match>-c -i "from ${pub.dnstest.ip1}: " -i "ttl="</log-match>
		</step>		

		<step no="4">
			<desc>
				"_ff id 1 src-ip ${br1.vpc1.tif.ip} protocol 1 bidirectional"
				"_kdebug fe basic"
				"_kdebug fe detail"
				"clear log all"
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "_ff id 1 src-ip ${br1.vpc1.tif.ip} protocol 1 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</telnet>
		</step>

		<step no="5">
			<desc>
				Configure network firewall rule
				“network-firewall name 1001 to hostname &lt;hostname1&gt; action permit logging on”
				“network-firewall name 1002 from any to any action deny logging on”
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear log all"
				-v "network-firewall name 1001 to hostname ${pub.dnstest.name1}.${pub.dns1.domain1} action permit logging on"
				-v "network-firewall name 1002 service dns action permit logging on"
				-v "network-firewall name 1003 from any to any action deny logging on"
			</telnet>
		</step>
		
		<step no="6" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>br1.vpc1 ping pub.dns</desc>
			<log-file>step6_vpc1_ping_pub.dns_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dnstest.name1}.${pub.dns_server.domain1} -c 4"				
			</ssh>
			<log-match>-c -i "from ${pub.dnstest.ip1}: " -i "ttl="</log-match>
		</step>

		<include prefix="6.1" file="subs/save_ap_log.xml" args="show logging buffered, br1.br, step6.1_show_logging_buffered.log" />

		<step no="6.2">
			<desc>
				check log
			</desc>
			<log-file>step6.1_show_logging_buffered.log</log-file>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "ACCEPT PACKET: SRC=${br1.vpc1.tif.ip} DST=${pub.dnstest.ip1} PROTO=ICMP TYPE=\d+ CODE=\d+ \(RULE=1001\)" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="7">
			<desc>
				Delete network firewall config
				"no network-firewall"
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "no network-firewall"
			</telnet>
		</step>
		
		<step no="8" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>br1.vpc1 ping pub.dns</desc>
			<log-file>step6_vpc1_ping_pub.dns_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.domain1} -c 4"				
			</ssh>
			<log-match>-c -i "ttl="</log-match>
		</step>		

		<step no="9">
			<desc>
				Configure network firewall rule
				“network-firewall name 1001 to hostname &lt;hostname1&gt; action deny logging on”
				“network-firewall name 1002 from any to any action deny logging on”
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear log all"
				-v "network-firewall name 1001 to hostname ${pub.dnstest.name1}.${pub.dns1.domain1} action deny logging on"
				-v "network-firewall name 1002 service dns action permit logging on"
				-v "network-firewall name 1003 from any to any action deny logging on"
			</telnet>
		</step>
		
		<step no="10">
			<desc>br1.vpc1 ping pub.dns</desc>
			<log-file>step10_vpc1_ping_pub.dns.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dnstest.name1}.${pub.dns_server.domain1} -c 4"				
			</ssh>
			<log-match>-n -c -i "from ${pub.dnstest.ip1}: " -i "ttl="</log-match>
		</step>		

		<include prefix="10.1" file="subs/save_ap_log.xml" args="show logging buffered, br1.br, step10.1_show_logging_buffered.log" />

		<step no="10.2">
			<desc>
				check log
			</desc>
			<log-file>step10.1_show_logging_buffered.log</log-file>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "DROP PACKET: SRC=${br1.vpc1.tif.ip} DST=${pub.dnstest.ip1} PROTO=ICMP TYPE=\d+ CODE=\d+ \(RULE=1001\)" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="11">
			<desc>
				Delete network firewall config
				"no network-firewall"
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "no network-firewall"
			</telnet>
		</step>
		
		<step no="12" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>br1.vpc1 ping pub.dns</desc>
			<log-file>step12_vpc1_ping_pub.dns_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dnstest.name1}.${pub.dns_server.domain1} -c 4"				
			</ssh>
			<log-match>-c -i "from ${pub.dnstest.ip1}: " -i "ttl="</log-match>
		</step>		
	</stage>
</testcase>