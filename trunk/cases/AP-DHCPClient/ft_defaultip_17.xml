<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief> Set the same default-ip-prefix to interface mgt0 of AP1 and AP2, when they canâ€™t obtain ip address, verify which ip address will be used</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-condition
		- AP1 and AP2 are neighbor

		Test procedure
		1.Set the same default-ip-prefix that netmask length is 8 in two or three APs (for example: 10.0.0.0/8)
		2.Disable dhcp client in AP1, check ip address of mgt0; then disable dhcp client in AP2, check ip address of mgt0
		3.Change default-ip-prefix to that netmask length is 16 in AP1, verify ip address of mgt0; do the same in AP2 (for example:3.3.0.0/16)
		4.Change default-ip-prefix to that netmask is 24 in AP1, verify ip address of mgt0; do the same in AP2(for example:5.5.5.0/24)

		Expect result
		1. Show running-config and show interface mgt0 to check
		2. IP address of AP1:10.1.1.1
		IP address of AP2:10.x.y.z(x,y is the last three bytes of MAC address of mgt0. if the last three bytes MAC address are all 0, IP address will add 4, so ip address is 10.0.0.4)
		3. IP address of AP1:3.3.1.1
		IP address of AP2:3.3.x.y(x,y is the last bytes of MAC address of mgt0. if the last two bytes MAC address are all 0, IP address will add 4, so ip address is
		3.3.0.4)
		4. IP address of AP1:5.5.5.1
		IP address of AP2:5.5.5.x(x is the last bytes MAC address of mgt0. If the last bytes MAC address is 0, ip address will add 4, so ip address is 5.5.5.4)
	</description>
	<numofap>3</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="pre0.1">
			<desc>
				-set hive info
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="pre0.2">
			<desc>
				-set hive info
			</desc>
			<telnet target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="pre0.3">
			<desc>
				-set hive info
			</desc>
			<telnet target="ap3">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="pre1.1">
			<desc>shutdown interface wifi1 and then up it (it's aimed to clear wifi1's neighbor list)</desc>
			<telnet target="ap1">
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
			</telnet>
		</step>

		<step no="pre1.2" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show acsp neighbor to make sure ap2 or ap3 is ap1's acsp neighbor
			</desc>
			<log-file>pre1.2_show_acsp_neighbor_${loop_check.idx}.log</log-file>
			<telnet target="ap1" timeout="180">
				-v "show acsp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\s+Backhaul\s+${hive.name}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="0">
			<desc>
				-config default-ip-prefix that netmask length is 8
			</desc>
			<console target="ap1">
				-v "interface mgt0 default-ip-prefix 1.0.0.0/8"
			</console>
		</step>

		<step no="0.1">
			<desc>
				-config default-ip-prefix that netmask length is 8
			</desc>
			<console target="ap2">
				-v "interface mgt0 default-ip-prefix 1.0.0.0/8"
			</console>
		</step>

		<step no="0.2">
			<desc>
				-config default-ip-prefix that netmask length is 8
			</desc>
			<console target="ap3">
				-v "interface mgt0 default-ip-prefix 1.0.0.0/8"
			</console>
		</step>

		<step no="1" delay="5">
			<desc>
				- close dhcp client
			</desc>
			<console target="ap1">
				-v "no interface mgt0 dhcp client"
			</console>
		</step>

		<step no="1.1" delay="30">
			<desc>
				1: Check interface mgt0 IP (show interface mgt0 )
			</desc>
			<log-file>step1.1_show_interface_mgt0.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "IP\s*addr=1.1.\d+.\d+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="2">
			<desc>
				- close dhcp client
			</desc>
			<console target="ap2">
				-v "no interface mgt0 dhcp client"
			</console>
		</step>

		<step no="2.1" delay="30">
			<desc>
				1: Check interface mgt0 IP (show interface mgt0 )
			</desc>
			<log-file>step2.1_show_interface_mgt0.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
			<log-match>-c -i "IP addr=1."</log-match>
			<log-match>-n -c -i "IP addr=1.1.1.1;"</log-match>
		</step>

		<step no="3">
			<desc>
				- close dhcp client
			</desc>
			<console target="ap3">
				-v "no interface mgt0 dhcp client"
			</console>
		</step>

		<step no="3.1" delay="30">
			<desc>
				1: Check interface mgt0 IP (show interface mgt0 )
			</desc>
			<log-file>step3.1_show_interface_mgt0.log</log-file>
			<console target="ap3">
				-v "show interface mgt0"
			</console>
			<log-match>-c -i "IP addr=1."</log-match>
			<log-match>-n -c -i "IP addr=1.1.1.1;"</log-match>
		</step>

		<step no="4">
			<desc>
				-config default-ip-prefix that netmask length is 16
			</desc>
			<console target="ap1">
				-v "interface mgt0 default-ip-prefix 2.2.0.0/16"
			</console>
		</step>

		<step no="4.1">
			<desc>
				-config default-ip-prefix that netmask length is 16
			</desc>
			<console target="ap2">
				-v "interface mgt0 default-ip-prefix 2.2.0.0/16"
			</console>
		</step>

		<step no="4.2">
			<desc>
				-config default-ip-prefix that netmask length is 16
			</desc>
			<console target="ap3">
				-v "interface mgt0 default-ip-prefix 2.2.0.0/16"
			</console>
		</step>

		<step no="5" delay="30">
			<desc>
				1: Check interface mgt0 IP (show interface mgt0 )
			</desc>
			<log-file>step5_show_interface_mgt0.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "IP\s*addr=2.2.\d+.\d+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.1">
			<desc>
				1: Check interface mgt0 IP (show interface mgt0 )
			</desc>
			<log-file>step5.1_show_interface_mgt0.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
			<log-match>-c -i "IP addr=2.2."</log-match>
			<log-match>-n -c -i "IP addr=2.2.1.1;"</log-match>
		</step>

		<step no="5.2">
			<desc>
				1: Check interface mgt0 IP (show interface mgt0 )
			</desc>
			<log-file>step5.2_show_interface_mgt0.log</log-file>
			<console target="ap3">
				-v "show interface mgt0"
			</console>
			<log-match>-c -i "IP addr=2.2."</log-match>
			<log-match>-n -c -i "IP addr=2.2.1.1;"</log-match>
		</step>

		<step no="6">
			<desc>
				-config default-ip-prefix that netmask length is 24
			</desc>
			<console target="ap1">
				-v "interface mgt0 default-ip-prefix 3.3.3.0/24"
			</console>
		</step>

		<step no="6.1">
			<desc>
				-config default-ip-prefix that netmask length is 24
			</desc>
			<console target="ap2">
				-v "interface mgt0 default-ip-prefix 3.3.3.0/24"
			</console>
		</step>

		<step no="6.2">
			<desc>
				-config default-ip-prefix that netmask length is 24
			</desc>
			<console target="ap3">
				-v "interface mgt0 default-ip-prefix 3.3.3.0/24"
			</console>
		</step>

		<step no="7" delay="30">
			<desc>
				1: Check interface mgt0 IP (show interface mgt0 )
			</desc>
			<log-file>step7_show_interface_mgt0.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "IP\s*addr=3.3.3.\d+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7.1">
			<desc>
				1: Check interface mgt0 IP (show interface mgt0 )
			</desc>
			<log-file>step7.1_show_interface_mgt0.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
			<log-match>-c -i "IP addr=3.3.3."</log-match>
			<log-match>-n -c -i "IP addr=3.3.3.1;"</log-match>
		</step>

		<step no="7.2">
			<desc>
				1: Check interface mgt0 IP (show interface mgt0 )
			</desc>
			<log-file>step7.2_show_interface_mgt0.log</log-file>
			<console target="ap3">
				-v "show interface mgt0"
			</console>
			<log-match>-c -i "IP addr=3.3.3."</log-match>
			<log-match>-n -c -i "IP addr=3.3.3.1;"</log-match>
		</step>
	</stage>
</testcase>