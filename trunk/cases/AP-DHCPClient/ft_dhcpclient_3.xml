<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify that DNS got from dhcp server can work.</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		- Verify IP pool, Net mask are configured in DHCP server1.
		- DHCP server 2 is off.
		- Either Wi-Fi interface or Ethernet interface is fully tested.
		- Verify the route access testing is successful.
		- Verify no IP address has been set in MPP1.

		Test Procedure:
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<property name="invalid.domain" value="www.${job.sid}test.com" />

	<stage>
		<step no="1" delay="30">
			<desc>
				- Check if can obtain a ip address from dhcp server
			</desc>
			<log-file>step1_show_interface_mgt0_dhcp_client.log</log-file>
			<telnet target="ap1">
				-v "show interface mgt0 dhcp client"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "Get IP address 192.168.${tb.vlan1}.\d+ from the server ${pub.dhcp.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="1.1">
			<desc>
				- show dns
			</desc>
			<log-file>step1.1_show_dns.log</log-file>
			<telnet target="ap1">
				-v "show dns"
			</telnet>
			<log-match>-c -i "Domain name suffix: *${pub.dns_server.domain1}"</log-match>
			<log-match>-c -i "Primary *: *${pub.dns_server.ip}"</log-match>
		</step>

		<step no="2">
			<desc>
				-open debug mode and clear log all
			</desc>
			<telnet target="ap1">
				-v "_ff id 1 dst-port 53 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
			</telnet>
		</step>

		<step no="2.1" delay="5">
			<desc>
				- MMP1 ping the hostname which can be resolved by dns server, result 2
			</desc>
			<log-file>step2.1_ping.log</log-file>
			<telnet target="ap1">
				-v "ping ${pub.dnstest.name1} count 5"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)ping\s+${pub.dnstest.name1}\.${pub.dns1.domain1}\s+\(${pub.dnstest.ip1}\)\s+" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3">
			<desc>
				show log buffer and check log
			</desc>
			<log-file>step3_show_log_buffer.log</log-file>
			<telnet target="ap1" timeout="180">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py"> -p"\(o\)\s*eth0\s*${ap1.mgt0.ip}-&gt;${pub.dns1.ip}\(\d+\)\s*ttl\(64\)\s*UDP\s*\d+-&gt;53" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py"> -p"\(u\)\s*mgt0\s*${pub.dns1.ip}-&gt;${ap1.mgt0.ip}\(\d+\)\s*ttl\(\d+\)\s*UDP\s*53-&gt;\d+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py"> -p"\(i\)\s*eth0\s*${pub.dns1.ip}-&gt;${ap1.mgt0.ip}\(\d+\)\s*ttl\(\d+\)\s*UDP\s*53-&gt;\d+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py"> -p"\(i\)\s*mgt0\s*${ap1.mgt0.ip}-&gt;${pub.dns1.ip}\(\d+\)\s*ttl\(64\)\s*UDP\s*\d+-&gt;53" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.1">
			<desc>
				-clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<step no="4" delay="5">
			<desc>
				- MMP1 ping the hostname which canâ€™t be resolved by dns server, result 3
			</desc>
			<log-file>step4_ping.log</log-file>
			<telnet target="ap1">
				-v "ping ${invalid.domain} count 5"
			</telnet>
			<log-match>-c -i "ping: unknown host ${invalid.domain}"</log-match>
		</step>

		<step no="5">
			<desc>
				show log buffer and check log
			</desc>
			<log-file>step5_show_log_buffer.log</log-file>
			<telnet target="ap1" timeout="180">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py"> -p"\(o\)\s*eth0\s*${ap1.mgt0.ip}-&gt;${pub.dns1.ip}\(\d+\)\s*ttl\(64\)\s*UDP\s*\d+-&gt;53" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py"> -p"\(u\)\s*mgt0\s*${pub.dns1.ip}-&gt;${ap1.mgt0.ip}\(\d+\)\s*ttl\(\d+\)\s*UDP\s*53-&gt;\d+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py"> -p"\(i\)\s*eth0\s*${pub.dns1.ip}-&gt;${ap1.mgt0.ip}\(\d+\)\s*ttl\(\d+\)\s*UDP\s*53-&gt;\d+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py"> -p"\(i\)\s*mgt0\s*${ap1.mgt0.ip}-&gt;${pub.dns1.ip}\(\d+\)\s*ttl\(64\)\s*UDP\s*\d+-&gt;53" -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>
</testcase>