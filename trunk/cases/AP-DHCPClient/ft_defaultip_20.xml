<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Different subnet of Default IP, verify MP will trying to build neighbor with Portals in the same hive</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-condition
		-DHCP enable, no static IP address.
		-Change Default IP address and make MP in different subnet with Portal
		-The traffic between AP and DHCP server is unreachable

		Test procedure
		1: Check interface mgt0 IP (show interface mgt0 ) in MP
		2: Check interface mgt0 DHCP client (show interface mgt0 dhcp client)
		3: Check box will build neighbor with all APs in the same hive

		Expect result
		1: Interface mgt0 should default IP in MP
		2: DHCP client: enabled, no IP address obtained.
		3: Build neighbor with all APs in the same hive
	</description>
	<numofap>2</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<if>"${ap.wifi1.existed}" == "true"</if>

		<step no="shutdown.eth1">
			<desc>
				-shutdown eth1
			</desc>
			<if>"${ap2.eth1.existed}" =="true"</if>
			<telnet target="ap2">
				-v "interface eth1 shutdown"
			</telnet>
		</step>


		<step no="pre0.1">
			<desc>
				-set hive info
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="pre0.2">
			<desc>
				-set hive info
			</desc>
			<telnet target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="pre0.2.1">
			<desc>
				show ap2's interface wifi1 info
			</desc>
			<log-file>pre0.2.1_show_ap2_interface_info.log</log-file>
			<telnet target="ap2">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="pre0.2.2">
			<desc>
				get ap2's wifi1's mac address
			</desc>
			<setvar name="ap2.wifi1.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/pre0.2.1_show_ap2_interface_info.log -i wifi1 -o aero -m -width
			</setvar>
		</step>

		<step no="pre1">
			<desc>
				show ap1's interface wifi1 info
			</desc>
			<log-file>pre1_show_ap1_interface_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="pre1.1">
			<desc>
				get ap1's wifi1's mac address
			</desc>
			<setvar name="ap1.wifi1.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/pre1_show_ap1_interface_info.log -i wifi1 -o aero -m -width
			</setvar>
		</step>

		<step no="0">
			<desc>
				-open debug mode and clear log all
				-config vlan info
			</desc>
			<console target="ap1">
				-v "_debug amrp basic"
				-v "clear log all"
				-v "interface mgt0 default-ip-prefix 1.1.0.0/16"
				-v "interface mgt0 vlan ${tb.vlan6}"
			</console>
		</step>

		<step no="0.1" delay="10">
			<desc>
				- close dhcp client
			</desc>
			<console target="ap1">
				-v "no interface mgt0 dhcp client"
			</console>
		</step>

		<step no="0.2">
			<desc>
				- open dhcp client
			</desc>
			<console target="ap1">
				-v "interface mgt0 dhcp client"
			</console>
		</step>

		<step no="1" delay="30">
			<desc>
				1: Check interface mgt0 IP (show interface mgt0 )
			</desc>
			<log-file>step1_show_interface_mgt0.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
			<log-match>-c -i "IP addr=1.1.1.1"</log-match>
			<log-match>-n -c -i "IP addr=192.168.${tb.vlan6}."</log-match>
		</step>

		<step no="1.1">
			<desc>
				2: Check interface mgt0 DHCP client (show interface mgt0 dhcp client)
			</desc>
			<log-file>step1.1_show_interface_mgt0_dhcp_client.log</log-file>
			<console target="ap1">
				-v "show interface mgt0 dhcp client"
			</console>
			<log-match>-i "Get IP address 0.0.0.0 from the server"</log-match>
			<log-match>-c -i "DHCP client: *Enabled"</log-match>
		</step>

		<step no="2">
			<desc>
				-open debug mode and clear log all
				-config vlan info
			</desc>
			<console target="ap2">
				-v "interface eth0 shutdown"
				-v "_debug amrp basic"
				-v "clear log all"
				-v "interface mgt0 default-ip-prefix 2.2.0.0/16"
				-v "interface mgt0 vlan ${tb.vlan6}"
			</console>
		</step>

		<step no="2.1" delay="10">
			<desc>
				- close dhcp client
			</desc>
			<console target="ap2">
				-v "no interface mgt0 dhcp client"
			</console>
		</step>

		<step no="2.2">
			<desc>
				- open dhcp client
			</desc>
			<console target="ap2">
				-v "interface mgt0 dhcp client"
			</console>
		</step>

		<step no="3" delay="30">
			<desc>
				1: Check interface mgt0 IP (show interface mgt0 )
			</desc>
			<log-file>step3_show_interface_mgt0.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
			<log-match>-c -i "IP addr=2.2.1.1"</log-match>
			<log-match>-n -c -i "IP addr=192.168.${tb.vlan5}."</log-match>
		</step>

		<step no="3.1">
			<desc>
				2: Check interface mgt0 DHCP client (show interface mgt0 dhcp client)
			</desc>
			<log-file>step3.1_show_interface_mgt0_dhcp_client.log</log-file>
			<console target="ap2">
				-v "show interface mgt0 dhcp client"
			</console>
			<log-match>-i "Get IP address 0.0.0.0 from the server"</log-match>
			<log-match>-c -i "DHCP client: *Enabled"</log-match>
		</step>
		<step no="3.2">
			<desc>
				- set channel
			</desc>
			<console target="ap1">
				-v "interface wifi1 radio channel 153"
			</console>
		</step>
		<step no="3.3">
			<desc>
				- set channel
			</desc>
			<console target="ap2">
				-v "interface wifi1 radio channel 153"
			</console>
		</step>

		<step no="4" type="loop-check" loop-max-times="10" loop-interval="15">
			<desc>
				show amrp neighbor
			</desc>
			<log-file>step4_show_amrp_neighbor.log</log-file>
			<console target="ap1" timeout="180">
				-v "show amrp neighbor"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "wifi1.1:" -ps p "${ap2.wifi1.mac} *2.2.1.1\s*TWO-WAY" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.1">
			<desc>
				show amrp neighbor
			</desc>
			<log-file>step4.1_show_amrp_neighbor.log</log-file>
			<console target="ap2" timeout="180">
				-v "show amrp neighbor"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "wifi1.1:" -ps p "${ap1.wifi1.mac} *1.1.1.1\s*TWO-WAY" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5">
			<desc>
				show logging buffered
			</desc>
			<log-file>step5_show_log_buff.log</log-file>
			<console target="ap1" timeout="300">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-c -i "\[wifi_basic\]: 1.1.1.1 ifp ${ap1.wifi1.mac} alloc wifi-backhaul nbr ${ap2.wifi1.mac}"</log-match>
			<log-match>-c -i "\[wifi_basic\]: wifi1.1 peer ${ap2.wifi1.mac} state change" -i "TWO-WAY"</log-match>
			<log-match>-c -i "\[wifi_basic\]: wifi1.1 create peer ${ap2.wifi1.mac}"</log-match>
		</step>

		<step no="5.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step5.1_show_log_buff.log</log-file>
			<console target="ap2" timeout="300">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match>-c -i "\[wifi_basic\]: 2.2.1.1 ifp ${ap2.wifi1.mac} alloc wifi-backhaul nbr ${ap1.wifi1.mac}"</log-match>
			<log-match>-c -i "\[wifi_basic\]: wifi1.1 peer ${ap1.wifi1.mac} state change" -i "TWO-WAY"</log-match>
			<log-match>-c -i "\[wifi_basic\]: wifi1.1 create peer ${ap1.wifi1.mac}"</log-match>
		</step>
	</stage>
</testcase>