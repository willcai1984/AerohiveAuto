<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Enable RIPv2 on GW testing</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		After RIP enable, GW can establish neighbors with other routers, VPN tunnel
		establish

		Test Procedure:

		1. Enable RIPv2 on GW, result 1
		2.Enable RIP advertise on one interface, such as lan, result 2
		3. Disable RIPv2 on GW, result 3
	</description>
	<numofcvg>1</numofcvg>
	<numofbr>1</numofbr>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>winlin</tbtype>

	<property name="vpn.client.list" value="clientList1" />
	<property name="vpn.server.name" value="vpnServer1" />

	<stage>
		<step no="cvg1.cvg.tunnel.ip.gen">
			<setvar name="cvg1.cvg.tunnel.ip">
				if [ "yes" == "${cvg1.cvg.fw_existed}" ]; then
				echo "${cvg1.cvg.mip.ip}"
				else
				echo "${cvg1.cvg.wan.ip}"
				fi
			</setvar>
		</step>

		<step no="1">
			<desc>
				Establish VPN Tunnel
			</desc>
		</step>

		<step no="1.1">
			<desc>Enable DHCP server on interface mgt0.1</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>

		<step no="1.2">
			<desc>config CVG act as l3 VPN server</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="20">
				-v "save vpn ee-cert tftp://${pub.tftp1.tip}:certs/server_cert.pem"
				-v "save vpn private-key tftp://${pub.tftp1.tip}:certs/server_key.pem"
				-v "vpn xauth-client-list ${vpn.client.list} local"
				-v "vpn xauth-client-list ${vpn.client.list} client-name ${br1.br.name} password aerohive"
				-v "vpn server-ipsec-tunnel ${vpn.server.name} vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${vpn.server.name} client-list ${vpn.client.list}"
				-v "vpn tunnel-policy vpn_tunnel_policy server ipsec-tunnel ${vpn.server.name}"
				-v "routing internal-sub-network ${br1.br.mgt0.ip}/${br.mgt0.supermask}"
				-v ""
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${br.mgt0.supermask}"
				-v ""
				-v ""
			</telnet>
		</step>

		<step no="1.3">
			<desc>config BR as l3 VPN client</desc>
			<telnet target="${br1.br.wan.ip}" slow="yes">
				-v "save vpn ca-cert tftp://${pub.tftp1.tip}:certs/cacert.pem"
				-v "vpn client-ipsec-tunnel ${br1.br.name}_ipsec_1 vpn-mode layer-3"
				-v "vpn ipsec-tunnel ${br1.br.name}_ipsec_1 gateway ${cvg1.cvg.tunnel.ip} client-name ${br1.br.name} password aerohive"
				-v "vpn tunnel-policy vpn_tunnel_policy client ipsec-tunnel ${br1.br.name}_ipsec_1 primary"
				-v "routing route-request enable"
				-v ""
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.ip}/${br.lan.netmask}"
				-v ""
				-v ""
				-v "routing internal-sub-network ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v ""
				-v ""
			</telnet>
		</step>

		<step no="1.4a" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>check vpn ike sa on BR side
				destination to CVG public address
			</desc>
			<log-file>ike_sa_br_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>
		</step>

		<step no="1.4b" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>check vpn ike sa on CVG side
				destionation to BR public address
			</desc>
			<log-file>ike_sa_cvg_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="5">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "R" -i "${br1.br_fw.ip}"</log-match>
		</step>

		<step no="1.4c" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>check gre tunnel on br side
				remote to CVG wan address, local mgt0 address ,gateway CVG public address
			</desc>
			<log-file>show_gre_tunnel_br_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "${cvg1.cvg.wan.ip}" -p 4 -i "${br1.br.mgt0.ip}" -p 6 -i "${cvg1.cvg.tunnel.ip}"</log-match>
		</step>

		<step no="1.4d" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>check gre tunnel on cvg side
				local to CVG wan address
			</desc>
			<log-file>show_gre_tunnel_cvg_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="5">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match>-p 1 -i "tunnel0" -p 3 -i "any" -p 4 -i "${cvg1.cvg.wan.ip}" -p 6 -i "anonymous"</log-match>
		</step>

		<step no="set_lan_info">
			<multi-setvar>
				echo "cvg1.cvg.lan.route1=$(echo ${cvg1.vpc1.tif.ip} | cut -d. -f1,2,3).0"
				echo "br1.br.mgt0.1.route=$(echo ${br1.br.mgt0.1.ip} | cut -d. -f1,2,3).0"
				echo "br1.br.mgt0.2.route=$(echo ${br1.br.mgt0.2.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<step no="2.1">
			<desc>
				Enable RIPv2 on GW, result 1: RIP is enabled on GW, but no interface
				is advertised, no route will be advertised from GW to other routers.
				GW can establish rip neighbor with other routers, and can receive routes from other routers
			</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "routing protocol type ripv2"
				-v "routing protocol enable"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				no interface is advertised, no route will be advertised from GW to other routers.
				GW can establish rip neighbor with other routers
			</desc>
			<log-file>2.2.show_rip_status.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "show rip status"
			</telnet>
			<log-match>-n -p 1 -i "eth1*\d+*\d+"</log-match>
		</step>
		
		<step no="2.3" type="loop-check" loop-max-times="6" loop-interval="10">
			<desc>can receive routes from other routers</desc>
			<log-file>2.3.show_cvg_route_1_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="5">
				-v "show ip route"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth1[\t ]*\d+[\t ]*\d+" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>

		<include prefix="2.4" file="${case.dir}/subs/cvg_l3sw_check_route.xml" obj-args="cvg1" args="${br1.br.mgt0.1.route}/${br.lan.netmask}, setp2.4_l3SW_route.log , negative " />


		<step no="3.1">
			<desc>
				Enable RIP advertise on one interface, such as lan, result 2:
				Interface lan can advertise routes to other routers or BR, interface wan can’t advertise routes.
			</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "routing protocol ripv2 advertise eth1"
			</telnet>
		</step>

		<step no="3.2" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				Interface lan can advertise routes to other routers or BR,interface wan can’t advertise routes.
			</desc>
			<log-file>3.2.show_rip_status_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "show rip status"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth1[\t ]*\d+[\t ]*\d+" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth0[\t ]*\d+[\t ]*\d+" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>

		<include prefix="3.3" file="${case.dir}/subs/cvg_l3sw_check_route.xml" obj-args="cvg1" args="${br1.br.mgt0.1.route}/${br.lan.netmask}, setp3.3_l3SW_route.log" />

		<step no="4.1">
			<desc>
				Disable RIPv2 on GW, result 3: RIP is disabled on GW,
				all routes learned from RIP will be deleted, and all RIP neighbors will be lost after timeout.
			</desc>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "no routing protocol enable"
			</telnet>
		</step>

		<step no="4.2" type="loop-check" loop-max-times="6" loop-interval="10">
			<desc>RIP is disabled on GW, all routes learned from RIP will be deleted</desc>
			<log-file>4.2.show_cvg_route_1_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "show ip route"
			</telnet>
			<log-match>-n -p 1 -i "${cvg1.cvg.lan.route1}" -p 8 -i "eth1"</log-match>
		</step>

		<step no="4.3" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>BR can’t get the routes about RIP from GW </desc>
			<log-file>4.3.show_br_route_1_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip route"
			</telnet>
			<log-match>-n -p 1 -i "${cvg1.cvg.lan.route1}" -p 8 -i "tunnel0"</log-match>
		</step>

		<step no="4.4">
			<desc>
				show rip status
			</desc>
			<log-file>4.4.show_rip_status.log</log-file>
			<telnet target="${cvg1.cvg.tunnel.ip}" timeout="10">
				-v "show rip status"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "eth1[\t ]*\d+[\t ]*\d+" -c 0 -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<include prefix="2.4" file="${case.dir}/subs/cvg_l3sw_check_route.xml" obj-args="cvg1" args="${br1.br.mgt0.1.route}/${br.lan.netmask}, setp2.4_l3SW_route.log, negative" />

	</stage>

</testcase>
