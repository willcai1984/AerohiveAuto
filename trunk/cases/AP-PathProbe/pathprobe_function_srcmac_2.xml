<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Execute pathprobe using source mac address option(default outgoing interface's mac address)</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		- APs, MPs works in mesh network
		- Clients connect to MPs

		Test Procedure:
		Execute pathprobe in APs, MPs:
		1. src-mac is ap1's mac, execute pathprobe in ap2, mp1,mp2
		2. src-mac is ap2's mac, execute pathprobe in ap1, mp1,mp2
		3. src-mac is mp1's mac, execute pathprobe in ap1,ap2,mp2
		4. src-mac is mp2's mac, execute pathprobe in ap1,ap2,mp1
	</description>
	<numofap>4</numofap>
	<numofsta>1</numofsta>
	<tbtype>winlin</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />

	<stage>
		<if>"${ap.wifi1.existed}" == "true"</if>

		<step no="1">
			<desc>
				Set config for DUT1 via console to
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password aerohive"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 36"
				-v "user-profile datapath"
				-v "user-profile datapath vlan ${tb.vlan1}"
				-v "user-profile datapath attribute 2"
				-v "security-object autoap"
				-v "security-object autoap default-user-profile-attr 2"
				-v "save config"
				-f basic_apsetup.cfg
			</telnet>
			<no-error-check />
		</step>

		<step no="1.1">
			<desc>
				show wifi1.1's mac of portal
			</desc>
			<log-file>step1.1_wifi_mac_portal.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.1"
				-v ""
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				get wifi1.1' mac of portal
			</desc>
			<setvar name="ap1.wifi1.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step1.1_wifi_mac_portal.log -i wifi1.1 -o aero -m -width
			</setvar>
		</step>

		<step no="1.3">
			<desc>
				show mgt0
			</desc>
			<log-file>step1.3_show_mgt0.log</log-file>
			<telnet target="ap1">
				-v "show interface mgt0"
				-v ""
			</telnet>
		</step>

		<step no="2">
			<desc>Set config for DUT1 via console to </desc>
			<telnet target="ap2">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password aerohive"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 36"
				-v "user-profile datapath"
				-v "user-profile datapath vlan ${tb.vlan1}"
				-v "user-profile datapath attribute 2"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "save config"
				-f basic_apsetup.cfg
			</telnet>
			<no-error-check />
		</step>

		<step no="2.1">
			<desc>
				show wifi1.1's mac of portal
			</desc>
			<log-file>step2.1_wifi_mac_portal.log</log-file>
			<telnet target="ap2">
				-v "show interface wifi1.1"
				-v ""
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				get wifi1.1' mac of portal
			</desc>
			<setvar name="ap2.wifi1.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step2.1_wifi_mac_portal.log -i wifi1.1 -o aero -m -width
			</setvar>
		</step>

		<step no="2.3">
			<desc>
				show mgt0
			</desc>
			<log-file>step2.3_show_mgt0.log</log-file>
			<telnet target="ap2">
				-v "show interface mgt0"
				-v ""
			</telnet>
		</step>

		<step no="3">
			<desc>
				Set config for DUT1 via console to
			</desc>
			<console target="ap3">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password aerohive"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 36"
				-v "user-profile datapath"
				-v "user-profile datapath vlan ${tb.vlan1}"
				-v "user-profile datapath attribute 2"
				-v "security-object autoap"
				-v "security-object autoap default-user-profile-attr 2"
				-v "save config"
				-v "interface eth0 shutdown"
				-f basic_apsetup.cfg
			</console>
			<no-error-check />
		</step>

		<step no="3.1">
			<if>"${ap1.eth1.existed}" == "true"</if>
			<desc>
				shutdown eth1 in ap3
			</desc>
			<console target="ap3">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="3.2">
			<desc>
				show wifi1.1's mac of portal
			</desc>
			<log-file>step3.2_wifi_mac_portal.log</log-file>
			<console target="ap3">
				-v "show interface wifi1.1"
				-v ""
			</console>
		</step>

		<step no="3.3">
			<desc>
				get wifi1.1' mac of portal
			</desc>
			<setvar name="ap3.wifi1.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step3.2_wifi_mac_portal.log -i wifi1.1 -o aero -m -width
			</setvar>
		</step>

		<step no="3.4">
			<desc>
				show mgt0
			</desc>
			<log-file>step3.4_show_mgt0.log</log-file>
			<console target="ap3">
				-v "show interface mgt0"
				-v ""
			</console>
		</step>

		<step no="4">
			<desc>Set config for DUT1 via console to </desc>
			<console target="ap4">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password aerohive"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 36"
				-v "user-profile datapath"
				-v "user-profile datapath vlan ${tb.vlan1}"
				-v "user-profile datapath attribute 2"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "save config"
				-v "interface eth0 shutdown"
				-f basic_apsetup.cfg
			</console>
			<no-error-check />
		</step>

		<step no="4.1">
			<if>"${ap1.eth1.existed}" == "true"</if>
			<desc>
				shutdown eth1 in ap4
			</desc>
			<console target="ap4">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="4.2">
			<desc>
				show wifi1.1's mac of portal
			</desc>
			<log-file>step4.2_wifi_mac_portal.log</log-file>
			<console target="ap4">
				-v "show interface wifi1.1"
				-v ""
			</console>
		</step>

		<step no="4.3">
			<desc>
				get wifi1.1' mac of portal
			</desc>
			<setvar name="ap4.wifi1.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step4.2_wifi_mac_portal.log -i wifi1.1 -o aero -m -width
			</setvar>
		</step>

		<step no="4.4">
			<desc>
				show mgt0
			</desc>
			<log-file>step4.4_show_mgt0.log</log-file>
			<console target="ap3">
				-v "show interface mgt0"
				-v ""
			</console>
		</step>

		<step no="4.5">
			<desc>
				get mgt0 mac
			</desc>
			<setvar name="ap4.mgt0.ip">
				perl ${bin.dir}/getbyrexp.py -p "IP addr=(\S+);" -f ${log.dir}/step4.4_show_mgt0.log -t str
			</setvar>
		</step>

		<step no="4.6">
			<desc>
				Set channle of wifi1
			</desc>
			<telnet target="ap1">
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
				-v "interface wifi1 radio channel 36"
			</telnet>
		</step>

		<step no="4.7">
			<desc>
				Set channle of wifi1
			</desc>
			<telnet target="ap2">
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
				-v "interface wifi1 radio channel 36"
			</telnet>
		</step>

		<step no="4.8">
			<desc>
				Set channle of wifi1
			</desc>
			<console target="ap3">
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
				-v "interface wifi1 radio channel 36"
			</console>
		</step>

		<step no="4.9">
			<desc>
				Set channle of wifi1
			</desc>
			<console target="ap4">
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
				-v "interface wifi1 radio channel 36"
			</console>
		</step>

		<step no="7" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>
				check the amrp neighbour
			</desc>
			<log-file>step7_show_amrp_${loop_check.idx}.log</log-file>
			<console target="ap4">
				-v "show amrp neighbor"
			</console>
			<log-match>-i "${ap1.wifi1.mac}" -i "TWO"</log-match>
			<log-match>-i "${ap2.wifi1.mac}" -i "TWO"</log-match>
			<log-match>-i "${ap3.wifi1.mac}" -i "TWO"</log-match>
		</step>

		<step no="8">
			<desc>
				show wifi1.1's mac of portal
			</desc>
			<log-file>step8_eth0_mac_portal.log</log-file>
			<console target="ap4">
				-v "show interface mgt0"
				-v ""
			</console>
		</step>

		<step no="8.1">
			<desc>
				get wifi1.1' mac of portal
			</desc>
			<setvar name="ap4.eth0.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step8_eth0_mac_portal.log -i mgt0 -o aero -m -width
			</setvar>
		</step>

		<include prefix="9" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap4" />

		<step no="12" type="loop-check" loop-max-times="30" loop-interval="10">
			<desc>
				src-mac is ap1’s mac, execute pathprobe in ap2
			</desc>
			<log-file>step12_protal_probe_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "probe ${sta1.tif.ip} count 1"
			</telnet>
		</step>

		<step no="13" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				src-mac is ap1’s mac, execute pathprobe in mp1
			</desc>
			<log-file>step13_protal_probe_${loop_check.idx}.log</log-file>
			<console target="ap3">
				-v "probe ${sta1.tif.ip} count 1"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[${ap3.mgt0.mac}\].*nbr-metric.*${ap3.mgt0.ip};" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="14">
			<desc>
				src-mac is ap1’s mac, execute pathprobe in mp2
			</desc>
			<log-file>step14_protal_probe.log</log-file>
			<console target="ap4">
				-v "probe ${sta1.tif.ip} count 1"
			</console>
		</step>

		<step no="15" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				src-mac is ap2’s mac, execute pathprobe in ap1
			</desc>
			<log-file>step15_protal_probe_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "probe ${sta1.tif.ip} count 1"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[${ap1.mgt0.mac}\].*nbr-metric.*${ap1.mgt0.ip};" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="16" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				src-mac is ap2’s mac, execute pathprobe in mp1
			</desc>
			<log-file>step16_protal_probe_${loop_check.idx}.log</log-file>
			<console target="ap3">
				-v "probe ${sta1.tif.ip} count 1"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[${ap3.mgt0.mac}\].*nbr-metric.*${ap3.mgt0.ip};" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="17">
			<desc>
				src-mac is ap2’s mac, execute pathprobe in mp2
			</desc>
			<log-file>step17_protal_probe.log</log-file>
			<console target="ap4">
				-v "probe ${sta1.tif.ip} count 1"
			</console>
		</step>

		<step no="18" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				src-mac is mp1’s mac, execute pathprobe in ap1
			</desc>
			<log-file>step18_protal_probe_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "probe ${sta1.tif.ip} count 1"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[${ap1.mgt0.mac}\].*nbr-metric.*${ap1.mgt0.ip};" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="19" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				src-mac is mp1’s mac, execute pathprobe in ap2
			</desc>
			<log-file>step19_protal_probe_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "probe ${sta1.tif.ip} count 1"
			</telnet>
		</step>

		<step no="20">
			<desc>
				src-mac is mp1’s mac, execute pathprobe in mp2
			</desc>
			<log-file>step20_protal_probe.log</log-file>
			<console target="ap4">
				-v "probe ${sta1.tif.ip} count 1"
			</console>
		</step>

		<step no="21" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				src-mac is mp2’s mac, execute pathprobe in ap1
			</desc>
			<log-file>step21_protal_probe_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "probe ${sta1.tif.ip} count 1"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[${ap1.mgt0.mac}\].*nbr-metric.*${ap1.mgt0.ip};" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="22" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				src-mac is mp2’s mac, execute pathprobe in ap2
			</desc>
			<log-file>step22_protal_probe_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "probe ${sta1.tif.ip} count 1"
			</telnet>
		</step>

		<step no="23" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				src-mac is mp2’s mac, execute pathprobe in mp1
			</desc>
			<log-file>step23_protal_probe_${loop_check.idx}.log</log-file>
			<console target="ap3">
				-v "probe ${sta1.tif.ip} count 1"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\[${ap3.mgt0.mac}\].*nbr-metric.*${ap3.mgt0.ip};" -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>
</testcase>
