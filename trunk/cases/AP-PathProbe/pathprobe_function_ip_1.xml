<testcase>
	<brief>implement Pathprobe &lt; Clients IP&gt;, check pkts forwarding path</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<description>
		Pre-Condition:

		- configure APs as portal, MPs as MP(mesh point)
		- APs and MPs works as amrp neighbor
		- clients connect to MPs

		Test Procedure:

		1. Client connects to MPs
		2. Show proxy, check sta table on mps/aps
		3. APs execute path probe to find the packet forwarding path to the
		client, the parameter is client IP address which is in the mesh
		network
	</description>
	<stage>
		<if> "${ap.wifi1.existed}" == "true"</if>
		<step no="1">
			<desc>Set config for DUT1 via console to </desc>
			<console target="ap1">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password aerohive"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 36"
				-v "user-profile datapath"
				-v "user-profile datapath vlan ${tb.vlan2}"
				-v "user-profile datapath attribute 2"
				-v "security-object autoap"
				-v "security-object autoap default-user-profile-attr 2"
				-v "save config"
				-f basic_apsetup.cfg
			</console>
			<no-error-check />
		</step>

		<step no="2">
			<desc>show wifi1.1's mac of portal</desc>
			<log-file>wifi_mac_portal.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.1"
				-v ""
			</telnet>
		</step>

		<step no="3">
			<desc>get wifi1.1' mac of portal</desc>
			<setvar name="ap1.wifi1.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/wifi_mac_portal.log -i wifi1.1 -o aero -m -width
			</setvar>
		</step>

		<step no="4">
			<desc>show wifi1.1's mac of portal</desc>
			<log-file>eth0_mac_portal.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
				-v ""
			</console>
		</step>

		<step no="5">
			<desc>get wifi1.1' mac of portal</desc>
			<setvar name="ap1.eth0.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/eth0_mac_portal.log -i mgt0 -o aero -m -width
			</setvar>
		</step>

		<step no="6">
			<desc>get wifi1.1' mac of portal</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/eth0_mac_portal.log -i mgt0 -o aero -width -nomask
			</setvar>
		</step>

		<step no="7">
			<desc>Set config for DUT1 via console to </desc>
			<console target="ap2">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password aerohive"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 radio channel 36"
				-v "user-profile datapath"
				-v "user-profile datapath vlan ${tb.vlan1}"
				-v "user-profile datapath attribute 2"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "save config"
				-v "interface eth0 shutdown"
			</console>
			<no-error-check />
		</step>

		<step no="7.1">
			<if>"${ap1.eth1.existed}" == "true"</if>
			<desc>Set config for DUT1 via console to </desc>
			<console target="ap2">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="7.2">
			<desc>Set channle of wifi1 </desc>
			<console target="ap2">
				-v "interface wifi1 radio channel 36"
			</console>
		</step>

		<step no="8" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>check the amrp neighbour</desc>
			<log-file>show_amrp_${loop_check.idx}.log</log-file>
			<console target="ap2">
				-v "show amrp neighbor"
			</console>
			<log-match>-i "${ap1.wifi1.mac}" -i "TWO"</log-match>
		</step>

		<step no="9">
			<desc>show wifi1.1's mac of portal</desc>
			<log-file>eth0_mac_portal.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
				-v ""
			</console>
		</step>

		<step no="10">
			<desc>get wifi1.1' mac of portal</desc>
			<setvar name="ap2.eth0.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/eth0_mac_portal.log -i mgt0 -o aero -m -width
			</setvar>
		</step>
		<step no="11">
			<desc>get wifi1.1' mac of portal</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/eth0_mac_portal.log -i mgt0 -o aero -width -nomask
			</setvar>
		</step>
		<property name="conn1.ssid" value="${ssid.name}" />
		<property name="conn1.proto" value="open" />
		<include prefix="4" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn1, sta1, ap1" />

		<step no="16">
			<desc>Show proxy, check Sta table shows an entry for the client</desc>
			<log-file>protal-proxy.log</log-file>
			<telnet target="ap1">
				-v "show proxy"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}" -i "${ap2.eth0.mac}" -i "n/a"</log-match>
		</step>

		<step no="17">
			<desc>Show proxy, check Sta table shows an entry for the client</desc>
			<log-file>mp-proxy.log</log-file>
			<console target="ap2">
				-v "show proxy"
			</console>
			<log-match>-c -i "${sta1.tif.mac}" -i "${ap2.eth0.mac}" -i "wifi0.1" -i "LO"</log-match>
		</step>

		<step no="18">
			<desc>3. APs execute pathprobe </desc>
			<log-file>protal-probe.log</log-file>
			<telnet target="ap1">
				-v "probe ${sta1.tif.ip} count 1"
			</telnet>
			<log-match>-i "1. \[${ap1.eth0.mac}\]" -i "${ap1.mgt0.ip}" </log-match>
			<log-match>-i "2. \[${ap2.eth0.mac}\]" -i "${ap2.mgt0.ip}" -i "Responder"</log-match>
			<log-match>-i "3. \[${ap1.eth0.mac}\]" -i "self" </log-match>
		</step>
	</stage>
</testcase>
