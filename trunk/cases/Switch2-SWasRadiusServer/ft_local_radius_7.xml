<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Reject the eap auth type not supported</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-config a local radius server
		-db type is local
		-create a user-group
		-create a user,add it to the group
		-bind the group with radius server
		-leave other parameters default
		-enable the rardius server
		-create a ssid with wpa-802.1x,apply this radius server

		Test Procedure:
		-client connects to the ssid with a unspported eap type,example,eap-aka
	</description>
	<numofsw>1</numofsw>
	<tbtype>winlin</tbtype>
	<stage>
		<step no="1">
			<desc>Set radius service for DUT1 </desc>
			<telnet target="sw1">
				-v "clear log buffered"
				-v "security-object autoap"
				-v "security-object autoap security aaa radius primary ${sw1.admin.ip}"
				-v "security-object autoap security protocol-suite 802.1x"
				-v "security-object autoap default-user-profile-attr ${tb.vlan1}"
				-v "user-profile vlan${tb.vlan1} vlan-id ${tb.vlan1} attribute ${tb.vlan1}"
				-v "save radius-server-key radius-server tftp://${pub.tftp1.tip}:sw_certs/cacert.pem"
				-v "save radius-server-key radius-server tftp://${pub.tftp1.tip}:sw_certs/server_cert.pem"
				-v "save radius-server-key radius-server tftp://${pub.tftp1.tip}:sw_certs/server_key.pem"
				-v "aaa radius-server local sta-auth ca-cert cacert.pem server-cert server_cert.pem private-key server_key.pem"
				-v "user-group autotest"
				-v "user-group autotest reauth-interval 0"
				-v "user ${pub.radius1.username}"
				-v "user ${pub.radius1.username} pass ${pub.radius1.passwd}"
				-v "user ${pub.radius1.username} group autotest"
				-v "aaa radius-server local db-type local"
				-v "aaa radius-server local user-group autotest"
				-v "aaa radius-server local enable"
			</telnet>
		</step>
		<step no="2">
			<desc>show status of radius server on AP1</desc>
			<telnet target="sw1">
				-v "show aaa radius-server"
				-v "_debug radiusd excessive"
			</telnet>
			<log-match>-i "Enabled" -i "Local RADIUS" -p 3 -c</log-match>
			<log-match>-i "Enabled" -i "local database:" -p 3 -c</log-match>
		</step>
		<step no="3">
			<desc>
				enable 802.1x auth and dhcp server on switch
			</desc>
			<telnet target="sw1">
				-v "vlan ${tb.vlan1}"
				-v "user-profile vlan${tb.vlan1} vlan-id ${tb.vlan1} attribute ${tb.vlan1}"
				-v "interface ${sw1.port1} security-object autoap"
			</telnet>
		</step>
		<step no="4">
			<desc>
				config eap protocol and start
			</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-new="${job.user}-${job.sid}-1">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixn_connect -def enable -chassisIP ${pub.chassis1.ip} -ixn_tcl_server ${sw1.ixn_tcl_server} -userName ${job.user} -portList ${sw1.port1.ixia_port} -phyList ${sw1.port1.phytype}"
				-v ""

				-v "ixn_emulation_8021x_config -portList ${sw1.port1.ixia_port} \
				-mac_address ${sw1.port1.ixia_port.if1.mac} \
				-mac_addr_increment 0.0.0.0.0.1 \
				-mac_addr_count 1 \
				-protocol FAST \
				-username ${pub.radius1.username} \
				-password ${pub.radius1.passwd} \
				-ca_path ${ixn.cert_dir} \
				-key_path ${ixn.cert_dir}"
				-v "ixn_allprotocols_control -action start"
				-v "sleep 5"
				-v "ixn_emulation_8021x_stats -protocol fast"
			</ssh>
			<log-match>-re -e "{FAST Success} 1" -n</log-match>
			<no-error-check />
		</step>
		<step no="5">
			<telnet target="sw1" timeout="200">
				-v "show logging buffered"
			</telnet>
			<log-match>-c -i "NAK asked for unsupported type 43"</log-match>
			<log-match>-c -i "Failed in EAP select"</log-match>
			<log-match>-c -i "EAP NAK"</log-match>
			<log-match>-c -i "++\[eap\] returns invalid"</log-match>
			<log-match>-c -i "Failed to authenticate the user"</log-match>
			<log-match>-c -i "RADIUS: The RADIUS server rejected user '${pub.radius1.username}' through the NAS at ${sw1.admin.ip}."</log-match>
			<log-match>-c -i "modsingle\[authenticate\]: returned from eap (rlm_eap) for request"</log-match>
			<no-error-check />
		</step>
	</stage>
	<post-process>
		<stage>
			<step no="post1">
				<ssh timeout="180" host="${pub.tclclient1.ip}" prompt="%.*|root@.*#" session-close="${job.user}-${job.sid}-1">
					-v ""
					-v "ixn_allprotocols_control -action stop"
				</ssh>
			</step>
			<!-- self defined steps, no need script now -->
		</stage>
		<include file="include/sw_default_post_process.xml" />
	</post-process>
</testcase>
