<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>MP trigger failover</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		-AP1 wifi0 is backhaul mode, wifi1 is backhaul mode
		-AP2 wifi0 is dual/backhaul mode, wifi1 is dual/backhaul mode
    -MP1 wifi0 is backhaul mode, wifi1 is access mode
		Test Procedure:

		1, AP1 wifi0 and wifi1 disable failover
    2, Pull out AP1 Ethernet line

	</description>
	<numofap>2</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="0">
			<desc>
				shutdown interface eth1 of AP1
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<console target="ap1">
				-v "interface eth1 shutdown"
			</console>
		</step>
		
		<step no="0.1">
			<desc>
				shutdown interface eth1 0f AP2
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<console target="ap2">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="1">
			<desc>
				-Set AP1 wifi0 as backhaul mode
			</desc>
			<console target="ap1">
				-v "hive ${hive.name}"
				-v "interface wifi1 radio channel 44"
				-v "interface mgt0 hive ${hive.name}"
			</console>
		</step>
		
		<step no="2">
			<desc>
				-AP1 wifi0/wifi1 disable failove
			</desc>
			<console target="ap1">
				-v "radio profile ng phymode 11ng"
				-v "no radio profile ng backhaul failover"
				-v "interface wifi0 radio profile ng"
				-v "radio profile na phymode 11na"
				-v "no radio profile na backhaul failover"
				-v "interface wifi1 radio profile na"
			</console>
		</step>
		
		<step no="3">
			<desc>
				-Set AP2 the same hive with AP1
			</desc>
			<console target="ap2">
				-v "hive ${hive.name}"
				-v "interface wifi1 radio channel 44"
				-v "interface wifi0 mode backhaul"
				-v "interface mgt0 hive ${hive.name}"
			</console>
		</step>
		
		<step no="4">
			<desc>AP2 interface eth0 shutdown</desc>
			<console target="ap2">
				-v "interface eth0 shutdown"
			</console>
		</step>
		
		<step no="4.1">
			<desc>
				check the AP1 interface wifi1.1 of MAC
			</desc>
			<log-file>step4.1_check_wifi1.1_MAC.log</log-file>
			<console target="ap1">
				-v "show interface wifi1.1"
			</console>
		</step>

		<step no="4.2">
			<desc>
				get the AP1 interface wifi1.1 of MAC
			</desc>
			<setvar name="ap1_wifi1_mac">
				${bin.dir}/getbyrexp.py -p "(?i)MAC Addr=(\d+.*?);" -f ${log.dir}/step4.1_check_wifi1.1_MAC.log -t str
			</setvar>
		</step>
		
		<step no="5" delay="180">
		  <if>"${ap2.wifi1.existed}" == "true"</if>
			<desc>
				show amrp neighbor
			</desc>
			<log-file>step5_show_amrp_neighbor</log-file>
			<console target="ap2">
				-v "show amrp neighbor"
			</console>
			<log-match>-e "${ap1_wifi1_mac}"</log-match>
		</step>
		
		<step no="6">
		  <if>"${ap2.wifi1.existed}" == "true"</if>
			<desc>
				show route
			</desc>
			<log-file>step6_show_route</log-file>
			<console target="ap2">
				-v "show route"
			</console>
			<log-match>-e "0000:0000:0000" -i "wifi1.1"</log-match>
		</step>
		
		<step no="7">
			<desc>
				-open debug: _debug dcd chnl
			</desc>
			<console target="ap2">
				-v "_debug dcd chnl"
				-v "clear log"
			</console>
		</step>

		<step no="8">
			<desc>interface eth0 shutdown</desc>
			<console target="ap1">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<step no="9" delay="10">
		  <if>"${ap1.wifi1.existed}" != "true"</if>
			<desc>
				show log debug
			</desc>
			<log-file>show_log_debug_failover.log</log-file>
			<console target="ap2" timeout="200">
				-v "show logging buffered | in failover"
			</console>
			<log-match>-e "wifi0" -i "start failover trigger timer"</log-match>
			<log-match>-e "ACSP failover trigger timer" -i "wifi0"</log-match>
			<log-match>-e "wifi0" -i "start do failover"</log-match>
		</step>

		<step no="10" delay="10">
		  <if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				show log debug
			</desc>
			<log-file>show_log_debug_failover.log</log-file>
			<console target="ap2" timeout="200">
				-v "show logging buffered | in failover"
			</console>
			<log-match>-e "wifi0" -i "start failover trigger timer"</log-match>
			<log-match>-e "ACSP failover trigger timer" -i "wifi0"</log-match>
			<log-match>-e "wifi0" -i "start do failover"</log-match>
			<log-match>-e "wifi1" -i "start failover trigger timer"</log-match>
			<log-match>-e "ACSP failover trigger timer" -i "wifi1"</log-match>
			<log-match>-e "wifi1" -i "start do failover"</log-match>
		</step>	
		
		
	

	</stage>
</testcase>
