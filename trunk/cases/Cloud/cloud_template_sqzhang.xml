<testcase>
	<brief>hshao free tb brtest</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		brtest
	</description>
	<numofap>1</numofap>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>

	<property name="test1" value="ServiceType" />
	<property name="ap.mac" value="197711112102" />
	<property name="tb.fileserver" value="10.155.40.181" />
	<property name="owner.id" value="102" />
	<property name="ip.address1" value="10.155.60.111" />

	<declaration>
		<step name="create.device">
			<restapi name="createDevice">
				{
				"ownerId":${owner.id},
				"ipAddress":"10.155.21.21",
				"macAddress":"197711112102",
				"hostname":"virtual device for test 1",
				"serialNumber":"1111222233334444",
				"productType":"AP_330",
				"softwareVersion": "6.1.0.2",
				"role":19050,
				"function":"Ap",
				"adminState":"UNMANAGED",
				"isConnected":true
				}
			</restapi>
		</step>
		<step name="create.network.policy">
			<restapi name="createNetworkPolicy">
				{
				"ownerId" : ${owner.id},
				"name":"Cloud_automation",
				"type" : "NetworkAccessAndSwitching"
				}
            </restapi>
		</step>
		<step name="create.active.directory.server">
			<restapi name="createActiveDirectoryServer">
				{
				"ownerId": ${owner.id},
				"predefined": false,
				"serverIp":
				{
				"jsonType": "hostname",
				"ownerId": ${owner.id},
				"predefined": false,
				"name": "Activehostname",
				"description": "This is a Activehostname",
				"hostname": "${host.name1}"
				},
				
				"deviceConfig":
				{
				"ownerId": ${owner.id},
				"predefined": false,
				"device":refObjectInTestStep="create.device",
				"networkPolicy":refObjectInTestStep="create.network.policy",
				"tags":[],
				"ipAddress": "10.155.34.181",
				"netmask": "255.255.255.0",
				"defaultGateway": "10.155.34.254"
				},
				
				"entries":
				[{
				"ownerId":
				${owner.id},
				"predefined": false,
				"tags": [],
				"description": "This is a entries description",
				"serverIp":
				{
				"jsonType": "ip",
				"ownerId":${owner.id},
				"predefined": false,
				"name": "IPAddress",
				"description":"This is a IPAddress",
				"ipAddress": "${ip.address1}"
				},
				"multipleDomains":
				[{
				"ownerId": ${owner.id},
				"predefined": false,
				"serverIp":
				{
				"jsonType": "ip",
				"ownerId": ${owner.id},
				"predefined":false,
				"name": "IPAddress",
				"description": "This is a IPAddress",
				"ipAddress": "${ip.address1}"
				},
				"domain": "multipleme.com",
				"domainUser": "test100",
				"domainUserPassword": "aerohive"
				}],
				"domain": "entries.com",
				"baseDN": "dc=HMQATEST,dc=COM",
				"computerOU": "computerOU",
				"enableTls": false,
				"domainAdmin":"administrator",
				"domainAdminPassword": "aerohive",
				"domainAdminSaved": true,
				"domainUser": "test99",
				"domainUserPassword": "aerohive"
				}],
				
				"multipleDomains":
				[{
				"ownerId":${owner.id},
				"predefined": false,
				"serverIp":
				{
				"jsonType": "ip",
				"ownerId": ${owner.id},
				"predefined": false,
				"name": "IPAddress",
				"description": "This is a IPAddress",
				"ipAddress": "${ip.address1}"
				},
				"domain": "multipleme.com",
				"domainUser": "test100",
				"domainUserPassword": "aerohive"
				}],
				"serverRole": "BACKUP3",
				"domain": "entry.com",
				"baseDN": "dc=HMQATEST,dc=COM",
				"computerOU":"computerou",
				"enableTls": true,
				"domainAdmin": "administrator",
				"domainAdminPassword": "aerohive",
				"domainAdminSaved": false,
				"domainUser": "test99",
				"domainUserPassword": "aerohive"
				}
         </restapi>
		</step>
	</declaration>

	<stage>
		<step no="1">
			<call step="create.active.directory.server" />
		</step>
		<step no="4">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat
				/var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>
		</step>
	</stage>
	<failed-process />
</testcase>
