<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>feature test cases</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		Verifiy the security for ssid
		Open ssid

	</description>
	<numofap>1</numofap>
	<tbtype>winlin</tbtype>
	
	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>

	<property name="slaBandwidth" value="12345" />
	<property name="ap.mac" value="000011112104" />
	<property name="tb.fileserver" value="10.155.40.181" />
	<property name="owner.id" value="104" />
	<property name="vlan.id" value="10" />
	<property name="userprofile.id" value="10" />
	
	<declaration>
	<step name = "create.SsidProfileRateSettings" description=""> 
			<restapi name = "createSsidProfileRateSettings">
				{
				"ownerId": 104,
				"predefined": false,
				"enable11a": true,
				"enable11bg": true,
				"enable11n": true,
				"enable11ac": true,
				"disable11nHighCapabilities": true,
				"rateSets11a": ["MUhRnFDxzV0fjeb8f7iHhoKRfSR42HZ4m2OFUo885182kzWYCL0Lx",
				"JEpoOBWMA3FQo7ajbSo4O6B2KTEAgpvTARt03TCHsLQEnAYvpcYiUApImsJmZctLicAT"],
				"rateSets11bg": ["rFF6LDTcROXAn1psrXwHTx4DJVmnaMLSuiRE9P6RxNKk4PLLBiPaX",
				"UbcVWEqxpN2xxcF9uGy1p7cFD9iMrdEaXtffdwxm531CYzr6ft7U28AO9T3BHImyVFjAIF"],
				"rateSets11n": ["npsr9YJGGWTlEDw1jALtDbghzVTrNlvoFeXSJ1hfRZXWpHIxi5fZ2rk2",
				"dbTi8hsdguqDHuXKR6K2tuo3DTM8hGfbEQU3smdpce6OLiT6ADe9HZvk8D0uDoDN6HTokoZcjg"],
				"enableStreamOne": true,
				"enableStreamTwo": true,
				"enableStreamThree": true,
				"mcsValueOne": 9,
				"mcsValueTwo": 9,
				"mcsValueThree": 9
				}	
			</restapi>
		</step>	
	
	
	
	<step name = "create.ipdosprevention" description=""> 
			<restapi name="createIpDosPrevention">
			{
			"ownerId":${owner.id},
			"predefined":false,
			"jsonType":"ip-dos-prevention",
			"name":"IP-dos-test",
			"description":"This is one ip dos",
			"enableSynCheck":false,
			"dosParams":[
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"RADIUS_ATTACK",
			"threshold":1497996843,
			"dosAction":"BAN_FOREVER",
			"duration":479164046,
			"enabled":true},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ICMP_FLOOD",
			"threshold":154465117,
			"dosAction":"BAN_FOREVER",
			"duration":1772366886,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"IP_SPOOF",
			"threshold":154465117,
			"dosAction":"BAN_FOREVER",
			"duration":1772366886,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ADDRESS_SWEEP",
			"threshold":154465117,
			"dosAction":"BAN_FOREVER",
			"duration":1772366886,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"PORT_SCAN",
			"threshold":154465117,
			"dosAction":"BAN_FOREVER",
			"duration":1772366886,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"UDP_FLOOD",
			"threshold":154465117,
			"dosAction":"BAN_FOREVER",
			"duration":1772366886,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"SYN_FLOOD",
			"threshold":154465117,
			"dosAction":"BAN_FOREVER",
			"duration":1772366886,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ARP_FLOOD",
			"threshold":154465117,
			"dosAction":"BAN_FOREVER",
			"duration":1772366886,
			"enabled":false}
			]}}
		</restapi>
		</step>	
	
	<step name = "create.SsidProfileAdvancedSettings" description=""> 
			<restapi name = "createSsidProfileAdvancedSettings">
				{
				"ownerId": 104,
				"predefined": false,
				"userProfileApplicationSequence": "CWP_SSID_MAC",
				"ignoreBroadcastProbeReq": true,
				"veEnableVoiceEnterprise": true,
				"veEnable802Dot11k": false,
				"veEnable802Dot11v": false,
				"veEnable802Dot11r": true,
				"wmmEnableWmm": false,
				"wmmEnableWmmVideo": false,
				"wmmEnableWmmVoice": false,
				"wmmEnableUapsd": false,
				"multicastConvertIpToUnicast": "DISABLE",
				"multicastChannelUtilThreshold":100,
				"multicastMemberCountThreshold":3,
				"clientMaxClientLimit":5,
				"clientEapTimeout":187,
				"clientRtsThreshold":1769,
				"clientFragmentThreshold":353,
				"clientDtimSetting":223,
				"clientInactiveClientAgeout":8,
				"clientEapRetries":4,
				"clientRoamCacheUpdateInterval":19686,
				"clientRoamCacheAgeout":440,
				"clientLocalCacheTimeout":572714
				}	
			</restapi>
		</step>	
	
	<step name = "create.macdosprevention.station" description=""> 
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos2",
			"description": "This is one mac dos prevention",
			"dosType": "STATION",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false}]
			}
    </restapi>
		</step>	
	
	<step name = "create.macdosprevention.ssid" description=""> 
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos1",
			"description": "This is one mac dos prevention",
			"dosType": "SSID",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false}]
			}
    </restapi>
		</step>	
	
	<step name = "create.trafficfilter" description=""> 
			<restapi name="createTrafficFilter">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "traffic-filter",
			"name": "Default service filter",
			"description": "This is one mac dos",
			"enableSsh": true,
			"enableTelnet": false,
			"enablePing": true,
			"enableSnmp": false,
			"enableInterTraffic": true
			}
   </restapi>
		</step>	
		
		<step name = "create.client.sla.profile" description=""> 
			<restapi name = "createClientSlaSettings">
				{
				"ownerId" : 104,
				"predefined" : false, 
				"slaEnable" : true, 
				"slaBandwidth" : ${slaBandwidth}, 
				"actionType" : "LOG"
				}	
			</restapi>
		</step>	
	   
	   <step name="create.user.profile" description="">
			<restapi name = "createUserProfile">
				{
				"jsonType" : "user-profile",
				"ownerId" : 104,
				"name" : "UserProfile10",
				"predefined" : false,
				"vlan" : {
				"jsonType" : "vlan",
				"ownerId" : 104,
				"name" : "Aerohive_VlanProfile",
				"description" : "Vlan Profile for Demo",
				"predefined" : false,
				"entries" : [ {
				"ownerId" : 104,
				"tags" : [ ],
				"vlanNumber" : ${vlan.id}
				} ]
				},
				"enableFirewall" : false,	
				"enableSchedule" : false,
				"schedules" : [ ],
				"enableTrafficTunneling" : false,
				"enableClientSla" : true,
				"clientSlaSettingsId" : refIdInTestStep = "create.client.sla.profile",
				"enableQos" : false,
				"restriction" : "DENY_CAR",
				"enableClassification" : false,
				"radiusAttributeNumber": 104
				}
			</restapi>
		</step>
		
		<step name="create.external.radius.profile" description="">
		    <restapi name="createExternalRadiusProfile">
		          {
                   "ownerId" : 104, 
                   "predefined" : false, 
                   "jsonType" : "external-radius-profile", 
                   "name" : "AAARadiusClient", 
                   "description" : "ExternalRadiusProfile", 
                   "externalRadiusServerOption" : "OBTAIN_VIA_DHCP_OPTIONS"
                   }
		    </restapi>
		</step>
		
		<step name="create.ssid.profile" description="">
			<restapi name = "createSsidProfile">
				{
				"jsonType" : "ssid-profile",
				"ownerId" : 104,
				"name" : "8021x",
				"ssid" : "8021x",
				"description" : "a ssid profile for integration test",
				"radioBand" : "DUAL",
				"ssidUsageIndustry" : "ENTERPRISE",
				"ssidUsageUserGroup" : "STAFF_AND_TEACHERS",
				"accessSecurity": {
				     "ownerId": 104,
				     "predefined":false,
                     "jsonType": "802DOT1X", 
                      "keyManagement": "WPA2_8021X", 
                      "encryptionMethod": "CCMP"
				},
				"externalRadiusProfile" : refObjectInTestStep = "create.external.radius.profile",
				"defaultUserProfile" : refObjectInTestStep = "create.user.profile",
				"advancedSettings": refObjectInTestStep = "create.SsidProfileAdvancedSettings",
				"rateSettings": refObjectInTestStep = "create.SsidProfileRateSettings",
				"ipBasedDos": refObjectInTestStep = "create.ipdosprevention",
				"stationBasedMacDos": refObjectInTestStep = "create.macdosprevention.station",
				"ssidBasedMacDos": refObjectInTestStep = "create.macdosprevention.ssid",
				"trafficFilter": refObjectInTestStep = "create.trafficfilter",
				"advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":600,
					        "gtkTimeout":4000,
					        "gtkRetries":3,
					        "ptkRekeyPeriod":11,
					        "ptkTimeout":4000,
					        "ptkRetries":3,
							"gmkRekeyPeriod":86400,
							"replayWindow":0,
							"nonStrict":false,
							"reauthInterval":666,
							"enablePreauthentication":true,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"OPTIONAL",
							"enableBroadcastOrMulticastIntegrityProtocol":true,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":true,
							"enableReauthInterval":true
							}
				}
			</restapi>
		</step>	
		

		<step name="create.network.policy" description="">
			<restapi name = "createNetworkPolicy">
				{
				"ownerId" : 104,
				"name" : "Aerohive_network",
				"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
		</step>
		<!--This step should be removed after Could 3.0 can push configuration to device-->
		<step name="create.device.1.ap330.v6101.as.ap">
			<restapi name = "createDevice">
				{
				"ownerId":104,
				"ipAddress": "10.155.21.21",
				"macAddress": "000011112104",
				"hostname": "virtual device for test",
				"serialNumber": "11112222333344",
				"productType": "AP_330",
				"softwareVersion": "6.1.0.1",
				"role": 19050,
				"function": "Ap",
				"adminState": "UNMANAGED",
				"isConnected": true
				}
			</restapi>
		</step>
		<step name="add.ssid.profile.into.network.policy" description="">
			<restapi name = "assignfeature">
				{
				"jsonType" : "network_policy",
				"networkPolicyId" : refIdInTestStep = "create.network.policy",
				"featureId" : refIdInTestStep = "create.ssid.profile"
				}
			</restapi>
		</step>
		<step name="assign.network.policy.to.device" description="">
			<restapi name ="assignnetworkpolicy">
				{
				 "device" : refObjectInTestStep = "create.device.1.ap330.v6101.as.ap",
                 "networkPolicy" : refObjectInTestStep = "create.network.policy"
				}
			</restapi>
		</step>

		<step name="download.cli.to.device" description="">
			<restapi name = "downloadcli">
				{
				"networkPolicyId" : refIdInTestStep = "create.network.policy",
				"deviceIds" : [ refIdInTestStep = "create.device.1.ap330.v6101.as.ap"],
				"configDownloadTypes" : [ "deviceFull"]
				}
			</restapi>
		</step>
	</declaration>

	<stage>
	    <step no="1">
			<call step="create.SsidProfileRateSettings" />
			<failed>next</failed>
		</step>
	
	    <step no="2">
			<call step="create.ipdosprevention" />
			<failed>next</failed>
		</step>
	
	    <step no="3">
			<call step="create.SsidProfileAdvancedSettings" />
			<failed>next</failed>
		</step>
	
	    <step no="4">
			<call step="create.macdosprevention.station" />
			<failed>next</failed>
		</step>
	
		<step no="5">
			<call step="create.macdosprevention.ssid" />
			<failed>next</failed>
		</step>
	
		<step no="6">
			<call step="create.trafficfilter" />
			<failed>next</failed>
		</step>
	
		<step no="7">
			<call step="create.client.sla.profile" />
			<failed>next</failed>
		</step>
		<step no="8">
			<call step="create.user.profile" />
			<failed>next</failed>
		</step>
		<step no="9">
			<call step="create.ssid.profile" />
			<failed>next</failed>
		</step>
		
		<step no="10">
			<call step="create.network.policy" />
			<failed>next</failed>
		</step>
		<step no="12">
			<call step="create.device.1.ap330.v6101.as.ap" />
			<failed>next</failed>
		</step>
		
		<step no="13">
			<call step="add.ssid.profile.into.network.policy" />
			<failed>next</failed>
		</step>
		
		<step no="14">
			<call step="assign.network.policy.to.device" />
			<failed>next</failed>
		</step>
		<step no="15">
			<call step="download.cli.to.device" />
			<failed>next</failed>
		</step>
		<step no="16">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>
            <log-match>-i "security-object 8021x security preauth"</log-match>
            <log-match>-i "security-object 8021x security protocol-suite wpa2-aes-8021x rekey-period 600 strict gmk-rekey-period 86400 roaming proactive-pmkid-response ptk-rekey-period 11"</log-match>
            <log-match>-i "security-object 8021x security protocol-suite wpa2-aes-8021x reauth-interval 666"</log-match>
            <log-match>-i "security-object 8021x security protocol-suite wpa2-aes-8021x mfp optional bip"</log-match>
         </step>
	</stage>
	<failed-process />
	<post-process />
</testcase>
