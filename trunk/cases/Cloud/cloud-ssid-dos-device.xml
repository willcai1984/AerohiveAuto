<testcase>
	<brief>Cloud SSID Dos basic case for device</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		1. Verify the Mac Filter can be correctly create, and it can be bind to a SSID
		2. The configuration can be correctly push to real device
	</description>
	<numofap>1</numofap>
 	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>
	<desc>
		a. The Mac Dos in ssid-level 
		ssid SSID-DoS security wlan dos ssid frame-type probe-req alarm 10
		ssid SSID-DoS security wlan dos ssid frame-type probe-resp alarm 20
		ssid SSID-DoS security wlan dos ssid frame-type assoc-req alarm 30
		ssid SSID-DoS security wlan dos ssid frame-type assoc-resp alarm 40
		ssid SSID-DoS security wlan dos ssid frame-type disassoc alarm 50
		no ssid SSID-DoS security wlan dos ssid frame-type auth
		no ssid SSID-DoS security wlan dos ssid frame-type deauth
		no ssid SSID-DoS security wlan dos ssid frame-type eapol
		
		b. The Mac Dos in station-level
		ssid SSID-DoS security wlan dos station-level frame-type probe-req alarm 10
		ssid SSID-DoS security wlan dos station-level frame-type probe-resp alarm 20
		ssid SSID-DoS security wlan dos station-level frame-type assoc-req alarm 30
		ssid SSID-DoS security wlan dos station-level frame-type assoc-resp alarm 40
		ssid SSID-DoS security wlan dos station-level frame-type disassoc alarm 50
		no ssid SSID-DoS security wlan dos station-level frame-type auth
		no ssid SSID-DoS security wlan dos station-level frame-type deauth
		no ssid SSID-DoS security wlan dos station-level frame-type eapol
		
		c. The IP Dos 
		ssid SSID-DoS security screening icmp-flood threshold 10 action drop 1
		ssid SSID-DoS security screening udp-flood threshold 20 action disconnect
		ssid SSID-DoS security screening syn-flood threshold 30 action ban 3600
		ssid SSID-DoS security screening arp-flood threshold 40 action ban-forever
		ssid SSID-DoS security screening address-sweep threshold 50 action alarm 10
	</desc>
	<property name="mac.oui" value="00:19:77" />
	<property name="owner.id" value="102" />
	<property name="vlan.id" value="105" />
	<property name="userprofile.id" value="105" />
	
	<declaration>
		<step name="create.traffic.filter" description="">
			<restapi name="createTrafficFilter">
				{
				"ownerId": ${owner.id},
				"predefined": false,
				"jsonType": "traffic-filter",
				"name": "Default service filter",
				"description": "This is one mac dos",
				"enableSsh": true,
				"enableTelnet": false,
				"enablePing": true,
				"enableSnmp": false,
				"enableInterTraffic": true
				}
		   </restapi>
		</step>
		<step name="create.mac.dos.prevention.ssid" description="">
			<restapi name="createMacDosPrevention">
				{
					"ownerId": ${owner.id},
					"predefined": false,
					"jsonType": "mac-dos-prevention",
					"name": "Aerohive-mac-dos1",
					"description": "This is one mac dos prevention",
					"dosType": "SSID",
					"dosParams": 
					[{
						"ownerId":${owner.id},
						"predefined":false,
						"dosDetectionType":"PROBE_REQ",
						"threshold":950639156,
						"interval":10,
						"enableBan":false,
						"ban":848030328,
						"enabled":true
					},
					{
						"ownerId":${owner.id},
						"predefined":false,
						"dosDetectionType":"PROBE_RESP",
						"threshold":950639156,
						"interval":20,
						"enableBan":false,
						"ban":848030328,
						"enabled":true
					},
					{
						"ownerId":${owner.id},
						"predefined":false,
						"dosDetectionType":"ASSOC_REQ",
						"threshold":950639156,
						"interval":30,
						"enableBan":true,
						"ban":848030328,
						"enabled":true
					},
					{
						"ownerId":${owner.id},
						"predefined":false,
						"dosDetectionType":"ASSOC_RESP",
						"threshold":950639156,
						"interval":40,
						"enableBan":false,
						"ban":848030328,
						"enabled":true
					},
					{
						"ownerId": ${owner.id},
					    "predefined": false,
					    "dosDetectionType": "DISASSOC",
					    "threshold": 1341363696,
					    "interval": 50,
					    "enableBan": true,
					    "ban": 1799352961,
					    "enabled": true
					},
					{
						"ownerId":${owner.id},
						"predefined":false,
						"dosDetectionType":"AUTH",
						"threshold":950639156,
						"interval":254071646,
						"enableBan":false,
						"ban":848030328,
						"enabled":false
					},
					{
						"ownerId":${owner.id},
						"predefined":false,
						"dosDetectionType":"DEAUTH",
						"threshold":950639156,
						"interval":254071646,
						"enableBan":false,
						"ban":848030328,
						"enabled":false
					},
					{
						"ownerId":${owner.id},
						"predefined":false,
						"dosDetectionType":"EAPOL",
						"threshold":1462667424,
						"interval":253332708,
						"enableBan":false,
						"ban":630770212,
						"enabled":false
					}]
				}
	    </restapi>
		</step>
		<step name="create.mac.dos.prevention.station" description="">
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos2",
			"description": "This is one mac dos prevention",
			"dosType": "STATION",
			"dosParams": 
				[{
						"ownerId":${owner.id},
						"predefined":false,
						"dosDetectionType":"PROBE_REQ",
						"threshold":950639156,
						"interval":10,
						"enableBan":false,
						"ban":848030328,
						"enabled":true
					},
					{
						"ownerId":${owner.id},
						"predefined":false,
						"dosDetectionType":"PROBE_RESP",
						"threshold":950639156,
						"interval":20,
						"enableBan":false,
						"ban":848030328,
						"enabled":true
					},
					{
						"ownerId":${owner.id},
						"predefined":false,
						"dosDetectionType":"ASSOC_REQ",
						"threshold":950639156,
						"interval":30,
						"enableBan":true,
						"ban":848030328,
						"enabled":true
					},
					{
						"ownerId":${owner.id},
						"predefined":false,
						"dosDetectionType":"ASSOC_RESP",
						"threshold":950639156,
						"interval":40,
						"enableBan":false,
						"ban":848030328,
						"enabled":true
					},
					{
						"ownerId": ${owner.id},
					    "predefined": false,
					    "dosDetectionType": "DISASSOC",
					    "threshold": 1341363696,
					    "interval": 50,
					    "enableBan": true,
					    "ban": 1799352961,
					    "enabled": true
					},
					{
						"ownerId":${owner.id},
						"predefined":false,
						"dosDetectionType":"AUTH",
						"threshold":950639156,
						"interval":254071646,
						"enableBan":false,
						"ban":848030328,
						"enabled":false
					},
					{
						"ownerId":${owner.id},
						"predefined":false,
						"dosDetectionType":"DEAUTH",
						"threshold":950639156,
						"interval":254071646,
						"enableBan":false,
						"ban":848030328,
						"enabled":false
					},
					{
						"ownerId":${owner.id},
						"predefined":false,
						"dosDetectionType":"EAPOL",
						"threshold":1462667424,
						"interval":253332708,
						"enableBan":false,
						"ban":630770212,
						"enabled":false
					}]
			}
	    </restapi>
		</step>
		<step name="create.ip.dos.prevention" description="">
			<restapi name="createIpDosPrevention">
    		{
				"ownerId":"${owner.id}",
				"predefined":false,
				"jsonType":"ip-dos-prevention",
				"name":"IP-dos-test",
				"description":"This is one ip dos",
				"enableSynCheck":false,
				"dosParams":
					[{
						"ownerId":"${owner.id}",
						"predefined":false,
						"screeningType":"ICMP_FLOOD",
						"threshold":10,
						"dosAction":"DROP",
						"duration":1,
						"enabled":true
					},	
					{
						"ownerId":"${owner.id}",
						"predefined":false,
						"screeningType":"UDP_FLOOD",
						"threshold":20,
						"dosAction":"DISCONNECT",
						"duration":10,
						"enabled":true
					},
					{
						"ownerId":"${owner.id}",
						"predefined":false,
						"screeningType":"SYN_FLOOD",
						"threshold":30,
						"dosAction":"BAN",
						"duration":3600,
						"enabled":true
					},
					{
						"ownerId":"${owner.id}",
						"predefined":false,
						"screeningType":"ARP_FLOOD",
						"threshold":40,
						"dosAction":"BAN_FOREVER",
						"duration":10,
						"enabled":true
					},
					{
						"ownerId":"${owner.id}",
						"predefined":false,
						"screeningType":"ADDRESS_SWEEP",
						"threshold":50,
						"dosAction":"ALARM",
						"duration":10,
						"enabled":true
					},
					{
						"ownerId":"${owner.id}",
						"predefined":false,
						"screeningType":"PORT_SCAN",
						"threshold":100,
						"dosAction":"BAN_FOREVER",
						"duration":10,
						"enabled":false
					},
					{
						"ownerId":"${owner.id}",
						"predefined":false,
						"screeningType":"IP_SPOOF",
						"threshold":3,
						"dosAction":"BAN_FOREVER",
						"duration":10,
						"enabled":false
					},
					{
						"ownerId":"${owner.id}",
						"predefined":false,
						"screeningType":"RADIUS_ATTACK",
						"threshold":5,
						"dosAction":"BAN_FOREVER",
						"duration":10,
						"enabled":false
					}]
			}
			</restapi>
		</step> 
 		<step name="create.user.profile.1">
            <restapi name="createUserProfile">
                {
                    "jsonType" : "user-profile",
                    "ownerId" : ${owner.id},
                    "name" : "CloudUserProfile106",
                    "predefined" : false,
                    "vlan" : 
            			{
                        "jsonType" : "vlan",
                        "ownerId" : ${owner.id},
                        "name" : "Aerohive_VlanProfile",
                        "description" : "Vlan Profile for Demo",
                        "predefined" : false,
                        "entries" : 
            				[ {
                            "ownerId" : ${owner.id},
                            "tags" : [ ],
                            "vlanNumber" : ${vlan.id}
                        	} ]
                    	},
                    "enableFirewall" : false,
                    "enableSchedule" : false,
                    "schedules" : [ ],
                    "enableTrafficTunneling" : false,
                    "enableClientSla" : false,
                    "enableQos" : false,
                    "restriction" : "DENY_CAR",
                    "enableClassification" : false           
                }
            </restapi>
        </step>
        <step name="create.ssid.profile.1">
     		<restapi name="createSsidProfile">
                {
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSID-DoS",
                    "ssid" : "SSID-DoS",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "ENTERPRISE",
                    "wirelessNetworkUsage" : "STAFF_AND_TEACHERS",
                    "accessSecurity": {
                    "jsonType": "802DOT1X",
                    "ownerId": ${owner.id},
                    "keyManagement": "WEP_8021X",
                    "encryptionMethod": "CCMP",
                    "keyType": "HEX",
                    "keyValue": "gzCoghUgcL115BMiddQxCWAdn7xk0fqy6S7ExRNP3pKC46ID5p63N2IUpgQ1wPQB"
                    },
     				"scheduleEntries": [],
                    "defaultUserProfile" : "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": false,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": false,
						"wmmEnableWmmVideo": false,
						"wmmEnableWmmVoice": false,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "DISABLE",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":5,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.ssid}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.station}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
     		</restapi>
        </step>
		<step name="create.network.policy.1">
			<restapi name = "createNetworkPolicy">
				{
				"ownerId" : ${owner.id},
  				"predefined": false,
				"jsonType": "network-policy",
				"name" : "Aerohive_UserProfile10",
				"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
        </step>
		<!--This step should be removed after Could 3.0 can push configuration to device-->
		<step name="create.device.1.ap330.v6102.as.ap">
			<restapi name = "createDevice">
				{
				"ownerId":${owner.id},
                "ipAddress": "${ap1.mgt0.ip}",
                "macAddress":"${ap1.mgt0.mac}",
				"hostname":"virtual device for test",
				"serialNumber":"1111222233334444",
				"productType":"AP_330",
				"softwareVersion": "6.1.0.2",
				"role":19050,
				"function":"Ap",
				"adminState":"UNMANAGED",
				"isConnected":true
				}
			</restapi>
		</step>

        <step name="add.ssid.profile.into.network.policy">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.1}"
                }
            </restapi>
        </step>
        <step name="assign.network.policy.to.device">
            <restapi name="assignnetworkpolicy">
                {
                    "device" : "@{create.device.1.ap330.v6102.as.ap}",
                    "networkPolicy" : "@{create.network.policy.1}"
                }
            </restapi>
        </step>

        <step name="download.cli.to.device">
            <restapi name="downloadcli">
                {
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "deviceIds" : [ "@{create.device.1.ap330.v6102.as.ap}"],
                    "configDownloadTypes" : [ "deviceFull"]
                }
            </restapi>
        </step>
        
	</declaration>
	<stage>
		<step no="1">
			<call step="create.traffic.filter" />
			<failed>next</failed>
		</step>
		<step no="2">
			<call step="create.mac.dos.prevention.ssid" />
			<failed>next</failed>
		</step>
		<step no="3">
			<call step="create.mac.dos.prevention.station" />
			<failed>next</failed>
		</step>
		<step no="4">
			<call step="create.ip.dos.prevention" />
			<failed>next</failed>
		</step>	
		<step no="5">
			<call step="create.network.policy.1" />
			<failed>next</failed>
		</step>
		<step no="6">
			<call step="create.device.1.ap330.v6102.as.ap" />
			<failed>next</failed>
		</step>
		<step no="7">
			<call step="create.user.profile.1" />
			<failed>next</failed>
		</step>
		<step no="8">
			<call step="create.ssid.profile.1" />
			<failed>next</failed>
		</step>
		<step no="9">
			<call step="add.ssid.profile.into.network.policy" />
			<failed>next</failed>
		</step>
		<step no="10">
			<call step="assign.network.policy.to.device" />
			<failed>next</failed>
		</step>
		<step no="11">
			<call step="download.cli.to.device" />
			<failed>next</failed>
		</step>
		<step no="12">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap1.mgt0.mac}-deviceFull.config"
			</ssh>	

			<log-match>-i "ssid SSID-DoS security wlan dos ssid-level frame-type probe-req alarm 10"</log-match>
            <log-match>-i "ssid SSID-DoS security wlan dos ssid-level frame-type probe-resp alarm 20"</log-match>	
			<log-match>-i "ssid SSID-DoS security wlan dos ssid-level frame-type assoc-req alarm 30"</log-match>
            <log-match>-i "ssid SSID-DoS security wlan dos ssid-level frame-type assoc-resp alarm 40"</log-match>	
			<log-match>-i "ssid SSID-DoS security wlan dos ssid-level frame-type disassoc alarm 50"</log-match>
            <log-match>-i "no ssid SSID-DoS security wlan dos ssid-level frame-type auth"</log-match>	
			<log-match>-i "no ssid SSID-DoS security wlan dos ssid-level frame-type deauth"</log-match>
            <log-match>-i "no ssid SSID-DoS security wlan dos ssid-level frame-type eapol"</log-match>
            	
			<log-match>-i "ssid SSID-DoS security wlan dos station-level frame-type probe-req alarm 10"</log-match>
            <log-match>-i "ssid SSID-DoS security wlan dos station-level frame-type probe-resp alarm 20"</log-match>	
			<log-match>-i "ssid SSID-DoS security wlan dos station-level frame-type assoc-req alarm 30"</log-match>
            <log-match>-i "ssid SSID-DoS security wlan dos station-level frame-type assoc-resp alarm 40"</log-match>	
			<log-match>-i "ssid SSID-DoS security wlan dos station-level frame-type disassoc alarm 50"</log-match>
            <log-match>-i "no ssid SSID-DoS security wlan dos station-level frame-type auth"</log-match>	
			<log-match>-i "no ssid SSID-DoS security wlan dos station-level frame-type deauth"</log-match>
            <log-match>-i "no ssid SSID-DoS security wlan dos station-level frame-type eapol"</log-match>
            	
			<log-match>-i "ssid SSID-DoS security screening icmp-flood"</log-match>
			<log-match>-i "ssid SSID-DoS security screening icmp-flood threshold 10"</log-match>
			<log-match>-i "ssid SSID-DoS security screening icmp-flood action drop 1"</log-match>
            <log-match>-i "ssid SSID-DoS security screening udp-flood"</log-match>			
            <log-match>-i "ssid SSID-DoS security screening udp-flood threshold 20"</log-match>
            <log-match>-i "ssid SSID-DoS security screening udp-flood action disconnect"</log-match>
			<log-match>-i "ssid SSID-DoS security screening syn-flood"</log-match>
			<log-match>-i "ssid SSID-DoS security screening syn-flood threshold 30"</log-match>
			<log-match>-i "ssid SSID-DoS security screening syn-flood action ban 3600"</log-match>
            <log-match>-i "ssid SSID-DoS security screening arp-flood"</log-match>
            <log-match>-i "ssid SSID-DoS security screening arp-flood threshold 40"</log-match>
            <log-match>-i "ssid SSID-DoS security screening arp-flood action ban-forever"</log-match>
			<log-match>-i "ssid SSID-DoS security screening address-sweep"</log-match>	
			<log-match>-i "ssid SSID-DoS security screening address-sweep threshold 50"</log-match>
			<log-match>-i "ssid SSID-DoS security screening address-sweep action alarm 10"</log-match>
            <failed>next</failed>		
		</step>
		<step no="14">
			<desc>
				1. reboot the device make the configuration take effect.
				Note: this step will failed because of CLI error 
			</desc>
			<console target="ap1">
				-v "reboot"
			</console>
			<no-error-check/>
			<failed>next</failed>
		</step>
		<step no="15" delay="10">
			<desc>
				1. Get the configuartion by CLI "show run config", and save to logfile.
			</desc>
			<log-file>check_hiveaps_capwap_state.log</log-file>
			<console target="ap1">
				-v "show running-config"
			</console>
			
			<desc> Verify the configuration file can be push to real device correctly</desc>
			<log-match>-i "ssid SSID-DoS security wlan dos ssid frame-type probe-req alarm 10"</log-match>
            <log-match>-i "ssid SSID-DoS security wlan dos ssid frame-type probe-resp alarm 20"</log-match>	
			<log-match>-i "ssid SSID-DoS security wlan dos ssid frame-type assoc-req alarm 30"</log-match>
            <log-match>-i "ssid SSID-DoS security wlan dos ssid frame-type assoc-resp alarm 40"</log-match>	
			<log-match>-i "ssid SSID-DoS security wlan dos ssid frame-type disassoc alarm 50"</log-match>
            <log-match>-i "no ssid SSID-DoS security wlan dos ssid frame-type auth"</log-match>	
			<log-match>-i "no ssid SSID-DoS security wlan dos ssid frame-type deauth"</log-match>
            <log-match>-i "no ssid SSID-DoS security wlan dos ssid frame-type eapol"</log-match>
            	
			<log-match>-i "ssid SSID-DoS security wlan dos station-level frame-type probe-req alarm 10"</log-match>
            <log-match>-i "ssid SSID-DoS security wlan dos station-level frame-type probe-resp alarm 20"</log-match>	
			<log-match>-i "ssid SSID-DoS security wlan dos station-level frame-type assoc-req alarm 30"</log-match>
            <log-match>-i "ssid SSID-DoS security wlan dos station-level frame-type assoc-resp alarm 40"</log-match>	
			<log-match>-i "ssid SSID-DoS security wlan dos station-level frame-type disassoc alarm 50"</log-match>
            <log-match>-i "no ssid SSID-DoS security wlan dos station-level frame-type auth"</log-match>	
			<log-match>-i "no ssid SSID-DoS security wlan dos station-level frame-type deauth"</log-match>
            <log-match>-i "no ssid SSID-DoS security wlan dos station-level frame-type eapol"</log-match>
            	
            <log-match>-i "ssid SSID-DoS security screening icmp-flood threshold 10 action drop 1"</log-match>
            <log-match>-i "ssid SSID-DoS security screening udp-flood threshold 20 action disconnect"</log-match>
			<log-match>-i "ssid SSID-DoS security screening syn-flood threshold 30 action ban 3600"</log-match>	
			<log-match>-i "ssid SSID-DoS security screening arp-flood threshold 40 action ban-forever"</log-match>
			<log-match>-i "ssid SSID-DoS security screening address-sweep threshold 50 action alarm 10"</log-match>

		</step>
	</stage>
	<failed-process />
	<post-process />
</testcase>
