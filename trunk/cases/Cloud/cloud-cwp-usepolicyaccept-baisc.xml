<testcase>
	<brief>Cloud CWP self reg basic case</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Verify the CWP can be correctly create with Self, and it can be bind to a SSID
	</description>
	<numofap>1</numofap>
 	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>

	<desc>
		security-object SSID-CWP
		security-object SSID-CWP security additional-auth-method captive-web-portal 
		security-object SSID-CWP security additional-auth-method captive-web-portal default-language english
		security-object SSID-CWP web-server web-page mandatory-field 0 optional-field 0
		security-object SSID-CWP web-server index-file eula.html 
		security-object SSID-CWP web-directory CWP-UsePolicyAccept
		ssid SSID-CWP
		ssid SSID-CWP security-object SSID-CWP
	</desc>
	
	<property name="ap.mac" value="FFFFFFFFFF05" />
	<property name="owner.id" value="102" />
	<property name="vlan.id" value="105" />
	<property name="userprofile.id" value="105" />
	
	<declaration>
		<step name="create.cwp.usepolicyaccept" description="">
			<restapi name="createCwp">
		     {
			      "jsonType": "cwp",
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "name": "CWP-UsePolicyAccept",
	                "description": "afasdfasdf",
	                 "vlan": 
	                       {
	                     "jsonType": "vlan",
	                    "ownerId": ${owner.id},
	                "predefined": false,
	                "name": "vlan",
	                "description": "fadfad",
	                "entries": [
	                    {
	                        "ownerId": ${owner.id},
	                        "predefined": false,
	                        "tags": [ ],
	                        "description": "aa",
	                        "vlanNumber": 1
	                    }
	                           ]
	                    },
				"walledGarden": {
				        "ownerId": ${owner.id},
				        "predefined": false,
				        "entries": [
				          {
				            "ownerId": ${owner.id},
				            "predefined": false,
				            "ipObject": {
				              "jsonType": "ip-address-profile",
				              "ownerId": 104,
				              "predefined": false,
				              "name": "wgzhou_wallgarde",
				              "description": "",
				              "value": "wgzhou_vlaue"
				            },
				            "itemId": 50,
				            "service": "SERVICE_WEB",
				            "protocolNumber": 239,
				            "port": 26107
				          }
				        ]
				      },
	            "loginPage": {
	                "jsonType": "cwp-login-page",
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "backgroundColor": "DCUamznxKr",
	                "fontColor": "QgeFCOCeBs",
	                "linksColor": "f20AjflyGN",
	                "buttonColor": "xcutA0q9VB",
	                "buttonTextColor": "HAiauwZjj8",
	                "logoFileName": "uvjoB8M6hytpOK4AM5NrxFQHNZpwjnhn",
	                "backgroundImageName": "4CZh83sPNTMMBgr8Y7exGXC88IuEnuZQ",
	                "uploadByUser": true,
	                "fileDirectory": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg",
	                "fileName": "eula.html",
	                "policyContent": "aaaa",
	                "passwordEncryption": "SHARED",
	                "sharedSecret": "aerohive",
	                "loginUrl": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg/eula.html",
	                "authProtocol": "MS_CHAP_V2",
	                "requiredFieldsCount": 1,
	                "optionalFieldsCount": 7
	            },
	            "successPage": {
	                "jsonType": "cwp-success-page",
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "backgroundColor": "6p06OqNoih",
	                "fontColor": "u5bMw3YInR",
	                "linksColor": "7rO09FmS9O",
	                "buttonColor": "8szOHauwl6",
	                "buttonTextColor": "WgvFs3NqzB",
	                "logoFileName": "FdYluPT5T3mZ1olq9OnAn0G9iafwMbCG",
	                "backgroundImageName": "nKRrDfnuhSDNTZr92vWz8g5JGTEgLIty",
	                "uploadByUser": true,
	                "fileDirectory": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg",
	                "fileName": "success.html",
	                "wlanAccessNotice": "WLAN access notice",
	                "librarySipNotice": "Library sip notic"
	            },
	            "failurePage": {
	                "jsonType": "cwp-failure-page",
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "backgroundColor": "72WKlvwhRS",
	                "fontColor": "qShucpYjnZ",
	                "linksColor": "VWxk9NiYdI",
	                "buttonColor": "6VSQQbIM5J",
	                "buttonTextColor": "P0qf3m32B6",
	                "logoFileName": "KxIn20U8pTCB9Y3bFSSOY79e5BCcvQSz",
	                "backgroundImageName": "ah04g9bAuLqnjy5WaC5fZzMyfgtcSKfp",
	                "uploadByUser": false,
	                "fileDirectory": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg",
	                "fileName": "failure.html",
	                "failureNotice": "failure"
	            },
	            "httpsCertificate": {
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "fileName": "n6JtyREO3zbjbFD8fnBwzL0P5L3JyR91",
	                "fileSize": 3964509205033621504,
	                "fileType": "KEY",
	                "index": 0,
	                "encrypted": true,
	                "issuer": "6ZAAV3qIgqmPdW6IPQ68EuxoBBjjblWACIKZ5vKWi8A1OTpI9q0MgnFbsioxtNpc6cEeOXLSFrYrcQh3e0wBsAQ8ZUIo0Z35hnfU4EmUuJkkIhB4Z0lLQh1HV0IqCv0P",
	                "subject": "cls2NI5ruGz70NcrQzfVKsAGuYQ4UrQuPa3brw1GqDsXefGC2Il19WIpihdXoH5RFPZbDKkOfclPcEBLzE9cicjQIjCSJ7DJVkpR1U3pe3Ue5LJ35hnqSN1cmuWsjFXe",
	                "expireTime": "E0EsG0oNNr8uucuyJMUkCR9fna0yTf3U"
	            },
	            "successExternalUrl": "cDA07Epr2wRASlIcbJoRjxyXbOZg7LGyu7XINNVsPa5Y75VVcuoYzGeBucPVA5N01gBoSlvcRoFUAG0vmSTSKIIu1k2icdyRRvCADMzsy2A3Wr9NrKrNt2zC3Cpz59FhC2GsJIzaWVPaDSgN1eshaPXbxgg6IHMuR4033OY2pEw0ODcVQtL7QQxkrNToNSAFpA4IeZq3NWrwcpOL5HPgOUEqyT88VS9hhX6orq7SzOqQ98GraFArAjOBP143j1IH",
	            "failureExternalUrl": "vjo9YWBKDoT3NnUIy2SVGx4CVrgWUG7X66kl0Vy4G0KbYZEsUn63DITZBnrB2rwLQGwOR0kJiUqMc5HSt4SUHqflLIt5aVfFdI7GUMGVhFB86aqT1YSEcmhwzrTpxT5tQVySf1EaDwi06eyv6CaPcZM93rgkwnSNr9c6cj22zVCZREnPA4f1SOSZoKbJ24sDX74GNCJpe61SnmTt3ZTBOgpOTnvj02flsTZ4VqVcIz5oJI635NUh5u5tLzdCcStp",
	            "eth0Ip": "km3Dldm2yqlvCllBA0bltZO8sXGl3FL5",
	            "eth0Netmask": "zzF82MCMEg60rA3HrK9E3KDxO13A4ICQ",
	            "eth1Ip": "jF1flYSBg2vrtdvvojubV3gvJtUsvGZ9",
	            "eth1Netmask": "bAjq4IEmTI4NEytI5p0Bhn1hncCqqlaE",
	            "radio11aModeIp": "VBouZmNi50nz0eZHvUITNHrtnvgEq9OT",
	            "radio11aModeNetmask": "xRzVtZ9S6UfbmRJuxOZ5i0Yffeg2KyJP",
	            "radio11bgModeIp": "L8z0awW7885ix4ZXGL7832U8XLD1yLPY",
	            "radio11bgModeNetmask": "R7937suG6vcJvGW8c6VSY5BDzvrEmqJq",
	            "serverDomainName": "aerohive",
	            "sipRedirectUrl": "0QWjGInxARylaKvUsAEQCe6UO2YAiwWTl0rTQ2nkKdyQJMic30Fd7rDXCu0QBkrYbSHy3fNS6QwOUejIgik3p2x81XDrC52KNKYNZEtOD967jSk6TsHYXDPGfOXmdENNJRmkuP0ssVaTyWZkDK8ii6QDEXIMJWmENekRNqJRY8pZZgO3P3vnhDMEQAW3FlZcFLfGtlp8eMHWsrepp9hys4NtsfGzeD3lInqE4k64pJivqLuqAFbcoWtNeZkdoCae",
	            "useStandardLoginPage": true,
	            "useCustomLoginPage": false,
	            "showSuccessPage": true,
	            "useStandardSuccessPage": true,
	            "useCustomSuccessPage": false,
	            "redirectAfterSuccessLogin": false,
	            "successToInitiallyPage": false,
	            "successToSpecifiedUrl": false,
	            "showFailurePage": true,
	            "showFailureViaLoginPage": false,
	            "useStandardFailurePage": true,
	            "useCustomFailurePage": false,
	            "redirectAfterFailureLogin": false,
	            "failureToInitiallyPage": true,
	            "failureToSpecifiedUrl": false,
	            "displaySessionTimer": false,
	            "enableHttps": false,
	            "enableHttp302": false,
	            "forceAcceptNetwork": false,
	            "overrideCertificateDomain": false,
	            "useDefaultNetwork": true,
	            "useCustomNetwork": false,
	            "overrideVlan": false,
	            "enableWallGarden": false,
	            "languages": [
	                "EL8SA6mBW73o9RQOT3UyRJqK4xgvFsrrGF8ir7CZi8uJSKKcf2RdMGaTCO4ph2rZYgUXcVwX4jNPacrSTVcX3QFSabkmQG1er6nD1wgNDjKbGyGFy4JU1nGpqsqg8OSUqvPxfRw13vG2RHrURr7VnUXvK4Z0l551oVWfNbpc4Of0xX298EByeEQaXKdz9RiL23eGusXUZswwFYLu5WWfHFsg978wltt2ATzvHi2S3ztmPjiLNTiAgLvI4PZiOSq",
	                "pJBM1JQzzWO43PFFRNkDVB9CIx3adubEHlma4FNcGNdl7dahi74rwgb7V3Kpx24jo0xQ3uGK0sYvfCqNQz4jkDmQY71Hb7dEE5aCQdvok70BBgnsgMOba6tzwHEU9bOhFXjBSqoDMNg4NvoAJWsletJjb0vlUi8LwQeN5qTPJ0iLwV99fdRn85q2A5vBwyT9Q71k16B1UfGbl5zgvAPUiGIYD03JvU0R0aSOe1UiZ3HEUfCrkTDSt5lafgwTYAv"
	            ],
	            "defaultLanguage": "EN",
	            "sessionExpireAlert": 11,
	            "leaseTime": 35452,
	            "registrationPeriod": 720,
	            "successDelay": 5,
	            "failureDelay": 5,
	            "registrationType": "USE_POLICY_ACCEPT",
	            "internalDhcpType": "USE_AEROHIVE",
	            "dhcpMode": "MODE_UNICAST"
		     }
		   </restapi>
		</step>
		<step name="create.cwp.profile" description="">
			<restapi name="createCwpProfile">
				{
				  "ownerId": ${owner.id},
				  "predefined": false,
				  "jsonType": "cwp-profile",
				  "name": "cwpprofile-selfreg",
				  "description": "",
				  "defaultCwp":"@{create.cwp.usepolicyaccept}",
				  "entries": [ 
					{
		            "ownerId": ${owner.id},
		            "predefined": false,
		            "tags": [],
		            "description": "",
		            "cwp": "@{create.cwp.usepolicyaccept}"
					}],
				  "enabled": true,
				  "registrationType": "USE_POLICY_ACCEPT"
				}
		   </restapi>
		</step>
		<step name="create.traffic.filter" description="">
			<restapi name="createTrafficFilter">
				{
				"ownerId": ${owner.id},
				"predefined": false,
				"jsonType": "traffic-filter",
				"name": "Default service filter",
				"description": "This is one mac dos",
				"enableSsh": true,
				"enableTelnet": false,
				"enablePing": true,
				"enableSnmp": false,
				"enableInterStationTraffic": true
				}
		   </restapi>
		</step>	
		<step name="create.mac.dos.prevention.1" description="">
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos1",
			"description": "This is one mac dos prevention",
			"dosType": "SSID",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false
			}]
			}
	    </restapi>
		</step>
		<step name="create.mac.dos.prevention.2" description="">
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos2",
			"description": "This is one mac dos prevention",
			"dosType": "STATION",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false
			}]
			}
	    </restapi>
		</step>
		<step name="create.ip.dos.prevention" description="">
			<restapi name="createIpDosPrevention">
			{
			"ownerId":${owner.id},
			"predefined":false,
			"jsonType":"ip-dos-prevention",
			"name":"IP-dos-test",
			"description":"This is one ip dos",
			"enableSynCheck":false,
			"dosParams":[
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"RADIUS_ATTACK",
			"threshold":5,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":true},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ICMP_FLOOD",
			"threshold":20,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"IP_SPOOF",
			"threshold":3,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ADDRESS_SWEEP",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"PORT_SCAN",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"UDP_FLOOD",
			"threshold":50,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"SYN_FLOOD",
			"threshold":1000,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ARP_FLOOD",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false}
			]}
		}
		</restapi>
	</step> 
 		<step name="create.user.profile.1">
            <restapi name="createUserProfile">
                {
                    "jsonType" : "user-profile",
                    "ownerId" : ${owner.id},
                    "name" : "CloudUserProfile106",
                    "predefined" : false,
                    "vlan" : 
            			{
                        "jsonType" : "vlan",
                        "ownerId" : ${owner.id},
                        "name" : "Aerohive_VlanProfile",
                        "description" : "Vlan Profile for Demo",
                        "predefined" : false,
                        "entries" : 
            				[ {
                            "ownerId" : ${owner.id},
                            "tags" : [ ],
                            "vlanNumber" : ${vlan.id}
                        	} ]
                    	},
                    "enableFirewall" : false,
                    "enableSchedule" : false,
                    "schedules" : [ ],
                    "enableTrafficTunneling" : false,
                    "enableClientSla" : false,
                    "enableQos" : false,
                    "restriction" : "DENY_CAR",
                    "enableClassification" : false           
                }
            </restapi>
        </step>
		<step name="create.ssid.profile.1" description="">
			<restapi name = "createSsidProfile">
				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSID-CWP",
                    "ssid" : "SSID-CWP",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity": {
				                  "ownerId": ${owner.id},
                                  "jsonType": "open-access"
				                   },
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": true,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": true,
						"wmmEnableWmmVideo": true,
						"wmmEnableWmmVoice": true,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "AUTO",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":70,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
                    "cwpProfile":"@{create.cwp.profile}",
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
			</restapi>
		</step>
		<step name="create.network.policy.1">
			<restapi name = "createNetworkPolicy">
				{
				"ownerId" : ${owner.id},
  				"predefined": false,
				"jsonType": "network-policy",
				"name" : "Aerohive_UserProfile10",
				"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
        </step>
		<!--This step should be removed after Could 3.0 can push configuration to device-->
		<step name="create.device.1.ap330.v6102.as.ap">
			<restapi name = "createDevice">
				{
				"ownerId":${owner.id},
				"ipAddress": "10.155.21.21",
				"macAddress":"${ap.mac}",
				"hostname":"virtual device for test",
				"serialNumber":"1111222233334444",
				"productType":"AP_330",
				"softwareVersion": "6.1.2.0",
				"role":19050,
				"function":"Ap",
				"adminState":"UNMANAGED",
				"isConnected":true
				}
			</restapi>
		</step>

        <step name="add.ssid.profile.into.network.policy">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.1}"
                }
            </restapi>
        </step>
        <step name="assign.network.policy.to.device">
            <restapi name="assignnetworkpolicy">
                {
                    "device" : "@{create.device.1.ap330.v6102.as.ap}",
                    "networkPolicy" : "@{create.network.policy.1}"
                }
            </restapi>
        </step>

        <step name="download.cli.to.device">
            <restapi name="downloadcli">
                {
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "deviceIds" : [ "@{create.device.1.ap330.v6102.as.ap}"],
                    "configDownloadTypes" : [ "deviceFull"]
                }
            </restapi>
        </step>
	</declaration>
	<stage>
		<step no="1">
			<call step="create.cwp.usepolicyaccept" />
			<failed>next</failed>
		</step>
		<step no="2">
			<call step="create.cwp.profile" />
			<failed>next</failed>
		</step>
		<step no="3">
			<call step="create.traffic.filter" />
			<failed>next</failed>
		</step>
		<step no="4">
			<call step="create.mac.dos.prevention.1" />
			<failed>next</failed>
		</step>
		<step no="5">
			<call step="create.mac.dos.prevention.2" />
			<failed>next</failed>
		</step>
		<step no="6">
			<call step="create.ip.dos.prevention" />
			<failed>next</failed>
		</step>	
		<step no="7">
			<call step="create.network.policy.1" />
			<failed>next</failed>
		</step>
		<step no="8">
			<call step="create.device.1.ap330.v6102.as.ap" />
			<failed>next</failed>
		</step>
		<step no="9">
			<call step="create.user.profile.1" />
			<failed>next</failed>
		</step>
		<step no="10">
			<call step="create.ssid.profile.1" />
			<failed>next</failed>
		</step>
		<step no="11">
			<call step="add.ssid.profile.into.network.policy" />
			<failed>next</failed>
		</step>
		<step no="12">
			<call step="assign.network.policy.to.device" />
			<failed>next</failed>
		</step>
		<step no="13">
			<call step="download.cli.to.device" />
		</step>
		<step no="14">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>	
		
			<log-match>-i "security-object SSID-CWP"</log-match>
            <log-match>-i "security-object SSID-CWP security additional-auth-method captive-web-portal"</log-match>	
			<log-match>-i "security-object SSID-CWP security additional-auth-method captive-web-portal default-language english"</log-match>
            <log-match>-i "security-object SSID-CWP web-server web-page mandatory-field 0 optional-field 0"</log-match>
            <log-match>-i "security-object SSID-CWP web-server index-file eula.html"</log-match>
            <log-match>-i "security-object SSID-CWP web-directory CWP-UsePolicyAccept"</log-match>	
			<log-match>-i "ssid SSID-CWP"</log-match>
            <log-match>-i "ssid SSID-CWP security-object SSID-CWP"</log-match>

          			
		</step>
	</stage>
	<failed-process />
	<post-process />
</testcase>
