<testcase>
	<brief>Location server Tags for cloud 3.0</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		Location server Tags case
	</description>
	<numofap>1</numofap>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>
	<desc>
	   dns server-ip  dns.aerohive.com
	   dns server-ip  10.155.34.188 second
	</desc>

	<property name="test1" value="ServiceType" />
	<property name="ap.mac" value="FFFFFFFFFF03" />
	<property name="owner.id" value="103" />
	<property name="host.name" value="syslog.aerohive.com" />
    <property name="host.name1" value="syslog1.aerohive.com" />
	<property name="host.name2" value="syslog2.aerohive.com" />
	<property name="host.name3" value="syslog3.aerohive.com" />
	<property name="host.name4" value="syslog4.aerohive.com" />
	<property name="host.name5" value="syslog5.aerohive.com" />
	<property name="host.name6" value="syslog6.aerohive.com" />	
	<property name="ip.addr" value="10.155.34.180" />
	<property name="ip.addr1" value="10.155.34.181" />
	<property name="ip.addr2" value="10.155.34.182" />
	<property name="ip.addr3" value="10.155.34.183" />
	<property name="ip.addr4" value="10.155.34.184" />
	<property name="ip.addr5" value="10.155.34.185" />
	<property name="ip.addr6" value="10.155.34.186" />

	<declaration>
		<step name="create.ip.address.profile">
		<restapi name="createIpAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "ip-address-profile",
				"name" : "IpAddressPrfoile",
				"value": "${ip.addr}"
				}
        </restapi>
		</step>
		<step name="create.ip.address.profile1">
		<restapi name="createIpAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "ip-address-profile",
				"name" : "IpAddressPrfoile.1",
				"value": "${ip.addr1}"
				}
        </restapi>
		</step>
		<step name="create.ip.address.profile2">
		<restapi name="createIpAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "ip-address-profile",
				"name" : "IpAddressPrfoile.2",
				"value": "${ip.addr2}"
				}
        </restapi>
		</step>
		<step name="create.ip.address.profile3">
		<restapi name="createIpAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "ip-address-profile",
				"name" : "IpAddressPrfoile.3",
				"value": "${ip.addr3}"
				}
        </restapi>
		</step>
		<step name="create.ip.address.profile4">
		<restapi name="createIpAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "ip-address-profile",
				"name" : "IpAddressPrfoile.4",
				"value": "${ip.addr4}"
				}
        </restapi>
		</step>
		<step name="create.ip.address.profile5">
		<restapi name="createIpAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "ip-address-profile",
				"name" : "IpAddressPrfoile.5",
				"value": "${ip.addr5}"
				}
        </restapi>
		</step>
		<step name="create.ip.address.profile6">
		<restapi name="createIpAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "ip-address-profile",
				"name" : "IpAddressPrfoile.6",
				"value": "${ip.addr6}"
				}
        </restapi>
		</step>
		<step name="create.hostname.address.profile" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType": "host-name-profile",
				"name" : "HostnameAddressPrfoile",
				"description" : "this is hostname address profile",
				"value": "${hostname}"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile1" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType": "host-name-profile",
				"name" : "HostnameAddressPrfoile1",
				"description" : "this is hostname address profile",
				"value": "${hostname1}"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile2" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType": "host-name-profile",
				"name" : "HostnameAddressPrfoile2",
				"description" : "this is hostname address profile",
				"value": "${hostname2}"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile3" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType": "host-name-profile",
				"name" : "HostnameAddressPrfoile3",
				"description" : "this is hostname address profile",
				"value": "${hostname3}"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile4" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType": "host-name-profile",
				"name" : "HostnameAddressPrfoile4",
				"description" : "this is hostname address profile",
				"value": "${hostname4}"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile5" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType": "host-name-profile",
				"name" : "HostnameAddressPrfoile5",
				"description" : "this is hostname address profile",
				"value": "${hostname5}"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile6" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType": "host-name-profile",
				"name" : "HostnameAddressPrfoile6",
				"description" : "this is hostname address profile",
				"value": "${hostname6}"
				}
            </restapi>
		</step>
		<step name="create.location.server.profile" description="">
			<restapi name="createLocationProfile">
			{
				"ownerId": 103,
				"predefined": false,
				"jsonType": "location-profile",
				"name": "locationServer1",
				"description": "locationServer",
				"enabled": true,
				"defaultServer": {
					"jsonType": "aerohive-location-server",
					"ownerId": 103,
					"predefined": false,
					"name": "defaultServer",
					"description": "defaultServer",
					"serverIp": {
						"jsonType": "ip-address-profile",
						"ownerId": 103,
						"predefined": false,
						"name": "ipaddressDefault",
						"description": "ipaddressDefault",
						"value": "10.1.1.1"
					},
					"rssiChangeThreshold": 1,
					"rssiValidPeriod": 832,
					"rssiHoldCount": 2,
					"locationReportInterval": 493,
					"reportSupressionCount": 41
				},
				"taggedEntries": [
				{
				"ownerId": 103,
				"predefined": false,
				"tags": [
				{
				     "ownerId":${owner.id},
				     "predefined":false,
				     "jsonType":"hostname",
				     "value": "AH-0d1a80"
				}
				],
				"description": "",
				"server": {
				"jsonType": "aero-scout-location-server",
				"ownerId": 103,
				"predefined": false,
				"name": "locationServer1",
				"description": "locationServer1",
				"serverIp": {
					"jsonType": "ip-address-profile",
					"ownerId": 103,
					"predefined": false,
					"name": "ipaddressLocationServer1",
					"description": "ipaddressLocationServer1",
					"value": "10.1.1.2"
				
				},
				"enableTag": true,
				"enableStation": false,
				"enableRogueAp": true,
				"tagRateThreshold": 70166,
				"stationRateThreshold": 4096,
				"rogueApRateThreshold": 27748
				}
				}
				]
				}
					
				
            </restapi>
		</step>
		
		<step name="create.network.policy.1">
			<restapi name="createNetworkPolicy">
				{
				"ownerId" : 103,
				"name" : "Aerohive_UserProfile1",
				"jsonType": "network-policy",
				"type" : "NetworkAccessAndSwitching"
				}
            </restapi>   
            
            
		</step>
		
		<step name="create.device.1.ap330.v6102.as.ap">
			<restapi name="createDevice">
				{
				"ownerId":103,
				"ipAddress": "10.155.21.21",
				"macAddress":"FFFFFFFFFF03",
				"hostname":"AH-0d1a80",
				"serialNumber":"1111222233334444",
				"productType":"AP_330",
				"softwareVersion": "6.1.0.2",
				"role":19050,
				"function":"Ap",
				"adminState":"UNMANAGED",
				"isConnected":true
				}
            </restapi>
		</step>
		<step name="add.location.server.profile.1.into.network.policy.1">
			<restapi name="assignfeature">
				{
				"jsonType" : "network_policy",
				"networkPolicyId" :"@{create.network.policy.1}",
				"featureId" :"@{create.location.server.profile}"
				}
            </restapi>
		</step>
		<step name="assign.network.policy.1.to.device.1">
			<restapi name="assignnetworkpolicy">
				{
				"device" :"@{create.device.1.ap330.v6102.as.ap}",
				"networkPolicy" :"@{create.network.policy.1}"
				}
            </restapi>
		</step>

		<step name="download.cli.to.device.1">
			<restapi name="downloadcli">
				{
				"networkPolicyId" :"@{create.network.policy.1}",
				"deviceIds" : ["@{create.device.1.ap330.v6102.as.ap}"],
				"configDownloadTypes" : [ "deviceFull"]
				}
            </restapi>
		</step>
		
		<step name="update.device.config.ex.of.device1">
            <restapi name="updateDeviceConfigEx">
                {
                  "ownerId":"${owner.id}",
                  "ipAddress": "10.155.21.21",
                  "macAddress":"FFFFFFFFFF03",
                  "productType":"AP_330",
                  "deviceFunction":"Ap",
                  "device" : "@{create.device.1.ap330.v6102.as.ap}",
                  "networkPolicy" : "@{create.network.policy.1}",
                  "ipMode" : "DHCP_CLIENT_WITH_FALLBACK",
                  "tags" : []
                }
            </restapi>
        </step>
	</declaration>

	<stage>
		<step no="1">
			<call step="create.location.server.profile" />
		</step>
		
		<step no="2">
			<call step="add.location.server.profile.1.into.network.policy.1" />
		</step>
		
		<step no="3">
			<call step="update.device.config.ex.of.device1" />
		</step>
		
		<step no="4">
			<call step="assign.network.policy.1.to.device.1" />
		</step>
		<step no="5">
			<call step="download.cli.to.device.1" />
		</step>
		<step no="6">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>
			<log-match>-i "location aerohive rssi-valid-period 400"</log-match>

		</step>
	</stage>
	<failed-process />
</testcase>