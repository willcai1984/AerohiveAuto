<testcase>
	<brief>AAA Server AD Tags CLI test for Cloud3.0</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		AAA Server AD Tags CLI test
	</description>
	<numofap>1</numofap>
	<tbtype>winlin</tbtype>
    <desc>
    
    </desc>
	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>
	<property name="test1" value="ServiceType" />
	<property name="ap.mac" value="197711112102" />
	<property name="owner.id" value="102" />
	<property name="accessap.ip10" value="10.155.1.100" />
	<property name="accessap.ip11" value="10.155.1.101" />
	<property name="accessap.ip12" value="10.155.1.102" />
	<property name="accessap.ip13" value="10.155.1.103" />
	<property name="accessap.ip14" value="10.155.1.104" />
	<property name="accessap.ip15" value="10.155.1.105" />
	<property name="accessap.ip16" value="10.155.1.106" />
	
	<property name="accessap.ip2" value="10.155.1.1555" />
	<property name="accessap.ip3" value="10.155.36.1" />
	<property name="accessap.ip4" value="10.155.36.155" />
	<property name="network.mask" value="255.255.25.0" />
	<property name="host.name" value="adserver.aerohive.com" />
	<property name="host.name1" value="adserver.aerohive.com" />
	<property name="host.name2" value="adserver.aerohive.com" />
	<property name="host.name3" value="adserver.aerohive.com" />	
	<property name="host.name4" value="adserver.aerohive.com" />
	<property name="host.name5" value="adserver.aerohive.com" />
	<property name="host.name6" value="adserver.aerohive.com" />
	
	<declaration>
	    <step name="create.wildcard.address.profile" description="">
			<restapi name="createWildcardAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "wildcard",
				"name" : "WildcardIpObject",
				"description" : "this is WildcardIpObject",
				"wildcard": "${accessap.ip10}",
				"wildcardMask" : "${network.mask}"
				}
            </restapi>
		</step>
		<step name="create.wildcard.address.profile1" description="">
			<restapi name="createWildcardAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "wildcard",
				"name" : "WildcardIpObject11",
				"description" : "this is WildcardIpObject",
				"wildcard": "${accessap.ip11}",
				"wildcardMask" : "${network.mask}"
				}
            </restapi>
		</step>
		<step name="create.wildcard.address.profile2" description="">
			<restapi name="createWildcardAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "wildcard",
				"name" : "WildcardIpObject22",
				"description" : "this is WildcardIpObject",
				"wildcard": "${accessap.ip12}",
				"wildcardMask" : "${network.mask}"
				}
            </restapi>
		</step>
		<step name="create.wildcard.address.profile3" description="">
			<restapi name="createWildcardAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "wildcard",
				"name" : "WildcardIpObject33",
				"description" : "this is WildcardIpObject",
				"wildcard": "${accessap.ip13}",
				"wildcardMask" : "${network.mask}"
				}
            </restapi>
		</step>
		<step name="create.wildcard.address.profile4" description="">
			<restapi name="createWildcardAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "wildcard",
				"name" : "WildcardIpObject44",
				"description" : "this is WildcardIpObject",
				"wildcard": "${accessap.ip14}",
				"wildcardMask" : "${network.mask}"
				}
            </restapi>
		</step>
		<step name="create.wildcard.address.profile5" description="">
			<restapi name="createWildcardAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "wildcard",
				"name" : "WildcardIpObject55",
				"description" : "this is WildcardIpObject",
				"wildcard": "${accessap.ip15}",
				"wildcardMask" : "${network.mask}"
				}
            </restapi>
		</step>
		<step name="create.wildcard.address.profile6" description="">
			<restapi name="createWildcardAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "wildcard",
				"name" : "WildcardIpObject66",
				"description" : "this is WildcardIpObject",
				"wildcard": "${accessap.ip16}",
				"wildcardMask" : "${network.mask}"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile",
				"description" : "this is hostname address profile",
				"hostname":"${host.name}"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile1" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile11",
				"description" : "this is hostname address profile",
				"hostname":"${host.name1}"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile2" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile22",
				"description" : "this is hostname address profile",
				"hostname":"${host.name2}"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile3" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile33",
				"description" : "this is hostname address profile",
				"hostname":"${host.name3}"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile4" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile44",
				"description" : "this is hostname address profile",
				"hostname":"${host.name4}"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile5" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile55",
				"description" : "this is hostname address profile",
				"hostname":"${host.name5}"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile6" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile66",
				"description" : "this is hostname address profile",
				"hostname":"${host.name6}"
				}
            </restapi>
		</step>
		<step name="create.device">
			<restapi name="createDevice">
				{
				"ownerId":${owner.id},
				"ipAddress":"10.155.21.212",
				"macAddress":"197711112102",
				"hostname":"virtual device for test 102",
				"serialNumber":"1977222233334102",
				"productType":"AP_330",
				"softwareVersion": "6.1.0.2",
				"role":19050,
				"function":"Ap",
				"adminState":"UNMANAGED",
				"isConnected":true
				}
			</restapi>
		</step>
		<step name="create.network.policy">
			<restapi name="createNetworkPolicy">
				{
				"ownerId" : ${owner.id},
				"name":"Cloud_automation",
				"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
		</step>
		<step name="create.radius.user.group" description="">
			<restapi name="createRadiusUserGroup">
				{
				"ownerId":${owner.id},
				"predefined":false,
				"jsonType":"radius-user-group",
				"name":"Radius_user_group_test01",
				"description":"this is a RadiusUserGroup",
				"userProfileAttribute":{"ownerId":${owner.id},
				"predefined":false,
				"attrNumber":2669,
				"autoGenerated":true},
				"enableReauthorization": true,
				"reauthorizationTime":200,
				"credentialPersistencyStorage":"DRAM",
				"enableVoiceDeviceAuthentication":false
				}
           </restapi>
		</step>
		<step name="create.active.directory.server1" description="">
			<restapi name="createActiveDirectoryServer">
				{
				 "jsonType": "active-directory-server",
				 "ownerId": ${owner.id},
				 "predefined": false,
				 "name": "Test_active_directory_server11",
				 "description": "This is a Test_active_directory_server11",
				 "serverIp":"@{create.hostname.address.profile1}",
				 "multipleDomains": 
				 [{
				     "ownerId": ${owner.id},
				     "predefined": false,
				     "serverIp":"@{create.wildcard.address.profile1}",
				     "domain": "hmqatest.cn",
				     "domainUser": "test99",
				     "domainUserPassword": "aerohive"
				 }],
				 "domain": "hmqatest01.cn",
				 "shortDomain": "hmqatest01.cn",
				 "baseDN": "dc=HMQATEST,dc=COM",
				 "computerOU": "computerOU",
				 "enableTls": true,
				 "domainAdmin": "administrator",
				 "domainAdminPassword": "aerohive",
				 "domainAdminSaved": true,
				 "domainUser": "test99",
				 "domainUserPassword": "aerohive",
				 "ipAddress": "10.155.36.11",
				 "netmask": "255.255.255.0",
				 "gateway": "10.155.36.254",
				 "dnsServerIp": "10.155.36.11",
				 "realm": "realm"
				}
           </restapi>
		</step>
		<step name="create.active.directory.server2" description="">
			<restapi name="createActiveDirectoryServer">
				{
				 "jsonType": "active-directory-server",
				 "ownerId": ${owner.id},
				 "predefined": false,
				 "name": "Test_active_directory_server22",
				 "description": "This is a Test_active_directory_server22",
				 "serverIp":"@{create.hostname.address.profile2}",
				 "multipleDomains": 
				 [{
				     "ownerId": ${owner.id},
				     "predefined": false,
				     "serverIp":"@{create.wildcard.address.profile2}",
				     "domain": "hmqatest.cn",
				     "domainUser": "test99",
				     "domainUserPassword": "aerohive"
				 }],
				 "domain": "hmqatest01.cn",
				 "shortDomain": "hmqatest01.cn",
				 "baseDN": "dc=HMQATEST,dc=COM",
				 "computerOU": "computerOU",
				 "enableTls": true,
				 "domainAdmin": "administrator",
				 "domainAdminPassword": "aerohive",
				 "domainAdminSaved": true,
				 "domainUser": "test99",
				 "domainUserPassword": "aerohive",
				 "ipAddress": "10.155.36.22",
				 "netmask": "255.255.255.0",
				 "gateway": "10.155.36.254",
				 "dnsServerIp": "10.155.36.22",
				 "realm": "realm"
				}
           </restapi>
		</step>
		<step name="create.active.directory.server3" description="">
			<restapi name="createActiveDirectoryServer">
				{
				 "jsonType": "active-directory-server",
				 "ownerId": ${owner.id},
				 "predefined": false,
				 "name": "Test_active_directory_server33",
				 "description": "This is a Test_active_directory_server33",
				 "serverIp":"@{create.hostname.address.profile3}",
				 "multipleDomains": 
				 [{
				     "ownerId": ${owner.id},
				     "predefined": false,
				     "serverIp":"@{create.wildcard.address.profile3}",
				     "domain": "hmqatest.cn",
				     "domainUser": "test99",
				     "domainUserPassword": "aerohive"
				 }],
				 "domain": "hmqatest01.cn",
				 "shortDomain": "hmqatest01.cn",
				 "baseDN": "dc=HMQATEST,dc=COM",
				 "computerOU": "computerOU",
				 "enableTls": true,
				 "domainAdmin": "administrator",
				 "domainAdminPassword": "aerohive",
				 "domainAdminSaved": true,
				 "domainUser": "test99",
				 "domainUserPassword": "aerohive",
				 "ipAddress": "10.155.36.33",
				 "netmask": "255.255.255.0",
				 "gateway": "10.155.36.254",
				 "dnsServerIp": "10.155.36.33",
				 "realm": "realm"
				}
           </restapi>
		</step>
		<step name="create.active.directory.server4" description="">
			<restapi name="createActiveDirectoryServer">
				{
				 "jsonType": "active-directory-server",
				 "ownerId": ${owner.id},
				 "predefined": false,
				 "name": "Test_active_directory_server44",
				 "description": "This is a Test_active_directory_server44",
				 "serverIp":"@{create.hostname.address.profile4}",
				 "multipleDomains": 
				 [{
				     "ownerId": ${owner.id},
				     "predefined": false,
				     "serverIp":"@{create.wildcard.address.profile4}",
				     "domain": "hmqatest.cn",
				     "domainUser": "test99",
				     "domainUserPassword": "aerohive"
				 }],
				 "domain": "hmqatest01.cn",
				 "shortDomain": "hmqatest01.cn",
				 "baseDN": "dc=HMQATEST,dc=COM",
				 "computerOU": "computerOU",
				 "enableTls": true,
				 "domainAdmin": "administrator",
				 "domainAdminPassword": "aerohive",
				 "domainAdminSaved": true,
				 "domainUser": "test99",
				 "domainUserPassword": "aerohive",
				 "ipAddress": "10.155.36.44",
				 "netmask": "255.255.255.0",
				 "gateway": "10.155.36.254",
				 "dnsServerIp": "10.155.36.44",
				 "realm": "realm"
				}
           </restapi>
		</step>
		<step name="create.active.directory.server5" description="">
			<restapi name="createActiveDirectoryServer">
				{
				 "jsonType": "active-directory-server",
				 "ownerId": ${owner.id},
				 "predefined": false,
				 "name": "Test_active_directory_server55",
				 "description": "This is a Test_active_directory_server55",
				 "serverIp":"@{create.hostname.address.profile5}",
				 "multipleDomains": 
				 [{
				     "ownerId": ${owner.id},
				     "predefined": false,
				     "serverIp":"@{create.wildcard.address.profile5}",
				     "domain": "hmqatest.cn",
				     "domainUser": "test99",
				     "domainUserPassword": "aerohive"
				 }],
				 "domain": "hmqatest01.cn",
				 "shortDomain": "hmqatest01.cn",
				 "baseDN": "dc=HMQATEST,dc=COM",
				 "computerOU": "computerOU",
				 "enableTls": true,
				 "domainAdmin": "administrator",
				 "domainAdminPassword": "aerohive",
				 "domainAdminSaved": true,
				 "domainUser": "test99",
				 "domainUserPassword": "aerohive",
				 "ipAddress": "10.155.36.55",
				 "netmask": "255.255.255.0",
				 "gateway": "10.155.36.254",
				 "dnsServerIp": "10.155.36.55",
				 "realm": "realm"
				}
           </restapi>
		</step>
		<step name="create.active.directory.server6" description="">
			<restapi name="createActiveDirectoryServer">
				{
				 "jsonType": "active-directory-server",
				 "ownerId": ${owner.id},
				 "predefined": false,
				 "name": "Test_active_directory_server66",
				 "description": "This is a Test_active_directory_server66",
				 "serverIp":"@{create.hostname.address.profile6}",
				 "multipleDomains": 
				 [{
				     "ownerId": ${owner.id},
				     "predefined": false,
				     "serverIp":"@{create.wildcard.address.profile6}",
				     "domain": "hmqatest.cn",
				     "domainUser": "test99",
				     "domainUserPassword": "aerohive"
				 }],
				 "domain": "hmqatest01.cn",
				 "shortDomain": "hmqatest01.cn",
				 "baseDN": "dc=HMQATEST,dc=COM",
				 "computerOU": "computerOU",
				 "enableTls": true,
				 "domainAdmin": "administrator",
				 "domainAdminPassword": "aerohive",
				 "domainAdminSaved": true,
				 "domainUser": "test99",
				 "domainUserPassword": "aerohive",
				 "ipAddress": "10.155.36.66",
				 "netmask": "255.255.255.0",
				 "gateway": "10.155.36.254",
				 "dnsServerIp": "10.155.36.66",
				 "realm": "realm"
				}
           </restapi>
		</step>
		
		<step name="create.radius.server.ad">
			<restapi name="createRadiusServer">
				{
				"ownerId": ${owner.id},
				"predefined": false,
				"jsonType":"radius-server",
				"name": "AAA_Radius_Server",
				"description": "This is a AAA_Radius_Server",
				"enableAcceptOtherDevsAuthReqs": false,
				"approvedRadiusClients":
				 [{
				     "ownerId" : ${owner.id},
				     "predefined" :false,
				     "sharedSecret":"aerohive",
				     "description" : "This is description",
				     "clientIp" :
				       {"ownerId" : ${owner.id},
				         "jsonType": "ip",
				         "predefined" : false,
				         "name" : "ApprovedRadiusClients",
				         "description": "This is approvedRadiusClients",
				         "ipAddress" : "10.155.201.53"
				       }
				 }],

				"enableExternalUserDirectory":true,
				"enableLibrarySipServer": false,
				"enableLocalDatabase": false,
				"authentication": "TLS",
				"defaultAuthentication": "TLS",
				"enableVerifyServerCert": true,
				"serverKeyPassword": "aerohive",
				"enableCheckCommonName": false,
				"enableCheckTls": true,
				"enableCheckPeap": false,
				"enableCheckTtls":false,
				
				
				"externalUserDirectory":
				{
				  "jsonType": "active-directory",
				  "ownerId": ${owner.id},
				  "predefined": false,
				  "retryInterval": 6919728,
				  "retryIntervalUnit": "SECOND",
				  "localCheckInterval": 2708,
				  "localCheckIntervalUnit": "SECOND",
				  "remoteCheckInterval": 209,
				  "remoteCheckIntervalUnit": "MINUTE",
				  "enableCaching": true,
				  "cacheLifeTime": 1215327,
				  "cacheLifeTimeUnit": "MINUTE",
				  "entries": 
				  [{
				    "ownerId": ${owner.id},
				    "predefined": false,
				    "defaultServer": 
				    {
				      "jsonType": "active-directory-server",
				      "ownerId": ${owner.id},
				      "predefined": false,
				      "name": "Test_active_directory_server01",
				      "description": "This is a Test_active_directory_server01",
				      "serverIp":"@{create.hostname.address.profile}",
				      "multipleDomains": 
				      [{
				         "ownerId": ${owner.id},
				         "predefined": false,
				         "serverIp":"@{create.wildcard.address.profile}",
				         "domain": "hmqatest.cn",
				         "domainUser": "test99",
				         "domainUserPassword": "aerohive"
				      }],
				      "domain": "hmqatest01.cn",
				      "shortDomain": "hmqatest01.cn",
				      "baseDN": "dc=HMQATEST,dc=COM",
				      "computerOU": "computerOU",
				      "enableTls": true,
				      "domainAdmin": "administrator",
				      "domainAdminPassword": "aerohive",
				      "domainAdminSaved": true,
				      "domainUser": "test99",
				      "domainUserPassword": "aerohive",
				      "ipAddress": "10.155.36.116",
				      "netmask": "255.255.255.0",
				      "gateway": "10.155.36.254",
				      "dnsServerIp": "10.155.36.116",
				      "realm": "realm"
				   },	
				 "taggedEntries":
				 [{
				   "ownerId" : ${owner.id},
				   "predefined" : false,
				   "tags":
				   [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag01"
				       },
				      
				       {
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag02"
				       },
				       
				       {
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag03"
				    }],
				   "description": "This is a tagged entries description",
				   "server":"@{create.active.directory.server1}"
				  },
				  
				  {
				   "ownerId" : ${owner.id},
				   "predefined" : false,
				   "tags":
				   [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag04"
				       },
				       
				       {
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag05"
				    }],
				   "description": "This is a tagged entries description",
				   "server":"@{create.active.directory.server2}"
				  },
				  
				  {
				   "ownerId" : ${owner.id},
				   "predefined" : false,
				   "tags":
				   [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag06"
				    }],
				   "description": "This is a tagged entries description",
				   "server":"@{create.active.directory.server3}"
				  },
				  
				  {
				   "ownerId" : ${owner.id},
				   "predefined" : false,
				   "tags":
				   [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"hostname",
				         "value": "AH-0d1a80"
				    }],
				   "description": "This is a tagged entries description",
				   "server":"@{create.active.directory.server4}"
				  },
				  
				  {
				   "ownerId" : ${owner.id},
				   "predefined" : false,
				   "tags":
				   [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"location",
				         "value": "|vhm_root|"
				    }],
				   "description": "This is a tagged entries description",
				   "server":"@{create.active.directory.server5}"
				  },
				  
				  {
				   "ownerId" : ${owner.id},
				   "predefined" : false,
				   "tags":
				   [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"global",
				         "value": ""
				    }],
				   "description": "This is a tagged entries description",
				   "server":"@{create.active.directory.server6}"
				  }],
				  
				 "serverRole": "PRIMARY"
				}],
				"enableGlobalCatalog": true
				},
				
				
				"caCertificate":
				{
				  "ownerId" : ${owner.id},
				  "predefined" : false,
				  "fileName" :"test_file_01",
				  "fileSize" : 426,
				  "fileType":"SELF_GEN_CA",
				  "encrypted" : false,
				  "uploadTime" : 1387903732679,
				  "issuer" :"73d4AQuCKHyClF2KAtVh0ARlD6gN5FzPuspxC2l1",
				  "subject":"0X0sLkaJozxOiPz16S3HZXhxJn04AzD",
				  "expireTime" :"1387903732999"
				},

				"serverCertificate":
				{
				  "ownerId":${owner.id},
				  "predefined": false,
				  "fileName": "Test_file",
				  "fileSize": 13076,
				  "fileType": "SELF_GEN_CA",
				  "encrypted": false,
				  "uploadTime":1388088615444,
				  "issuer":"rW3ssznJpG3FbQ3w1Sxhkjr3INdhRZBBdFTJo29JSjdjNQ",
				  "subject":"asldjlskdfj",
				  "expireTime":"1388088615554"
				},
				"serverPrivateKey":
				{
				  "ownerId" : ${owner.id},
				  "predefined" : false,
				  "fileName" : "serprivatekey_server",
				  "fileSize" : 9072566,
				  "fileType": "CA",
				  "encrypted" : true,
				  "uploadTime" : 1387942203647,
				  "issuer":"rW3ssznJpG3FbG6tsdZ05Jr80QNzAXR3m",
				  "subject":"aSGaflgmneq4qUjnCvLelV2tEi9mhqFOuff67nu",
				  "expireTime":"1387903732999"}
				}
			</restapi>
		</step>
		
	</declaration>
	<stage>
		<step no="6">
			<call step="create.radius.server.ad" />
		</step>
		<step no="7">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>
		</step>
	</stage>
	<failed-process />
</testcase>


