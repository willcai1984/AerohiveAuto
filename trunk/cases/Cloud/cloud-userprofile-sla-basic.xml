<testcase>
	<brief>Cloud user profile schedules basic case</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Verify the client SLA can be correctly enable to user pofile
	</description>
	<numofap>0</numofap>
	<tbtype>winlin</tbtype>
	
	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>
	
	<pre-process />
	<!--Get the devcie info from actual AP after Cloud 3.0 can push configuration to device  -->
	<desc>
		user-profile UserProfile10 qos-policy def-user-qos vlan-id 10 attribute 10
		user-profile UserProfile10 performance-sentinel enable
		user-profile UserProfile10 performance-sentinel guaranteed-bandwidth 12345
	</desc>
	
	<property name="slaBandwidth" value="12345" />
	<property name="ap.mac" value="000011112103" />
	<property name="owner.id" value="102" />
	<property name="vlan.id" value="105" />
	<property name="userprofile.id" value="105" />
	
	<import file="${auto.root.dir}/impsubs/Policy_config_basic_lib.xml" workspace="Policy_config_basic" />
	
	<declaration>
		<step name="Policy_config_basic:create.user.profile.1" description="">
			<restapi name = "createUserProfile">
				{
				"jsonType" : "user-profile",
				"ownerId" : ${owner.id},
				"name" : "UserProfile10-A",
				"predefined" : false,
				"vlan" : {
				"jsonType" : "vlan",
				"ownerId" : ${owner.id},
				"name" : "Aerohive_VlanProfile",
				"description" : "Vlan Profile for Demo",
				"predefined" : false,
				"entries" : [ {
				"ownerId" : ${owner.id},
				"tags" : [ ],
				"vlanNumber" : ${vlan.id}
				} ]
				},
				"enableFirewall" : false,	
				"enableSchedule" : false,
				"schedules" : [ ],
				"enableTrafficTunneling" : false,
				"enableClientSla": true,
				"clientSlaSettings": 
				{
				    "ownerId": ${owner.id},
				    "predefined": false,
				    "bandwidth": ${slaBandwidth},
				    "actionType": "NONE"
				},
				"enableQos" : false,
				"enableClassification": false,
				"restriction" : "DENY_CAR",
				"enableClassification" : false
				}
			</restapi>
		</step>
	</declaration>

	<stage>
		<step no="1">
		 	<call step="Policy_config_basic:create.user.profile.1" />
			<failed>next</failed>
		</step>
		<step no="2">
			<call step="Policy_config_basic:create.ssid.profile.1" />
			<failed>next</failed>
		</step>
		<step no="3">
			<call step="Policy_config_basic:create.network.policy" />
			<failed>next</failed>
		</step>
		<step no="4">
			<call step="Policy_config_basic:create.device.1.ap330.v6101.as.ap" />
			<failed>next</failed>
		</step>
		<step no="5">
			<call step="Policy_config_basic:add.ssid.profile.into.network.policy" />
			<failed>next</failed>
		</step>
		
		<step no="6">
			<call step="Policy_config_basic:assign.network.policy.to.device" />
			<failed>next</failed>
		</step>
		<step no="7">
			<call step="Policy_config_basic:download.cli.to.device" />
			<failed>next</failed>
		</step>
		<step no="8">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>
	
			<log-match>-i "user-profile UserProfile10 performance-sentinel enable"</log-match>
 			<log-match>-i "user-profile UserProfile10 performance-sentinel guaranteed-bandwidth ${slaBandwidth}"</log-match>
		
		</step>
	</stage>
	<failed-process />
	<post-process />
</testcase>
