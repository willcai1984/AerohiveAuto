<testcase>
	<brief>DNS server Tags for cloud 3.0</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		DNS server Tags case
	</description>
	<numofap>1</numofap>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>
	<desc>
	   dns server-ip  dns.aerohive.com
	   dns server-ip  10.155.34.188 second
	</desc>

	<property name="test1" value="ServiceType" />
	<property name="ap.mac" value="FFFFFFFFFF03" />
	<property name="owner.id" value="103" />
	<property name="host.name" value="snmp.aerohive.com" />
    <property name="host.name1" value="snmp1.aerohive.com" />
	<property name="host.name2" value="snmp2.aerohive.com" />
	<property name="host.name3" value="snmp3.aerohive.com" />
	<property name="host.name4" value="snmp4.aerohive.com" />
	<property name="host.name5" value="snmp5.aerohive.com" />
	<property name="host.name6" value="snmp6.aerohive.com" />	
	<property name="ip.addr" value="10.155.34.180" />
	<property name="ip.addr1" value="10.155.34.181" />
	<property name="ip.addr2" value="10.155.34.182" />
	<property name="ip.addr3" value="10.155.34.183" />
	<property name="ip.addr4" value="10.155.34.184" />
	<property name="ip.addr5" value="10.155.34.185" />
	<property name="ip.addr6" value="10.155.34.186" />

	<declaration>
		<step name="create.ip.address.profile">
		<restapi name="createIpAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "ip",
				"name" : "IpAddressPrfoile",
				"ipAddress": "${ip.addr}"
				}
        </restapi>
		</step>
		<step name="create.ip.address.profile1">
		<restapi name="createIpAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "ip",
				"name" : "IpAddressPrfoile.1",
				"ipAddress": "${ip.addr1}"
				}
        </restapi>
		</step>
		<step name="create.ip.address.profile2">
		<restapi name="createIpAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "ip",
				"name" : "IpAddressPrfoile.2",
				"ipAddress": "${ip.addr2}"
				}
        </restapi>
		</step>
		<step name="create.ip.address.profile3">
		<restapi name="createIpAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "ip",
				"name" : "IpAddressPrfoile.3",
				"ipAddress": "${ip.addr3}"
				}
        </restapi>
		</step>
		<step name="create.ip.address.profile4">
		<restapi name="createIpAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "ip",
				"name" : "IpAddressPrfoile.4",
				"ipAddress": "${ip.addr4}"
				}
        </restapi>
		</step>
		<step name="create.ip.address.profile5">
		<restapi name="createIpAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "ip",
				"name" : "IpAddressPrfoile.5",
				"ipAddress": "${ip.addr5}"
				}
        </restapi>
		</step>
		<step name="create.ip.address.profile6">
		<restapi name="createIpAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "ip",
				"name" : "IpAddressPrfoile.6",
				"ipAddress": "${ip.addr6}"
				}
        </restapi>
		</step>
		<step name="create.hostname.address.profile" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile",
				"description" : "this is hostname address profile",
				"hostname": "snmp.aerohive.com"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile1" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile1",
				"description" : "this is hostname address profile",
				"hostname": "snmp1.aerohive.com"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile2" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile2",
				"description" : "this is hostname address profile",
				"hostname": "snmp2.aerohive.com"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile3" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile3",
				"description" : "this is hostname address profile",
				"hostname": "snmp3.aerohive.com"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile4" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile4",
				"description" : "this is hostname address profile",
				"hostname": "snmp4.aerohive.com"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile5" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile5",
				"description" : "this is hostname address profile",
				"hostname": "snmp5.aerohive.com"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile6" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile6",
				"description" : "this is hostname address profile",
				"hostname": "snmp6.aerohive.com"
				}
            </restapi>
		</step>
		<step name="create.ntp.server.profile" description="">
			<restapi name="createNtpProfile">
				{
					"ownerId": 103,
					"predefined": false,
					"jsonType": "ntp-profile",
					"name": "ntpserver",
					"description": "thisisntpserver",
					"enabled": true,
					"ntpServerType": "EXTERNAL_NTP_SERVER",
					"syncInterval": 188,
					"syncIntervalUnit": "MINUTE",
					"entries": [
					
					{
					"ownerId": 103,
					"predefined": false,
					"serverRole": "PRIMARY",
					"defaultServer": 
						{
						"jsonType": "ntp-server",
						"ownerId": 103,
						"predefined": false,
						"name": "defaultnepserver",
						"description": "thisisdefntpserver",
						"serverIp": "@{create.ip.address.profile}"
					
					},
					"taggedEntries": [
					{
					"ownerId": 103,
					"predefined": false,
					"tags": [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag01"
				        },
				      
				        {
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag02"
				        },
				       
				        {
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag03"
				    	}],
					"description": "iACwanqLnKyOVyXTQKadoGVWBIdDnsHY3sEeXITgHNFu7Dr4T2pgoaL95Ugl1fJNJKkn0g0rLyyYmFBKmKKVtRosggTZ2zi2Y7BOPCFlnO3qW7XSRRi3LXxm5Dn2HY9p",
					"server": 
						{
						"jsonType": "ntp-server",
						"ownerId": 103,
						"predefined": false,
						"name": "ntpserver1",
						"description": "thisisntpserver1",
						"serverIp" :"@{create.ip.address.profile1}"
						}
						
					},
					
					{
					"ownerId": 103,
					"predefined": false,
					"tags": [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag04"
				        },
				      
				        {
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag05"
				        }],
					"description": "iACwanqLnKyOVyXTQKadoGVWBIdDnsHY3sEeXITgHNFu7Dr4T2pgoaL95Ugl1fJNJKkn0g0rLyyYmFBKmKKVtRosggTZ2zi2Y7BOPCFlnO3qW7XSRRi3LXxm5Dn2HY9p",
					"server": 
						{
						"jsonType": "ntp-server",
						"ownerId": 103,
						"predefined": false,
						"name": "ntpserver2",
						"description": "thisisntpserver2",
						"serverIp" :"@{create.ip.address.profile2}"
						}
						
					},
					
					{
					"ownerId": 103,
					"predefined": false,
					"tags": [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag06"
				        }
				      ],
					"description": "iACwanqLnKyOVyXTQKadoGVWBIdDnsHY3sEeXITgHNFu7Dr4T2pgoaL95Ugl1fJNJKkn0g0rLyyYmFBKmKKVtRosggTZ2zi2Y7BOPCFlnO3qW7XSRRi3LXxm5Dn2HY9p",
					"server": 
						{
						"jsonType": "ntp-server",
						"ownerId": 103,
						"predefined": false,
						"name": "ntpserver3",
						"description": "thisisntpserver3",
						"serverIp" :"@{create.ip.address.profile3}"
						}
						
					},
					
					{
					"ownerId": 103,
					"predefined": false,
					"tags": [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"hostname",
				         "value": "AH-0d1a80"
				        }],
					"description": "iACwanqLnKyOVyXTQKadoGVWBIdDnsHY3sEeXITgHNFu7Dr4T2pgoaL95Ugl1fJNJKkn0g0rLyyYmFBKmKKVtRosggTZ2zi2Y7BOPCFlnO3qW7XSRRi3LXxm5Dn2HY9p",
					"server": 
						{
						"jsonType": "ntp-server",
						"ownerId": 103,
						"predefined": false,
						"name": "ntpserver4",
						"description": "thisisntpserver4",
						"serverIp" :"@{create.ip.address.profile4}"
						}
						
					},
					
					{
					"ownerId": 103,
					"predefined": false,
					"tags": [{
				        "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"location",
				         "value": "|vhm_root|"
				        }],
					"description": "iACwanqLnKyOVyXTQKadoGVWBIdDnsHY3sEeXITgHNFu7Dr4T2pgoaL95Ugl1fJNJKkn0g0rLyyYmFBKmKKVtRosggTZ2zi2Y7BOPCFlnO3qW7XSRRi3LXxm5Dn2HY9p",
					"server": 
						{
						"jsonType": "ntp-server",
						"ownerId": 103,
						"predefined": false,
						"name": "ntpserver5",
						"description": "thisisntpserver5",
						"serverIp" :"@{create.ip.address.profile5}"
						}
					},
					
					{
					"ownerId": 103,
					"predefined": false,
					"tags": [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"global",
				         "value": "tag"
				        }],
					"description": "iACwanqLnKyOVyXTQKadoGVWBIdDnsHY3sEeXITgHNFu7Dr4T2pgoaL95Ugl1fJNJKkn0g0rLyyYmFBKmKKVtRosggTZ2zi2Y7BOPCFlnO3qW7XSRRi3LXxm5Dn2HY9p",
					"server": 
						{
						"jsonType": "ntp-server",
						"ownerId": 103,
						"predefined": false,
						"name": "ntpserver6",
						"description": "thisisntpserver6",
						"serverIp" :"@{create.ip.address.profile6}"
						}
						
					}
					]
					}
					]
					}
            </restapi>   
            
            
		</step>
		<step name="create.device.1.ap330.v6102.as.ap">
			<restapi name="createDevice">
				{
				"ownerId":103,
				"ipAddress": "10.155.21.21",
				"macAddress":"FFFFFFFFFF03",
				"hostname":"virtual device for test 1",
				"serialNumber":"1111222233334444",
				"productType":"AP_330",
				"softwareVersion": "6.1.0.2",
				"role":19050,
				"function":"Ap",
				"adminState":"UNMANAGED",
				"isConnected":true
				}
            </restapi>
		</step>
		
		 <step name="update.device.config.ex.of.device1">
            <restapi name="updateDeviceConfigEx">
                {
                  "ownerId":"${owner.id}",
                  "ipAddress": "10.155.21.21",
                  "macAddress":"FFFFFFFFFF03",
                  "productType":"AP_330",
                  "deviceFunction":"Ap",
                  "device" : "@{create.device.1.ap330.v6102.as.ap}",
                  "networkPolicy" : "@{create.network.policy.1}",
                  "ipMode" : "DHCP_CLIENT_WITH_FALLBACK",
                  "tags" : [{
				               "jsonType": "device",
                               "ownerId": ${owner.id},
                               "predefined": false,
                               "value": "test_tag01"
				             },
				             {
				               "jsonType": "device",
                               "ownerId": ${owner.id},
                               "predefined": false,
                               "value": "test_tag02"
				             },
				             {
				               "jsonType": "device",
                               "ownerId": ${owner.id},
                               "predefined": false,
                               "value": "test_tag03"
				             }]
                }
            </restapi>
        </step>
        
        	<step name="create.network.policy.1">
			<restapi name="createNetworkPolicy">
				{
				"ownerId" : 103,
				"name" : "Aerohive_UserProfile1",
				"jsonType": "network-policy",
				"type" : "NetworkAccessAndSwitching"
				}
            </restapi>   
            
            
		</step>
        
		<step name="add.ntpprofile.profile.1.into.network.policy.1">
			<restapi name="assignfeature">
				{
				"jsonType" : "network_policy",
				"networkPolicyId" :"@{create.network.policy.1}",
				"featureId" :"@{create.ntp.server.profile}"
				}
            </restapi>
		</step>
		
		
		<step name="assign.network.policy.1.to.device.1">
			<restapi name="assignnetworkpolicy">
				{
				"device" :"@{create.device.1.ap330.v6102.as.ap}",
				"networkPolicy" :"@{create.network.policy.1}"
				}
            </restapi>
		</step>

		<step name="download.cli.to.device.1">
			<restapi name="downloadcli">
				{
				"networkPolicyId" :"@{create.network.policy.1}",
				"deviceIds" : ["@{create.device.1.ap330.v6102.as.ap}"],
				"configDownloadTypes" : [ "deviceFull"]
				}
            </restapi>
		</step>
	</declaration>

	<stage>
		<step no="1">
			<call step="create.ntp.server.profile" />
		</step>
		<step no="2">
			<call step="add.ntpprofile.profile.1.into.network.policy.1" />
		</step>
		<step no="3">
			<call step="assign.network.policy.1.to.device.1" />
		</step>
		update.device.config.ex.of.device1
		<step no="3">
			<call step="update.device.config.ex.of.device1" />
		</step>
		<step no="4">
			<call step="download.cli.to.device.1" />
		</step>
		<step no="5">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>
			<log-match>-i "ntp server 10.155.34.181"</log-match>
	
		</step>
	</stage>
	<failed-process />
</testcase>