<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>feature test cases</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		Verifiy the applicatin service and network service of ipfirewall rule
		Verifiy the cli of two ipfirewall rules can be generated

	</description>
	<numofap>1</numofap>
	<tbtype>winlin</tbtype>
	
	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>

	<property name="bandwidth" value="141721" />
	<property name="ap.mac" value="FFFFFFFFFF03" />
	
	<property name="owner.id" value="103" />
	<property name="vlan.id" value="10" />
	<property name="userprofile.id" value="10" />
	<property name="owner.id" value="103" />
	
	<declaration>
	
	<step name="get.bonjour.service.category">
		<restapi name="getBonjourServiceCategory">
			{
			"ownerId": 102, 
			"jsonType": "bonjour-service-category", 
			"name": "Wildcard Services", 
			"predefined": true 
			}
		</restapi>
	</step>
	
	<step name="get.bonjour.service.1">
	<restapi name="getBonjourService">
	{ 
	"ownerId": 102, 
	"name": "All UDP Services", 
	"serviceType": "*._*._udp.", 
	"serviceCategory": "@{get.bonjour.service.category}", 
	"predefined": true 
	}
	</restapi>
	</step>
	
	
	
		<step name="create.vlangroup.profile" description="">
			<restapi name="createVlanGroupProfile">
				{
				"ownerId": 103,
				"predefined": false,
				"jsonType": "vlan-group",
				"name": "vlangroup",
				"description": "thisisvlangroup",
				"entries": [
				{
				"ownerId": 103,
				"predefined": false,
				"tags": [],
				"description": "vlangroup1",
				"presentation": "1-2,3-4"
				}
				]
				}
				
            </restapi>
		</step>
		
		<step name="create.bonjour.gateway.profile" description="">
			<restapi name="createBonjourGatewayProfile">
				{
				"ownerId": 103,
				"predefined": false,
				"jsonType": "bonjour-gateway-profile",
				"name": "bonjourgatewayprofile",
				"description": "thisisbonjourgatewayprofile",
				"scanVlans": "1-100",
				"rules": [
				{"ownerId": 103,
				"predefined": false,
				"ruleId": 1,
				"action": "PERMIT",
				"maxWirelessHop": 8592,
				"realmName": "realmname",
				"bonjourService": "@{get.bonjour.service.1}",
				"fromVlanGroup" :"@{create.vlangroup.profile}",
				"toVlanGroup" :"@{create.vlangroup.profile}"
				}
				]
				}
            </restapi>
		</step>
	
	

		<step name="create.network.policy" description="">
			<restapi name = "createNetworkPolicy">
				{
				"ownerId" : 103,
				"predefined": false,
   				"jsonType": "network-policy",
				"name" : "Aerohive_network",
				"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
		</step>
		<!--This step should be removed after Could 3.0 can push configuration to device-->
		<step name="create.device.1.ap330.v6101.as.ap">
			<restapi name = "createDevice">
				{
				"ownerId":103,
				"ipAddress": "10.155.21.21",
				"macAddress": "FFFFFFFFFF03",
				"hostname": "virtual device for test",
				"serialNumber": "11112222333344",
				"productType": "AP_330",
				"softwareVersion": "6.1.0.1",
				"role": 19050,
				"function": "Ap",
				"adminState": "UNMANAGED",
				"isConnected": true
				}
			</restapi>
		</step>
		
		<step name="create.bonjour.gateway.settings">
            <restapi name="createDeviceBonjourGatewaySettings">
                {
                  "ownerId": "${owner.id}",
                  "jsonType": "device-bonjour-gateway-settings",
                  "priority": 50,
                  "realmName": "testBonjourRealmName",
                  "enableLockRealmName": false
                }
            </restapi>
        </step>

        <step name="add.feature.to.device">
          <restapi name="assignFeatureToDevice">
            {
              "jsonType" : "device",
              "deviceId" : "@{create.device.1.ap330.v6101.as.ap}",
              "featureId" : "@{create.bonjour.gateway.settings}"
            }
          </restapi>
        </step>
		
		<step name="add.ssid.profile.into.network.policy" description="">
			<restapi name = "assignfeature">
				{
				"jsonType" : "network_policy",
				"networkPolicyId" : "@{create.network.policy}",
				"featureId" : "@{create.ssid.profile}"
				}
			</restapi>
		</step>
		
			<step name="add.bonjour.gateway.profile.into.network.policy">
			<restapi name="assignfeature">
				{
				"jsonType" : "network_policy",
				"networkPolicyId" :"@{create.network.policy}",
				"featureId" :"@{create.bonjour.gateway.profile}"
				}
            </restapi>
		</step>
		
		<step name="assign.network.policy.to.device" description="">
			<restapi name ="assignnetworkpolicy">
				{
				 "device" : "@{create.device.1.ap330.v6101.as.ap}",
                 "networkPolicy" : "@{create.network.policy}"
				}
			</restapi>
		</step>

		<step name="download.cli.to.device" description="">
			<restapi name = "downloadcli">
				{
				"networkPolicyId" : "@{create.network.policy}",
				"deviceIds" : [ "@{create.device.1.ap330.v6101.as.ap}"],
				"configDownloadTypes" : [ "deviceFull"]
				}
			</restapi>
		</step>
		
		
	</declaration>

	<stage>
	
		<step no="0">
			<call step="get.bonjour.service.category" />
			<failed>next</failed>
		</step>
		get.bonjour.service.1
	    <step no="0">
			<call step="get.bonjour.service.1" />
			<failed>next</failed>
		</step>
	
		<step no="1">
			<call step="create.vlangroup.profile" />
			<failed>next</failed>
		</step>

		<step no="2">
			<call step="create.bonjour.gateway.profile" />
			<failed>next</failed>
		</step>
		
		<step no="3">
			<call step="add.bonjour.gateway.profile.into.network.policy" />
			<failed>next</failed>
		</step>

		<step no="4">
			<call step="create.bonjour.gateway.settings" />
			<failed>next</failed>
		</step>
		
		<step no="5">
			<call step="add.feature.to.device" />
			<failed>next</failed>
		</step>
		
		<step no="6">
			<call step="assign.network.policy.to.device" />
			<failed>next</failed>
		</step>

		<step no="7">
			<call step="download.cli.to.device" />
			<failed>next</failed>
		</step>
		<step no="8">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>
			<log-match>-i "bonjour-gateway vlan 1 2"</log-match>
			<log-match>-i "bonjour-gateway vlan 3 4"</log-match>
         </step>
	</stage>
	<failed-process />
	<post-process />
</testcase>