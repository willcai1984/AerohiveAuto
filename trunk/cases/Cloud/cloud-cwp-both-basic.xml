<testcase>
	<brief>Cloud CWP both basic case</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Verify the CWP can be correctly create with Self, and it can be bind to a SSID
	</description>
	<numofap>1</numofap>
 	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>

	<desc>
		security-object SSID-CWP security additional-auth-method captive-web-portal reg-user-profile-attr 10 
		security-object SSID-CWP security additional-auth-method captive-web-portal auth-method chap
		security-object SSID-CWP security additional-auth-method captive-web-portal default-language english
		security-object SSID-CWP web-server index-file auth-reg.html 
		security-object SSID-CWP web-directory CWP-Both
		ssid SSID-CWP
		ssid SSID-CWP security-object SSID-CWP
	</desc>
	
	<property name="ap.mac" value="FFFFFFFFFF05" />
	<property name="owner.id" value="102" />
	<property name="vlan.id" value="105" />
	<property name="userprofile.id" value="105" />
	
	<declaration>
		<step name="create.cwp.both" description="">
			<restapi name="createCwp">
				{
				    "ownerId":${owner.id},
				    "predefined": false,
				    "jsonType": "cwp",
				    "name":"CWP-Both",
				    "vlan":
			    	 {
	                     "jsonType": "vlan",
	                      "ownerId": ${owner.id},
	               		 "predefined": false,
	               		 "name": "vlan",
	               		 "description": "fadfad",
	                	 "entries": 
			   				 [{
	                        "ownerId": ${owner.id},
	                        "predefined": false,
	                        "tags": [ ],
	                        "description": "aa",
	                        "vlanNumber": 1
	                    	}]
	                    },
				"walledGarden": {
				        "ownerId": ${owner.id},
				        "predefined": false,
				        "entries": [
				          {
				            "ownerId": ${owner.id},
				            "predefined": false,
				            "ipObject": {
				              "jsonType": "ip-address-profile",
				              "ownerId": ${owner.id},
				              "predefined": false,
				              "name": "ia2cOE8pYfmrS49kwCHnKGni5NbP4J3A",
				              "description": "",
				              "value": "Y3aUUrvH8nH4hAxlsMx2GAje2usHH1pF"
				            },
				            "itemId": 50,
				            "service": "SERVICE_WEB",
				            "protocolNumber": 239,
				            "port": 26107
				          }
				        ]
				      },
				    "loginPage": {
				        "jsonType": "cwp-login-page",
				        "ownerId":${owner.id},
				        "predefined": false,
				        "backgroundColor": "QkX18owfHx",
				        "fontColor": "dZLdY66bJS",
				        "linksColor": "F4SxdL8EcN",
				        "buttonColor": "N7CARmfYE9",
				        "buttonTextColor": "pjaPyXMxrX",
				        "logoFileName": "dgf8MuspB8qsH5efaYlcRj3lejHE1HEv",
				        "backgroundImageName": "WFjymZlLhBlgJzeqp50ICHeLhEnEUjXZ",
				        "uploadByUser": true,
				        "fileDirectory": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg",
				        "fileName": "auth-reg.html",
				        "policyContent": "cwp both",
				        "passwordEncryption": "SHARED",
				        "sharedSecret": "aerohive",
				        "loginUrl": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg/registration.html",
				        "authProtocol": "CHAP",
				        "requiredFieldsCount": 5,
				        "optionalFieldsCount": 0
				    },
				    "successPage": {
				        "jsonType": "cwp-success-page",
				        "ownerId":${owner.id},
				        "predefined": false,
				        "backgroundColor": "iIf2OM8aOQ",
				        "fontColor": "REHNqR3VFG",
				        "linksColor": "LBZeYmlyXV",
				        "buttonColor": "lkUFS0q6g0",
				        "buttonTextColor": "ZeRn2PSHeT",
				        "logoFileName": "Z1RUK8FNjWQ0z1l6KXiJXPdc4hPMpTbo",
				        "backgroundImageName": "yZBuWeAHEFn5N3bwjTymAXSNChJOsmfx",
				        "uploadByUser": false,
				        "fileDirectory": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg",
				        "fileName": "success.html",
				        "wlanAccessNotice": "WLAN access notice",
				        "librarySipNotice": "Library sip notice"
				    },
				    "failurePage": {
				        "jsonType": "cwp-failure-page",
				        "ownerId":${owner.id},
				        "predefined": false,
				        "backgroundColor": "ilh3C5M6Ge",
				        "fontColor": "qcjLswgdhY",
				        "linksColor": "AChJxcXmfo",
				        "buttonColor": "z7MSNvtcGW",
				        "buttonTextColor": "YV32Vq7NhQ",
				        "logoFileName": "HwVZTDzXPxbwElsWgKUZOMTEGuFg70cE",
				        "backgroundImageName": "VchUEKnH1rDKeFuiTqcgb1LTJUynED8X",
				        "uploadByUser": true,
				        "fileDirectory": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg",
				        "fileName": "failure.html",
				        "failureNotice": "failure"
				    },
				    "httpsCertificate": {
				        "ownerId":${owner.id},
				        "predefined": false,
				        "fileName": "XBVT2j6tU0oRg9Sp7bi80SzlrUWPokaM",
				        "fileSize": 7121228153066876000,
				        "fileType": "KEY",
				        "index": 10,
				        "encrypted": false,
				        "issuer": "rtr65cHB2LhM5Od9Knddup1iUQWuPTsF95CovqZIiHARkxrejhw8mepjoqshGHt7ewnXnYGr2WVmTampEb2lBfxBiap37V5B67CFdIabvCGjPcQGzYGb7rcjXt7ODR73",
				        "subject": "5bYxlhYyPv1QNhpFmjujXLOglfmnt8TgyHcVXWrTyuS4TPZJSdAVIF6cfVyCAH6hmqezHcQDB8A3H9QEAoCyPxiCa47KIjsdXx5t7ETJDYxJmKwS9IWnz7VukxW98SH2",
				        "expireTime": "avczYljS9hJcRBQ4EoFrNt2jQxQIDyoh"
				    },
				    "successExternalUrl": "0lG3iyAhh9UWhGrV3OWi3ETtobRZiyDEMgBIE4S61QXw2W0NsNnLaSyMHtsAwT01oFEPR74p9vPwUTTwGp0IsTVghxSNp7kv5o2oeR2L71Tv45Gvr4aN6qPzKU5gcUKE0VDtJChl7j8fuC5Ew8cHCcoj2o16ZLPqYAtdehgNP5ner97YFLFCDOhC1rJJwDabbPiAfEJ81m7UqbbcyoY5qcSOTm7ilS9sYu03In5pDB14TTyUrN4KwSfsvLqkPAPU",
				    "failureExternalUrl": "TwYMTt2qBOjdwv15LMtifpdUk0SEQvIqu0oeqR0fMvVKJf5gAKZbyc4eDKbNxnO8aCsNUQYiA7styMAPYYWeCQvDnhFpO7ccJwp0DcVR9hA0B0ElryBdqiMvK72IcvGSFWCn0Prh2FUQniKghnCIgswUf2xf5J16SKqBjusM74c2KC7B2VXSDqF3WpJ31hxoziCa3pHJjyFrDmGBUyPYmVFKSPNrD1UbXcNMqwSHyFqV1kTa82WfXzBvFklznPoY",
				    "eth0Ip": "06i7miqIPUqRFW9xvh7Nnrscp0ejwQUz",
				    "eth0Netmask": "Pxy3SgFJ8izlr6vZq5Pzgmw1ojRu2cKF",
				    "eth1Ip": "925DrXlEUQta9EpalL7VyYdrkkdvuypE",
				    "eth1Netmask": "sjxprQNQnxmuMssWtdXHXUPHEQy2bcGN",
				    "radio11aModeIp": "8FYuFC8Hnn3RP6mBv9Prh47ScEkrZHdb",
				    "radio11aModeNetmask": "QaIAiVPwOsOu37tsIc0PVQD3PZI7KgMn",
				    "radio11bgModeIp": "RkRAf9l2HlhBCY2dr1MW2ZJUJr4KMqIY",
				    "radio11bgModeNetmask": "Q6KqACr0nOAHWKuboDSewaSK9P5MUbJU",
				    "serverDomainName": "Go69F9vajRIGYIO3JHuKGjHTDy7v2uJ1UWF1FpmOQZ12YshEwwcvNTQhlWFckDjL",
				    "sipRedirectUrl": "ctOzoTJX7qdDIhZE9KdxwOQuT9bnOVVGnwgD2GCgOr43qu2pehpVN3snKkG66Fc0hIJD3hSVqZ8RhbyVSFm1iMD7W6CdmujznQB9ttTzsfg7SSMC7xtTlsGCkwtAiU2qZAQmiNUGpvhZlRqMvThYLQdAv7qChHdN2eE1uKxxSc8ILv8XJqPYzOrdzab2f3mRNUVOER25MJfnh6wz52AQZ7TAOlxzhGPW42A2QZXaTl20zyYeh5dH75yn5auH1KZu",
				    "useStandardLoginPage": true,
				    "useCustomLoginPage": false,
				    "showSuccessPage": false,
				    "useStandardSuccessPage": false,
				    "useCustomSuccessPage": false,
				    "redirectAfterSuccessLogin": false,
				    "successToInitiallyPage": true,
				    "successToSpecifiedUrl": false,
				    "showFailurePage": false,
				    "showFailureViaLoginPage": true,
				    "useStandardFailurePage": true,
				    "useCustomFailurePage": false,
				    "redirectAfterFailureLogin": true,
				    "failureToInitiallyPage": false,
				    "failureToSpecifiedUrl": true,
				    "displaySessionTimer": true,
				    "enableHttps": false,
				    "enableHttp302": true,
				    "forceAcceptNetwork": false,
				    "overrideCertificateDomain": false,
				    "useDefaultNetwork": false,
				    "useCustomNetwork": false,
				    "overrideVlan": true,
				    "enableWallGarden": true,
				    "languages": [
				        "uSGnYZdZzfmmeUApjCV2UQtYNfJ3hAUZ2Sumq14BbnMZ0HR4BdmiHYykLo6aHNwkHXWePNqTqxzNUqeluPPS8C3wXX8Xs2uB1O13FKbyrVGewuRWQ9Ql70YQDCyMggOrn9dKEK2MC608QBZVp8TPoxc9WIAfD9mbNTmtAu490Y8lshZJcgnquqvDHZb8EIBGFzBUp7qYsYoqOTqNT8ZzZxRTZiLSOVRgd7pRaCf1n4ocxl6qHRRDrjFMTCSLopx",
				        "mndY7hb50i76qjnA95G97CFzk7ipyHRFnDc7rtroMrbpuyrwXmv0360ZzwcJAw9PIq0MpoAEnEjaauv39gd0pVrALWkRWwKDk8bg23tmvQytqLajFrSFU2Le9TnvcPQy6UxMRk4PSpQC5UKYmiwoOuVeaVbVbYWw28gShtr4TKISoW920kie8XYaNSO6YMOC6rzis1Za6BZDRx3gGKbBwfKDt9I9V0Nb2YsOuunnh6cZ9mtDo9SliTWz9ODL4BJ"
				    ],
				    "defaultLanguage": "ES",
				    "sessionExpireAlert": 10,
				    "leaseTime": 31609,
				    "registrationPeriod": 51412,
				    "successDelay": 42,
				    "failureDelay": 10,
				    "registrationType": "AUTH_AND_SELF_REG",
				    "internalDhcpType": "USE_AEROHIVE",
				    "dhcpMode": "MODE_KEEPSILENT"
				
				}
		    </restapi>
		</step>
		<step name="create.cwp.profile" description="">
			<restapi name="createCwpProfile">
				{
				  "ownerId": ${owner.id},
				  "predefined": false,
				  "jsonType": "cwp-profile",
				  "name": "cwpprofile-selfreg",
				  "description": "",
				  "defaultCwp":"@{create.cwp.both}",
				  "entries": [ 
					{
		            "ownerId": ${owner.id},
		            "predefined": false,
		            "tags": [],
		            "description": "",
		            "cwp": "@{create.cwp.both}"
					}],
				  "enabled": true,
				  "registrationType": "AUTH_AND_SELF_REG"
				}
		   </restapi>
		</step>
		<step name="create.external.radius.profile" description="">
		    <restapi name="createExternalRadiusProfile">
		          {
                   "ownerId" : ${owner.id}, 
                   "predefined" : false, 
                   "jsonType" : "external-radius-profile", 
                   "name" : "AAARadiusClient", 
                   "description" : "ExternalRadiusProfile", 
                   "externalRadiusServerOption" : "OBTAIN_VIA_DHCP_OPTIONS"
                   }
		    </restapi>
		</step>		

		<step name="create.traffic.filter" description="">
			<restapi name="createTrafficFilter">
				{
				"ownerId": ${owner.id},
				"predefined": false,
				"jsonType": "traffic-filter",
				"name": "Default service filter",
				"description": "This is one mac dos",
				"enableSsh": true,
				"enableTelnet": false,
				"enablePing": true,
				"enableSnmp": false,
				"enableInterStationTraffic": true
				}
		   </restapi>
		</step>	
		<step name="create.mac.dos.prevention.1" description="">
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos1",
			"description": "This is one mac dos prevention",
			"dosType": "SSID",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false
			}]
			}
	    </restapi>
		</step>
		<step name="create.mac.dos.prevention.2" description="">
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos2",
			"description": "This is one mac dos prevention",
			"dosType": "STATION",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false
			}]
			}
	    </restapi>
		</step>
		<step name="create.ip.dos.prevention" description="">
			<restapi name="createIpDosPrevention">
			{
			"ownerId":${owner.id},
			"predefined":false,
			"jsonType":"ip-dos-prevention",
			"name":"IP-dos-test",
			"description":"This is one ip dos",
			"enableSynCheck":false,
			"dosParams":[
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"RADIUS_ATTACK",
			"threshold":5,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":true},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ICMP_FLOOD",
			"threshold":20,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"IP_SPOOF",
			"threshold":3,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ADDRESS_SWEEP",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"PORT_SCAN",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"UDP_FLOOD",
			"threshold":50,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"SYN_FLOOD",
			"threshold":1000,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ARP_FLOOD",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false}
			]}
		}
		</restapi>
	</step> 
 		<step name="create.user.profile.1">
            <restapi name="createUserProfile">
                {
                    "jsonType" : "user-profile",
                    "ownerId" : ${owner.id},
                    "name" : "CloudUserProfile106",
                    "predefined" : false,
                    "vlan" : 
            			{
                        "jsonType" : "vlan",
                        "ownerId" : ${owner.id},
                        "name" : "Aerohive_VlanProfile",
                        "description" : "Vlan Profile for Demo",
                        "predefined" : false,
                        "entries" : 
            				[ {
                            "ownerId" : ${owner.id},
                            "tags" : [ ],
                            "vlanNumber" : ${vlan.id}
                        	} ]
                    	},
                    "enableFirewall" : false,
                    "enableSchedule" : false,
                    "schedules" : [ ],
                    "enableTrafficTunneling" : false,
                    "enableClientSla" : false,
                    "enableQos" : false,
                    "restriction" : "DENY_CAR",
                    "enableClassification" : false           
                }
            </restapi>
        </step>
		<step name="create.ssid.profile.1" description="">
			<restapi name = "createSsidProfile">
 				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSID-CWP",
                    "ssid" : "SSID-CWP",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"authenticationOption":"AEROHIVE_IDENTITY_MANAGER",
					"accessSecurity": {
				                  "ownerId": ${owner.id},
                                  "jsonType": "open-access"
				                   },
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": true,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": true,
						"wmmEnableWmmVideo": true,
						"wmmEnableWmmVoice": true,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "AUTO",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":70,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
                    "cwpProfile":"@{create.cwp.profile}",
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
			</restapi>
		</step>
		<step name="create.network.policy.1">
			<restapi name = "createNetworkPolicy">
				{
				"ownerId" : ${owner.id},
  				"predefined": false,
				"jsonType": "network-policy",
				"name" : "Aerohive_UserProfile10",
				"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
        </step>
		<!--This step should be removed after Could 3.0 can push configuration to device-->
		<step name="create.device.1.ap330.v6102.as.ap">
			<restapi name = "createDevice">
				{
				"ownerId":${owner.id},
				"ipAddress": "10.155.21.21",
				"macAddress":"${ap.mac}",
				"hostname":"virtual device for test",
				"serialNumber":"1111222233334444",
				"productType":"AP_330",
				"softwareVersion": "6.1.2.0",
				"role":19050,
				"function":"Ap",
				"adminState":"UNMANAGED",
				"isConnected":true
				}
			</restapi>
		</step>

        <step name="add.ssid.profile.into.network.policy">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.1}"
                }
            </restapi>
        </step>
        <step name="assign.network.policy.to.device">
            <restapi name="assignnetworkpolicy">
                {
                    "device" : "@{create.device.1.ap330.v6102.as.ap}",
                    "networkPolicy" : "@{create.network.policy.1}"
                }
            </restapi>
        </step>

        <step name="download.cli.to.device">
            <restapi name="downloadcli">
                {
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "deviceIds" : [ "@{create.device.1.ap330.v6102.as.ap}"],
                    "configDownloadTypes" : [ "deviceFull"]
                }
            </restapi>
        </step>>
	</declaration>
	<stage>
		<step no="1">
			<call step="create.cwp.both" />
			<failed>next</failed>
		</step>
		<step no="2">
			<call step="create.cwp.profile" />
			<failed>next</failed>
		</step>
		<step no="3">
			<call step="create.external.radius.profile" />
			<failed>next</failed>
		</step>
		<step no="4">
			<call step="create.traffic.filter" />
			<failed>next</failed>
		</step>
		<step no="5">
			<call step="create.mac.dos.prevention.1" />
			<failed>next</failed>
		</step>
		<step no="6">
			<call step="create.mac.dos.prevention.2" />
			<failed>next</failed>
		</step>
		<step no="7">
			<call step="create.ip.dos.prevention" />
			<failed>next</failed>
		</step>	
		<step no="8">
			<call step="create.network.policy.1" />
			<failed>next</failed>
		</step>
		<step no="9">
			<call step="create.device.1.ap330.v6102.as.ap" />
			<failed>next</failed>
		</step>
		<step no="10">
			<call step="create.user.profile.1" />
			<failed>next</failed>
		</step>
		<step no="11">
			<call step="create.ssid.profile.1" />
			<failed>next</failed>
		</step>
		<step no="12">
			<call step="add.ssid.profile.into.network.policy" />
			<failed>next</failed>
		</step>
		<step no="13">
			<call step="assign.network.policy.to.device" />
			<failed>next</failed>
		</step>
		<step no="14">
			<call step="download.cli.to.device" />
		</step>
		<step no="15">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>	

            <log-match>-i "security-object SSID-CWP security additional-auth-method captive-web-portal auth-method chap"</log-match>	
			<log-match>-i "security-object SSID-CWP security additional-auth-method captive-web-portal default-language english"</log-match>
            <log-match>-i "security-object SSID-CWP web-server index-file auth-reg.html"</log-match>
            <log-match>-i "security-object SSID-CWP web-directory CWP-Both"</log-match>
            <log-match>-i "ssid SSID-CWP"</log-match>
            <log-match>-i "ssid SSID-CWP security-object SSID-CWP"</log-match>       
          			
		</step>
	</stage>
	<failed-process />
	<post-process />
</testcase>
