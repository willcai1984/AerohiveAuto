<testcase>
	<brief>test case for QA cloud 3.0 demo</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
	1. These SSID profiles will be covered:
			a)	SSIDA_Open
			b)	SSIDB_Open_CWP
			c)	SSIDC_Open_MacAuth
			d)	SSIDD_Open_CWP_MacAuth
			e)	SSIDE_WEP
			f)	SSIDF_WEP_CWP
			g)	SSIDG_WEP_MacAuth
			h)	SSIDH_WEP_CWP_MacAuth
			i)	SSIDI_8021X
			j)	SSIDJ_8021X_CWP
			k)	SSIDK_PPSK
			l)	SSIDL_PPSK_CWP
			m)	SSIDM_WPA
			n)	SSIDN_WPA_CWP
			o)	SSIDO_WPA_MacAuth
			p)	SSIDP_WPA_CWP_MacAuth
	
	 2. These feature will be covered under user profile.
			a)	GRE tunnel for roaming or station isolation (DNXP)
			b)	Firewalls
			c)	Schedules
			d)	SLA (service level assurance)
			e)	Client Classification Policy (user-profile reassignment): Enable with Mac Objects--Do not implement 
	
	 3. These feature will be covered under Additional Settings.
			a)   Hives-- Not ready
			b)   Traffic Filter Settings: Default setting (Enable SSH/Ping/Inter-station Traffic)	
			c)   Service Settings: Default setting
				 	ALG Services: Enable
					Access Console: Enable
					Management Options: Enable
					MGT IP Filter: None
					WIPS Policy: None
					Link Discovery Protocol: Enable
					Track IP Groups for Backhaul: Disable
					Enable the web server: Enable
					Enable periodic checking of network connectivity to RADIUS servers: None
			d)   Management Server Settings: Default setting
					SNMP Server: Default service SNMP
					DNS Server: None--->enable
					Syslog Server: None	
					NTP Server: Enable by default (Sync Clock with HiveManager)---->enable
			        Location Server: None
			e)   QoS Settings: Default setting
			f)   Statistics Collection Settings: Default setting
					Enable Statistics Collection: Enable
					Application Visibility and Control: Turn on
	
	 4. Features under device page.
			a)  MGT0 interface Settings: Static
			b)  Service Settings:
				Radius server:  Enable
	
			
	</description>
	<numofap>1</numofap>
 	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>

	<property name="timeInterval" value="100" />
	<property name="trafficThreshold" value="100" />
	<property name="startDateTime" value="1394071200000" />
	<property name="endDateTime" value="1394074800000" />
	<property name="schedulingWeight" value="10" />
	<property name="rateLimit11abg" value="54000" />
	<property name="rateLimit11n" value="1000000" />
	<property name="rateLimit11ac" value="2000000" />
	<property name="guaranteedAirTime" value="50" />
	<property name="slaBandwidth" value="12345" />
	<property name="ap.mac" value="FFFFFFFFFF05" />
	<property name="owner.id" value="102" />
	<property name="vlan.id" value="105" />
	<property name="radius.client.ip" value="10.155.33.225" />	
	<property name="mac.src" value="247703805ed4" />
	<property name="mac.dest" value="d487d8c64836" />

	<declaration>
		

	<step name="create.dns.profile" description="">
		 <restapi name="createDnsProfile">
			 {
				"ownerId": ${owner.id},
		        "predefined": false,
		        "jsonType": "dns-profile",
		        "name": "Aerohive",
		        "description": "Predefined DNS service profile",
		        "enabled": true,
		        "entries": 
			 		[
			               {
			                "ownerId": ${owner.id},
			                "predefined": false,
			                "defaultServer": {
			                    "jsonType": "dns-server",
			                    "ownerId": ${owner.id},
			                    "predefined": false,
			                    "name": "aaa",
			                    "description": "ip1",
			                    "serverIp": {
			                        "jsonType": "ip",
			                        "ownerId": ${owner.id},
			                        "predefined": false,
			                        "name": "ip1",
			                        "description": "For all Devices (Primary)",
			                        "ipAddress": "168.143.87.77"
			                                }
			                                   },
			                 "taggedEntries": [],
			                 "serverRole": "PRIMARY"
			            },
			            {
			                "ownerId": ${owner.id},
			                "predefined": false,
			                "defaultServer": {
			                    "jsonType": "dns-server",
			                    "ownerId": ${owner.id},
			                    "predefined": false,
			                    "name": "bbb",
			                    "description": "ip2",
			                    "serverIp": {
			                        "jsonType": "ip",
			                        "ownerId": ${owner.id},
			                        "predefined": false,
			                        "name": "ip2",
			                        "description": "For all Devices (Secondary)",
			                        "ipAddress":"209.128.124.9"
			                                }
			                                    },
			                "taggedEntries": [],
			                "serverRole": "BACKUP1"
			            }
			        ]
	        }
		  </restapi>
		</step>
	 <step name="create.ntp.profile" description="">
		 <restapi name="createNtpProfile">
		    {
		      "ownerId": ${owner.id},
		      "predefined": false,
		      "jsonType": "ntp-profile",
		      "name": "Aerohive",
		      "description": "predefined ntp",
		      "enabled": true,
		      "ntpServerType": "EXTERNAL_NTP_SERVER",
		      "syncInterval": 1441,
		      "syncIntervalUnit": "HOUR",
   	          "entries": [
                  {
                   "ownerId": ${owner.id},
                   "predefined": false,
                   "serverRole": "PRIMARY",
                   "defaultServer": 
                          {
                          "ownerId": ${owner.id},
                          "predefined": false,
                          "jsonType": "ntp-server",
                          "name": "server1",
                          "description": "predefined NTP",
                          "serverIp": 
                                 {
                              "jsonType": "hostname",
                              "ownerId": ${owner.id},
                              "predefined": false,
                              "name": "testhostname",
                              "description": "Predefined NTP",
                              "hostname": "ntp1.aerohive.com"
                                }
                         },
                         "taggedEntries":[]
                     }
            ]
        }
	   
		 </restapi>
	</step>
	
	   <step name="create.ppsk.usergroup" description="">
	      <restapi name="createPpskUserGroup">
	             {
	            "ownerId": ${owner.id},
       	        "predefined": false,
                "jsonType": "ppsk-user-group",
                "name": "manuup",
                "description": "manually user group",
                "userProfileAttribute": {
                                   "ownerId": ${owner.id},
                                   "predefined": false,
                                   "attrNumber": 1,
                                   "autoGenerated": false
                                    },
                "vlan": 1,
                "reauthorizationTime": 1800,
                "pskGenerationMethod": "USER_STRING_PASSWORD",
               "concatenatingString": "aerohive",
               "timeZone": "GH6tKeY6SR8VTHTjnqvcRsENDgAwg111ScMJF9WZBuzxe88suFFia57g2u8AHJrn",
               "pskValidityPeriod": "ONCE",
                "enablePskValidityStartTime": true,
                "startTime": 1388812649206,
                 "endTime": 1388734307794,
                "enablePskValidityEndTime": true,
               "characterTypesIncludeLetters": true,
                "characterTypesIncludeDigits": true,
                "characterTypesIncludeSpecialCharacters": true,
                "characterTypeCombination": "ALL_SELECTED_CHARACTER_TYPES"
	             }   
	       </restapi>       
	   </step>
	    <step name="create.auto.gen.ppsk.usergroup" description="">
	      <restapi name="createAutoGenPpskUserGroup">
	             {
	             "ownerId":${owner.id},
                                 "predefined":false,
                                 "jsonType":"auto-gen-ppsk-user-group",
                                 "name":"autogene",
                                 "description":"autogeneppskusergroup",
                                 "userProfileAttribute":
                                        {
                                         "ownerId":${owner.id},
                                         "predefined":false,
                                         "attrNumber":1,
                                         "autoGenerated":false
                                         },
                                "vlan": 1,
                               "reauthorizationTime": 1800,
                               "pskGenerationMethod": "PASSWORD_ONLY",
                               "concatenatingString": "aerohive",
                               "timeZone": "YmTIGXgfVPozDLwqV2e74pXiaqJwgjltqSRLGjZPkGUFONVmagAJhMnFCxclQbht",
                               "pskValidityPeriod": "ALWAYS",
                               "enablePskValidityStartTime": true,
                               "startTime": 1388767585708,
                               "endTime": 1388726467456,
                               "enablePskValidityEndTime": true,
                               "characterTypesIncludeLetters": true,
                               "characterTypesIncludeDigits": true,
                               "characterTypesIncludeSpecialCharacters": true,
                               "characterTypeCombination": "ALL_SELECTED_CHARACTER_TYPES",
                               "userNamePrefix": "hello",
                               "ppskSecret": "aerohive",
                               "location": "aaaaa",
                               "passwordLength": 8
	             }   
	       </restapi>         
	   </step>


		<step name="create.external.radius.profile1">
			<restapi name="createExternalRadiusProfile">
				{
				  "ownerId": ${owner.id},
				  "predefined": false,
				  "jsonType": "external-radius-profile",
				  "name": "Radius-client",
				  "description": "",
				  "externalRadiusServerOption": "DESIGNATION",
				  "entries": [
						    {
						      "ownerId": ${owner.id},
						      "predefined": false,
						      "serverRole": "PRIMARY",
						      "defaultServer": {
							        "jsonType": "ext-radius-server-entry",
							        "ownerId": ${owner.id},
							        "predefined": false,
							        "name": "defaulservers",
							        "description": "",
							        "serverType": "BOTH",
							        "sharedSecret": "aerohive",
							        "authenticationPort": 1812,
							        "accountingPort": 1813,
					                "serverIp": {
					                "jsonType": "ip-address-profile",
					                "ownerId": ${owner.id},
					                "predefined": false,
					                "name": "ip-address-profile",
					                "description": "",
					                "value": "${radius.client.ip}"
					              }
						      },
						      "taggedEntries": []
						    }
					  ]
				}
			</restapi>
		</step>
		<step name="create.external.radius.profile2" description="">
		    <restapi name="createExternalRadiusProfile">
				{
				    "ownerId": ${owner.id},
				    "predefined": false,
				    "jsonType": "external-radius-profile",
				    "name": "radius-client-DHCP",
				    "description": "",
				    "externalRadiusServerOption": "OBTAIN_VIA_DHCP_OPTIONS",
				    "entries": [
				        {
				            "ownerId": ${owner.id},
				            "predefined": false,
				            "serverRole": "PRIMARY",
				            "defaultServer": {
				                "jsonType": "ext-radius-server-entry",
				                "ownerId": ${owner.id},
				                "predefined": false,
				                "name": "P0Z6W76Z0UDOHGTpzmnVP0qmQJaQmrsi",
				                "description": "",
				                "serverType": "ACCOUNTING",
				                "sharedSecret": "aerohive",
				                "authenticationPort": 1812,
				                "accountingPort": 1813,
				                "serverIp": {
				                    "jsonType": "wildcard-profile",
				                    "ownerId": ${owner.id},
				                    "predefined": false,
				                    "name": "w6oku2W6FkAFq7sFJV3pPMV7ffZ19XQv",
				                    "description": "",
				                    "value": "BbsjBT6YVAkuQ8mLbJeCG9f3T5WSziMp",
				                    "wildcardMask": "KPGiFwRJTvY5pxq"
				                }
				            },
				            "taggedEntries": []
				        }
				    ]
				}
		    </restapi>
		</step>
		
		<step name="create.cwp.selfreg" description="">
			<restapi name="createCwp">
		        {
	                "jsonType": "cwp",
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "name": "CWP-SelfReg",
	                "description": "afasdfasdf",
	                 "vlan": 
	                       {
	                     "jsonType": "vlan",
	                    "ownerId": ${owner.id},
	                "predefined": false,
	                "name": "vlan",
	                "description": "fadfad",
	                "entries": [
	                    {
	                        "ownerId": ${owner.id},
	                        "predefined": false,
	                        "tags": [ ],
	                        "description": "aa",
	                        "vlanNumber": 1
	                    }
	                           ]
	                    },
	            "walledGarden": {
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "entries": [
	                    {
	                        "ownerId": ${owner.id},
	                        "predefined": false,
	                        "ipObject": {
	                            "jsonType": "network",
	                            "ownerId": ${owner.id},
	                            "predefined": false,
	                            "name": "5wPY4LXfqPxX2VVqb4KQwlcLW7CVCrRg",
	                            "description": "7wlZLmmZzQpUxFjinplxMS4ncvp8kkDvGJJux7hfpKAeFWZP23wj4DsO5UoTdz6s33Kb7WE1mZAWzbJstBI3OW8dfRsWwzlBFTiFprpbfewACDkOAYUEw67soQ6nohRa",
	                            "networkAddress": "RIGOiG3EdeWnglxmSvILZM3VUHQqGDa7",
	                            "networkMask": "dfAakUeT7IadZzWOr4bAp2FSoCrqVIio"
	                        },
	                        "itemId": 22,
	                        "service": "SERVICE_WEB",
	                        "protocolNumber": 250,
	                        "port": 11833
	                    }
	                ]
	            },
	            "loginPage": {
	                "jsonType": "cwp-login-page",
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "backgroundColor": "DCUamznxKr",
	                "fontColor": "QgeFCOCeBs",
	                "linksColor": "f20AjflyGN",
	                "buttonColor": "xcutA0q9VB",
	                "buttonTextColor": "HAiauwZjj8",
	                "logoFileName": "uvjoB8M6hytpOK4AM5NrxFQHNZpwjnhn",
	                "backgroundImageName": "4CZh83sPNTMMBgr8Y7exGXC88IuEnuZQ",
	                "uploadByUser": true,
	                "fileDirectory": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg",
	                "fileName": "registration.html",
	                "policyContent": "aaaa",
	                "passwordEncryption": "SHARED",
	                "sharedSecret": "aerohive",
	                "loginUrl": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg/registration.html",
	                "authProtocol": "MS_CHAP_V2",
	                "requiredFieldsCount": 1,
	                "optionalFieldsCount": 7
	            },
	            "successPage": {
	                "jsonType": "cwp-success-page",
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "backgroundColor": "6p06OqNoih",
	                "fontColor": "u5bMw3YInR",
	                "linksColor": "7rO09FmS9O",
	                "buttonColor": "8szOHauwl6",
	                "buttonTextColor": "WgvFs3NqzB",
	                "logoFileName": "FdYluPT5T3mZ1olq9OnAn0G9iafwMbCG",
	                "backgroundImageName": "nKRrDfnuhSDNTZr92vWz8g5JGTEgLIty",
	                "uploadByUser": true,
	                "fileDirectory": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg",
	                "fileName": "success.html",
	                "wlanAccessNotice": "WLAN access notice",
	                "librarySipNotice": "Library sip notic"
	            },
	            "failurePage": {
	                "jsonType": "cwp-failure-page",
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "backgroundColor": "72WKlvwhRS",
	                "fontColor": "qShucpYjnZ",
	                "linksColor": "VWxk9NiYdI",
	                "buttonColor": "6VSQQbIM5J",
	                "buttonTextColor": "P0qf3m32B6",
	                "logoFileName": "KxIn20U8pTCB9Y3bFSSOY79e5BCcvQSz",
	                "backgroundImageName": "ah04g9bAuLqnjy5WaC5fZzMyfgtcSKfp",
	                "uploadByUser": false,
	                "fileDirectory": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg",
	                "fileName": "failure.html",
	                "failureNotice": "failure"
	            },
	            "httpsCertificate": {
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "fileName": "n6JtyREO3zbjbFD8fnBwzL0P5L3JyR91",
	                "fileSize": 3964509205033621504,
	                "fileType": "KEY",
	                "encrypted": false,
	                "index": 7,
	                "issuer": "6ZAAV3qIgqmPdW6IPQ68EuxoBBjjblWACIKZ5vKWi8A1OTpI9q0MgnFbsioxtNpc6cEeOXLSFrYrcQh3e0wBsAQ8ZUIo0Z35hnfU4EmUuJkkIhB4Z0lLQh1HV0IqCv0P",
	                "subject": "cls2NI5ruGz70NcrQzfVKsAGuYQ4UrQuPa3brw1GqDsXefGC2Il19WIpihdXoH5RFPZbDKkOfclPcEBLzE9cicjQIjCSJ7DJVkpR1U3pe3Ue5LJ35hnqSN1cmuWsjFXe",
	                "expireTime": "E0EsG0oNNr8uucuyJMUkCR9fna0yTf3U"
	            },
	            "successExternalUrl": "cDA07Epr2wRASlIcbJoRjxyXbOZg7LGyu7XINNVsPa5Y75VVcuoYzGeBucPVA5N01gBoSlvcRoFUAG0vmSTSKIIu1k2icdyRRvCADMzsy2A3Wr9NrKrNt2zC3Cpz59FhC2GsJIzaWVPaDSgN1eshaPXbxgg6IHMuR4033OY2pEw0ODcVQtL7QQxkrNToNSAFpA4IeZq3NWrwcpOL5HPgOUEqyT88VS9hhX6orq7SzOqQ98GraFArAjOBP143j1IH",
	            "failureExternalUrl": "vjo9YWBKDoT3NnUIy2SVGx4CVrgWUG7X66kl0Vy4G0KbYZEsUn63DITZBnrB2rwLQGwOR0kJiUqMc5HSt4SUHqflLIt5aVfFdI7GUMGVhFB86aqT1YSEcmhwzrTpxT5tQVySf1EaDwi06eyv6CaPcZM93rgkwnSNr9c6cj22zVCZREnPA4f1SOSZoKbJ24sDX74GNCJpe61SnmTt3ZTBOgpOTnvj02flsTZ4VqVcIz5oJI635NUh5u5tLzdCcStp",
	            "eth0Ip": "km3Dldm2yqlvCllBA0bltZO8sXGl3FL5",
	            "eth0Netmask": "zzF82MCMEg60rA3HrK9E3KDxO13A4ICQ",
	            "eth1Ip": "jF1flYSBg2vrtdvvojubV3gvJtUsvGZ9",
	            "eth1Netmask": "bAjq4IEmTI4NEytI5p0Bhn1hncCqqlaE",
	            "radio11aModeIp": "VBouZmNi50nz0eZHvUITNHrtnvgEq9OT",
	            "radio11aModeNetmask": "xRzVtZ9S6UfbmRJuxOZ5i0Yffeg2KyJP",
	            "radio11bgModeIp": "OuRaFnLnx8ddMGn0UcaOxxWdnRBE6GPM",
	            "radio11bgModeNetmask": "Ly29L70nmOvPkB67nC2ieAT6gsWw3mTr",
	            "serverDomainName": "RbX62sxJh9kxjzXkt7ixX19ytZEXHkCVUUwu3joZHeadJfiDfYqMHBnEAf3zWlrO",
	            "sipRedirectUrl": "0QWjGInxARylaKvUsAEQCe6UO2YAiwWTl0rTQ2nkKdyQJMic30Fd7rDXCu0QBkrYbSHy3fNS6QwOUejIgik3p2x81XDrC52KNKYNZEtOD967jSk6TsHYXDPGfOXmdENNJRmkuP0ssVaTyWZkDK8ii6QDEXIMJWmENekRNqJRY8pZZgO3P3vnhDMEQAW3FlZcFLfGtlp8eMHWsrepp9hys4NtsfGzeD3lInqE4k64pJivqLuqAFbcoWtNeZkdoCae",
	            "useStandardLoginPage": true,
	            "useCustomLoginPage": false,
	            "showSuccessPage": true,
	            "useStandardSuccessPage": true,
	            "useCustomSuccessPage": false,
	            "redirectAfterSuccessLogin": false,
	            "successToInitiallyPage": false,
	            "successToSpecifiedUrl": false,
	            "showFailurePage": true,
	            "showFailureViaLoginPage": true,
	            "useStandardFailurePage": true,
	            "useCustomFailurePage": false,
	            "redirectAfterFailureLogin": false,
	            "failureToInitiallyPage": false,
	            "failureToSpecifiedUrl": false,
	            "displaySessionTimer": false,
	            "enableHttps": false,
	            "enableHttp302": false,
	            "forceAcceptNetwork": false,
	            "overrideCertificateDomain": false,
	            "useDefaultNetwork": true,
	            "useCustomNetwork": false,
	            "overrideVlan": false,
	            "enableWallGarden": false,
	            "languages": [
	                "EL8SA6mBW73o9RQOT3UyRJqK4xgvFsrrGF8ir7CZi8uJSKKcf2RdMGaTCO4ph2rZYgUXcVwX4jNPacrSTVcX3QFSabkmQG1er6nD1wgNDjKbGyGFy4JU1nGpqsqg8OSUqvPxfRw13vG2RHrURr7VnUXvK4Z0l551oVWfNbpc4Of0xX298EByeEQaXKdz9RiL23eGusXUZswwFYLu5WWfHFsg978wltt2ATzvHi2S3ztmPjiLNTiAgLvI4PZiOSq",
	                "pJBM1JQzzWO43PFFRNkDVB9CIx3adubEHlma4FNcGNdl7dahi74rwgb7V3Kpx24jo0xQ3uGK0sYvfCqNQz4jkDmQY71Hb7dEE5aCQdvok70BBgnsgMOba6tzwHEU9bOhFXjBSqoDMNg4NvoAJWsletJjb0vlUi8LwQeN5qTPJ0iLwV99fdRn85q2A5vBwyT9Q71k16B1UfGbl5zgvAPUiGIYD03JvU0R0aSOe1UiZ3HEUfCrkTDSt5lafgwTYAv"
	            ],
	            "defaultLanguage": "EN",
	            "sessionExpireAlert": 11,
	            "leaseTime": 35452,
	            "registrationPeriod": 720,
	            "successDelay": 5,
	            "failureDelay": 5,
	            "registrationType": "SELF_REG",
	            "internalDhcpType": "USE_EXTERNAL",
	            "dhcpMode": "MODE_UNICAST"
             }
		   </restapi>
		</step>
		<step name="create.cwp.profile.selfreg" description="">
			<restapi name="createCwpProfile">
				{
				  "ownerId": ${owner.id},
				  "predefined": false,
				  "jsonType": "cwp-profile",
				  "name": "cwpprofile-selfreg",
				  "description": "",
				  "defaultCwp":"@{create.cwp.selfreg}",
				  "entries": [ 
					{
		            "ownerId": ${owner.id},
		            "predefined": false,
		            "tags": [],
		            "description": "",
		            "cwp": "@{create.cwp.selfreg}"
					}],
				  "enabled": true,
				  "registrationType": "SELF_REG"
				}
		   </restapi>
		</step>


		<step name="create.cwp.usepolicyaccept" description="">
			<restapi name="createCwp">
		     {
			      "jsonType": "cwp",
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "name": "CWP-UsePolicyAccept",
	                "description": "afasdfasdf",
	                 "vlan": 
	                       {
	                     "jsonType": "vlan",
	                    "ownerId": ${owner.id},
	                "predefined": false,
	                "name": "vlan",
	                "description": "fadfad",
	                "entries": [
	                    {
	                        "ownerId": ${owner.id},
	                        "predefined": false,
	                        "tags": [ ],
	                        "description": "aa",
	                        "vlanNumber": 1
	                    }
	                           ]
	                    },
				"walledGarden": {
				        "ownerId": ${owner.id},
				        "predefined": false,
				        "entries": [
				          {
				            "ownerId": ${owner.id},
				            "predefined": false,
				            "ipObject": {
				              "jsonType": "ip-address-profile",
				              "ownerId": 104,
				              "predefined": false,
				              "name": "wgzhou_wallgarde",
				              "description": "",
				              "value": "wgzhou_vlaue"
				            },
				            "itemId": 50,
				            "service": "SERVICE_WEB",
				            "protocolNumber": 239,
				            "port": 26107
				          }
				        ]
				      },
	            "loginPage": {
	                "jsonType": "cwp-login-page",
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "backgroundColor": "DCUamznxKr",
	                "fontColor": "QgeFCOCeBs",
	                "linksColor": "f20AjflyGN",
	                "buttonColor": "xcutA0q9VB",
	                "buttonTextColor": "HAiauwZjj8",
	                "logoFileName": "uvjoB8M6hytpOK4AM5NrxFQHNZpwjnhn",
	                "backgroundImageName": "4CZh83sPNTMMBgr8Y7exGXC88IuEnuZQ",
	                "uploadByUser": true,
	                "fileDirectory": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg",
	                "fileName": "eula.html",
	                "policyContent": "aaaa",
	                "passwordEncryption": "SHARED",
	                "sharedSecret": "aerohive",
	                "loginUrl": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg/eula.html",
	                "authProtocol": "MS_CHAP_V2",
	                "requiredFieldsCount": 1,
	                "optionalFieldsCount": 7
	            },
	            "successPage": {
	                "jsonType": "cwp-success-page",
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "backgroundColor": "6p06OqNoih",
	                "fontColor": "u5bMw3YInR",
	                "linksColor": "7rO09FmS9O",
	                "buttonColor": "8szOHauwl6",
	                "buttonTextColor": "WgvFs3NqzB",
	                "logoFileName": "FdYluPT5T3mZ1olq9OnAn0G9iafwMbCG",
	                "backgroundImageName": "nKRrDfnuhSDNTZr92vWz8g5JGTEgLIty",
	                "uploadByUser": true,
	                "fileDirectory": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg",
	                "fileName": "success.html",
	                "wlanAccessNotice": "WLAN access notice",
	                "librarySipNotice": "Library sip notic"
	            },
	            "failurePage": {
	                "jsonType": "cwp-failure-page",
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "backgroundColor": "72WKlvwhRS",
	                "fontColor": "qShucpYjnZ",
	                "linksColor": "VWxk9NiYdI",
	                "buttonColor": "6VSQQbIM5J",
	                "buttonTextColor": "P0qf3m32B6",
	                "logoFileName": "KxIn20U8pTCB9Y3bFSSOY79e5BCcvQSz",
	                "backgroundImageName": "ah04g9bAuLqnjy5WaC5fZzMyfgtcSKfp",
	                "uploadByUser": false,
	                "fileDirectory": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg",
	                "fileName": "failure.html",
	                "failureNotice": "failure"
	            },
	            "httpsCertificate": {
	                "ownerId": ${owner.id},
	                "predefined": false,
	                "fileName": "n6JtyREO3zbjbFD8fnBwzL0P5L3JyR91",
	                "fileSize": 3964509205033621504,
	                "fileType": "KEY",
	                "index": 0,
	                "encrypted": true,
	                "issuer": "6ZAAV3qIgqmPdW6IPQ68EuxoBBjjblWACIKZ5vKWi8A1OTpI9q0MgnFbsioxtNpc6cEeOXLSFrYrcQh3e0wBsAQ8ZUIo0Z35hnfU4EmUuJkkIhB4Z0lLQh1HV0IqCv0P",
	                "subject": "cls2NI5ruGz70NcrQzfVKsAGuYQ4UrQuPa3brw1GqDsXefGC2Il19WIpihdXoH5RFPZbDKkOfclPcEBLzE9cicjQIjCSJ7DJVkpR1U3pe3Ue5LJ35hnqSN1cmuWsjFXe",
	                "expireTime": "E0EsG0oNNr8uucuyJMUkCR9fna0yTf3U"
	            },
	            "successExternalUrl": "cDA07Epr2wRASlIcbJoRjxyXbOZg7LGyu7XINNVsPa5Y75VVcuoYzGeBucPVA5N01gBoSlvcRoFUAG0vmSTSKIIu1k2icdyRRvCADMzsy2A3Wr9NrKrNt2zC3Cpz59FhC2GsJIzaWVPaDSgN1eshaPXbxgg6IHMuR4033OY2pEw0ODcVQtL7QQxkrNToNSAFpA4IeZq3NWrwcpOL5HPgOUEqyT88VS9hhX6orq7SzOqQ98GraFArAjOBP143j1IH",
	            "failureExternalUrl": "vjo9YWBKDoT3NnUIy2SVGx4CVrgWUG7X66kl0Vy4G0KbYZEsUn63DITZBnrB2rwLQGwOR0kJiUqMc5HSt4SUHqflLIt5aVfFdI7GUMGVhFB86aqT1YSEcmhwzrTpxT5tQVySf1EaDwi06eyv6CaPcZM93rgkwnSNr9c6cj22zVCZREnPA4f1SOSZoKbJ24sDX74GNCJpe61SnmTt3ZTBOgpOTnvj02flsTZ4VqVcIz5oJI635NUh5u5tLzdCcStp",
	            "eth0Ip": "km3Dldm2yqlvCllBA0bltZO8sXGl3FL5",
	            "eth0Netmask": "zzF82MCMEg60rA3HrK9E3KDxO13A4ICQ",
	            "eth1Ip": "jF1flYSBg2vrtdvvojubV3gvJtUsvGZ9",
	            "eth1Netmask": "bAjq4IEmTI4NEytI5p0Bhn1hncCqqlaE",
	            "radio11aModeIp": "VBouZmNi50nz0eZHvUITNHrtnvgEq9OT",
	            "radio11aModeNetmask": "xRzVtZ9S6UfbmRJuxOZ5i0Yffeg2KyJP",
	            "radio11bgModeIp": "L8z0awW7885ix4ZXGL7832U8XLD1yLPY",
	            "radio11bgModeNetmask": "R7937suG6vcJvGW8c6VSY5BDzvrEmqJq",
	            "serverDomainName": "aerohive",
	            "sipRedirectUrl": "0QWjGInxARylaKvUsAEQCe6UO2YAiwWTl0rTQ2nkKdyQJMic30Fd7rDXCu0QBkrYbSHy3fNS6QwOUejIgik3p2x81XDrC52KNKYNZEtOD967jSk6TsHYXDPGfOXmdENNJRmkuP0ssVaTyWZkDK8ii6QDEXIMJWmENekRNqJRY8pZZgO3P3vnhDMEQAW3FlZcFLfGtlp8eMHWsrepp9hys4NtsfGzeD3lInqE4k64pJivqLuqAFbcoWtNeZkdoCae",
	            "useStandardLoginPage": true,
	            "useCustomLoginPage": false,
	            "showSuccessPage": true,
	            "useStandardSuccessPage": true,
	            "useCustomSuccessPage": false,
	            "redirectAfterSuccessLogin": false,
	            "successToInitiallyPage": false,
	            "successToSpecifiedUrl": false,
	            "showFailurePage": true,
	            "showFailureViaLoginPage": false,
	            "useStandardFailurePage": true,
	            "useCustomFailurePage": false,
	            "redirectAfterFailureLogin": false,
	            "failureToInitiallyPage": true,
	            "failureToSpecifiedUrl": false,
	            "displaySessionTimer": false,
	            "enableHttps": false,
	            "enableHttp302": false,
	            "forceAcceptNetwork": false,
	            "overrideCertificateDomain": false,
	            "useDefaultNetwork": true,
	            "useCustomNetwork": false,
	            "overrideVlan": false,
	            "enableWallGarden": false,
	            "languages": [
	                "EL8SA6mBW73o9RQOT3UyRJqK4xgvFsrrGF8ir7CZi8uJSKKcf2RdMGaTCO4ph2rZYgUXcVwX4jNPacrSTVcX3QFSabkmQG1er6nD1wgNDjKbGyGFy4JU1nGpqsqg8OSUqvPxfRw13vG2RHrURr7VnUXvK4Z0l551oVWfNbpc4Of0xX298EByeEQaXKdz9RiL23eGusXUZswwFYLu5WWfHFsg978wltt2ATzvHi2S3ztmPjiLNTiAgLvI4PZiOSq",
	                "pJBM1JQzzWO43PFFRNkDVB9CIx3adubEHlma4FNcGNdl7dahi74rwgb7V3Kpx24jo0xQ3uGK0sYvfCqNQz4jkDmQY71Hb7dEE5aCQdvok70BBgnsgMOba6tzwHEU9bOhFXjBSqoDMNg4NvoAJWsletJjb0vlUi8LwQeN5qTPJ0iLwV99fdRn85q2A5vBwyT9Q71k16B1UfGbl5zgvAPUiGIYD03JvU0R0aSOe1UiZ3HEUfCrkTDSt5lafgwTYAv"
	            ],
	            "defaultLanguage": "EN",
	            "sessionExpireAlert": 11,
	            "leaseTime": 35452,
	            "registrationPeriod": 720,
	            "successDelay": 5,
	            "failureDelay": 5,
	            "registrationType": "USE_POLICY_ACCEPT",
	            "internalDhcpType": "USE_AEROHIVE",
	            "dhcpMode": "MODE_UNICAST"
		     }
		   </restapi>
		</step>
		<step name="create.cwp.profile.usepolicy" description="">
			<restapi name="createCwpProfile">
				{
				  "ownerId": ${owner.id},
				  "predefined": false,
				  "jsonType": "cwp-profile",
				  "name": "cwpprofile-selfreg",
				  "description": "",
				  "defaultCwp":"@{create.cwp.usepolicyaccept}",
				  "entries": [ 
					{
		            "ownerId": ${owner.id},
		            "predefined": false,
		            "tags": [],
		            "description": "",
		            "cwp": "@{create.cwp.usepolicyaccept}"
					}],
				  "enabled": true,
				  "registrationType": "USE_POLICY_ACCEPT"
				}
		   </restapi>
		</step>
		<step name="create.schedule.profile">
			<restapi name = "createOneTimeSchedule">
				{
				    "ownerId": ${owner.id},
				    "predefined": false,
				    "jsonType": "one-time",
				    "name": "OneTimeSchedule1",
				    "description": "this is a schedule profile",
				    "startDateTime": ${startDateTime},
				    "endDateTime": ${endDateTime}
				}	
			</restapi>			
		</step>
		<step name="create.traffic.filter" description="">
			<restapi name="createTrafficFilter">
				{
					"ownerId": ${owner.id},
					"predefined": false,
					"jsonType": "traffic-filter",
					"name": "Default service filter",
					"description": "This is one mac dos",
					"enableSsh": true,
					"enableTelnet": false,
					"enablePing": true,
					"enableSnmp": false,
					"enableInterStationTraffic": true
				}
	   		</restapi>
		</step>
		<step name="create.mac.dos.prevention.1" description="">
			<restapi name="createMacDosPrevention">
				{
					"ownerId": ${owner.id},
					"predefined": false,
					"jsonType": "mac-dos-prevention",
					"name": "Aerohive-mac-dos1",
					"description": "Mac Dos per SSID",
					"dosType": "SSID",
					"dosParams": [
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"EAPOL",
					"threshold":6000,
					"interval":60,
					"enableBan":false,
					"ban":630770212,
					"enabled":true},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"ASSOC_RESP",
					"threshold":2400,
					"interval":60,
					"enableBan":false,
					"ban":848030328,
					"enabled":true},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"AUTH",
					"threshold":6000,
					"interval":60,
					"enableBan":false,
					"ban":848030328,
					"enabled":true},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"PROBE_RESP",
					"threshold":24000,
					"interval":60,
					"enableBan":false,
					"ban":848030328,
					"enabled":true},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"ASSOC_REQ",
					"threshold":6000,
					"interval":60,
					"enableBan":false,
					"ban":848030328,
					"enabled":true},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"DISASSOC",
					"threshold":1200,
					"interval":60,
					"enableBan":false,
					"ban":848030328,
					"enabled":true},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"PROBE_REQ",
					"threshold":12000,
					"interval":60,
					"enableBan":false,
					"ban":848030328,
					"enabled":true},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"DEAUTH",
					"threshold":1200,
					"interval":60,
					"enableBan":false,
					"ban":848030328,
					"enabled":true
					}]
				}
	    </restapi>
		</step>
		<step name="create.mac.dos.prevention.2" description="">
			<restapi name="createMacDosPrevention">
				{
					"ownerId": ${owner.id},
					"predefined": false,
					"jsonType": "mac-dos-prevention",
					"name": "Aerohive-mac-dos2",
					"description": "This is one mac dos prevention",
					"dosType": "STATION",
					"dosParams": [
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"EAPOL",
					"threshold":600,
					"interval":60,
					"enableBan":true,
					"ban":60,
					"enabled":true},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"ASSOC_RESP",
					"threshold":240,
					"interval":60,
					"enableBan":false,
					"ban":0,
					"enabled":true},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"AUTH",
					"threshold":600,
					"interval":60,
					"enableBan":true,
					"ban":60,
					"enabled":true},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"PROBE_RESP",
					"threshold":2400,
					"interval":60,
					"enableBan":false,
					"ban":0,
					"enabled":true},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"ASSOC_REQ",
					"threshold":600,
					"interval":60,
					"enableBan":true,
					"ban":60,
					"enabled":true},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"DISASSOC",
					"threshold":120,
					"interval":60,
					"enableBan":false,
					"ban":0,
					"enabled":true},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"PROBE_REQ",
					"threshold":1200,
					"interval":60,
					"enableBan":false,
					"ban":0,
					"enabled":true},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"dosDetectionType":"DEAUTH",
					"threshold":120,
					"interval":60,
					"enableBan":false,
					"ban":0,
					"enabled":true}
					]
				}
		    </restapi>
		</step>
		<step name="create.ip.dos.prevention" description="">
			<restapi name="createIpDosPrevention">
				{
					"ownerId":${owner.id},
					"predefined":false,
					"jsonType":"ip-dos-prevention",
					"name":"IP-dos-test",
					"description":"This is one ip dos",
					"enableSynCheck":false,
					"dosParams":[
					
					{"ownerId":${owner.id},
					"predefined":false,
					"screeningType":"RADIUS_ATTACK",
					"threshold":20,
					"dosAction":"ALARM",
					"duration":10,
					"enabled":false},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"screeningType":"ICMP_FLOOD",
					"threshold":20,
					"dosAction":"ALARM",
					"duration":10,
					"enabled":false},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"screeningType":"IP_SPOOF",
					"threshold":3,
					"dosAction":"ALARM",
					"duration":10,
					"enabled":false},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"screeningType":"ADDRESS_SWEEP",
					"threshold":100,
					"dosAction":"ALARM",
					"duration":10,
					"enabled":false},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"screeningType":"PORT_SCAN",
					"threshold":100,
					"dosAction":"ALARM",
					"duration":10,
					"enabled":false},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"screeningType":"UDP_FLOOD",
					"threshold":50,
					"dosAction":"ALARM",
					"duration":10,
					"enabled":false},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"screeningType":"SYN_FLOOD",
					"threshold":1000,
					"dosAction":"ALARM",
					"duration":10,
					"enabled":false},
					
					{"ownerId":${owner.id},
					"predefined":false,
					"screeningType":"ARP_FLOOD",
					"threshold":100,
					"dosAction":"ALARM",
					"duration":10,
					"enabled":false}
					]}
				}
			</restapi>
		</step> 

        <step name="create.user.profile.1">
			<restapi name = "createUserProfile">
				{
				"jsonType" : "user-profile",
				"ownerId" : ${owner.id},
				"name" : "UserProfile10",
				"predefined" : false,
				"vlan" : {
				"jsonType" : "vlan",
				"ownerId" : ${owner.id},
				"name" : "Aerohive_VlanProfile1",
				"description" : "Vlan Profile for Demo",
				"predefined" : false,
				"entries" : [ {
				"ownerId" : ${owner.id},
				"tags" : [ ],
				"vlanNumber" : 1
				} ]
				},
                    "enableFirewall" : true,
                    "inboundMacFirewall" : "@{create.macfirewall.profile}",
				    "outboundMacFirewall" : "@{create.macfirewall.profile}",
				    "macFirewallDefaultAction" : "PERMIT",
				"enableSchedule" : false,
				"schedules" : [ ],
				"enableTrafficTunneling" : false,
				"enableClientSla" : false,
				"enableQos" : false,
				"enableClassification": false,
				"restriction" : "DENY_CAR"
				}
			</restapi>
		</step>

		<step name = "create.macfirewall.profile" description=""> 
			<restapi name = "createMacFirewall" > 
			{
				            "jsonType": "mac-firewall",
				            "ownerId": ${owner.id},
				            "predefined": false,
				            "name": "MacFirewall1",
				            "description": "",
				            "rules": [
				                {
				                    "jsonType": "mac-firewall-rule",
				                    "ownerId": ${owner.id},
				                    "predefined": false,
				                    "ruleId": 123,
				                    "action": "PERMIT",
				                    "loggingType": "SESSION_INITIATION",
				                    "sourceMac": {
				                        "jsonType": "mac-address-profile",
				                        "ownerId": ${owner.id},
				                        "predefined": false,
				                        "name": "scrmac",
				                        "description": "",
				                        "value": "${mac.src}"
				                    },
				                    "destinationMac": {
				                        "jsonType": "mac-address-profile",
				                        "ownerId": ${owner.id},
				                        "predefined": false,
				                        "name": "destmac",
				                        "description": "",
				                        "value": "${mac.dest}"
				                    }
				                }
				            ]
				 }
			</restapi>
		</step>	

        <step name="create.user.profile.macfirewall">
			<restapi name = "createUserProfile">
                {
                    "jsonType" : "user-profile",
                    "ownerId" : ${owner.id},
                    "name" : "userprofile-macfirewall",
                    "predefined" : false,
                    "vlan" : {
                        "jsonType" : "vlan",
                        "ownerId" : ${owner.id},
                        "name" : "Aerohive_VlanProfile2",
                        "description" : "Vlan Profile for Demo",
                        "predefined" : false,
                        "entries" : [ {
                            "ownerId" : ${owner.id},
                            "tags" : [ ],
                            "vlanNumber" : 2
                        } ]
                    },
                    "enableFirewall" : true,
                    "inboundMacFirewall" : "@{create.macfirewall.profile}",
				    "outboundMacFirewall" : "@{create.macfirewall.profile}",
				    "macFirewallDefaultAction" : "PERMIT",
                    "enableSchedule" : false,
                    "schedules" : [ ],
                    "enableTrafficTunneling" : false,
                    "enableClientSla" : false,
                    "enableQos" : false,
                    "restriction" : "DENY_CAR",
                    "enableClassification" : false
                }
			</restapi>
		</step>
        <step name="create.user.profile.sla">
			<restapi name = "createUserProfile">
				{
				"jsonType" : "user-profile",
				"ownerId" : ${owner.id},
				"name" : "UserProfileSLA",
				"predefined" : false,
				"vlan" : {
				"jsonType" : "vlan",
				"ownerId" : ${owner.id},
				"name" : "Aerohive_VlanProfile3",
				"description" : "Vlan Profile for Demo",
				"predefined" : false,
				"entries" : [ {
				"ownerId" : ${owner.id},
				"tags" : [ ],
				"vlanNumber" : 3
				} ]
				},
				"enableFirewall" : false,	
				"enableSchedule" : false,
				"schedules" : [ ],
				"enableTrafficTunneling" : false,
				"enableClientSla" : true,
				"clientSlaSettings": 
					{
					    "ownerId": ${owner.id},
					    "predefined": false,
					    "bandwidth": ${slaBandwidth},
					    "actionType": "NONE"
					},
				"enableQos" : false,
				"enableClassification": false,
				"restriction" : "DENY_CAR"
				}
			</restapi>
		</step>
		
        <step name="create.user.profile.qos">
			<restapi name = "createUserProfile">
				{
				"jsonType" : "user-profile",
				"ownerId" : ${owner.id},
				"name" : "UserProfileQoS",
				"predefined" : false,
				"vlan" : {
				"jsonType" : "vlan",
				"ownerId" : ${owner.id},
				"name" : "Aerohive_VlanProfile4",
				"description" : "Vlan Profile for Demo",
				"predefined" : false,
				"entries" : [ {
				"ownerId" : ${owner.id},
				"tags" : [ ],
				"vlanNumber" : 4
				} ]
				},
				"enableFirewall" : false,	
				"enableSchedule" : false,
				"schedules" : [ ],
				"enableTrafficTunneling" : false,
				"enableClientSla" : false,
				"enableQos" : true,
				"qosSettings" :				
						{
				    "ownerId": ${owner.id},
				    "predefined": false,
				    "schedulingWeight": ${schedulingWeight},
				    "rateLimit11abg": ${rateLimit11abg},
				    "rateLimit11n": ${rateLimit11n},
				    "rateLimit11ac": ${rateLimit11ac},
				    "enableShareTime": false,
				    "guaranteedAirTime": ${guaranteedAirTime},
				    "qosMarkerMap": 
						{
					        "jsonType": "qos-marker",
					        "ownerId": ${owner.id},
					        "predefined": false,
					        "name": "QoS-Marker",
					        "description": "QoS-Marker",
					        "enable802Dot1p": true,
					        "dot1pEntries": [
					            {
					                "jsonType": "qos-marker-map-802dot1p-entry",
					                "ownerId": ${owner.id},
					                "predefined": false,
					                "qosClass": "background",
					                "wmmQueue": "BACKGROUND",
					                "priority": 1
					            },
					            {
					                "jsonType": "qos-marker-map-802dot1p-entry",
					                "ownerId": ${owner.id},
					                "predefined": false,
					                "qosClass": "bestEffort2",
					                "wmmQueue": "BACKGROUND",
					                "priority": 1
					            }
					        ],
					        "enableDiffServ": false,
					        "diffServEntries": 
								[
						            {
						                "jsonType": "qos-marker-map-diff-serv-entry",
						                "ownerId": ${owner.id},
						                "predefined": false,
						                "qosClass": "excellentEffort",
						                "wmmQueue": "VIDEO",
						                "dscp": 57
						            },
						            {
						                "jsonType": "qos-marker-map-diff-serv-entry",
						                "ownerId": ${owner.id},
						                "predefined": false,
						                "qosClass": "voice",
						                "wmmQueue": "VIDEO",
						                "dscp": 42
						            }
						        ]
					    },
				    "qosRateControl": 
						{
				        "ownerId": ${owner.id},
				        "predefined": false,
				        "rateLimit11abg": 11111,
				        "rateLimit11n": 11111,
				        "rateLimit11ac": 11111,
				        "qosRateLimits": 
							[{
				                "ownerId": ${owner.id},
				                "predefined": false,
				                "qosClass": "voice",
				                "schedulingType": "weightedRoundRobin",
				                "schedulingWeight": 40,
				                "policing11abgRateLimit": 11111,
				                "policing11nRateLimit": 11111,
				                "policing11acRateLimit": 11111
				            },
				            {
				                "ownerId": ${owner.id},
				                "predefined": false,
				                "qosClass": "excellentEffort",
				                "schedulingType": "weightedRoundRobin",
				                "schedulingWeight": 60,
				                "policing11abgRateLimit": 11111,
				                "policing11nRateLimit": 11111,
				                "policing11acRateLimit": 11111
				            }]
				    	}
				},			
				"enableClassification": false,
				"restriction" : "DENY_CAR"
				}
			</restapi>
		</step>
        <step name="create.user.profile.schedule">
			<restapi name = "createUserProfile">
				{
				"jsonType" : "user-profile",
				"ownerId" : ${owner.id},
				"name" : "UserProfileschedule",
				"predefined" : false,
				"vlan" : {
				"jsonType" : "vlan",
				"ownerId" : ${owner.id},
				"name" : "Aerohive_VlanProfile5",
				"description" : "Vlan Profile for Demo",
				"predefined" : false,
				"entries" : [ {
				"ownerId" : ${owner.id},
				"tags" : [ ],
				"vlanNumber" : 5
				} ]
				},
			    "enableFirewall" : false,
				"enableSchedule" : true,
                "scheduleIds" : ["@{create.schedule.profile}"],  
				"enableTrafficTunneling" : false,
				"enableClientSla" : false,
				"enableQos" : false,
				"enableClassification": false,
				"restriction" : "DENY_CAR"
				}
			</restapi>
		</step>
		
        <step name="create.user.profile.tunnel">
			<restapi name = "createUserProfile">
				{
				"jsonType" : "user-profile",
				"ownerId" : ${owner.id},
				"name" : "UserProfiletunnel",
				"predefined" : false,
				"vlan" : {
				"jsonType" : "vlan",
				"ownerId" : ${owner.id},
				"name" : "Aerohive_VlanProfile",
				"description" : "Vlan Profile for Demo",
				"predefined" : false,
				"entries" : [ {
				"ownerId" : ${owner.id},
				"tags" : [ ],
				"vlanNumber" : ${vlan.id}
				} ]
				},
				"enableFirewall" : false,	
				"enableSchedule" : false,
				"schedules" : [ ],
				"enableTrafficTunneling" : true,
				"trafficTunneling" : 				
					{
	 				"ownerId" : ${owner.id}, 
	 				"predefined" : false, 
	 				"jsonType" : "l3roaming-based", 
	 				"timeInterval" : ${timeInterval}, 
	 				"trafficThreshold" : ${trafficThreshold}
					}, 
				"enableClientSla" : false,
				"enableQos" : false,
				"enableClassification": false,
				"restriction" : "DENY_CAR"
				}
			</restapi>
		</step>

		
        <step name="create.ssid.profile.ssida">
            <restapi name="createSsidProfile">
 				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSIDA_Open",
                    "ssid" : "SSIDA_Open",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity": {
				                  "ownerId": ${owner.id},
                                  "jsonType": "open-access"
				                   },
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.macfirewall}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": true,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": true,
						"wmmEnableWmmVideo": true,
						"wmmEnableWmmVoice": true,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "AUTO",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":70,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac": true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","OPTIONAL","BASIC","OPTIONAL","BASIC",
		                                    "OPTIONAL","OPTIONAL","OPTIONAL"],
			              	"rateSet11bg": ["BASIC","BASIC","BASIC","OPTIONAL",
                                    "OPTIONAL","BASIC","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "OPTIONAL", "OPTIONAL", "OPTIONAL"],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
            </restapi>
        </step>    		
        <step name="create.ssid.profile.ssidb">
            <restapi name="createSsidProfile">
 				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSIDB_Open_CWP",
                    "ssid" : "SSIDB_Open_CWP",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity": {
				                  "ownerId": ${owner.id},
                                  "jsonType": "open-access"
				                   },
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.sla}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": true,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": true,
						"wmmEnableWmmVideo": true,
						"wmmEnableWmmVoice": true,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "AUTO",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":70,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
                    "cwpProfile":"@{create.cwp.profile.usepolicy}",
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
            </restapi>
        </step>
        <step name="create.ssid.profile.ssidc">
            <restapi name="createSsidProfile">
 				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSIDC_Open_MacAuth",
                    "ssid" : "SSIDC_Open_MacAuth",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
     				"enableMacAuthentication": true,
					"authenticationProtocol": "CHAP",
					"accessSecurity": {
				                  "ownerId": ${owner.id},
                                  "jsonType": "open-access"
				                   },
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.qos}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": false,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": false,
						"wmmEnableWmmVideo": false,
						"wmmEnableWmmVoice": false,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "DISABLE",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":5,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"externalRadiusProfile" :"@{create.external.radius.profile2}",
     				"enableMacFilter": false,
					"macFilters": [],
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
            </restapi>
        </step>
   
        <step name="create.ssid.profile.ssidd">
            <restapi name="createSsidProfile">
  				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSIDD_Open_CWP_MacAuth",
                    "ssid" : "SSIDD_Open_CWP_MacAuth",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
     				"enableMacAuthentication": true,
					"authenticationProtocol": "CHAP",
					"accessSecurity": {
				                  "ownerId": ${owner.id},
                                  "jsonType": "open-access"
				                   },
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.schedule}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": false,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": false,
						"wmmEnableWmmVideo": false,
						"wmmEnableWmmVoice": false,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "DISABLE",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":5,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"externalRadiusProfile" :"@{create.external.radius.profile1}",
     				"enableMacFilter": false,
					"macFilters": [],
                    "cwpProfile":"@{create.cwp.profile.usepolicy}",
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
            </restapi>
        </step>
        <step name="create.ssid.profile.sside">
            <restapi name="createSsidProfile">
 				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSIDE_WEP",
                    "ssid" : "SSIDE_WEP",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity":{
						  "ownerId" : ${owner.id}, 
	                      "predefined" : false, 
	                      "jsonType" : "wep", 
	                      "keyManagement" : "WEP", 
	                      "encryptionMethod" : "WEP104", 
	                      "keyType" : "ASCII", 
	                      "keyValue" : "aaaaaaaaaaaaa",
	                      "authenticationMethod" : "OPEN", 
	                      "defaultKey" : "FIRST", 
	                      "keyValue2" : "bbbbbbbbbbbbb", 
	                      "keyValue3" : "ccccccccccccc", 
	                      "keyValue4" : "ddddddddddddd"
					},
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.tunnel}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": true,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": true,
						"wmmEnableWmmVideo": true,
						"wmmEnableWmmVoice": true,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "AUTO",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":70,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
            </restapi>
        </step>     
        <step name="create.ssid.profile.ssidf">
            <restapi name="createSsidProfile">
 				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSIDF_WEP_CWP",
                    "ssid" : "SSIDF_WEP_CWP",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity":{
						  "ownerId" : ${owner.id}, 
	                      "predefined" : false, 
	                      "jsonType" : "wep", 
	                      "keyManagement" : "WEP", 
	                      "encryptionMethod" : "WEP104", 
	                      "keyType" : "ASCII", 
	                      "keyValue" : "aaaaaaaaaaaaa",
	                      "authenticationMethod" : "OPEN", 
	                      "defaultKey" : "FIRST", 
	                      "keyValue2" : "bbbbbbbbbbbbb", 
	                      "keyValue3" : "ccccccccccccc", 
	                      "keyValue4" : "ddddddddddddd"
					},
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": true,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": true,
						"wmmEnableWmmVideo": true,
						"wmmEnableWmmVoice": true,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "AUTO",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":70,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
                    "cwpProfile":"@{create.cwp.profile.usepolicy}",
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
            </restapi>
        </step> 
     <step name="create.ssid.profile.ssidg">
            <restapi name="createSsidProfile">
 				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSIDG_WEP_MacAuth",
                    "ssid" : "SSIDG_WEP_MacAuth",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity":{
						  "ownerId" : ${owner.id}, 
	                      "predefined" : false, 
	                      "jsonType" : "wep", 
	                      "keyManagement" : "WEP", 
	                      "encryptionMethod" : "WEP104", 
	                      "keyType" : "ASCII", 
	                      "keyValue" : "aaaaaaaaaaaaa",
	                      "authenticationMethod" : "OPEN", 
	                      "defaultKey" : "FIRST", 
	                      "keyValue2" : "bbbbbbbbbbbbb", 
	                      "keyValue3" : "ccccccccccccc", 
	                      "keyValue4" : "ddddddddddddd"
					},
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": true,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": true,
						"wmmEnableWmmVideo": true,
						"wmmEnableWmmVoice": true,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "AUTO",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":70,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
                    "trafficFilter": "@{create.traffic.filter}",
     				"externalRadiusProfile" :"@{create.external.radius.profile1}",
					"enableMacAuthentication": true,
					"authenticationProtocol": "CHAP",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
            </restapi>
        </step>     
     <step name="create.ssid.profile.ssidh">
            <restapi name="createSsidProfile">
 				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSIDH_WEP_CWP_MacAuth",
                    "ssid" : "SSIDH_WEP_CWP_MacAuth",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity":{
						  "ownerId" : ${owner.id}, 
	                      "predefined" : false, 
	                      "jsonType" : "wep", 
	                      "keyManagement" : "WEP", 
	                      "encryptionMethod" : "WEP104", 
	                      "keyType" : "ASCII", 
	                      "keyValue" : "aaaaaaaaaaaaa",
	                      "authenticationMethod" : "OPEN", 
	                      "defaultKey" : "FIRST", 
	                      "keyValue2" : "bbbbbbbbbbbbb", 
	                      "keyValue3" : "ccccccccccccc", 
	                      "keyValue4" : "ddddddddddddd"
					},
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": true,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": true,
						"wmmEnableWmmVideo": true,
						"wmmEnableWmmVoice": true,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "AUTO",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":70,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
            		"cwpProfile":"@{create.cwp.profile.usepolicy}",
                    "trafficFilter": "@{create.traffic.filter}",
     				"externalRadiusProfile" :"@{create.external.radius.profile1}",
					"enableMacAuthentication": true,
					"authenticationProtocol": "MS_CHAP_V2",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
            </restapi>
        </step>  
        <step name="create.ssid.profile.ssidi">
            <restapi name="createSsidProfile">
 				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSIDI_8021X",
                    "ssid" : "SSIDI_8021X",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity": {
	                    "jsonType": "802dot1x",
	                    "ownerId": ${owner.id},
	                    "keyManagement": "WPA2_8021X",
	                    "encryptionMethod": "CCMP",
	                    "keyType": "HEX",
	                    "keyValue": "gzCoghUgcL115BMiddQxCWAdn7xk0fqy6S7ExRNP3pKC46ID5p63N2IUpgQ1wPQB"
				     },
            		"externalRadiusProfile" :"@{create.external.radius.profile1}",
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": true,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": true,
						"wmmEnableWmmVideo": true,
						"wmmEnableWmmVoice": true,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "AUTO",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":70,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
            </restapi>
        </step>    		
       <step name="create.ssid.profile.ssidj">
            <restapi name="createSsidProfile">
 				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSIDJ_8021X_CWP",
                    "ssid" : "SSIDJ_8021X_CWP",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity": {
	                    "jsonType": "802dot1x",
	                    "ownerId": ${owner.id},
	                    "keyManagement": "WPA2_8021X",
	                    "encryptionMethod": "CCMP",
	                    "keyType": "HEX",
	                    "keyValue": "gzCoghUgcL115BMiddQxCWAdn7xk0fqy6S7ExRNP3pKC46ID5p63N2IUpgQ1wPQB"
				       },
            		"externalRadiusProfile" :"@{create.external.radius.profile1}",
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": true,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": true,
						"wmmEnableWmmVideo": true,
						"wmmEnableWmmVoice": true,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "AUTO",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":70,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
             		"cwpProfile":"@{create.cwp.profile.usepolicy}",
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
            </restapi>
        </step>  


		<step name="create.ssid.profile.ssidk" description="">
			<restapi name = "createSsidProfile">
				{
				"jsonType" : "ssid-profile",
				"ownerId" : ${owner.id},
				"name" : "SSIDK_PPSK",
				"ssid" : "SSIDK_PPSK",
				"description" : "a ssid profile for integration test",
				"radioBand" : "DUAL",
				"industry" : "ENTERPRISE",
				"scheduleEntries": [],
				"wirelessNetworkUsage" : "STAFF_AND_TEACHERS",
				"accessSecurity": {
				                  "ownerId": ${owner.id},
				                  "predefined":false,
                                  "jsonType": "ppsk", 
                                  "keyManagement": "WPA2_PSK", 
                                  "encryptionMethod": "TKIP"
				                   },
				"defaultUserProfile" : "@{create.user.profile.1}",
				"ppskUserGroups": ["@{create.ppsk.usergroup}" , "@{create.auto.gen.ppsk.usergroup}"],
				"advancedSettings": 
				                  {
				                 "ownerId": ${owner.id},
			                   	"predefined": false,
				               	"userProfileApplicationSequence": "CWP_SSID_MAC",
				               	"ignoreBroadcastProbeReq": true,
				               	"veEnableVoiceEnterprise": true,
			               		"veEnable802Dot11k": false,
				               	"veEnable802Dot11v": false,
				               	"veEnable802Dot11r": true,
			               		"wmmEnableWmm": false,
			               		"wmmEnableWmmVideo": false,
			               		"wmmEnableWmmVoice": false,
			               		"wmmEnableUapsd": false,
			               		"multicastConvertIpToUnicast": "DISABLE",
			               		"multicastChannelUtilThreshold":100,
			               		"multicastMemberCountThreshold":3,
			               		"clientMaxClientLimit":5,
			               		"clientEapTimeout":187,
			               		"clientRtsThreshold":1769,
			               		"clientFragmentThreshold":353,
			               		"clientDtimSetting":223,
			               		"clientInactiveClientAgeout":8,
			               		"clientEapRetries":4,
			               		"clientRoamCacheUpdateInterval":19686,
			               		"clientRoamCacheAgeout":440,
			               		"clientLocalCacheTimeout":572714
				                    },
				"rateSettings": 
				               {
				              "ownerId": ${owner.id},
			              	"predefined": false,
			              	"enable11a": true,
			              	"enable11bg": true,
			              	"enable11n": true,
		              		"enable11ac": true,
		              		"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
			              	"enableStreamOne": true,
			              	"enableStreamTwo": true,
			              	"enableStreamThree": true,
			              	"mcsValueOne": 9,
			              	"mcsValueTwo": 9,
			              	"mcsValueThree": 9
			          	        },
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
					"advancedAccessSecurity": 
                            {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":6001,
					        "gtkTimeout":4002,
					        "gtkRetries":6,
					        "ptkRekeyPeriod":11,
					        "ptkTimeout":4001,
					        "ptkRetries":4,
							"gmkRekeyPeriod":6002,
							"replayWindow":5,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":false,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":false,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":true,
							"enableReauthInterval":false
							}
				}
			</restapi>
		</step>	

  		
        <step name="create.ssid.profile.ssidm">
            <restapi name="createSsidProfile">
 				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSIDM_WPA",
                    "ssid" : "SSIDM_WPA",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity": {
					    "ownerId": ${owner.id},
					     "predefined":false,
	                     "jsonType": "psk", 
	                      "keyManagement": "WPA_PSK", 
	                      "encryptionMethod": "CCMP", 
	                      "keyType": "ASCII", 
	                      "keyValue": "aerohive"
					},
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": true,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": true,
						"wmmEnableWmmVideo": true,
						"wmmEnableWmmVoice": true,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "AUTO",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":70,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
            </restapi>
        </step>    		
        <step name="create.ssid.profile.ssidn">
            <restapi name="createSsidProfile">
 				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSIDN_WPA_CWP",
                    "ssid" : "SSIDN_WPA_CWP",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity": {
					    "ownerId": ${owner.id},
					     "predefined":false,
	                     "jsonType": "psk", 
	                      "keyManagement": "WPA_PSK", 
	                      "encryptionMethod": "CCMP", 
	                      "keyType": "ASCII", 
	                      "keyValue": "aerohive"
					},
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": true,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": true,
						"wmmEnableWmmVideo": true,
						"wmmEnableWmmVoice": true,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "AUTO",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":70,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
            		"cwpProfile":"@{create.cwp.profile.usepolicy}",
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
            </restapi>
        </step>   
        <step name="create.ssid.profile.ssido">
            <restapi name="createSsidProfile">
 				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSIDO_WPA_MacAuth",
                    "ssid" : "SSIDO_WPA_MacAuth",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity": {
					    "ownerId": ${owner.id},
					     "predefined":false,
	                     "jsonType": "psk", 
	                      "keyManagement": "WPA_PSK", 
	                      "encryptionMethod": "CCMP", 
	                      "keyType": "ASCII", 
	                      "keyValue": "aerohive"
					},
     				"scheduleEntries": [],
					"enableMacAuthentication": true,
					"authenticationProtocol": "CHAP",
                    "defaultUserProfile": "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": true,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": true,
						"wmmEnableWmmVideo": true,
						"wmmEnableWmmVoice": true,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "AUTO",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":70,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
            		"externalRadiusProfile" :"@{create.external.radius.profile1}",
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
            </restapi>
        </step> 
       <step name="create.ssid.profile.ssidp">
            <restapi name="createSsidProfile">
 				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSIDP_WPA_CWP_MacAuth",
                    "ssid" : "SSIDP_WPA_CWP_MacAuth",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity": {
					    	"ownerId": ${owner.id},
					     	"predefined":false,
	                     	"jsonType": "psk", 
	                      	"keyManagement": "WPA_PSK", 
	                      	"encryptionMethod": "CCMP", 
	                      	"keyType": "ASCII", 
	                      	"keyValue": "aerohive"
            
					},
     				"scheduleEntries": [],
					"enableMacAuthentication": true,
					"authenticationProtocol": "CHAP",
                    "defaultUserProfile": "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": true,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": true,
						"wmmEnableWmmVideo": true,
						"wmmEnableWmmVoice": true,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "AUTO",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":70,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
            		"externalRadiusProfile" :"@{create.external.radius.profile1}",
          			"cwpProfile":"@{create.cwp.profile.usepolicy}",
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
            </restapi>
        </step> 







   
        <step name="create.device.1.ap330.v6102.as.ap">
            <restapi name="createDevice">
                {
                    "ownerId":${owner.id},
                    "ipAddress": "10.155.21.21",
                    "macAddress":"${ap.mac}",
                    "hostname":"virtual device for test 1",
                    "serialNumber":"1111222233334444",
                    "productType":"AP_330",
                    "softwareVersion": "6.1.0.2",
                    "role":19050,
                    "function":"Ap",
                    "adminState":"UNMANAGED",
                    "isConnected":true
                }
            </restapi>
        </step>
		<step name="create.network.policy.1">
			<restapi name = "createNetworkPolicy">
				{
				"ownerId" : ${owner.id},
  				"predefined": false,
				"jsonType": "network-policy",
				"name" : "APandSwitching",
				"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
        </step>
       
		 <step name="add.ssid.profile.ssida.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.ssida}"
                }
            </restapi>
		</step>
		<step name="add.ssid.profile.ssidb.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.ssidb}"
                }
            </restapi>
		</step>
        <step name="add.ssid.profile.ssidc.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.ssidc}"
                }
            </restapi>
		</step>
		
        <step name="add.ssid.profile.ssidd.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.ssidd}"
                }
            </restapi>
		</step>
        <step name="add.ssid.profile.sside.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.sside}"
                }
            </restapi>
		</step>
        <step name="add.ssid.profile.ssidf.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.ssidf}"
                }
            </restapi>
		</step>		
        <step name="add.ssid.profile.ssidg.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.ssidg}"
                }
            </restapi>
		</step>
        <step name="add.ssid.profile.ssidh.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.ssidh}"
                }
            </restapi>
		</step>
        <step name="add.ssid.profile.ssidi.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.ssidi}"
                }
            </restapi>
		</step>
        <step name="add.ssid.profile.ssidj.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.ssidj}"
                }
            </restapi>
		</step>
        <step name="add.ssid.profile.ssidk.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.ssidk}"
                }
            </restapi>
		</step>			

        <step name="add.ssid.profile.ssidm.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.ssidm}"
                }
            </restapi>
		</step>
        <step name="add.ssid.profile.ssidn.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.ssidn}"
                }
            </restapi>
		</step>		
        <step name="add.ssid.profile.ssido.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.ssido}"
                }
            </restapi>
		</step>	
        <step name="add.ssid.profile.ssidp.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.ssidp}"
                }
            </restapi>
		</step>	


		<step name="add.dns.profile.into.network.policy.1">
            <restapi name="assignfeature">
                {
                  "jsonType" : "network_policy",
                  "networkPolicyId" : "@{create.network.policy.1}",
                  "featureId" : "@{create.dns.profile}"
                }
            </restapi>
        </step>
  		<step name="add.ntp.profile.into.network.policy.1">
            <restapi name="assignfeature">
                {
                  "jsonType" : "network_policy",
                  "networkPolicyId" : "@{create.network.policy.1}",
                  "featureId" : "@{create.ntp.profile}"
                }
            </restapi>
        </step>    
		
	
        <step name="assign.network.policy.1.to.device.1">
            <restapi name="assignnetworkpolicy">
                {
                    "device" : "@{create.device.1.ap330.v6102.as.ap}",
                    "networkPolicy" : "@{create.network.policy.1}"
                }
            </restapi>
        </step>
        <step name="download.cli.to.device.1">
            <restapi name="downloadcli">
                {
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "deviceIds" : [ "@{create.device.1.ap330.v6102.as.ap}"],
                    "configDownloadTypes" : [ "deviceFull"]
                }
            </restapi>
        </step>
	</declaration>
	
	<stage>

		<step no="1">
			<call step="create.external.radius.profile1" />
            <failed>next</failed>
		</step>
		<step no="2">
			<call step="create.external.radius.profile2" />
            <failed>next</failed>
		</step>
		<step no="3">
			<call step="create.cwp.usepolicyaccept" />
            <failed>next</failed>
		</step>
		<step no="4">
			<call step="create.cwp.profile.usepolicy" />
            <failed>next</failed>
		</step>
		<step no="5">
			<call step="create.traffic.filter" />
            <failed>next</failed>
		</step>
		<step no="6">
			<call step="create.mac.dos.prevention.1" />
            <failed>next</failed>
		</step>
		<step no="7">
			<call step="create.mac.dos.prevention.2" />
            <failed>next</failed>
		</step>
		<step no="8">
			<call step="create.ip.dos.prevention" />
            <failed>next</failed>
		</step>
		<step no="9">
			<call step="create.user.profile.1" />
            <failed>next</failed>
		</step>
		<step no="10">
			<call step="create.user.profile.macfirewall" />
            <failed>next</failed>
		</step>
		<step no="10">
			<call step="create.user.profile.qos" />
            <failed>next</failed>
		</step>
		<step no="10">
			<call step="create.user.profile.schedule" />
            <failed>next</failed>
		</step>
		<step no="10">
			<call step="create.user.profile.tunnel" />
            <failed>next</failed>
		</step>



		<step no="11">
			<call step="create.ssid.profile.ssida" />
            <failed>next</failed>
		</step>
		<step no="12">
			<call step="create.ssid.profile.ssidb" />
            <failed>next</failed>
		</step>
		
		<step no="13">
			<call step="create.ssid.profile.ssidc" />
            <failed>next</failed>
		</step>
	<!--
		<step no="14">
			<call step="create.ssid.profile.ssidd" />
            <failed>next</failed>
		</step>		
		<step no="15">
			<call step="create.ssid.profile.sside" />
            <failed>next</failed>
		</step>
		<step no="16">
			<call step="create.ssid.profile.ssidf" />
            <failed>next</failed>
		</step>	
		<step no="17">
			<call step="create.ssid.profile.ssidg" />
            <failed>next</failed>
		</step>	
		<step no="18">
			<call step="create.ssid.profile.ssidh" />
            <failed>next</failed>
		</step>	
		<step no="19">
			<call step="create.ssid.profile.ssidi" />
            <failed>next</failed>
		</step>	
		<step no="20">
			<call step="create.ssid.profile.ssidj" />
            <failed>next</failed>
		</step>	

		<step no="21">
			<call step="create.ssid.profile.ssidm" />
            <failed>next</failed>
		</step>	
		<step no="22">
			<call step="create.ssid.profile.ssidn" />
            <failed>next</failed>
		</step>	
		<step no="23">
			<call step="create.ssid.profile.ssido" />
            <failed>next</failed>
		</step>	
		<step no="24">
			<call step="create.ssid.profile.ssidp" />
            <failed>next</failed>
		</step>

		<step no="24">
			<call step="create.ntp.profile" />
            <failed>next</failed>
		</step>
		<step no="24">
			<call step="create.dns.profile" />
            <failed>next</failed>
		</step>

		<step no="25">
			<call step="create.device.1.ap330.v6102.as.ap" />
            <failed>next</failed>
		</step>
		<step no="26">
			<call step="create.network.policy.1" />
            <failed>next</failed>
		</step>

		<step no="27">
			<call step="add.ssid.profile.ssida.into.network.policy.1" />
            <failed>next</failed>
		</step>
		<step no="28">
			<call step="add.ssid.profile.ssidb.into.network.policy.1" />
            <failed>next</failed>
		</step>
		<step no="29">
			<call step="add.ssid.profile.ssidc.into.network.policy.1" />
            <failed>next</failed>
		</step>
		<step no="30">
			<call step="add.ssid.profile.ssidd.into.network.policy.1" />
            <failed>next</failed>
		</step>

		<step no="31">
			<call step="add.ssid.profile.sside.into.network.policy.1" />
            <failed>next</failed>
		</step>
		<step no="32">
			<call step="add.ssid.profile.ssidf.into.network.policy.1" />
            <failed>next</failed>
		</step>	
		<step no="33">
			<call step="add.ssid.profile.ssidg.into.network.policy.1" />
            <failed>next</failed>
		</step>		
		<step no="34">
			<call step="add.ssid.profile.ssidh.into.network.policy.1" />
            <failed>next</failed>
		</step>		
		<step no="35">
			<call step="add.ssid.profile.ssidi.into.network.policy.1" />
            <failed>next</failed>
		</step>	
		<step no="36">
			<call step="add.ssid.profile.ssidj.into.network.policy.1" />
            <failed>next</failed>
		</step>	

		<step no="37">
			<call step="add.ssid.profile.ssidm.into.network.policy.1" />
            <failed>next</failed>
		</step>	
		<step no="38">
			<call step="add.ssid.profile.ssidn.into.network.policy.1" />
            <failed>next</failed>
		</step>	
		<step no="39">
			<call step="add.ssid.profile.ssido.into.network.policy.1" />
            <failed>next</failed>
		</step>	
		<step no="40">
			<call step="add.ssid.profile.ssidp.into.network.policy.1" />
            <failed>next</failed>
		</step>	

		<step no="3">
			<call step="add.ntp.profile.into.network.policy.1" />
			<failed>next</failed>
		</step>
		<step no="3">
			<call step="add.dns.profile.into.network.policy.1" />
			<failed>next</failed>
		</step>	

			
		<step no="41">
			<call step="assign.network.policy.1.to.device.1" />
            <failed>next</failed>		
		</step>
		<step no="42">
			<call step="download.cli.to.device.1" />
            <failed>next</failed>		
		</step>
		-->	
		<step no="43">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>
			<desc> Verify the configuration can match the running-config</desc>
	
		<!--	<log-match>-i "security-object SSIDA_Open"</log-match>
			<log-match>-i "ssid SSIDA_Open"</log-match>
            <log-match>-i "ssid SSIDA_Open security-object SSIDA_Open"</log-match>
            <log-match>-i "interface wifi0 ssid SSIDA_Open"</log-match>
            <log-match>-i "interface wifi1 ssid SSIDA_Open"</log-match>
            <log-match>-i "mac-policy MacFirewall1"</log-match>	
			<log-match>-i "mac-policy MacFirewall1 id 123 from 0019:7700:0000 24 to 4018:b100:0000 24 action deny"</log-match> 
 			<log-match>-i "user-profile userprofile-macfirewall security mac-policy from-access MacFirewall1 to-access MacFirewall1"</log-match>
            <log-match>-i "user-profile userprofile-macfirewall mac-policy-default-action permit"</log-match>		           
		-->
		
			<log-match>-i "ssid SSIDA_Open"</log-match>
            <log-match>-i "ssid SSIDA_Open security-object SSIDA_Open"</log-match>
            <log-match>-i "interface wifi0 ssid SSIDA_Open"</log-match>
            <log-match>-i "interface wifi1 ssid SSIDA_Open"</log-match>
            <log-match>-i "mac-policy MacFirewall1"</log-match>	
			<log-match>-i "mac-policy MacFirewall1 id 123 from 0019:7700:0000 24 to 4018:b100:0000 24 action deny"</log-match> 
 			<log-match>-i "user-profile userprofile-macfirewall security mac-policy from-access MacFirewall1 to-access MacFirewall1"</log-match>
            <log-match>-i "user-profile userprofile-macfirewall mac-policy-default-action permit"</log-match>	

			<log-match>-i "security-object SSIDB_Open_CWP"</log-match>
            <log-match>-i "security-object SSIDB_Open_CWP security protocol-suite open"</log-match>	
			<log-match>-i "security-object SSIDB_Open_CWP security additional-auth-method captive-web-portal "</log-match>
            <log-match>-i "security-object SSIDB_Open_CWP security additional-auth-method captive-web-portal default-language english"</log-match>
            <log-match>-i "security-object SSIDB_Open_CWP web-server index-file eula.html"</log-match>
           	<log-match>-i "security-object SSIDB_Open_CWP web-directory CWP-UsePolicyAccept"</log-match>
			<log-match>-i "ssid SSIDB_Open_CWP"</log-match>
            <log-match>-i "ssid SSIDB_Open_CWP security-object SSIDB_Open_CWP"</log-match>
            <log-match>-i "interface wifi0 ssid SSIDB_Open_CWP"</log-match>           
            <log-match>-i "interface wifi1 ssid SSIDB_Open_CWP"</log-match>
            <log-match>-i "user-profile UserProfileSLA performance-sentinel enable"</log-match>
 			<log-match>-i "user-profile UserProfileSLA performance-sentinel guaranteed-bandwidth ${slaBandwidth}"</log-match>
	


            <log-match>-i "^security-object SSIDC_Open_MacAuth$"</log-match>
            <log-match>-i "^security-object SSIDC_Open_MacAuth security additional-auth-method mac-based-auth$"</log-match>
            <log-match>-i "ssid SSIDC_Open_MacAuth"</log-match>	
			<log-match>-i "ssid SSIDC_Open_MacAuth security-object SSIDC_Open_MacAuth"</log-match>
            <log-match>-i "interface wifi0 ssid SSIDC_Open_MacAuth"</log-match>
            <log-match>-i "interface wifi1 ssid SSIDC_Open_MacAuth"</log-match>
 			<log-match>-i "qos marker-map 8021p QoS-Marker 0 1"</log-match>
            <log-match>-i "qos marker-map 8021p QoS-Marker 1 1"</log-match>			
 			<log-match>-i "qos policy UserProfileQoS qos 3 wrr 11111 60"</log-match>
 			<log-match>-i "qos policy UserProfileQoS qos 6 wrr 11111 40"</log-match>
			<log-match>-i "user-profile UserProfileQoS qos-policy UserProfileQoS"</log-match>
            <log-match>-i "user-profile UserProfileQoS qos-marker-map 8021p QoS-Marker"</log-match>	
            			
			<log-match>-i "security-object SSIDD_Open_CWP_MacAuth"</log-match>
            <log-match>-i "security-object SSIDD_Open_CWP_MacAuth security additional-auth-method captive-web-portal"</log-match>	
            <log-match>-i "^security-object SSIDD_Open_CWP_MacAuth security additional-auth-method mac-based-auth$"</log-match>
			<log-match>-i "security-object SSIDD_Open_CWP_MacAuth security additional-auth-method captive-web-portal default-language english"</log-match>
            <log-match>-i "security-object SSIDD_Open_CWP_MacAuth web-server web-page mandatory-field 0 optional-field 0"</log-match>
            <log-match>-i "security-object SSIDD_Open_CWP_MacAuth web-server index-file eula.html"</log-match>
            <log-match>-i "security-object SSIDD_Open_CWP_MacAuth web-directory CWP-UsePolicyAccept"</log-match>	
			<log-match>-i "ssid SSIDD_Open_CWP_MacAuth"</log-match>
            <log-match>-i "ssid SSIDD_Open_CWP_MacAuth security-object SSIDD_Open_CWP_MacAuth"</log-match>
            <log-match>-i "interface wifi0 ssid SSIDD_Open_CWP_MacAuth"</log-match>
            <log-match>-i "interface wifi1 ssid SSIDD_Open_CWP_MacAuth"</log-match>
			<log-match>-i "schedule OneTimeSchedule1 once 2014-03-06 10:00 to 2014-03-06 11:00"</log-match>
            <log-match>-i "user-profile UserProfileschedule schedule OneTimeSchedule1"</log-match>		            



			<log-match>-i "security-object SSIDE_WEP"</log-match>
            <log-match>-i security-object SSIDE_WEP security protocol-suite wep-open 0 ascii-key ***</log-match> 
            <log-match>-i security-object SSIDE_WEP security protocol-suite wep-open 1 ascii-key ***</log-match>
            <log-match>-i security-object SSIDE_WEP security protocol-suite wep-open 2 ascii-key ***</log-match> 
            <log-match>-i security-object SSIDE_WEP security protocol-suite wep-open 3 ascii-key *** </log-match>
            <log-match>-i ssid SSIDE_WEP</log-match>
            <log-match>-i ssid SSIDE_WEP security-object wep</log-match>
			<log-match>-i "mobility-policy UserProfiletunnel dnxp nomadic-roaming"</log-match>
 			<log-match>-i "mobility-policy UserProfiletunnel dnxp unroam-threshold ${timeInterval} ${trafficThreshold}"</log-match>
            <log-match>-i "user-profile UserProfiletunnel mobility-policy UserProfiletunnel"</log-match>	


            
            <log-match>-i "security-object SSIDF_WEP_CWP"</log-match>
            <log-match>-i security-object SSIDF_WEP_CWP security protocol-suite wep-open 0 ascii-key ***</log-match> 
            <log-match>-i security-object SSIDF_WEP_CWP security protocol-suite wep-open 1 ascii-key *** </log-match>
            <log-match>-i security-object SSIDF_WEP_CWP security protocol-suite wep-open 2 ascii-key ***</log-match> 
            <log-match>-i security-object SSIDF_WEP_CWP security protocol-suite wep-open 3 ascii-key *** </log-match>
            <log-match>-i ssid SSIDE_WEP</log-match>
            <log-match>-i ssid SSIDE_WEP security-object wep</log-match>
            


            
			<log-match>-i "security-object SSIDF_WEP_CWP security additional-auth-method captive-web-portal "</log-match>
            <log-match>-i security-object SSIDF_WEP_CWP security additional-auth-method captive-web-portal default-language english</log-match> 
            <log-match>-i security-object SSIDF_WEP_CWP web-server web-page mandatory-field 0 optional-field 0</log-match>
            <log-match>-i security-object SSIDF_WEP_CWP web-server index-file eula.html</log-match> 
            <log-match>-i security-object SSIDF_WEP_CWP web-directory CWP-UsePolicyAccept</log-match>
            <log-match>-i ssid SSIDF_WEP_CWP</log-match>
            <log-match>-i ssid SSIDF_WEP_CWP security-object SSIDF_WEP_CWP</log-match>
            <log-match>-i "interface wifi0 ssid SSIDF_WEP_CWP"</log-match>            

	        <log-match>-i "^security-object SSIDG_WEP_MacAuth$"</log-match>
            <log-match>-i "^security-object SSIDG_WEP_MacAuth security additional-auth-method mac-based-auth auth-method chap$"</log-match>
            <log-match>-i "security-object SSIDG_WEP_MacAuth security aaa radius-server primary ${radius.client.ip} shared-secret ***"</log-match>	
            <log-match>-i "security-object SSIDG_WEP_MacAuth security aaa radius-server accounting primary ${radius.client.ip} shared-secret"</log-match>	
			<log-match>-i "security-object SSIDG_WEP_MacAuth security protocol-suite wep-open 0 ascii-key ***"</log-match>
            <log-match>-i "security-object SSIDG_WEP_MacAuth security protocol-suite wep-open 1 ascii-key ***"</log-match>
            <log-match>-i "security-object SSIDG_WEP_MacAuth security protocol-suite wep-open 2 ascii-key ***"</log-match>
            <log-match>-i "security-object SSIDG_WEP_MacAuth security protocol-suite wep-open 3 ascii-key ***"</log-match>
            <log-match>-i "^security-object SSIDC_Open_MacAuth security additional-auth-method mac-based-auth$"</log-match>
            <log-match>-i "ssid SSIDG_WEP_MacAuth"</log-match>	
			<log-match>-i "ssid SSIDG_WEP_MacAuth security-object SSIDG_WEP_MacAuth"</log-match>
            <log-match>-i "interface wifi0 ssid SSIDG_WEP_MacAuth"</log-match>
            <log-match>-i "interface wifi1 ssid SSIDG_WEP_MacAuth"</log-match>

	        <log-match>-i "^security-object SSIDH_WEP_CWP_MacAuth$"</log-match>
            <log-match>-i "^security-object SSIDH_WEP_CWP_MacAuth security additional-auth-method mac-based-auth auth-method ms-chap-v2$"</log-match>
            <log-match>-i "security-object SSIDH_WEP_CWP_MacAuth security aaa radius-server primary ${radius.client.ip} shared-secret ***"</log-match>	
            <log-match>-i "security-object SSIDH_WEP_CWP_MacAuth security aaa radius-server accounting primary ${radius.client.ip} shared-secret"</log-match>	
			<log-match>-i "security-object SSIDH_WEP_CWP_MacAuth security protocol-suite wep-open 0 ascii-key ***"</log-match>
            <log-match>-i "security-object SSIDH_WEP_CWP_MacAuth security protocol-suite wep-open 1 ascii-key ***"</log-match>
            <log-match>-i "security-object SSIDH_WEP_CWP_MacAuth security protocol-suite wep-open 2 ascii-key ***"</log-match>
            <log-match>-i "security-object SSIDH_WEP_CWP_MacAuth security protocol-suite wep-open 3 ascii-key ***"</log-match>
			<log-match>-i "security-object SSIDH_WEP_CWP_MacAuth security additional-auth-method captive-web-portal"</log-match>
            <log-match>-i "security-object SSIDH_WEP_CWP_MacAuth security additional-auth-method captive-web-portal default-language english"</log-match>
            <log-match>-i "security-object SSIDH_WEP_CWP_MacAuth web-server web-page mandatory-field 0 optional-field 0"</log-match>
            <log-match>-i "security-object SSIDH_WEP_CWP_MacAuth web-server index-file eula.html"</log-match>
           	<log-match>-i "security-object SSIDH_WEP_CWP_MacAuth web-directory CWP-UsePolicyAccept"</log-match>
            <log-match>-i "ssid SSIDH_WEP_CWP_MacAuth"</log-match>	
			<log-match>-i "ssid SSIDH_WEP_CWP_MacAuth security-object SSIDH_WEP_CWP_MacAuth"</log-match>
            <log-match>-i "interface wifi0 ssid SSIDH_WEP_CWP_MacAuth"</log-match>
            <log-match>-i "interface wifi1 ssid SSIDH_WEP_CWP_MacAuth"</log-match>
           			
            <log-match>-i "security-object SSIDI_8021X"</log-match>
            <log-match>-i "security-object SSIDI_8021X security aaa radius-server primary ${radius.client.ip} shared-secret ***"</log-match>
            <log-match>-i "security-object SSIDI_8021X security aaa radius-server accounting primary ${radius.client.ip} shared-secret ***"</log-match>
            <log-match>-i "security-object SSIDI_8021X security protocol-suite wpa2-aes-8021x"</log-match>	
			<log-match>-i "ssid SSIDI_8021X"</log-match>
            <log-match>-i "ssid SSIDI_8021X security-object SSIDI_8021X"</log-match>
            <log-match>-i "interface wifi0 ssid SSIDI_8021X"</log-match>


			<log-match>-i "security-object SSIDJ_8021X_CWP"</log-match>
            <log-match>-i "security-object SSIDJ_8021X_CWP security aaa radius-server primary ${radius.client.ip} shared-secret ***"</log-match>
            <log-match>-i "security-object SSIDJ_8021X_CWP security aaa radius-server accounting primary ${radius.client.ip} shared-secret ***"</log-match>
            <log-match>-i "security-object SSIDJ_8021X_CWP security protocol-suite wpa2-aes-8021x "</log-match>
			<log-match>-i "security-object SSIDJ_8021X_CWP security additional-auth-method captive-web-portal"</log-match>
            <log-match>-i "security-object SSIDJ_8021X_CWP security additional-auth-method captive-web-portal default-language english"</log-match>
            <log-match>-i "security-object SSIDJ_8021X_CWP web-server web-page mandatory-field 0 optional-field 0"</log-match>
            <log-match>-i "security-object SSIDJ_8021X_CWP web-server index-file eula.html"</log-match>
           	<log-match>-i "security-object SSIDJ_8021X_CWP web-directory CWP-UsePolicyAccept"</log-match>
            <log-match>-i "ssid SSIDJ_8021X_CWP"</log-match>	
			<log-match>-i "ssid SSIDJ_8021X_CWP security-object SSIDJ_8021X_CWP"</log-match>
            <log-match>-i "interface wifi0 ssid SSIDJ_8021X_CWP"</log-match>
            <log-match>-i "interface wifi1 ssid SSIDJ_8021X_CWP"</log-match>
	<!--
	      <log-match>-i "ssid SSIDK_PPSK"</log-match>
            <log-match>-i "ssid SSIDK_PPSK security-object ppsk"</log-match>
            <log-match>-i "security-object SSIDK_PPSK"</log-match>
            <log-match>-i "security-object SSIDK_PPSK security protocol-suite wpa2-tkip-psk ascii-key ***"</log-match>
            <log-match>-i "security-object SSIDK_PPSK security private-psk"</log-match>
            <log-match>-i "no security-object SSIDK_PPSK security private-psk self-reg-enable"</log-match>
            <log-match>-i "security-object SSIDK_PPSK security private-psk default-psk-disabled"</log-match>
            <log-match>-i "security-object SSIDK_PPSK default-user-profile-attr 1"</log-match>
            <log-match>-i "ssid SSIDK_PPSK user-group manuup"</log-match>
            <log-match>-i "ssid SSIDK_PPSK user-group autogene"</log-match>
            <log-match>-i "security-object SSIDK_PPSK security protocol-suite wpa2-tkip-psk ascii-key ******"</log-match>
            <log-match>-i "security-object SSIDK_PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** rekey-period 6001"</log-match>
            <log-match>-i "security-object SSIDK_PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** non-strict"</log-match>
            <log-match>-i "security-object SSIDK_PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** gmk-rekey-period 6002"</log-match>
            <log-match>-i "security-object SSIDK_PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** ptk-timeout 4001"</log-match>
            <log-match>-i "security-object SSIDK_PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** ptk-retry 4"</log-match>
            <log-match>-i "security-object SSIDK_PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** gtk-timeout 4002"</log-match>
            <log-match>-i "security-object SSIDK_PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** gtk-retry 6"</log-match>
            <log-match>-i "security-object SSIDK_PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** ptk-rekey-period 11"</log-match>
            <log-match>-i "security-object SSIDK_PPSK security protocol-suite wpa2-tkip-psk replay-window 5"</log-match>
            <log-match>-i "no security-object SSIDK_PPSK security protocol-suite wpa2-tkip-psk local-tkip-counter-measure"</log-match>
            <log-match>-i "no security-object SSIDK_PPSK security protocol-suite wpa2-tkip-psk remote-tkip-counter-measure"</log-match>
-->


            <log-match>-i "security-object SSIDM_WPA"</log-match>
            <log-match>-i "security-object SSIDM_WPA security protocol-suite wpa-aes-psk ascii-key ***"</log-match>
            <log-match>-i "ssid SSIDM_WPA"</log-match>	
			<log-match>-i "ssid SSIDM_WPA security-object SSIDM_WPA"</log-match>
            <log-match>-i "interface wifi0 ssid SSIDM_WPA"</log-match>
            <log-match>-i "interface wifi1 ssid SSIDM_WPA"</log-match>
            
			<log-match>-i "security-object SSIDN_WPA_CWP"</log-match>
            <log-match>-i "security-object SSIDN_WPA_CWP security protocol-suite wpa-aes-psk ascii-key ***"</log-match>
            <log-match>-i "security-object SSIDN_WPA_CWP security additional-auth-method captive-web-portal"</log-match>
            <log-match>-i "security-object SSIDN_WPA_CWP security additional-auth-method captive-web-portal default-language english"</log-match>
			<log-match>-i "security-object SSIDN_WPA_CWP web-server web-page mandatory-field 0 optional-field 0"</log-match>
            <log-match>-i "security-object SSIDN_WPA_CWP web-server index-file eula.html"</log-match>
            <log-match>-i "security-object SSIDN_WPA_CWP web-directory CWP-UsePolicyAccept"</log-match>
           	<log-match>-i "ssid SSIDN_WPA_CWP security-object SSIDN_WPA_CWP"</log-match>
            <log-match>-i "interface wifi0 ssid SSIDN_WPA_CWP"</log-match>	

            <log-match>-i "security-object SSIDO_WPA_MacAuth"</log-match>
            <log-match>-i "security-object SSIDO_WPA_MacAuth security aaa radius-server primary ${radius.client.ip} shared-secret ***"</log-match>
            <log-match>-i "security-object SSIDO_WPA_MacAuth security aaa radius-server accounting primary ${radius.client.ip} shared-secret ***"</log-match>	
			<log-match>-i "security-object SSIDO_WPA_MacAuth security additional-auth-method mac-based-auth auth-method chap"</log-match>
            <log-match>-i "security-object SSIDO_WPA_MacAuth security protocol-suite wpa-aes-psk ascii-key ***"</log-match>
            <log-match>-i "ssid SSIDO_WPA_MacAuth"</log-match>
            <log-match>-i "ssid SSIDO_WPA_MacAuth security-object SSIDO_WPA_MacAuth"</log-match>
            <log-match>-i "interface wifi0 ssid SSIDO_WPA_MacAuth"</log-match>
            <log-match>-i "interface wifi1 ssid SSIDO_WPA_MacAuth"</log-match>


			<log-match>-i "security-object SSIDP_WPA_CWP_MacAuth"</log-match>
            <log-match>-i "security-object SSIDP_WPA_CWP_MacAuth security aaa radius-server primary ${radius.client.ip} shared-secret ***"</log-match>
            <log-match>-i "security-object SSIDP_WPA_CWP_MacAuth security aaa radius-server accounting primary ${radius.client.ip} shared-secret ***"</log-match>
            <log-match>-i "security-object SSIDP_WPA_CWP_MacAuth security additional-auth-method mac-based-auth"</log-match>
			<log-match>-i "security-object SSIDP_WPA_CWP_MacAuth security protocol-suite wpa-aes-psk ascii-key ***"</log-match>
            <log-match>-i "security-object SSIDP_WPA_CWP_MacAuth security additional-auth-method captive-web-portal"</log-match>
            <log-match>-i "security-object SSIDP_WPA_CWP_MacAuth security additional-auth-method captive-web-portal default-language english"</log-match>
            <log-match>-i "security-object SSIDP_WPA_CWP_MacAuth web-server web-page mandatory-field 0 optional-field 0"</log-match>
           	<log-match>-i "security-object SSIDP_WPA_CWP_MacAuth web-server index-file eula.html"</log-match>
            <log-match>-i "security-object SSIDP_WPA_CWP_MacAuth web-directory CWP-UsePolicyAccept"</log-match>	
			<log-match>-i "ssid SSIDP_WPA_CWP_MacAuth"</log-match>
            <log-match>-i "ssid SSIDP_WPA_CWP_MacAuth security-object SSIDP_WPA_CWP_MacAuth"</log-match>
            <log-match>-i "interface wifi0 ssid SSIDP_WPA_CWP_MacAuth"</log-match>
            <log-match>-i "interface wifi1 ssid SSIDP_WPA_CWP_MacAuth"</log-match>
    
			<log-match>-i "dns server-ip 168.143.87.77"</log-match>
            <log-match>-i "dns server-ip 209.128.124.9 second"</log-match>	
            <log-match>-i "ntp server ntp1.aerohive.com"</log-match>
        

            <failed>next</failed>		
		</step>
	
	</stage>
	<failed-process />
</testcase>
