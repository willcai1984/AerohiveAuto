<testcase>
	<brief>Cloud CWP external authentication basic case</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Verify the CWP can be correctly create with Self, and it can be bind to a SSID
	</description>
	<numofap>1</numofap>
 	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>

	<desc>
		security-object SSID-CWP security additional-auth-method captive-web-portal 
		security-object SSID-CWP security additional-auth-method captive-web-portal auth-method chap
		security-object SSID-CWP security additional-auth-method captive-web-portal external-server primary login-page http://www.aerohive.com
		security-object SSID-CWP security additional-auth-method captive-web-portal default-language english
		security-object SSID-CWP walled-garden hostname www.aerohive.com service protocol 6 port 80
		security-object SSID-CWP walled-garden hostname www.aerohive.com service protocol 6 port 443
		security-object SSID-CWP web-server 
		security-object SSID-CWP web-directory CWP-ExterAuth
		ssid SSID-CWP
		ssid SSID-CWP security-object SSID-CWP
	</desc>
	
	<property name="ap.mac" value="FFFFFFFFFF05" />
	<property name="owner.id" value="102" />
	<property name="vlan.id" value="105" />
	<property name="userprofile.id" value="105" />
	
	<declaration>
		<step name="create.cwp.selfreg" description="">
			<restapi name="createCwp">
			{	
			    "ownerId":${owner.id},
			    "predefined": false,
			    "jsonType": "cwp",
			    "name":"CWP-ExterAuth",
			    
			    "vlan": {
		        "jsonType": "vlan",
				        "ownerId":${owner.id},
				        "predefined": false,
				        "name":"CWP-ExterAuth",
				        "entries": [
				            {
				                "ownerId":${owner.id},
				                "predefined": false,
				                "tags": [],
				                "vlanNumber": 263
				            }
				        ]
			    },
				"walledGarden": {
				        "ownerId": ${owner.id},
				        "predefined": false,
				        "entries": [
				          {
				            "ownerId": ${owner.id},
				            "predefined": false,
				            "ipObject": {
				              "jsonType": "ip-address-profile",
				              "ownerId": ${owner.id},
				              "predefined": false,
				              "name": "ia2cOE8pYfmrS49kwCHnKGni5NbP4J3A",
				              "description": "",
				              "value": "Y3aUUrvH8nH4hAxlsMx2GAje2usHH1pF"
				            },
				            "itemId": 50,
				            "service": "SERVICE_WEB",
				            "protocolNumber": 239,
				            "port": 26107
				          }
				        ]
				      },
			    "loginPage": {
			        "jsonType": "cwp-login-page",
			        "ownerId":${owner.id},
			        "predefined": false,
			        "backgroundColor": "8sMBhWs0vH",
			        "fontColor": "hD5tCXWfQn",
			        "linksColor": "VxdewaNcP5",
			        "buttonColor": "vQJLVAAQja",
			        "buttonTextColor": "070nLaMxye",
			        "logoFileName": "9QwWA1gnoWYh7g8HpgVMu3IS1Z1nx3cg",
			        "backgroundImageName": "B8r6tCiYFpUStdwGHUENtflCHwo83wjw",
			        "uploadByUser": true,
			        "fileDirectory": "ZtlJ66W1xgdz922IY6uIkj7iWXCazMn9BCYpPmaNjwHM4HMlsODuK8EqCMf3VwGx70kJq3hxPznjJP48wr0XLbNVRVQ99gkHyGuYjq1c1CK736VzwuAFvoZVJEo9gWFYI7VXTec4q6SzVLxFcDlVctZ0ensCKyCQ0H7y8rFwxftzP0ltHTH3dgnNLDyghSGSdGk2DBncjGHoQX2Sqq6Bhkl0xZNLpn6SajFUWE4B5V535JI25cx30CqsZiOQoqwa",
			        "fileName": "http://www.aerohive.com",
			        "policyContent": "oUSDMCvfgQeEJKVHRtPQS6wDmUJNYx988FtYerY33FgSz3ysyUdv8gytcO2en4oifBDX8cZH90ZkMaGVeaDbpqUYCFsvJBhA2gWlTOjX4ovsvhDspWXgztJsILM6ssSTUKtKka0XbbKWJdaBvT8YHXTogENK1tV2sks9cCUT3Qxcld7Dc4nnyLIfVQt7so6F29KXI8L12IKwq08GiGTl7dlWekk0IdYreACo51EbZbCmmcS9lJF5TSkn73vIKQX",
			        "passwordEncryption": "SHARED",
			        "sharedSecret": "FyAJzOZCm8SvDWq4wOYiWZzuPOUavn260Mz9WKCAJ5607ENyEWI70myLKJDKooLCrzQ7kPXufYpSrb9IJApWGz1JGukOgxtJ9QJujiwJwfdWtAJnAW6V6cCX3ykA1vi2",
			        "loginUrl": "http://www.aerohive.com",
			        "authProtocol": "CHAP",
			        "requiredFieldsCount": 3,
			        "optionalFieldsCount": 2
			    },
			    "successPage": {
			        "jsonType": "cwp-success-page",
			        "ownerId":${owner.id},
			        "predefined": false,
			        "backgroundColor": "TT7U75cPeu",
			        "fontColor": "M4UiqIJk9p",
			        "linksColor": "pFKIcEqDwM",
			        "buttonColor": "PVltdTCffz",
			        "buttonTextColor": "l8StzY05Su",
			        "logoFileName": "X31d5Vx9vUlLpBPSjWSOyS2nzYfAWLSJ",
			        "backgroundImageName": "WRJ19RTvVKjYhixrLMMqIJqyeLlt0ikU",
			        "uploadByUser": false,
			        "fileDirectory": "ulvtF68qpGF06ZNLNSF0RklE911g3GQee61axbR33fgsDP8DcYtuisqMC8ZGXQ1WBulwYQJkvOgBaihg1BTdPoWhzfGRRCEAIY9QLCK0JJXPV2X1zlCOVmf95deoR9YBX0tNRY8TyqZxLMfY82tesMVhvgmZ8dWPyJCvw8118GZA5Fqh5KFC3cKmkIGy6J8ZLs0DMmZvWyxLJNBdgUPOCqkQQYF0rxI6BOG54ao4Vtm103BqxjuNCNGYBTyXa8bM",
			        "fileName": "24JxoCiAICHe8oKRQ04mmWi5MlJnz1iRlyq0zxfkDpjbjzT9KqQryIVL76DmYEI6hRzEexl3u59A7yWNlYge5XvN1gaVWOvAI5F9hYqxMUQ3kOplLh7ceehdzTcnPKX5LOeaLRj0mbxAV99MirAqVGN239L7mlFaedZdkxp0NgTibzuc9G8ymfJiS64VocLwFkkK42263tX6SzXNNb0fCJkzdzLwDEvLPvHpeiuWb0YLL5GwRCh3FV7pXEql3edp",
			        "wlanAccessNotice": "qkF2Q7WYxKaFGDBwPXJM3QqDoI58M4ZukVllgKyRLi2mEdj46fsII3QVFlZhUTOaVhetLriTl7KRFMq6yvsWCZaDYKiYLMAU4l10SxcWDT1wnwtcsY8hm8U7pNjg4xTDOQAiJBpooJtiwAQboCU1ZUu7GN26i5a9d4AM53Fl9CRpHNuA9QohlwW2q1RyKYK1c9IYTaNZ9KQr38jHxvTwZ6Mi4p2FzUDJJ3IGVagdP7tAkKsVy0NLbXcwgW14jfi",
			        "librarySipNotice": "EXWtXpUhCY0yOQUUDTt0rmbl2l7ne5ZiwiOMHObg8k69I62QyvdYrzeXblQQXRxdVNoyB7Ewg45Fa2AHUaqsaMLjO4TndFnApREnPQgOBm7G4hsnXi4Bhau8fIp9iAEF0tw6c22HTvgpzYzPZUo9wSnr5RO7tBMZfAbHJpWwbcD66qeNdkRcelXOte7KozVsoASPKFuANkwvTEpz2lx7ykUwT2nRg2nujFuHXx6xW7nil88v14F1kEOdlTduUgS"
			    },
			    "failurePage": {
			        "jsonType": "cwp-failure-page",
			        "ownerId":${owner.id},
			        "predefined": false,
			        "backgroundColor": "wnxt1T2jUP",
			        "fontColor": "OiUXv5ZslG",
			        "linksColor": "EBr3lXaDri",
			        "buttonColor": "TEf40wF8gJ",
			        "buttonTextColor": "8wTEkF06na",
			        "logoFileName": "3ICTbRGMJEgR8Yc70MJsc0H4LtL8GRCO",
			        "backgroundImageName": "DigjyoBajeR0PphYaMbLszT2bv1eelm8",
			        "uploadByUser": false,
			        "fileDirectory": "qKsPKoUVdCO2rHLMLxnReuULtbTpbzMpyAdpCd2FsgJEMXXmCzLImyvFpA44kAXazQ2j1SHe75zscPRq0TYyx7eJTv55sxfdofW3Dyw0Jgp7ad0w6qMfQb6HUUSpmp9fNpvldtiJZXcD6Zedc3q3WGTBJ1SWHbFFc0OhdgmLHyCwxZKHbTrfk5eG9IEfooYR48EhsWS5k3OViYH2i2WIDd9k7lIeI893AhnzaHOqksOeJ26J3bKICupbBe3bFhkI",
			        "fileName": "IrJvC1MMSKkIczDEsGynJxj5bXdRSnj1ETvK1tiQRfVxYxVRLfPeUOcfFah6yhNTZ7NcYYyjY8FS5Tipz0An8Y8Feu4QPIOL36R6Gy1lOuieLra0kW3PrmOci5AMEfb9kjzNN0GHO0YQ8XOKjqSv9nSSsLmGRkV59sUIS9xQKDIpIFJgnvpN2bhxdvQAudi6FD5QpgCRC0IIijxfQ8ZdO2Bx1QjIGBV5pt4RsRLI9EZsCwiFLgA4hzgyZrXAAOnv",
			        "failureNotice": "FHw9DMCM3elDhlLxQhpM6XW5s7kKd2RnTCZ2KuSi9AJBJGStSu4LFUiFzqlDAzf6rf56anb2AewAmSQ9vNaLWiTfuHM7iz3xNKNIi8OGn0QbiRPSIfKeYF0Umb38rGcYAHR6bV4mN770DYzM1p18BJFcHvnXxZP9peJQWQfhXBQtrfGLOUaZRP3WAlDIlbzOk8HjsTUo4upV5Ev6moJ0dO5yBAR9T7lyoYKSojVLJNervEIg5lc9RbJfMEGm45f"
			    },
			    "httpsCertificate": {
			        "ownerId":${owner.id},
			        "predefined": false,
			        "fileName": "qq6I50MosXmKCr4tHItU8gG37qH2yj0s",
			        "fileSize": 749070298626589700,
			        "fileType": "SELF_GEN_CA",
			        "index": 0,
			        "encrypted": false,
			        "issuer": "3kecfzacndGe4KV3ydnshHWFJO3A1FvD9rucAwK4RdfdOGknol0xalgysDgtfS0zwMgE3g2sBjKUktgVeSgdqIwskplQuwYPmK7HRXLkKrKwjISliiPMUSqAowVMf1IG",
			        "subject": "G2GBRygP4Hz11cpdt3JuStL9iX42A2E64rHYuukis139lpLmqdSOkA2sEHwgAJUYyawWkVzZmPb9WgJDW4GOBRlTmjNxgwf4nLiVJM00Sxp6qOyrOxwlhYUxU7t09hq5",
			        "expireTime": "V7q1s9PwkzP7brOQZhgcMDJBtlMGXvcQ"
			    },
			    "successExternalUrl": "kbBfuqATenjQbJPfPEX6JtuoKb42AKzpCNgj2URDYpaeIy2OtjapkvUwtYW97N1N4bm9Q6GBfAjM3WcGy2XutxE5mbWUc7i41wpZktTedxVitFleJ36U4gPXZayDBnJJBbmJBMZP4Lp3OhMXMwZt8RDeEo9oq8sh2d4M07AH1JWJ2llDuU8u7niuyAAukk7YmSYKWO8zUNkNlOFhm7NkbbaF4cp7IcF80S05n1Qy23bTtsi6s7ZAvuL5YQCfoPka",
			    "failureExternalUrl": "1SNTXJ3pV1qXGjHCmleuVlLq0hEB9Z9ItzTUDVMDpFKyJLJx1zlqoshE84YM6FzmJG3PL3WnQkAAluhnJtIC0NNwlRTuI6RPSNz04NjAr21TVCpuQVaqH8WANIaV8SDy4EOmuCqZ5nnlISKvH7ZXjSzSAeheAnKvLzOcTTkfF1He0gqsCJf9VkaSGi2U0Y9gqYvYGmfJ7Fv9nneuvrQJbZPKUI1206AHJZOPUYecnkc85VeSrCcoKepw6p8hiEzX",
			    "eth0Ip": "M0241OU6a2Q5D83kgDV8iBjePi2zwWAm",
			    "eth0Netmask": "5yhwCW5KzCJMQYWQzN1E9UJdVQ4KOk8W",
			    "eth1Ip": "ToQHkJsfUTIwYMti53XI9rwmKPqLIHAO",
			    "eth1Netmask": "87kVRryEeM6lgE1sHIf6VGeUkEnkpccf",
			    "radio11aModeIp": "1K8IrQaoqvJZfBBsPHthuaL0c34bqWR0",
			    "radio11aModeNetmask": "FlSbkHVPcHxHkQhz2DgzntjQ6y30AgbL",
			    "radio11bgModeIp": "DPkMAU19PEJGBBTWt68l75UbashSE24V",
			    "radio11bgModeNetmask": "zhADzSs1ibienueiKCGDFQerCK5GrS0m",
			    "serverDomainName": "gYnWBYLZHdE8cDHERMZRvMIC2FSLINZDkwJdBxUTwsQ8gZhcAwTeqn4pnErjvTAk",
			    "sipRedirectUrl": "STlMZxg5rVre0eboWQuP1wBMHVxQWHR70GxxvISOc2SzrBewjqPjD2VaRyvT6KSDuDag8nEW9KLpBnHOigopyv4LR01zifNLisqMvmQpO0SBtPfNICEwPdFc4k77ZTRsEplvcCmJdB257KKDnI8VsjfLDDKvob6i4cnci6H80zkH917BKAQJtAtWOqtP2UyOaM3dpusMzZwcuUqt5T1KSiO3bbYRoPqBGYVCY39iLnO2ijQMdvLt98pSQoRQQIOw",
			    "useStandardLoginPage": true,
			    "useCustomLoginPage": false,
			    "showSuccessPage": false,
			    "useStandardSuccessPage": true,
			    "useCustomSuccessPage": false,
			    "redirectAfterSuccessLogin": true,
			    "successToInitiallyPage": false,
			    "successToSpecifiedUrl": true,
			    "showFailurePage": false,
			    "showFailureViaLoginPage": true,
			    "useStandardFailurePage": true,
			    "useCustomFailurePage": false,
			    "redirectAfterFailureLogin": true,
			    "failureToInitiallyPage": false,
			    "failureToSpecifiedUrl": false,
			    "displaySessionTimer": false,
			    "enableHttps": true,
			    "enableHttp302": true,
			    "forceAcceptNetwork": false,
			    "overrideCertificateDomain": true,
			    "useDefaultNetwork": true,
			    "useCustomNetwork": false,
			    "overrideVlan": false,
			    "enableWallGarden": false,
			    "languages": [
			        "FLYpMbRwsRPf7reTXuFcmwllC2gZDreSVIqbEQ2S6ffWbRoNfITyRIr3pqY1XLW5gd1RqxKlJXj4MlQ6MYEBTJP8LgVevhJQ0lscWpLUHPa2aqU8Hk7YlOeAbVZZ92CjcaBUEbkDEZD10C7WWemPiwrqSxsHGDNaTYSFRE1OhSG936hltRFBVLeGkzHKzshuAlrNTY9TwyUSiF5FSARy0ZGrJJ5slKNAUUVoiNVMLLdVoHVyE0qaU0bN2K60D5L",
			        "pv5z8Mcl70ZzGI18Eu7YiR7sRMm8EtgiKltfFN5RqQ7kJphSxVnVyFdksJsAONmHiygpgJAIwz2WAnEX55TnpuRXYxYw1UhsWLt0petulKZRhw9w4LwGBo2Pg27KAGlNNv1nc3QhdhZVi7R7VzDdYef3ggKt10AYvJqtKJ6iR75UHYyq9pBcaK8BNiCDAvyCmtDNaY1I7aQnO3R8G8216KBSJazZpqiHCQ91xUpG9yBwle3Yc545JBtGr1tlET4"
			    ],
			    "defaultLanguage": "ES",
			    "sessionExpireAlert": 8,
			    "leaseTime": 33563,
			    "registrationPeriod": 41208,
			    "successDelay": 51,
			    "failureDelay": 10,
			    "registrationType": "EXTERNAL_AUTH",
			    "internalDhcpType": "USE_AEROHIVE",
			    "dhcpMode": "MODE_UNICAST"
			
			}
		   </restapi>
		</step>
		<step name="create.cwp.profile" description="">
			<restapi name="createCwpProfile">
				{
				  "ownerId": ${owner.id},
				  "predefined": false,
				  "jsonType": "cwp-profile",
				  "name": "cwpprofile-selfreg",
				  "description": "",
				  "defaultCwp":"@{create.cwp.selfreg}",
				  "entries": [ 
					{
		            "ownerId": 105,
		            "predefined": false,
		            "tags": [],
		            "description": "",
		            "cwp": "@{create.cwp.selfreg}"
					}],
				  "enabled": true,
				  "registrationType": "EXTERNAL_AUTH"
				}
		   </restapi>
		</step>
		<step name="create.external.radius.profile" description="">
		    <restapi name="createExternalRadiusProfile">
		          {
                   "ownerId" : ${owner.id}, 
                   "predefined" : false, 
                   "jsonType" : "external-radius-profile", 
                   "name" : "AAARadiusClient", 
                   "description" : "ExternalRadiusProfile", 
                   "externalRadiusServerOption" : "OBTAIN_VIA_DHCP_OPTIONS"
                   }
		    </restapi>
		</step>		

		<step name="create.traffic.filter" description="">
			<restapi name="createTrafficFilter">
				{
				"ownerId": ${owner.id},
				"predefined": false,
				"jsonType": "traffic-filter",
				"name": "Default service filter",
				"description": "This is one mac dos",
				"enableSsh": true,
				"enableTelnet": false,
				"enablePing": true,
				"enableSnmp": false,
				"enableInterStationTraffic": true
				}
		   </restapi>
		</step>	
		<step name="create.mac.dos.prevention.1" description="">
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos1",
			"description": "This is one mac dos prevention",
			"dosType": "SSID",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false
			}]
			}
	    </restapi>
		</step>
		<step name="create.mac.dos.prevention.2" description="">
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos2",
			"description": "This is one mac dos prevention",
			"dosType": "STATION",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false
			}]
			}
	    </restapi>
		</step>
		<step name="create.ip.dos.prevention" description="">
			<restapi name="createIpDosPrevention">
			{
			"ownerId":${owner.id},
			"predefined":false,
			"jsonType":"ip-dos-prevention",
			"name":"IP-dos-test",
			"description":"This is one ip dos",
			"enableSynCheck":false,
			"dosParams":[
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"RADIUS_ATTACK",
			"threshold":5,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":true},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ICMP_FLOOD",
			"threshold":20,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"IP_SPOOF",
			"threshold":3,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ADDRESS_SWEEP",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"PORT_SCAN",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"UDP_FLOOD",
			"threshold":50,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"SYN_FLOOD",
			"threshold":1000,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ARP_FLOOD",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false}
			]}
		}
		</restapi>
	</step> 
 		<step name="create.user.profile.1">
            <restapi name="createUserProfile">
                {
                    "jsonType" : "user-profile",
                    "ownerId" : ${owner.id},
                    "name" : "CloudUserProfile106",
                    "predefined" : false,
                    "vlan" : 
            			{
                        "jsonType" : "vlan",
                        "ownerId" : ${owner.id},
                        "name" : "Aerohive_VlanProfile",
                        "description" : "Vlan Profile for Demo",
                        "predefined" : false,
                        "entries" : 
            				[ {
                            "ownerId" : ${owner.id},
                            "tags" : [ ],
                            "vlanNumber" : ${vlan.id}
                        	} ]
                    	},
                    "enableFirewall" : false,
                    "enableSchedule" : false,
                    "schedules" : [ ],
                    "enableTrafficTunneling" : false,
                    "enableClientSla" : false,
                    "enableQos" : false,
                    "restriction" : "DENY_CAR",
                    "enableClassification" : false           
                }
            </restapi>
        </step>
		<step name="create.ssid.profile.1" description="">
			<restapi name = "createSsidProfile">
				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSID-CWP",
                    "ssid" : "SSID-CWP",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"authenticationOption":"AEROHIVE_IDENTITY_MANAGER",
					"accessSecurity": {
				                  "ownerId": ${owner.id},
                                  "jsonType": "open-access"
				                   },
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": true,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": true,
						"wmmEnableWmmVideo": true,
						"wmmEnableWmmVoice": true,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "AUTO",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":70,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
                    "cwpProfile":"@{create.cwp.profile}",
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
			</restapi>
		</step>
		<step name="create.network.policy.1">
			<restapi name = "createNetworkPolicy">
				{
				"ownerId" : ${owner.id},
  				"predefined": false,
				"jsonType": "network-policy",
				"name" : "Aerohive_UserProfile10",
				"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
        </step>
		<!--This step should be removed after Could 3.0 can push configuration to device-->
		<step name="create.device.1.ap330.v6102.as.ap">
			<restapi name = "createDevice">
				{
				"ownerId":${owner.id},
				"ipAddress": "10.155.21.21",
				"macAddress":"${ap.mac}",
				"hostname":"virtual device for test",
				"serialNumber":"1111222233334444",
				"productType":"AP_330",
				"softwareVersion": "6.1.2.0",
				"role":19050,
				"function":"Ap",
				"adminState":"UNMANAGED",
				"isConnected":true
				}
			</restapi>
		</step>

        <step name="add.ssid.profile.into.network.policy">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ssid.profile.1}"
                }
            </restapi>
        </step>
        <step name="assign.network.policy.to.device">
            <restapi name="assignnetworkpolicy">
                {
                    "device" : "@{create.device.1.ap330.v6102.as.ap}",
                    "networkPolicy" : "@{create.network.policy.1}"
                }
            </restapi>
        </step>

        <step name="download.cli.to.device">
            <restapi name="downloadcli">
                {
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "deviceIds" : [ "@{create.device.1.ap330.v6102.as.ap}"],
                    "configDownloadTypes" : [ "deviceFull"]
                }
            </restapi>
        </step>
	</declaration>
	<stage>
		<step no="1">
			<call step="create.cwp.selfreg" />
			<failed>next</failed>
		</step>
		<step no="2">
			<call step="create.cwp.profile" />
			<failed>next</failed>
		</step>
		<step no="3">
			<call step="create.external.radius.profile" />
			<failed>next</failed>
		</step>
		<step no="4">
			<call step="create.traffic.filter" />
			<failed>next</failed>
		</step>
		<step no="5">
			<call step="create.mac.dos.prevention.1" />
			<failed>next</failed>
		</step>
		<step no="6">
			<call step="create.mac.dos.prevention.2" />
			<failed>next</failed>
		</step>
		<step no="7">
			<call step="create.ip.dos.prevention" />
			<failed>next</failed>
		</step>	
		<step no="8">
			<call step="create.network.policy.1" />
			<failed>next</failed>
		</step>
		<step no="9">
			<call step="create.device.1.ap330.v6102.as.ap" />
			<failed>next</failed>
		</step>
		<step no="10">
			<call step="create.user.profile.1" />
			<failed>next</failed>
		</step>
		<step no="11">
			<call step="create.ssid.profile.1" />
			<failed>next</failed>
		</step>
		<step no="12">
			<call step="add.ssid.profile.into.network.policy" />
			<failed>next</failed>
		</step>
		<step no="13">
			<call step="assign.network.policy.to.device" />
			<failed>next</failed>
		</step>
		<step no="14">
			<call step="download.cli.to.device" />
		</step>
		<step no="15">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>	

			<log-match>-i "security-object SSID-CWP security additional-auth-method captive-web-portal"</log-match>
            <log-match>-i "security-object SSID-CWP security additional-auth-method captive-web-portal auth-method chap"</log-match>	
			<log-match>-i "security-object SSID-CWP security additional-auth-method captive-web-portal external-server primary login-page http://www.aerohive.com"</log-match>
            <log-match>-i "security-object SSID-CWP security additional-auth-method captive-web-portal default-language english"</log-match>
            <log-match>-i "security-object SSID-CWP walled-garden hostname www.aerohive.com service protocol 6 port 80"</log-match>
            <log-match>-i "security-object SSID-CWP walled-garden hostname www.aerohive.com service protocol 6 port 443"</log-match>	
			<log-match>-i "security-object SSID-CWP web-server"</log-match>
            <log-match>-i "security-object SSID-CWP web-directory CWP-ExterAuth"</log-match>
            <log-match>-i "ssid SSID-CWP"</log-match>
            <log-match>-i "ssid SSID-CWP security-object SSID-CWP"</log-match>       
          			
		</step>
	</stage>
	<failed-process />
	<post-process />
</testcase>
