<testcase>
	<brief>IP Object All APIs</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		APtest
	</description>
	<numofap>1</numofap>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>

	<property name="test1" value="ServiceType" />
	<property name="ap.mac" value="197711112222" />
	<property name="tb.fileserver" value="10.155.40.181" />
	<property name="owner.id" value="102" />
	<property name="hostname" value="test.aerohive.com" />
	<property name="accessap.ip1" value="10.155.22.22" />
	<property name="accessap.ip2" value="10.155.22.23" />
	<property name="accessap.ip3" value="10.155.22.24" />
	<property name="network.mask" value="255.255.255.0" />

	<declaration>
		<step name="create.ip.address.profile" description="">
			<restapi name="createIpAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" :false,
				"jsonType" : "ip",
				"name" : "IpAddressPrfoile.1",
				"description" : "this is ip address profile",
				"ipAddress":"${ip.addr}"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile",
				"description" : "this is hostname address profile",
				"hostname": "${hostname}"
				}
            </restapi>
		</step>
		<step name="create.ip.range.address.profile" description="">
			<restapi name="createIpRangeAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" :false,
				"jsonType" : "ip_range",
				"name" : "IpRangeAddressProfile",
				"description" : "this is IpRangeAddressProfile",
				"ipAddressFrom":"${accessap.ip3}",
				"ipAddressTo" : "${accessap.ip4}"
				}
            </restapi>
		</step>
		<step name="create.network.address.profile" description="">
			<restapi name="createNetworkAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "network",
				"name" : "NetworkIpObject",
				"description" : "Network ip object",
				"networkAddress":"${accessap.ip2}",
				"networkMask" : "${network.mask}"
				}
            </restapi>
		</step>
		<step name="create.wildcard.address.profile" description="">
			<restapi name="createWildcardAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "wildcard",
				"name" : "WildcardIpObject",
				"description" : "this is WildcardIpObject",
				"wildcard": "${accessap.ip3}",
				"wildcardMask" : "${network.mask}"
				}
            </restapi>
		</step>
		 <step name="create.ip.object.ip.address" description="">
			<restapi name="createIpObjectProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType": "ip-object",
				"name" : "AccessIpObject",
				"description" : "This is a AccessIpObject",
				"addressType" : "IP_ADDRESS",
				"entries" :
				[{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"description" : "ip address",
				"addressInfo1" : "${accessap.ip1}"
				}]
				}
			</restapi>
		</step>
		 <step name="create.ip.object.host.name" description="">
			<restapi name="createIpObjectProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType": "ip-object",
				"name" : "HostNameIpObject",
				"description" : "This is a HostNameIpObject",
				"addressType" : "HOST_NAME",
				"entries" :
				[{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"description" : "HostName",
				"addressInfo1" : "${hostname}"
				}]
				}
			</restapi>
		</step>
		<step name="create.ip.object.ip.range" description="">
			<restapi name="createIpObjectProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType": "ip-object",
				"name" : "IPRangeIpObject",
				"description" : "This is a IPRangeIpObject",
				"addressType" : "IP_RANGE",
				"entries" :
				[{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"description" : "HostName",
				"addressInfo1" : "${accessap.ip1}"
				}]
				}
			</restapi>
		</step>
		<step name="create.ip.object.net.work" description="">
			<restapi name="createIpObjectProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType": "ip-object",
				"name" : "NetworkIpObject",
				"description" : "This is a NetworkIpObject",
				"addressType" : "NETWORK",
				"entries" :
				[{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"description" : "HostName",
				"addressInfo1" : "${accessap.ip2}"
				}]
				}
			</restapi>
		</step>
		<step name="create.ip.object.wild.card" description="">
			<restapi name="createIpObjectProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType": "ip-object",
				"name" : "WildCardIpObject",
				"description" : "This is a WildCardIpObject",
				"addressType" : "WILDCARD",
				"entries" :
				[{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"description" : "HostName",
				"addressInfo1" : "${accessap.ip3}"
				}]
				}
			</restapi>
		</step>
	</declaration>
	<stage>
		<step no="1">
			<call step="create.ip.address.profile" />
		</step>
		<step no="2">
			<call step="create.hostname.address.profile" />
		</step>
		<step no="3">
			<call step="create.ip.range.address.profile" />
		</step>
		<step no="4">
			<call step="create.network.address.profile" />
		</step>
		<step no="5">
			<call step="create.wildcard.address.profile" />
		</step>
		<step no="6">
			<call step="create.ip.object.ip.address" />
		</step>
		<step no="7">
			<call step="create.ip.object.host.name" />
		</step>
		<step no="8">
			<call step="create.ip.object.ip.range" />
		</step>
		<step no="9">
			<call step="create.ip.object.net.work" />
		</step>
		<step no="10">
			<call step="create.ip.object.wild.card" />
		</step>
		<step no="11">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat
				/var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>
		</step>
	</stage>
	<failed-process />
</testcase>
