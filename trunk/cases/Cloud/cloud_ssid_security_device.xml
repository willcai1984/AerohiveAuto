<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>hshao free tb brtest</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		brtest
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>

	<property name="tb.fileserver" value="10.155.40.181" />
	<property name="owner.id" value="105" />

	<declaration>
		<step name="create.network.policy.1">
            <restapi name="createNetworkPolicy">
                {
                "ownerId" : ${owner.id},
                "name" : "Aerohive_UserProfile1",
                "type" : "NetworkAccessAndSwitching"
                }
            </restapi>
        </step>
        <step name="create.device.1.ap330.v6102.as.ap">
            <restapi name="createDevice">
                {
                    "ownerId":${owner.id},
                    "ipAddress": "${ap1.mgt0.ip}",
                    "macAddress":"${ap1.mgt0.mac}",
                    "hostname":"",
                    "serialNumber":"",
                    "productType":"AP_350",
                    "softwareVersion": "6.0.2.0",
                    "role":19050,
                    "function":"Ap",
                    "adminState":"UNMANAGED",
                    "isConnected":true
                }
            </restapi>
        </step>
        <step name="create.dns.profile.1">
            <restapi name="createDnsServiceProfile">
                {
                    "jsonType": "dns-service",
                    "splitdns":false,
                    "internalDns1":{
                        "jsonType": "ip-object",
                        "addressType":"IP_ADDRESS",
                        "entries":[ {
                            "addressInfo1":"10.10.10.10",
                            "tags":[{
                                "jsonType": "device",
                                "value":"tag1",
                                "ownerId":${owner.id}
                            }],
                            "ownerId":${owner.id}
                        }],
                        "name":"10.10.10.10",
                        "predefined":false,
                        "ownerId":${owner.id}
                    },
                    "internalDns2":{
                        "jsonType": "ip-object",
                        "addressType":"IP_ADDRESS",
                        "entries":[{
                            "addressInfo1":"8.8.8.8",
                            "tags":[{
                                "jsonType": "location",
                                "value":"tag1",
                                "ownerId":${owner.id}}],
                            "ownerId":${owner.id}
                        }],
                        "name":"8.8.8.8",
                        "predefined":false,
                        "ownerId":${owner.id}
                    },
                    "internalDns3":{
                        "jsonType": "ip-object",
                        "addressType":"IP_ADDRESS",
                        "entries":[{
                            "addressInfo1":"8.8.4.4",
                            "tags":[{
                                "jsonType": "global",
                                "value":"tag1",
                                "ownerId":${owner.id}}],
                            "ownerId":${owner.id}
                        }],
                        "name":"8.8.4.4",
                        "predefined":false,
                        "ownerId":${owner.id}
                    },
                    "domainObject":{
                        "objName":"unit-tests-102611.aerohive.local",
                        "objType":"CLASSIFICATION_POLICY",
                        "items":[{
                            "domainName":"unit-tests-102611.aerohive.local",
                            "ownerId":${owner.id}
                        }],
                        "ownerId":${owner.id}
                    },
                    "dnsSpecificInfos":[],
                    "name":"unit-test-579219-dns-profile",
                    "description":"fake-dns-profile",
                    "ownerId":${owner.id}
                }
            </restapi>
        </step>
        <step name="add.dns.profile.1.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : refIdInTestStep = "create.network.policy.1",
                    "featureId" : refIdInTestStep = "create.dns.profile.1"
                }
            </restapi>
        </step>
        <step name="create.user.profile.1">
            <restapi name="createUserProfile">
                {
                    "jsonType" : "user-profile",
                    "ownerId" : ${owner.id},
                    "name" : "Aerohive_UserProfile1",
                    "predefined" : false,
                    "vlan" : {
                        "jsonType" : "vlan",
                        "ownerId" : ${owner.id},
                        "name" : "Aerohive_VlanProfile",
                        "description" : "Vlan Profile for Demo",
                        "predefined" : false,
                        "entries" : [ {
                            "ownerId" : ${owner.id},
                            "tags" : [ ],
                            "vlanNumber" : 1
                        } ]
                    },
                    "enableFirewall" : false,
                    "enableSchedule" : false,
                    "schedules" : [ ],
                    "enableTrafficTunneling" : false,
                    "enableClientSla" : false,
                    "enableQos" : false,
                    "restriction" : "DENY_CAR",
                    "enableClassification" : false
                }
            </restapi>
        </step>
        
        <step name="create.ssid.profile.advanced.access.security">
        	<desc>advanced access security</desc>
        	<restapi name="createAdvancedAccessSecurity">
        		{
	                "ownerId":${owner.id},
			        "predefined":false,
			        "gtkRekeyPeriod":4124,
			        "gtkTimeout":679,
			        "gtkRetries":10,
			        "ptkRekeyPeriod":49523,
			        "ptkTimeout":811,
			        "ptkRetries":3,
					"gmkRekeyPeriod":1603482,
					"replayWindow":10,
					"nonStrict":true,
					"reauthInterval":57688,
					"enablePreauthentication":false,
					"enableProactivePmkIdResponse":true,
					"localTkipCountermeasure":false,
					"remoteTkipCountermeasure":false,
					"enable802Dot11w":true,
					"useOf802Dot11w":"MANDATORY",
					"enableBroadcastOrMulticastIntegrityProtocol":false,
					"enableGmkRekeyPeriod":true,
					"enableGtkRekeyPeriod":true,
					"enablePtkRekeyPeriod":false,
					"enableReauthInterval":false
							
				}
        	</restapi>
        </step>
        <step name="create.traffic.filter" description="">
			<restapi name="createTrafficFilter">
				{
				"ownerId": ${owner.id},
				"predefined": false,
				"jsonType": "traffic-filter",
				"name": "Default service filter",
				"description": "This is one mac dos",
				"enableSsh": true,
				"enableTelnet": false,
				"enablePing": true,
				"enableSnmp": false,
				"enableInterTraffic": true
				}
	   		</restapi>
		</step>
		<step name="create.ip.dos.prevention" description="">
			<restapi name="createIpDosPrevention">
				{
				"ownerId":${owner.id},
				"predefined":false,
				"jsonType":"ip-dos-prevention",
				"name":"IP-dos-test",
				"description":"This is one ip dos",
				"enableSynCheck":false,
				"dosParams":[
				
				{"ownerId":${owner.id},
				"predefined":false,
				"screeningType":"RADIUS_ATTACK",
				"threshold":1497996843,
				"dosAction":"BAN_FOREVER",
				"duration":479164046,
				"enable":true},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"screeningType":"ICMP_FLOOD",
				"threshold":154465117,
				"dosAction":"BAN_FOREVER",
				"duration":1772366886,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"screeningType":"IP_SPOOF",
				"threshold":154465117,
				"dosAction":"BAN_FOREVER",
				"duration":1772366886,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"screeningType":"ADDRESS_SWEEP",
				"threshold":154465117,
				"dosAction":"BAN_FOREVER",
				"duration":1772366886,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"screeningType":"PORT_SCAN",
				"threshold":154465117,
				"dosAction":"BAN_FOREVER",
				"duration":1772366886,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"screeningType":"UDP_FLOOD",
				"threshold":154465117,
				"dosAction":"BAN_FOREVER",
				"duration":1772366886,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"screeningType":"SYN_FLOOD",
				"threshold":154465117,
				"dosAction":"BAN_FOREVER",
				"duration":1772366886,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"screeningType":"ARP_FLOOD",
				"threshold":154465117,
				"dosAction":"BAN_FOREVER",
				"duration":1772366886,
				"enable":false}
				]}}
			</restapi>
		</step>
        <step name="create.ssid.profile.1">
        	<desc>
        		this is an example with reference to other test step
        	</desc>
            <restapi name="createSsidProfile">
                {
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "ssid profile 1",
                    "ssid" : "ssid profile 1",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "ssidUsageIndustry" : "ENTERPRISE",
                    "ssidUsageUserGroup" : "STAFF_AND_TEACHERS",
                    "accessSecurity": {
                        "jsonType": "802DOT1X",
                        "ownerId": ${owner.id},
                        "keyManagement": "WEP_8021X",
                        "encryptionMethod": "CCMP",
                        "keyType": "HEX",
                        "keyValue": "gzCoghUgcL115BMiddQxCWAdn7xk0fqy6S7ExRNP3pKC46ID5p63N2IUpgQ1wPQB"
                    },
                    "defaultUserProfile" : refObjectInTestStep = "create.user.profile.1",
                    "advancedSettings": {
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": false,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": false,
						"wmmEnableWmmVideo": false,
						"wmmEnableWmmVoice": false,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "DISABLE",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":5,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
						"rateSets11a":
						["MUhRnFDxzV0fjeb8f7iHhoKRfSR42HZ4m2OFUo885182kzWYCL0Lx2t7QBoqPL7xLWrIEDdkJglIitVORDNUod6bKsIJD5iLA5Ip0IgBIegc0D1Sqk7QuDYgvZGTWvf2nKALQumXIfaM5SdOIy5IGEts4gpmq7EbLYnVPTH9OUK6j791EM3fEm5K5r18p6l1wkeU8btAWCDosXkWF1U6aZpTD7wD8eSJ8BB6cI8j94r8BmvhN6uYep0XXpDkczv",
						"JEpoOBWMA3FQo7ajbSo4O6B2KTEAgpvTARt03TCHsLQEnAYvpcYiUApImsJmZctLicATYi6hH5n6ax0r73FYMv3TfX7lqzm3QOw8ugkljgM6Vw5spfGUNAoJexiiffpEUirh0ogICmnYIPCKgOhH6901N9tRS5cUxzv9VilGFjw3ez9X8utJ6ybzYLoUoc4MioM28o3GiymTTX95oMozRKlpHXKyVFbUKYzo3KV5Tm0m2gLVCIyu0TOYMz5RpV1"],
						"rateSets11bg":
						["rFF6LDTcROXAn1psrXwHTx4DJVmnaMLSuiRE9P6RxNKk4PLLBiPaXnP0tFcpEj80wb8hE6naJHOQBUG5PUKHarQieKcY3EAvrO6RsYrrqNv3Izh1LQHFNgN70T7W32JPwiW4crylfCcMHr35q7SRLVw5CFwY5WmTtb0zw88KmJX62bUfz6Kvqp0b8wFtSw4iYpgPhDbsJLVWZ3J9G31KnyxAstD8L19DeLGw9jy806R9r6efsSy8MsQnBmXqjRE",
						"UbcVWEqxpN2xxcF9uGy1p7cFD9iMrdEaXtffdwxm531CYzr6ft7U28AO9T3BHImyVFjAIFWb2tGcg84KaEsiRV6jIwa6J3XHYDut0i7ok9bwTuEcbJ5yzoypVdGQwGdsMq6wYODtxcOIpmdSsyT8vuKvR4bf8ESCpCPW22Kurwv5snEnHjXAGWAgOIUJpGIRQRuCgcbMsWvXRcuQbm3tqmnYH2fc1fTOHPuYICAxDeG1cOJXCzp8WusIiG0lEOD"],
						"rateSets11n":
						["npsr9YJGGWTlEDw1jALtDbghzVTrNlvoFeXSJ1hfRZXWpHIxi5fZ2rk2RAyPi78X1q9AQHVb4E2qHhKbNVJ5SRFQbioDTqkH2uCYU4yy4MBJI58TauCtZv4jw5hYL1BFpzSWgdMbY1CDXzl2C3OFqvGUAAXQ9qUI5YUmd0pR4lphtjl8ZgsuvqNOpaUT3NrHf17IotgwCmDrKFLT7J8H7Yh8zwOTdO4GPum91wnbtRt6wT8cvebmbKGOXMAhOY6",
						"dbTi8hsdguqDHuXKR6K2tuo3DTM8hGfbEQU3smdpce6OLiT6ADe9HZvk8D0uDoDN6HTokoZcjgC4zMUtpd050VVjTSg3aKwHdxq87KMPCrFLjJ7E6sCZGIWDHJtQN8JZLargkiipOtLqbydVwz1RVPEbzYdBLECgXHAuxa7WdvPbUDrTaal7wNQZ2svVvoFwz2oBA7I2QyRdM7dGB4RWKQLTyDY8yDl9yymogmqPswIwqDBZIqTneq1mQNgNRu4"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
                    "trafficFilter": refObjectInTestStep = "create.traffic.filter",
                    "ipBasedDos":refObjectInTestStep="create.ip.dos.prevention",
                    "ssidBasedMacDos":refObjectInTestStep="create.mac.dos.prevention.1",
                    "stationBasedMacDos":refObjectInTestStep="create.mac.dos.prevention.2",
                    "advancedAccessSecurity":refObjectInTestStep="create.ssid.profile.advanced.access.security"
                }
            </restapi>
        </step>
        
		<step name="create.mac.dos.prevention.1" description="">
			<restapi name="createMacDosPrevention">
				{
				"ownerId": ${owner.id},
				"predefined": false,
				"jsonType": "mac-dos-prevention",
				"name": "Aerohive-mac-dos1",
				"description": "This is one mac dos prevention",
				"dosType": "SSID",
				"dosParams": [
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"EAPOL",
				"threshold":1462667424,
				"interval":253332708,
				"enableBan":false,
				"ban":630770212,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"ASSOC_RESP",
				"threshold":950639156,
				"interval":254071646,
				"enableBan":false,
				"ban":848030328,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"AUTH",
				"threshold":950639156,
				"interval":254071646,
				"enableBan":false,
				"ban":848030328,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"PROBE_RESP",
				"threshold":950639156,
				"interval":254071646,
				"enableBan":false,
				"ban":848030328,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"ASSOC_REQ",
				"threshold":950639156,
				"interval":254071646,
				"enableBan":false,
				"ban":848030328,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"DISASSOC",
				"threshold":950639156,
				"interval":254071646,
				"enableBan":false,
				"ban":848030328,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"PROBE_REQ",
				"threshold":950639156,
				"interval":254071646,
				"enableBan":false,
				"ban":848030328,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"PROBE_RESP",
				"threshold":950639156,
				"interval":254071646,
				"enableBan":false,
				"ban":848030328,
				"enable":false}]
				}
	    </restapi>
		</step>
		<step name="create.mac.dos.prevention.2" description="">
			<restapi name="createMacDosPrevention">
				{
				"ownerId": ${owner.id},
				"predefined": false,
				"jsonType": "mac-dos-prevention",
				"name": "Aerohive-mac-dos2",
				"description": "This is one mac dos prevention",
				"dosType": "STATION",
				"dosParams": [
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"EAPOL",
				"threshold":1462667424,
				"interval":253332708,
				"enableBan":false,
				"ban":630770212,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"ASSOC_RESP",
				"threshold":950639156,
				"interval":254071646,
				"enableBan":false,
				"ban":848030328,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"AUTH",
				"threshold":950639156,
				"interval":254071646,
				"enableBan":false,
				"ban":848030328,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"PROBE_RESP",
				"threshold":950639156,
				"interval":254071646,
				"enableBan":false,
				"ban":848030328,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"ASSOC_REQ",
				"threshold":950639156,
				"interval":254071646,
				"enableBan":false,
				"ban":848030328,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"DISASSOC",
				"threshold":950639156,
				"interval":254071646,
				"enableBan":false,
				"ban":848030328,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"PROBE_REQ",
				"threshold":950639156,
				"interval":254071646,
				"enableBan":false,
				"ban":848030328,
				"enable":false},
				
				{"ownerId":${owner.id},
				"predefined":false,
				"dosDetectionType":"PROBE_RESP",
				"threshold":950639156,
				"interval":254071646,
				"enableBan":false,
				"ban":848030328,
				"enable":false}]
				}
	    	</restapi>
		</step>
		
        <step name="add.ssid.profile.1.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : refIdInTestStep = "create.network.policy.1",
                    "featureId" : refIdInTestStep = "create.ssid.profile.1"
                }
            </restapi>
        </step>
        <step name="assign.network.policy.1.to.device.1">
            <restapi name="assignnetworkpolicy">
                {
                    "device" : refObjectInTestStep = "create.device.1.ap330.v6102.as.ap",
                    "networkPolicy" : refObjectInTestStep = "create.network.policy.1"
                }
            </restapi>
        </step>

        <step name="download.cli.to.device.1">
            <restapi name="downloadcli">
                {
                    "networkPolicyId" : refIdInTestStep = "create.network.policy.1",
                    "deviceIds" : [ refIdInTestStep = "create.device.1.ap330.v6102.as.ap"],
                    "configDownloadTypes" : [ "deviceFull"]
                }
            </restapi>
        </step>
	</declaration>

	<stage>
		<step no="1">
			<call step="add.dns.profile.1.into.network.policy.1" />
		</step>
		<step no="2">
			<call step="assign.network.policy.1.to.device.1" />
		</step>
		<!--
		<step no="2.1">
			<console target="ap1">
				-v "_debug capwap cli"
			</console>
		</step>
		-->
		<step no="3">
			<call step="download.cli.to.device.1" />
		</step>
		<step no="4">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap1.mgt0.mac}-deviceFull.config"
			</ssh>
			<log-match>-i "dns domain-name unit-tests-102611.aerohive.local"</log-match>
		</step>
		<step no="5">
			<desc>
				1. reboot the device make the configuration take effect.
			</desc>
			<console target="ap1">
				-v "reboot"
			</console>
		</step>
		<step no="6" delay="10">
			<desc>
				1. Get the configuartion by CLI "show run config", and save to logfile.
			</desc>
			<log-file>check_hiveaps_capwap_state.log</log-file>
			<console target="ap1">
				-v "show running-config"
			</console>
			<log-match>-i "dns domain-name unit-tests-102611.aerohive.local"</log-match>
		</step>

	</stage>
	<failed-process />
</testcase>
