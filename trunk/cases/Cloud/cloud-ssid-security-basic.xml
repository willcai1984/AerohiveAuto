<testcase>
	<brief>Cloud SSID security basic case</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Verify the security object can be correctly create with open method, and it can be bind to a SSID
		Verify the security object can be correctly create with WEP method, and it can be bind to a SSID
		Verify the security object can be correctly create with PSK method, and it can be bind to a SSID
	</description>
	<numofap>1</numofap>
 	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>
	<desc>

	</desc>

	<property name="ap.mac" value="FFFFFFFFFF05" />
	<property name="owner.id" value="102" />
	<property name="vlan.id" value="105" />
	<property name="userprofile.id" value="105" />
	
	<declaration>
		
	   <step name="create.ppsk.usergroup" description="">
	      <restapi name="createPpskUserGroup">
	        {
				  "ownerId": "${owner.id}",
				  "predefined": false,
				  "jsonType": "ppsk-user-group",
				  "name": "manuup",
				  "description": "",
				  "userProfileAttribute": {
				    "ownerId": "${owner.id}",
				    "predefined": false,
				    "attrNumber": 1,
				    "autoGenerated": false
				  },
				  "enableReauthorization": false,
				  "reauthorizationTime": 1800,
				  "userCount": 100,
				  "concatenatingString": "aerohive",
				  "timeZone": "dSQ4hC8mlin3PaZUZPh4gDsp2bFf1PVNwzyZ7l6n6KnrFrr8IvbdTpB8QU53K2l3",
				  "pskValidityPeriod": "ONCE",
				  "startTime": 1394413277312,
				  "endTime": 1394418572761,
				  "characterTypesIncludeLetters": true,
				  "characterTypesIncludeDigits": true,
				  "characterTypesIncludeSpecialCharacters": true,
				  "characterTypeCombination": "ANY_SELECTED_CHARACTER_TYPES"
			}  
	       </restapi>       
	   </step>
	    <step name="create.auto.gen.ppsk.usergroup" description="">
	      <restapi name="createAutoGenPpskUserGroup">
			{
			  "ownerId": "${owner.id}",
			  "predefined": false,
			  "jsonType": "auto-ppsk-user-group",
			  "name": "QfBxtdxqdKp0P7OdexMyEZkyKumHlxuP",
			  "description": "",
			  "userProfileAttribute": {
			    "ownerId": "${owner.id}",
			    "predefined": false,
			    "attrNumber": 1,
			    "autoGenerated": true
			  },
			  "enableReauthorization": false,
			  "reauthorizationTime": 1800,
			  "userCount": 100,
			  "concatenatingString": "5Va7ZsAn",
			  "timeZone": "PsTuJtzjmu9FZiv7gxEcJUqB8GJqk4zn0pdbhrtNbvohMB0KXqQmxLjSzwnHCtPN",
			  "pskValidityPeriod": "ONCE",
			  "startTime": 1394417765162,
			  "endTime": 1394359579915,
			  "characterTypesIncludeLetters": false,
			  "characterTypesIncludeDigits": false,
			  "characterTypesIncludeSpecialCharacters": false,
			  "characterTypeCombination": "ALL_SELECTED_CHARACTER_TYPES",
			  "userNamePrefix": "m2b1eBXihmwrCwODdIPulZtaA9jg",
			  "ppskSecret": "2d5prAUugjNZ23zIjQOkudhkZVTYQKCAhZynAWKQA4TsnM8QpPWyzYHA72wXaBmp",
			  "location": "KjhTmwpfyUFOL4nEAdY0fFoOeilDSRJ9",
			  "passwordLength": 56
			}
	       </restapi>
	   </step>
	<step name="create.traffic.filter" description="">
		<restapi name="createTrafficFilter">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "traffic-filter",
			"name": "Default service filter",
			"description": "This is one mac dos",
			"enableSsh": true,
			"enableTelnet": false,
			"enablePing": true,
			"enableSnmp": false,
			"enableInterStationTraffic": true
			}
   	</restapi>
	</step>
		<step name="create.mac.dos.prevention.1" description="">
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos1",
			"description": "This is one mac dos prevention",
			"dosType": "STATION",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false
			}]
			}
	    </restapi>
		</step>
		<step name="create.mac.dos.prevention.2" description="">
		<restapi name="createMacDosPrevention">
		{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos2",
			"description": "This is one mac dos prevention",
			"dosType": "STATION",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false
			}]
			}
	    </restapi>
		</step>
		<step name="create.ip.dos.prevention" description="">
			<restapi name="createIpDosPrevention">
			{
			"ownerId":${owner.id},
			"predefined":false,
			"jsonType":"ip-dos-prevention",
			"name":"IP-dos-test",
			"description":"This is one ip dos",
			"enableSynCheck":false,
			"dosParams":[
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"RADIUS_ATTACK",
			"threshold":5,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":true},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ICMP_FLOOD",
			"threshold":20,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"IP_SPOOF",
			"threshold":3,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ADDRESS_SWEEP",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"PORT_SCAN",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"UDP_FLOOD",
			"threshold":50,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"SYN_FLOOD",
			"threshold":1000,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ARP_FLOOD",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false}
			]}
		}
		</restapi>
		</step> 
 		<step name="create.user.profile.1">
            <restapi name="createUserProfile">
                {
                    "jsonType" : "user-profile",
                    "ownerId" : ${owner.id},
                    "name" : "CloudUserProfile105",
                    "predefined" : false,
                    "vlan" : 
            			{
                        "jsonType" : "vlan",
                        "ownerId" : ${owner.id},
                        "name" : "Aerohive_VlanProfile",
                        "description" : "Vlan Profile for Demo",
                        "predefined" : false,
                        "entries" : 
            				[ {
                            "ownerId" : ${owner.id},
                            "tags" : [ ],
                            "vlanNumber" : ${vlan.id}
                        	} ]
                    	},
                    "enableFirewall" : false,
                    "enableSchedule" : false,
                    "schedules" : [ ],
                    "enableTrafficTunneling" : false,
                    "enableClientSla" : false,
                    "enableQos" : false,
                    "restriction" : "DENY_CAR",
                    "enableClassification" : false
                }
            </restapi>
        </step>

		<step name="create.open.ssid.profile" description="">
			<restapi name = "createSsidProfile">
				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSID-Open",
                    "ssid" : "SSID-Open",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity": {
				                  "ownerId": ${owner.id},
                                  "jsonType": "open-access"
				                   },
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": false,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": false,
						"wmmEnableWmmVideo": false,
						"wmmEnableWmmVoice": false,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "DISABLE",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":5,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
			</restapi>
		</step>	
		<step name="create.wep.ssid.profile" description="">
			<restapi name = "createSsidProfile">
				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSID-Wep",
                    "ssid" : "SSID-Wep",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity": {
					     "ownerId": ${owner.id},
					     "predefined":false,
	                     "jsonType": "wep", 
	                      "keyManagement": "WEP", 
	                      "encryptionMethod": "WEP104", 
	                      "authenticationMethod": "OPEN",
	                      "keyType": "ASCII", 
	                      "defaultKey": "FIRST",
	                      "keyValue": "aaaaaaaaaaaaa",
	                      "keyValue2": "bbbbbbbbbbbbb", 
	                      "keyValue3": "ccccccccccccc", 
	                      "keyValue4": "ddddddddddddd"
				     },
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": false,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": false,
						"wmmEnableWmmVideo": false,
						"wmmEnableWmmVoice": false,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "DISABLE",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":5,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
			</restapi>
		</step>	
		<step name="create.psk.ssid.profile" description="">
			<restapi name = "createSsidProfile">
				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSID-PSK",
                    "ssid" : "SSID-PSK",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity": {
					    	"ownerId": ${owner.id},
					     	"predefined":false,
	                     	"jsonType": "psk", 
	                      	"keyManagement": "WPA_PSK", 
	                      	"encryptionMethod": "CCMP", 
	                      	"keyType": "ASCII", 
	                      	"keyValue": "aerohive"
					},
     				"scheduleEntries": [],
                    "defaultUserProfile": "@{create.user.profile.1}",
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": false,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": false,
						"wmmEnableWmmVideo": false,
						"wmmEnableWmmVoice": false,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "DISABLE",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":5,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
			</restapi>
		</step>
		<step name="create.ppsk.ssid.profile" description="">
			<restapi name = "createSsidProfile">
				{
                    "jsonType" : "ssid-profile",
                    "ownerId" : ${owner.id},
                    "name" : "SSID-PPSK",
                    "ssid" : "SSID-PPSK",
                    "description" : "a ssid profile for integration test",
                    "radioBand" : "DUAL",
                    "industry" : "CUSTOM",
                    "wirelessNetworkUsage" : "CUSTOM",
					"accessSecurity": {
					                  "ownerId": ${owner.id},
					                  "predefined":false,
	                                  "jsonType": "ppsk", 
	                                  "keyManagement": "WPA2_PSK", 
	                                  "encryptionMethod": "TKIP"
					                   },
					"defaultUserProfile" : "@{create.user.profile.1}",
					"ppskUserGroups": ["@{create.ppsk.usergroup}" , "@{create.auto.gen.ppsk.usergroup}"],
                    "advancedSettings": 				
		     			{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": false,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": false,
						"wmmEnableWmmVideo": false,
						"wmmEnableWmmVoice": false,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "DISABLE",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":5,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":			
			     		{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						},
     				"enableMacFilter": false,
					"macFilters": [],
                    "trafficFilter": "@{create.traffic.filter}",
                    "ipBasedDos":"@{create.ip.dos.prevention}",
                    "ssidBasedMacDos":"@{create.mac.dos.prevention.1}",
                    "stationBasedMacDos":"@{create.mac.dos.prevention.2}",
     				"enableSchedule": false,
                    "advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
                }
			</restapi>
		</step>	
		<step name="create.network.policy.1">
			<restapi name = "createNetworkPolicy">
				{
				"ownerId" : ${owner.id},
  				"predefined": false,
				"jsonType": "network-policy",
				"name" : "Aerohive_UserProfile10",
				"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
        </step>
		<!--This step should be removed after Could 3.0 can push configuration to device-->
        <step name="create.device.1.ap330.v6102.as.ap">
            <restapi name="createDevice">
                {
                    "ownerId":${owner.id},
                    "ipAddress": "10.155.21.21",
                    "macAddress":"${ap.mac}",
                    "hostname":"virtual device for test 1",
                    "serialNumber":"1111222233334444",
                    "productType":"AP_330",
                    "softwareVersion": "6.1.2.0",
                    "role":19050,
                    "function":"Ap",
                    "adminState":"UNMANAGED",
                    "isConnected":true
                }
            </restapi>
        </step>
        <step name="add.open.ssid.profile.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.open.ssid.profile}"
                }
            </restapi>
        </step>
        <step name="add.psk.ssid.profile.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.psk.ssid.profile}"
                }
            </restapi>
        </step>
        <step name="add.wep.ssid.profile.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.wep.ssid.profile}"
                }
            </restapi>
        </step>
        <step name="add.ppsk.ssid.profile.into.network.policy.1">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "featureId" : "@{create.ppsk.ssid.profile}"
                }
            </restapi>
        </step>        

        <step name="assign.network.policy.1.to.device.1">
            <restapi name="assignnetworkpolicy">
                {
                    "device" : "@{create.device.1.ap330.v6102.as.ap}",
                    "networkPolicy" : "@{create.network.policy.1}"
                }
            </restapi>
        </step>

        <step name="download.cli.to.device.1">
            <restapi name="downloadcli">
                {
                    "networkPolicyId" : "@{create.network.policy.1}",
                    "deviceIds" : [ "@{create.device.1.ap330.v6102.as.ap}"],
                    "configDownloadTypes" : [ "deviceFull"]
                }
            </restapi>
        </step>
	</declaration>

	<stage>

	<!--<step no="1">
			<call step="create.ppsk.usergroup" />
			<failed>next</failed>
		</step>
		
		<step no="2">
			<call step="create.auto.gen.ppsk.usergroup" />
			<failed>next</failed>
		</step>
		-->
		<step no="3">
			<call step="create.traffic.filter" />
			<failed>next</failed>
		</step>
		
		<step no="4">
			<call step="create.mac.dos.prevention.1" />
			<failed>next</failed>
		</step>
		<step no="5">
			<call step="create.mac.dos.prevention.2" />
			<failed>next</failed>
		</step>
		<step no="6">
			<call step="create.ip.dos.prevention" />
			<failed>next</failed>
		</step>
		<step no="7">
			<call step="create.user.profile.1" />
			<failed>next</failed>
		</step>	
		<step no="8">
			<call step="create.psk.ssid.profile" />
			<failed>next</failed>
		</step>
		<step no="9">
			<call step="create.wep.ssid.profile" />
			<failed>next</failed>
		</step>
		<step no="10">
			<call step="create.open.ssid.profile" />
			<failed>next</failed>
		</step>
		
	<!--<step no="11">
			<call step="create.ppsk.ssid.profile" />
			<failed>next</failed>
		</step>
		-->
		<step no="12">
			<call step="create.network.policy.1" />
			<failed>next</failed>
		</step>
		<step no="13">
			<call step="create.device.1.ap330.v6102.as.ap" />
			<failed>next</failed>
		</step>

		<step no="14">
			<call step="add.open.ssid.profile.into.network.policy.1" />
			<failed>next</failed>
		</step>
		<step no="15">
			<call step="add.wep.ssid.profile.into.network.policy.1" />
			<failed>next</failed>
		</step>		
		<step no="16">
			<call step="add.psk.ssid.profile.into.network.policy.1" />
			<failed>next</failed>
		</step>
		
	<!--<step no="17">
			<call step="add.ppsk.ssid.profile.into.network.policy.1" />
			<failed>next</failed>
		</step> -->
		<step no="18">
			<call step="assign.network.policy.1.to.device.1" />
			<failed>next</failed>
		</step>
		<step no="19">
			<call step="download.cli.to.device.1" />
			<failed>next</failed>
		</step>
		<step no="20">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>

			<log-match>-i "security-object SSID-Open"</log-match>
            <log-match>-i "ssid SSID-Open security-object SSID-Open"</log-match>
            <failed>next</failed>
         </step>
		<step no="21">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>

			<log-match>-i "security-object SSID-Wep"</log-match>
			<log-match>-i "security-object SSID-Wep security protocol-suite wep-open 0 ascii-key"</log-match>
			<log-match>-i "security-object SSID-Wep security protocol-suite wep-open 1 ascii-key"</log-match>
			<log-match>-i "security-object SSID-Wep security protocol-suite wep-open 2 ascii-key"</log-match>
			<log-match>-i "security-object SSID-Wep security protocol-suite wep-open 3 ascii-key"</log-match>
            <log-match>-i "ssid SSID-Wep security-object SSID-Wep"</log-match>	
        	<failed>next</failed> 
		</step>		
		 <step no ="22">
		 	<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>

			<log-match>-i "security-object SSID-PSK"</log-match>
			<log-match>-i "security-object SSID-PSK security protocol-suite wpa-aes-psk ascii-key"</log-match>
            <log-match>-i "ssid SSID-PSK security-object SSID-PSK"</log-match>	
			<failed>next</failed>	 
		</step>
	<!-- <step no ="23">
		 	<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>

           <log-match>-i "ssid SSID-PPSK"</log-match>
            <log-match>-i "ssid SSID-PPSK security-object ppsk"</log-match>
            <log-match>-i "security-object SSID-PPSK"</log-match>
            <log-match>-i "security-object SSID-PPSK security protocol-suite wpa2-tkip-psk ascii-key ***"</log-match>
            <log-match>-i "security-object SSID-PPSK security private-psk"</log-match>
            <log-match>-i "no security-object SSID-PPSK security private-psk self-reg-enable"</log-match>
            <log-match>-i "security-object SSID-PPSK security private-psk default-psk-disabled"</log-match>
            <log-match>-i "security-object SSID-PPSK default-user-profile-attr 1"</log-match>
            <log-match>-i "ssid SSID-PPSK user-group manuup"</log-match>
            <log-match>-i "ssid SSID-PPSK user-group autogene"</log-match>
            <log-match>-i "security-object SSID-PPSK security protocol-suite wpa2-tkip-psk ascii-key ******"</log-match>
            <log-match>-i "security-object SSID-PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** rekey-period 6001"</log-match>
            <log-match>-i "security-object SSID-PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** non-strict"</log-match>
            <log-match>-i "security-object SSID-PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** gmk-rekey-period 6002"</log-match>
            <log-match>-i "security-object SSID-PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** ptk-timeout 4001"</log-match>
            <log-match>-i "security-object SSID-PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** ptk-retry 4"</log-match>
            <log-match>-i "security-object SSID-PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** gtk-timeout 4002"</log-match>
            <log-match>-i "security-object SSID-PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** gtk-retry 6"</log-match>
            <log-match>-i "security-object SSID-PPSK security protocol-suite wpa2-tkip-psk ascii-key ****** ptk-rekey-period 11"</log-match>
            <log-match>-i "security-object SSID-PPSK security protocol-suite wpa2-tkip-psk replay-window 5"</log-match>
            <log-match>-i "no security-object SSID-PPSK security protocol-suite wpa2-tkip-psk local-tkip-counter-measure"</log-match>
            <log-match>-i "no security-object SSID-PPSK security protocol-suite wpa2-tkip-psk remote-tkip-counter-measure"</log-match>
       
			<failed>next</failed>	 
		</step>	
-->
	</stage>
	<failed-process />
	<post-process />
</testcase>
