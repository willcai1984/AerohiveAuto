<testcase>
	<brief>AAA Server OD Tags CLI test for Cloud3.0</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		AAA Server OD Tags CLI test
	</description>
	<numofap>1</numofap>
	<tbtype>winlin</tbtype>
	<desc>

	</desc>

	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>
	<property name="test1" value="ServiceType" />
	<property name="ap.mac" value="197711112102" />
	<property name="owner.id" value="102" />
	<property name="accessap.ip1" value="10.155.1.100" />
	<property name="accessap.ip2" value="10.155.1.1555" />
	<property name="accessap.ip3" value="10.155.36.1" />
	<property name="accessap.ip4" value="10.155.36.155" />
	<property name="network.mask" value="255.255.25.0" />
	<property name="host.name1" value="ntp1.aerohive.com" />

	<declaration>
		<step name="create.hostname.address.profile" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile",
				"description" : "this is hostname address profile",
				"hostname":"${host.name1}"
				}
            </restapi>
		</step>
		<step name="create.ip.address.profile" description="">
			<restapi name="createIpAddressProfile">
				{
				"ownerId" : "${owner.id}",
				"predefined" :false,
				"jsonType" : "ip",
				"name" : "IpAddressPrfoile.1",
				"ipAddress":
				"${accessap.ip2}"
				}
            </restapi>
		</step>
		<step name="create.device">
			<restapi name="createDevice">
				{
				"ownerId":${owner.id},
				"ipAddress":"10.155.21.21",
				"macAddress":"197711112102",
				"hostname":"virtual device for test 1",
				"serialNumber":"1111222233334444",
				"productType":"AP_330",
				"softwareVersion": "6.1.0.2",
				"role":19050,
				"function":"Ap",
				"adminState":"UNMANAGED",
				"isConnected":true
				}
			</restapi>
		</step>
		<step name="create.network.policy">
			<restapi name="createNetworkPolicy">
				{
				"ownerId" : ${owner.id},
				"name":"Cloud_automation",
				"jsonType": "network-policy",
				"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
		</step>
		<step name="create.open.directory.server">
			<restapi name="createOpenDirectoryServer">
				{
				"jsonType": "open-directory",
                "ownerId": ${owner.id},
                "predefined": false,
                "name": "Test_default_od_server",
                "description":"This is a default server",
                "domain":"entry.com",
                "fullName":"administrator",
                "bindDn":"c=HMQATEST,dc=COM",
                "bindDnPassword":"aerohive",
                "domainAdmin":"administrator",
                "domainAdminPassword": "aerohive",
                "filterAttribute": "11111",
                "enableTls": false,
                "stripRealmName": false
				}
           </restapi>
		</step>
		<step name="create.open.directory.server1">
			<restapi name="createOpenDirectoryServer">
				{
				"jsonType": "open-directory",
                "ownerId": ${owner.id},
                "predefined": false,
                "name": "Test_default_od_server01",
                "description":"This is a default server",
                "domain":"entry01.com",
                "fullName":"administrator",
                "bindDn":"c=HMQATEST,dc=COM",
                "bindDnPassword":"aerohive",
                "domainAdmin":"administrator",
                "domainAdminPassword": "aerohive",
                "filterAttribute": "111111",
                "enableTls": false,
                "stripRealmName": false
				}
           </restapi>
		</step>
		<step name="create.open.directory.server2">
			<restapi name="createOpenDirectoryServer">
				{
				"jsonType": "open-directory",
                "ownerId": ${owner.id},
                "predefined": false,
                "name": "Test_default_od_server02",
                "description":"This is a default server",
                "domain":"entry02.com",
                "fullName":"administrator",
                "bindDn":"c=HMQATEST,dc=COM",
                "bindDnPassword":"aerohive",
                "domainAdmin":"administrator",
                "domainAdminPassword": "aerohive",
                "filterAttribute": "111112",
                "enableTls": false,
                "stripRealmName": false
				}
           </restapi>
		</step>
		<step name="create.open.directory.server3">
			<restapi name="createOpenDirectoryServer">
				{
				"jsonType": "open-directory",
                "ownerId": ${owner.id},
                "predefined": false,
                "name": "Test_default_od_server03",
                "description":"This is a default server",
                "domain":"entry03.com",
                "fullName":"administrator",
                "bindDn":"c=HMQATEST,dc=COM",
                "bindDnPassword":"aerohive",
                "domainAdmin":"administrator",
                "domainAdminPassword": "aerohive",
                "filterAttribute": "111113",
                "enableTls": false,
                "stripRealmName": false
				}
           </restapi>
		</step>
		<step name="create.open.directory.server4">
			<restapi name="createOpenDirectoryServer">
				{
				"jsonType": "open-directory",
                "ownerId": ${owner.id},
                "predefined": false,
                "name": "Test_default_od_server04",
                "description":"This is a default server",
                "domain":"entry04.com",
                "fullName":"administrator",
                "bindDn":"c=HMQATEST,dc=COM",
                "bindDnPassword":"aerohive",
                "domainAdmin":"administrator",
                "domainAdminPassword": "aerohive",
                "filterAttribute": "111114",
                "enableTls": false,
                "stripRealmName": false
				}
           </restapi>
		</step>
		<step name="create.open.directory.server5">
			<restapi name="createOpenDirectoryServer">
				{
				"jsonType": "open-directory",
                "ownerId": ${owner.id},
                "predefined": false,
                "name": "Test_default_od_server05",
                "description":"This is a default server",
                "domain":"entry05.com",
                "fullName":"administrator",
                "bindDn":"c=HMQATEST,dc=COM",
                "bindDnPassword":"aerohive",
                "domainAdmin":"administrator",
                "domainAdminPassword": "aerohive",
                "filterAttribute": "111115",
                "enableTls": false,
                "stripRealmName": false
				}
           </restapi>
		</step>
		<step name="create.open.directory.server6">
			<restapi name="createOpenDirectoryServer">
				{
				"jsonType": "open-directory",
                "ownerId": ${owner.id},
                "predefined": false,
                "name": "Test_default_od_server06",
                "description":"This is a default server",
                "domain":"entry06.com",
                "fullName":"administrator",
                "bindDn":"c=HMQATEST,dc=COM",
                "bindDnPassword":"aerohive",
                "domainAdmin":"administrator",
                "domainAdminPassword": "aerohive",
                "filterAttribute": "111116",
                "enableTls": false,
                "stripRealmName": false
				}
           </restapi>
		</step>
		<step name="create.radius.user.group" description="">
			<restapi name="createRadiusUserGroup">
				{
				"ownerId":${owner.id},
				"predefined":false,
				"jsonType":"radius-user-group",
				"name":"Radius_user_group_test01",
				"description":"this is a RadiusUserGroup",
				"userProfileAttribute":{"ownerId":${owner.id},
				"predefined":false,
				"attrNumber":2669,
				"autoGenerated":true},
				"enableReauthorization": true,
				"reauthorizationTime":200,
				"credentialPersistencyStorage":"DRAM",
				"enableVoiceDeviceAuthentication":false
				}
           </restapi>
		</step>
		<step name="create.radius.server.od">
			<restapi name="createRadiusServer">
				{
				"ownerId": ${owner.id},
				"predefined": false,
				"jsonType": "radius-server",
				"name": "AAA_Radius_Server",
				"description": "This is a AAA_Radius_Server",
				"enableAcceptOtherDevsAuthReqs": false,
				"approvedRadiusClients":
				[{
				  "ownerId" : ${owner.id},
				  "predefined" : false,
				  "sharedSecret" :"aerohive",
				  "description" : "This is description",
				  "clientIp" :
				  {
				    "ownerId" : ${owner.id},
				    "jsonType": "ip",
				    "predefined" : false,
				    "name" : "ApprovedRadiusClients",
				    "description" : "This is approvedRadiusClients",
				    "ipAddress" : "10.155.201.53"
				  }
				}],

				"enableExternalUserDirectory":true,
				"enableLibrarySipServer": true,
				"enableLocalDatabase": false,
				"authentication": "TLS",
				"defaultAuthentication": "TLS",
				"enableVerifyServerCert": false,
				"serverKeyPassword": "aerohive",
				"enableCheckCommonName": true,
				"enableCheckTls": true,
				"enableCheckPeap": true,
				"enableCheckTtls":true,
				"externalUserDirectory":
				{
				  "ownerId" :${owner.id},
				  "predefined" :false,
				  "jsonType": "open-directory",
				  "retryInterval" :160,
				  "retryIntervalUnit" : "HOUR",
				  "localCheckInterval" : 216,
				  "localCheckIntervalUnit" : "HOUR",
				  "remoteCheckInterval" : 104,
				  "remoteCheckIntervalUnit" : "SECOND",
				  "enableCaching" : true,
				  "cacheLifeTime" : 7200,
				  "cacheLifeTimeUnit":"SECOND",
				"entries" :
				[{
				  "ownerId": ${owner.id},
				  "predefined": false,
				  "taggedEntries":
				  [{
				    "ownerId": ${owner.id},
				    "predefined": false,
				    "tags":
				    [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag01"
				       },
				      
				       {
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag02"
				       },
				       
				       {
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag03"
				    }],
				    "description":"This is tags description",
				    "server": "@{create.open.directory.server1}"
				   },
				   
				   {
				    "ownerId": ${owner.id},
				    "predefined": false,
				    "tags":
				    [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag04"
				       },
			       
				       {
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag05"
				    }],
				    "description":"This is tags description",
				    "server": "@{create.open.directory.server2}"
				   },
				   
				   {
				    "ownerId": ${owner.id},
				    "predefined": false,
				    "tags":
				    [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"device",
				         "value": "test_tag06"
				    }],
				    "description":"This is tags description",
				    "server": "@{create.open.directory.server3}"
				   },
				   
				   {
				    "ownerId": ${owner.id},
				    "predefined": false,
				    "tags":
				    [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"hostname",
				         "value": "AH-0d1a80"
				    }],
				    "description":"This is tags description",
				    "server": "@{create.open.directory.server4}"
				   },
				   
				   {
				    "ownerId": ${owner.id},
				    "predefined": false,
				    "tags":
				    [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"location",
				         "value": "|vhm_root|"
				    }],
				    "description":"This is tags description",
				    "server": "@{create.open.directory.server5}"
				   },
				   
				   {
				    "ownerId": ${owner.id},
				    "predefined": false,
				    "tags":
				    [{
				         "ownerId":${owner.id},
				         "predefined":false,
				         "jsonType":"global",
				         "value": ""
				    }],
				    "description":"This is tags description",
				    "server": "@{create.open.directory.server6}"
				   }],
				   
				  "defaultServer":
				  {
				    "jsonType": "open-directory",
				    "ownerId": ${owner.id},
				    "predefined": false,
				    "name": "Test_default_server",
				    "description":"This is a default server",
				    "domain":"entry.com",
				    "fullName":"administrator",
				    "bindDn":"c=HMQATEST,dc=COM",
				    "bindDnPassword":"aerohive",
				    "domainAdmin":"administrator",
				    "domainAdminPassword": "aerohive",
				    "filterAttribute": "11111",
				    "enableTls": false,
				    "stripRealmName": false
				  },
				  "serverRole": "PRIMARY"
				}]
				},

				"caCertificate":
				{
				  "ownerId" : ${owner.id},
				  "predefined" : false,
				  "fileName" :"test_file_01",
				  "fileSize" : 426,
				  "fileType" :"SELF_GEN_CA",
				  "encrypted" : false,
				  "uploadTime" : 1387903732679,
				  "issuer" :"73d4AQuCKHyClF2KAtVh0ARlD6gN5FzPuspxC2l1",
				  "subject":"0X0sLkaJozxOiPz16S3HZXhxJn04AzD",
				  "expireTime" : "1387903732999"
				},

				"serverCertificate":
				{
				  "ownerId":${owner.id},
				  "predefined": false,
				  "fileName": "Test_file",
				  "fileSize": 13076,
				  "fileType": "SELF_GEN_CA",
				  "encrypted": false,
				  "uploadTime": 1388088615444,
				  "issuer":"rW3ssznJpG3FbQ3w1Sxhkjr3INdhRZBBdFTJo29JSjdjNQ",
				  "subject":"asldjlskdfj",
				  "expireTime":"1388088615554"
				},
				"serverPrivateKey":
				{
				  "ownerId" : ${owner.id},
				  "predefined" : false,
				  "fileName" : "serprivatekey_server",
				  "fileSize" : 9072566,
				  "fileType": "CA",
				  "encrypted" : true,
				  "uploadTime" : 1387942203647,
				  "issuer":"rW3ssznJpG3FbG6tsdZ05Jr80QNzAXR3m",
				  "subject":"aSGaflgmneq4qUjnCvLelV2tEi9mhqFOuff67nu",
				  "expireTime" :"1387903732999"}
				
				}
			</restapi>
		</step>
	</declaration>
	<stage>
		<step no="2">
			<call step="create.radius.server.od" />
		</step>
		<step no="3">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>
		</step>
	</stage>
	<failed-process />
</testcase>


