<testcase>
	<brief>feature test cases</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		Verifiy the Client SLA under user profile
	</description>
	<numofap>1</numofap>
	<tbtype>winlin</tbtype>
	
	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>
	
	<pre-process />
	<!--Get the devcie info from actual AP after Cloud 3.0 can push configuration to device  -->
	<desc>
		user-profile UserProfile10 qos-policy def-user-qos vlan-id 10 attribute 10
		user-profile UserProfile10 performance-sentinel enable
		user-profile UserProfile10 performance-sentinel guaranteed-bandwidth 12345
	</desc>
	
	<property name="slaBandwidth" value="12345" />
	
	<property name="tb.fileserver" value="10.155.40.181" />
	<property name="owner.id" value="103" />
	<property name="vlan.id" value="10" />
	<property name="userprofile.id" value="10" />
	
	<property name="timeInterval" value="100" />
	<property name="trafficThreshold" value="100" />
	
	<property name="accessap.mac" value="e01c41002700" />
	<property name="backhaulap.mac" value="e01c410040c0" />
	<property name="accessap.ip" value="10.155.30.88" />
	<property name="backap.ip" value="10.155.33.16" />
	<property name="ap.mac" value="000011112103" />
	
	<declaration>
	<step name="create.IpFirewall" description="">
			<restapi name="createIpFirewall">
				
		{
					 "ownerId":"103",
					 "predefined":false,
					 "jsonType":"ip-firewall",
					 "name":"IpFirewall1",
					 "description":"thisisipfirewallprofile",
					 "rules":[
					  {
					   "jsonType":"ip",
					   "ownerId":"103",
					   "predefined":false,
					   "ruleId":1490543320,
					   
					   
					   "applicationServices": [
					   
					 
					   
					   
					   
					   
					   
					   
					   
					   
					    ],
				       "networkServices": [
				       {
									"jsonType": "network-service",
									"ownerId": 103,
									"predefined": false,
									"name": "net1",
									"description": "123",
									"protocolType": "PROTOCOL_ID_SVP",
									"cliDefaultFlag": false,
									"protocolNumber": 100,
									"portNumber": 100,
									"idleTimeout": 100,
									"algType": "ALG_TYPE_NONE",
									"serviceType": 100,
									"appId": 100
									}
				       
				       ],
					   
					   
					   "action":"PERMIT",
					   "loggingType":"BOTH",
					   "sourceIp":{
					    "jsonType":"wildcard",
					    "ownerId":103,
					    "predefined":false,
					    "name":"srcip",
					    "description":"thisisaipobjectwithwildcard",
					    "wildcard":"10.155.33.0",
					    "wildcardMask":"255.255.255.0"
					   },
					   "destinationIp":{
					    "jsonType":"hostname",
					    "ownerId":103,
					    "predefined":false,
					    "name":"destip",
					    "description":"",
					    "hostname":"www.baidu.com"
					   }
					  }
					 ]
} 
				
				
				
				
				
						
				
				
			
			</restapi>
		</step>
	
	
	
	
	

	
	
	
		
	<step name="create.access.ip.object.ip.address" description="">
			<restapi name="createIpObjectProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType": "ip-object",
				"name" : "AccessIpObject",
				"description" : "The IP should include access AP's IP",
				"addressType" : "IP_ADDRESS",
				"entries" :
				[{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"description" : "ip address",
				"addressInfo1" : "${accessap.ip}"
				}]
				}
			</restapi>
		</step>
		
		<step name="create.access.ip.object.ip.address.1" description="">
			<restapi name="createIpObjectProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType": "ip-object",
				"name" : "AccessIpObjectB",
				"description" : "The IP should include back AP's IP",
				"addressType" : "IP_ADDRESS",
				"entries" :
				[{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"description" : "ip address back",
				"addressInfo1" : "${backap.ip}"
				}]
				}
			</restapi>
		</step>
		
		<step name = "create.tunnel.policy.inxp" description=""> 
			<restapi name = "createIdentityBasedTunneling">
			{
			"ownerId" : ${owner.id}, 
			"predefined" : false, 
			"jsonType" : "identity-based", 
			"tunnelSourceIds" : [ refIdInTestStep = "create.access.ip.object.ip.address"], 
			"tunnelDestinationId" : refIdInTestStep = "create.access.ip.object.ip.address.1", 
			"password" : "aerohive", 
			"isMulticastBlocked" : false, 
			"isBlacklistAllowed" : false
			}
			</restapi>
		</step>	
		
		
	
	

	
	
	
	<step name = "create.ipdosprevention" description=""> 
			<restapi name = "createIpDosPrevention">
			   {"ownerId":103,
				"predefined":false,
				"jsonType":"ip-dos-prevention",
				"name":"ip_dosprevent",
				"description":"ip_dosprevent",
				"enableSynCheck":false,
				"dosParams":[
				
				{"ownerId":103,
				"predefined":false,
				"screeningType":"SYN_FLOOD",
				"threshold":10,
				"dosAction":"ALARM",
				"duration":10,
				"enabled":true},
				
				{"ownerId":103,
				"predefined":false,
				"screeningType":"UDP_FLOOD",
				"threshold":10,
				"dosAction":"ALARM",
				"duration":10,
				"enabled":true},
				
				{"ownerId":103,
				"predefined":false,
				"screeningType":"ADDRESS_SWEEP",
				"threshold":10,
				"dosAction":"ALARM",
				"duration":10,
				"enabled":true},
				
				{"ownerId":103,
				"predefined":false,
				"screeningType":"IP_SPOOF",
				"threshold":10,
				"dosAction":"ALARM",
				"duration":10,
				"enabled":true},
				
				{"ownerId":103,
				"predefined":false,
				"screeningType":"PORT_SCAN",
				"threshold":10,
				"dosAction":"ALARM",
				"duration":10,
				"enabled":true},
				
				{"ownerId":103,
				"predefined":false,
				"screeningType":"IP_SPOOF",
				"threshold":10,
				"dosAction":"ALARM",
				"duration":10,
				"enabled":true},
				
				{"ownerId":103,
				"predefined":false,
				"screeningType":"RADIUS_ATTACK",
				"threshold":10,
				"dosAction":"ALARM",
				"duration":10,
				"enabled":true},
				
				{"ownerId":103,
				"predefined":false,
				"screeningType":"ICMP_FLOOD",
				"threshold":10,
				"dosAction":"DISCONNECT",
				"duration":10,
				"enabled":true}]}
			</restapi>
		</step>	
		
	
	
	
	<step name = "create.macdosprevention.station" description=""> 
			<restapi name = "createMacDosPrevention">
				{
				"ownerId": 103,
				"predefined": false,
				"jsonType": "mac-dos-prevention",
				"name": "Aerohive-mac_dos_station",
				"description": "This is one mac dos prevention",
				"dosType": "STATION",
				"dosParams":[
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"PROBE_REQ",
				"threshold":1000,
				"interval":60,
				"enabled":false},
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"PROBE_RESP",
				"threshold":1000,
				"interval":60,
				"enabled":false},
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"ASSOC_REQ",
				"threshold":1000,
				"interval":60,
				"enabled":false},
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"ASSOC_RESP",
				"threshold":1000,
				"interval":60,
				"enabled":false},
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"AUTH",
				"threshold":1000,
				"interval":60,
				"enabled":false},
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"DEAUTH",
				"threshold":1000,
				"interval":60,
				"enabled":false},
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"EAPOL",
				"threshold":1000,
				"interval":60,
				"enabled":false},
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"DISASSOC",
				"threshold":1000,
				"interval":60,
				"enabled":false}]
				}	
			</restapi>
		</step>	
	
	<step name = "create.macdosprevention.ssid" description=""> 
			<restapi name = "createMacDosPrevention">
				{
				"ownerId": 103,
				"predefined": false,
				"jsonType": "mac-dos-prevention",
				"name": "Aerohive-mac_dos_ssid",
				"description": "This is one mac dos prevention2",
				"dosType": "SSID",
				"dosParams":[
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"PROBE_REQ",
				"threshold":1000,
				"interval":60,
				"enabled":false},
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"PROBE_RESP",
				"threshold":1000,
				"interval":60,
				"enabled":false},
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"ASSOC_REQ",
				"threshold":1000,
				"interval":60,
				"enabled":false},
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"ASSOC_RESP",
				"threshold":1000,
				"interval":60,
				"enabled":false},
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"AUTH",
				"threshold":1000,
				"interval":60,
				"enabled":false},
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"DEAUTH",
				"threshold":1000,
				"interval":60,
				"enabled":false},
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"EAPOL",
				"threshold":1000,
				"interval":60,
				"enabled":false},
				
				{"ownerId":103,
				"predefined":false,
				"dosDetectionType":"DISASSOC",
				"threshold":1000,
				"interval":60,
				"enabled":false}]
				}	
			</restapi>
		</step>	
	
	<step name = "create.trafficfilter" description=""> 
			<restapi name = "createTrafficFilter">
				{
				"ownerId": 103,
				"predefined": false,
				"jsonType": "traffic-filter",
				"name": "Default service filter",
				"description": "This is one mac dos",
				"enableSsh": true,
				"enableTelnet": false,
				"enablePing": true,
				"enableSnmp": false,
				"enableInterTraffic": true
				}	
			</restapi>
		</step>	
		
		
	
		<step name="create.user.profile" description="">
			<restapi name = "createUserProfile">
				{
				"jsonType" : "user-profile",
				"ownerId" : 103,
				"name" : "UserProfile10",
				"predefined" : false,
				"vlan" : {
				"jsonType" : "vlan",
				"ownerId" : 103,
				"name" : "Aerohive_VlanProfile",
				"description" : "Vlan Profile for Demo",
				"predefined" : false,
				"entries" : [ {
				"ownerId" : 103,
				"tags" : [ ],
				"vlanNumber" : ${vlan.id}
				} ]
				},
				"enableFirewall" : true,
 				"inboundIpFirewallId" : refIdInTestStep = "create.IpFirewall",
 				"outboundIpFirewallId" : refIdInTestStep = "create.IpFirewall", 
 				"ipFirewallDefaultAction" : "PERMIT", 			
				"enableSchedule" : false,
				"schedules" : [ ],
				"enableTrafficTunneling" : true,
				"trafficTunnelingId" : refIdInTestStep = "create.tunnel.policy.inxp",
				"enableClientSla" : false,
				"enableQos" : false,
				"restriction" : "DENY_CAR",
				"enableClassification" : false,
				"radiusAttributeNumber": 101
				}
			</restapi>
	</step>
		<step name="create.ssid.profile" description="">
			<restapi name = "createSsidProfile">
				{
				"jsonType" : "ssid-profile",
				"ownerId" : 103,
				"name" : "ssid profile 1",
				"ssid" : "ssid profile 1",
				"description" : "a ssid profile for integration test",
				"radioBand" : "DUAL",
				"ssidUsageIndustry" : "ENTERPRISE",
				"ssidUsageUserGroup" : "STAFF_AND_TEACHERS",
				"accessSecurity": {
				"jsonType": "802DOT1X",
				"ownerId": 103,
				"keyManagement": "WEP_8021X",
				"encryptionMethod": "CCMP",
				"keyType": "HEX",
				"keyValue": "gzCoghUgcL115BMiddQxCWAdn7xk0fqy6S7ExRNP3pKC46ID5p63N2IUpgQ1wPQB"
				},
				"defaultUserProfile" : refObjectInTestStep = "create.user.profile",
				
				
				"ipBasedDos": refObjectInTestStep = "create.ipdosprevention",
				"stationBasedMacDos": refObjectInTestStep = "create.macdosprevention.station",
				"ssidBasedMacDos": refObjectInTestStep = "create.macdosprevention.ssid",
				"trafficFilter": refObjectInTestStep = "create.trafficfilter",
				"advancedAccessSecurity": 
                        {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							},
							
					 "advancedSettings": 				
		            	{
						"ownerId": ${owner.id},
						"predefined": false,
						"userProfileApplicationSequence": "CWP_SSID_MAC",
						"ignoreBroadcastProbeReq": true,
						"veEnableVoiceEnterprise": true,
						"veEnable802Dot11k": false,
						"veEnable802Dot11v": false,
						"veEnable802Dot11r": true,
						"wmmEnableWmm": false,
						"wmmEnableWmmVideo": false,
						"wmmEnableWmmVoice": false,
						"wmmEnableUapsd": false,
						"multicastConvertIpToUnicast": "DISABLE",
						"multicastChannelUtilThreshold":100,
						"multicastMemberCountThreshold":3,
						"clientMaxClientLimit":5,
						"clientEapTimeout":187,
						"clientRtsThreshold":1769,
						"clientFragmentThreshold":353,
						"clientDtimSetting":223,
						"clientInactiveClientAgeout":8,
						"clientEapRetries":4,
						"clientRoamCacheUpdateInterval":196,
						"clientRoamCacheAgeout":440,
						"clientLocalCacheTimeout":5714
						},
                    "rateSettings":				
		            	{
						"ownerId": ${owner.id},
						"predefined": false,
						"enable11a": true,
						"enable11bg": true,
						"enable11n": true,
						"enable11ac":
						true,
						"disable11nHighCapabilities": true,
						"rateSet11a":
						["MUhRnFDxzV0fjeb8f7iHhoKRfSR42HZ4m2OFUo885182kzWYCL0Lx2t7QBoqPL7xLWrIEDdkJglIitVORDNUod6bKsIJD5iLA5Ip0IgBIegc0D1Sqk7QuDYgvZGTWvf2nKALQumXIfaM5SdOIy5IGEts4gpmq7EbLYnVPTH9OUK6j791EM3fEm5K5r18p6l1wkeU8btAWCDosXkWF1U6aZpTD7wD8eSJ8BB6cI8j94r8BmvhN6uYep0XXpDkczv",
						"JEpoOBWMA3FQo7ajbSo4O6B2KTEAgpvTARt03TCHsLQEnAYvpcYiUApImsJmZctLicATYi6hH5n6ax0r73FYMv3TfX7lqzm3QOw8ugkljgM6Vw5spfGUNAoJexiiffpEUirh0ogICmnYIPCKgOhH6901N9tRS5cUxzv9VilGFjw3ez9X8utJ6ybzYLoUoc4MioM28o3GiymTTX95oMozRKlpHXKyVFbUKYzo3KV5Tm0m2gLVCIyu0TOYMz5RpV1"],
						"rateSet11bg":
						["rFF6LDTcROXAn1psrXwHTx4DJVmnaMLSuiRE9P6RxNKk4PLLBiPaXnP0tFcpEj80wb8hE6naJHOQBUG5PUKHarQieKcY3EAvrO6RsYrrqNv3Izh1LQHFNgN70T7W32JPwiW4crylfCcMHr35q7SRLVw5CFwY5WmTtb0zw88KmJX62bUfz6Kvqp0b8wFtSw4iYpgPhDbsJLVWZ3J9G31KnyxAstD8L19DeLGw9jy806R9r6efsSy8MsQnBmXqjRE",
						"UbcVWEqxpN2xxcF9uGy1p7cFD9iMrdEaXtffdwxm531CYzr6ft7U28AO9T3BHImyVFjAIFWb2tGcg84KaEsiRV6jIwa6J3XHYDut0i7ok9bwTuEcbJ5yzoypVdGQwGdsMq6wYODtxcOIpmdSsyT8vuKvR4bf8ESCpCPW22Kurwv5snEnHjXAGWAgOIUJpGIRQRuCgcbMsWvXRcuQbm3tqmnYH2fc1fTOHPuYICAxDeG1cOJXCzp8WusIiG0lEOD"],
						"rateSet11n":
						["npsr9YJGGWTlEDw1jALtDbghzVTrNlvoFeXSJ1hfRZXWpHIxi5fZ2rk2RAyPi78X1q9AQHVb4E2qHhKbNVJ5SRFQbioDTqkH2uCYU4yy4MBJI58TauCtZv4jw5hYL1BFpzSWgdMbY1CDXzl2C3OFqvGUAAXQ9qUI5YUmd0pR4lphtjl8ZgsuvqNOpaUT3NrHf17IotgwCmDrKFLT7J8H7Yh8zwOTdO4GPum91wnbtRt6wT8cvebmbKGOXMAhOY6",
						"dbTi8hsdguqDHuXKR6K2tuo3DTM8hGfbEQU3smdpce6OLiT6ADe9HZvk8D0uDoDN6HTokoZcjgC4zMUtpd050VVjTSg3aKwHdxq87KMPCrFLjJ7E6sCZGIWDHJtQN8JZLargkiipOtLqbydVwz1RVPEbzYdBLECgXHAuxa7WdvPbUDrTaal7wNQZ2svVvoFwz2oBA7I2QyRdM7dGB4RWKQLTyDY8yDl9yymogmqPswIwqDBZIqTneq1mQNgNRu4"],
						"enableStreamOne": true,
						"enableStreamTwo": true,
						"enableStreamThree":
						true,
						"mcsValueOne": 9,
						"mcsValueTwo": 9,
						"mcsValueThree": 9
						}
						
								
				}
			</restapi>
		</step>	
		<step name="create.network.policy" description="">
			<restapi name = "createNetworkPolicy">
				{
				"ownerId" : 103,
				"name" : "Aerohive_UserProfile10",
				"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
		</step>
		
		<!--This step should be removed after Could 3.0 can push configuration to device-->
		<step name="create.device.1.ap330.v6101.as.ap">
			<restapi name = "createDevice">
				{
				"ownerId":103,
				"ipAddress": "${accessap.ip}",
				"macAddress":"000011112103",
				"hostname":"virtual device for test",
				"serialNumber":"1111222233334444",
				"productType":"AP_330",
				"softwareVersion": "6.1.0.1",
				"role":19050,
				"function":"Ap",
				"adminState":"UNMANAGED",
				"isConnected":true
				}
			</restapi>
		</step>
		<step name="add.ssid.profile.into.network.policy" description="">
			<restapi name = "assignfeature">
				{
				"jsonType" : "network_policy",
				"networkPolicyId" : refIdInTestStep = "create.network.policy",
				"featureId" : refIdInTestStep = "create.ssid.profile"
				}
			</restapi>
		</step>
		<step name="assign.network.policy.to.device" description="">
			<restapi name = "assignnetworkpolicy">
				{
				"device" : refObjectInTestStep = "create.device.1.ap330.v6101.as.ap",
				"networkPolicy" : refObjectInTestStep = "create.network.policy"
				}
			</restapi>
		</step>

		<step name="download.cli.to.device" description="">
			<restapi name = "downloadcli">
				{
				"networkPolicyId" : refIdInTestStep = "create.network.policy",
				"deviceIds" : [ refIdInTestStep = "create.device.1.ap330.v6101.as.ap"],
				"configDownloadTypes" : [ "deviceFull"]
				}
			</restapi>
		</step>
	</declaration>

	<stage>

		<step no="1">
			<call step="create.IpFirewall" />
			<failed>next</failed>
		</step>
	
	
	
	
	
	    <step no="2">
			<call step="create.ipdosprevention" />
			<failed>next</failed>
		</step>
	
	
	
	    <step no="3">
			<call step="create.macdosprevention.station" />
			<failed>next</failed>
		</step>
	
		<step no="4">
			<call step="create.macdosprevention.ssid" />
			<failed>next</failed>
		</step>
	
		<step no="5">
			<call step="create.trafficfilter" />
			<failed>next</failed>
		</step>
		
		<step no="6">
			<call step="create.user.profile" />
			<failed>next</failed>
		</step>
		<step no="7">
			<call step="create.ssid.profile" />
			<failed>next</failed>
		</step>
		
		<step no="8">
			<call step="create.network.policy" />
			<failed>next</failed>
		</step>
		<step no="9">
			<call step="create.device.1.ap330.v6101.as.ap" />
			<failed>next</failed>
		</step>
		
		<step no="10">
			<call step="add.ssid.profile.into.network.policy" />
			<failed>next</failed>
		</step>
		
		<step no="11">
			<call step="assign.network.policy.to.device" />
			<failed>next</failed>
		</step>
		<step no="12">
			<call step="download.cli.to.device" />
			<failed>next</failed>
		</step>
		<step no="13">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>
			<desc> Verify the client SLA can be correctly enable to user pofile.</desc>			
			<log-match>-i "mobility-policy UserProfile10 inxp gre-tunnel to ${backap.ip} password aerohive"</log-match>
            <log-match>-i "user-profile UserProfile10 qos-policy def-user-qos vlan-id ${vlan.id} mobility-policy UserProfile10 attribute ${userprofile.id}"</log-match>
		</step>
	</stage>
	<failed-process />
	<post-process />
</testcase>