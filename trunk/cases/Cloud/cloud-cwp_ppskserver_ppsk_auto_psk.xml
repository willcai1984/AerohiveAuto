<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>feature test cases</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		check ppskserver cwp

	</description>
	<numofap>1</numofap>
	<tbtype>winlin</tbtype>
	
	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>

	<property name="bandwidth" value="141721" />
	<property name="ap.mac" value="FFFFFFFFFF04" />
	<property name="owner.id" value="104" />
	<property name="vlan.id" value="10" />
	<property name="userprofile.id" value="10" />
	<property name="software.version" value="6.1.2.0"/>
	
	<declaration>
	
	<step name = "create.ipdosprevention" description=""> 
			<restapi name="createIpDosPrevention">
			{
			"ownerId":${owner.id},
			"predefined":false,
			"jsonType":"ip-dos-prevention",
			"name":"IP-dos-test",
			"description":"This is one ip dos",
			"enableSynCheck":false,
			"dosParams":[
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"RADIUS_ATTACK",
			"threshold":5,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":true},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ICMP_FLOOD",
			"threshold":20,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"IP_SPOOF",
			"threshold":3,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ADDRESS_SWEEP",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"PORT_SCAN",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"UDP_FLOOD",
			"threshold":50,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"SYN_FLOOD",
			"threshold":1000,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ARP_FLOOD",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false}
			]}}
		</restapi>
		</step>	
	
	<step name = "create.macdosprevention.station" description=""> 
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos2",
			"description": "This is one mac dos prevention",
			"dosType": "STATION",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false}]
			}
    </restapi>
		</step>	
	
	<step name = "create.macdosprevention.ssid" description=""> 
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos1",
			"description": "This is one mac dos prevention",
			"dosType": "SSID",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false}]
			}
    </restapi>
		</step>	
	
	<step name = "create.trafficfilter" description=""> 
			<restapi name="createTrafficFilter">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "traffic-filter",
			"name": "Default service filter",
			"description": "This is one mac dos",
			"enableSsh": true,
			"enableTelnet": false,
			"enablePing": true,
			"enableSnmp": false,
			"enableInterStationTraffic": true
			}
   </restapi>
		</step>	
		
	   <step name="create.auto.gen.ppsk.usergroup" description="">
	      <restapi name="createAutoGenPpskUserGroup">
	             {
	             "ownerId":${owner.id},
                                 "predefined":false,
                                 "jsonType":"auto-ppsk-user-group",
                                 "name":"autogene",
                                 "description":"autogeneppskusergroup",
                                 "userProfileAttribute":
                                        {
                                         "ownerId":${owner.id},
                                         "predefined":false,
                                         "attrNumber":1,
                                         "autoGenerated":false
                                         },
                               "enableReauthorization": true,
                               "reauthorizationTime": 1800,
                               "concatenatingString": "aerohive",
                               "timeZone": "YmTIGXgfVPozDLwqV2e74pXiaqJwgjltqSRLGjZPkGUFONVmagAJhMnFCxclQbht",
                               "pskValidityPeriod": "ALWAYS",
                               "startTime": 1388767585708,
                               "endTime": 1388726467456,
                               "characterTypesIncludeLetters": true,
                               "characterTypesIncludeDigits": true,
                               "characterTypesIncludeSpecialCharacters": true,
                               "characterTypeCombination": "ALL_SELECTED_CHARACTER_TYPES",
                               "userNamePrefix": "hello",
                               "ppskSecret": "aerohive",
                               "location": "aaaaa",
                               "passwordLength": 8
	             }   
	       </restapi>
	         
	   </step>
	   
	   
	   <step name="create.user.profile" description="">
			<restapi name = "createUserProfile">
				{
				"jsonType" : "user-profile",
				"ownerId" : ${owner.id},
				"name" : "UserProfile10",
				"predefined" : false,
				"vlan" : {
				"jsonType" : "vlan",
				"ownerId" : ${owner.id},
				"name" : "Aerohive_VlanProfile",
				"description" : "Vlan Profile for Demo",
				"predefined" : false,
				"entries" : [ {
				"ownerId" : ${owner.id},
				"tags" : [ ],
				"vlanNumber" : ${vlan.id}
				} ]
				},
				"enableFirewall" : false,	
				"enableSchedule" : false,
				"schedules" : [ ],
				"enableTrafficTunneling" : false,
				"enableClientSla": true,
                "clientSlaSettings": {
                    "ownerId": ${owner.id},
                    "predefined": false,
                    "bandwidth": 141721,
                     "actionType": "NONE"
                   },
				"enableQos": false,
				"restriction": "DENY_CAR",
				"enableClassification": false
				}
			</restapi>
		</step>
		
		<step name="create.external.radius.profile" description="">
		    <restapi name="createExternalRadiusProfile">
		          {
                   "ownerId" : ${owner.id}, 
                   "predefined" : false, 
                   "jsonType" : "external-radius-profile", 
                   "name" : "AAARadiusClient", 
                   "description" : "ExternalRadiusProfile", 
                   "externalRadiusServerOption" : "OBTAIN_VIA_DHCP_OPTIONS",
                   "entries": []
                   }
		    </restapi>
		</step>
		
		<step name="create.cwp" description=""> 
		    <restapi name="createCwp">
		    {
		    "jsonType": "cwp",
                "ownerId": ${owner.id},
                "predefined": false,
                "name": "defaultcwp",
                "description": "afasdfasdf",
                 "vlan": 
                       {
                     "jsonType": "vlan",
                    "ownerId": ${owner.id},
                "predefined": false,
                "name": "vlan",
                "description": "fadfad",
                "entries": [
                    {
                        "ownerId": ${owner.id},
                        "predefined": false,
                        "tags": [ ],
                        "description": "aa",
                        "vlanNumber": 1
                    }
                           ]
                    },
            "walledGarden": {
                "ownerId": ${owner.id},
                "predefined": false,
                "entries": [
                    {
                        "ownerId": ${owner.id},
                        "predefined": false,
                        "ipObject": {
                            "jsonType": "subnet-profile",
                            "ownerId": ${owner.id},
                            "predefined": false,
                            "name": "5wPY4LXfqPxX2VVqb4KQwlcLW7CVCrRg",
                            "description": "7wlZLmmZzQpUxFjinplxMS4ncvp8kkDvGJJux7hfpKAeFWZP23wj4DsO5UoTdz6s33Kb7WE1mZAWzbJstBI3OW8dfRsWwzlBFTiFprpbfewACDkOAYUEw67soQ6nohRa",
                           "value": "1.1.1.1",
                            "netmask": "255.255.255.0"
                        },
                        "itemId": 22,
                        "service": "SERVICE_WEB",
                        "protocolNumber": 242,
                        "port": 11833
                    }
                ]
            },
            "loginPage": {
                "jsonType": "cwp-login-page",
                "ownerId": ${owner.id},
                "predefined": false,
                "backgroundColor": "DCUamznxKr",
                "fontColor": "QgeFCOCeBs",
                "linksColor": "f20AjflyGN",
                "buttonColor": "xcutA0q9VB",
                "buttonTextColor": "HAiauwZjj8",
                "logoFileName": "uvjoB8M6hytpOK4AM5NrxFQHNZpwjnhn",
                "backgroundImageName": "4CZh83sPNTMMBgr8Y7exGXC88IuEnuZQ",
                "uploadByUser": true,
                "fileDirectory": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg",
                "fileName": "eula.html",
                "policyContent": "aaaa",
                "passwordEncryption": "SHARED",
                "sharedSecret": "aerohive",
                "loginUrl": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg/eula.html",
                "authProtocol": "MS_CHAP_V2",
                "requiredFieldsCount": 1,
                "optionalFieldsCount": 7
            },
            "successPage": {
                "jsonType": "cwp-success-page",
                "ownerId": ${owner.id},
                "predefined": false,
                "backgroundColor": "6p06OqNoih",
                "fontColor": "u5bMw3YInR",
                "linksColor": "7rO09FmS9O",
                "buttonColor": "8szOHauwl6",
                "buttonTextColor": "WgvFs3NqzB",
                "logoFileName": "FdYluPT5T3mZ1olq9OnAn0G9iafwMbCG",
                "backgroundImageName": "nKRrDfnuhSDNTZr92vWz8g5JGTEgLIty",
                "uploadByUser": true,
                "fileDirectory": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg",
                "fileName": "success.html",
                "wlanAccessNotice": "WLAN access notice",
                "librarySipNotice": "Library sip notic"
            },
            "failurePage": {
                "jsonType": "cwp-failure-page",
                "ownerId": ${owner.id},
                "predefined": false,
                "backgroundColor": "72WKlvwhRS",
                "fontColor": "qShucpYjnZ",
                "linksColor": "VWxk9NiYdI",
                "buttonColor": "6VSQQbIM5J",
                "buttonTextColor": "P0qf3m32B6",
                "logoFileName": "KxIn20U8pTCB9Y3bFSSOY79e5BCcvQSz",
                "backgroundImageName": "ah04g9bAuLqnjy5WaC5fZzMyfgtcSKfp",
                "uploadByUser": false,
                 "fileDirectory": "/HiveManager/downloads/home/cwp/webpage/defaultcwpselfreg",
                "fileName": "failure.html",
                "failureNotice": "failure"
            },
            "httpsCertificate": {
                "ownerId": ${owner.id},
                "predefined": false,
                "fileName": "n6JtyREO3zbjbFD8fnBwzL0P5L3JyR91",
                "fileSize": 3964509205033621504,
                "fileType": "KEY",
                "encrypted": false,
                "index": 7,
                "issuer": "6ZAAV3qIgqmPdW6IPQ68EuxoBBjjblWACIKZ5vKWi8A1OTpI9q0MgnFbsioxtNpc6cEeOXLSFrYrcQh3e0wBsAQ8ZUIo0Z35hnfU4EmUuJkkIhB4Z0lLQh1HV0IqCv0P",
                "subject": "cls2NI5ruGz70NcrQzfVKsAGuYQ4UrQuPa3brw1GqDsXefGC2Il19WIpihdXoH5RFPZbDKkOfclPcEBLzE9cicjQIjCSJ7DJVkpR1U3pe3Ue5LJ35hnqSN1cmuWsjFXe",
                "expireTime": "E0EsG0oNNr8uucuyJMUkCR9fna0yTf3U"
            },
            "successExternalUrl": "cDA07Epr2wRASlIcbJoRjxyXbOZg7LGyu7XINNVsPa5Y75VVcuoYzGeBucPVA5N01gBoSlvcRoFUAG0vmSTSKIIu1k2icdyRRvCADMzsy2A3Wr9NrKrNt2zC3Cpz59FhC2GsJIzaWVPaDSgN1eshaPXbxgg6IHMuR4033OY2pEw0ODcVQtL7QQxkrNToNSAFpA4IeZq3NWrwcpOL5HPgOUEqyT88VS9hhX6orq7SzOqQ98GraFArAjOBP143j1IH",
            "failureExternalUrl": "vjo9YWBKDoT3NnUIy2SVGx4CVrgWUG7X66kl0Vy4G0KbYZEsUn63DITZBnrB2rwLQGwOR0kJiUqMc5HSt4SUHqflLIt5aVfFdI7GUMGVhFB86aqT1YSEcmhwzrTpxT5tQVySf1EaDwi06eyv6CaPcZM93rgkwnSNr9c6cj22zVCZREnPA4f1SOSZoKbJ24sDX74GNCJpe61SnmTt3ZTBOgpOTnvj02flsTZ4VqVcIz5oJI635NUh5u5tLzdCcStp",
            "eth0Ip": "km3Dldm2yqlvCllBA0bltZO8sXGl3FL5",
            "eth0Netmask": "zzF82MCMEg60rA3HrK9E3KDxO13A4ICQ",
            "eth1Ip": "jF1flYSBg2vrtdvvojubV3gvJtUsvGZ9",
            "eth1Netmask": "bAjq4IEmTI4NEytI5p0Bhn1hncCqqlaE",
            "radio11aModeIp": "VBouZmNi50nz0eZHvUITNHrtnvgEq9OT",
            "radio11aModeNetmask": "xRzVtZ9S6UfbmRJuxOZ5i0Yffeg2KyJP",
            "radio11bgModeIp": "L8z0awW7885ix4ZXGL7832U8XLD1yLPY",
            "radio11bgModeNetmask": "R7937suG6vcJvGW8c6VSY5BDzvrEmqJq",
            "serverDomainName": "RbX62sxJh9kxjzXkt7ixX19ytZEXHkCVUUwu3joZHeadJfiDfYqMHBnEAf3zWlrO",
            "sipRedirectUrl": "0QWjGInxARylaKvUsAEQCe6UO2YAiwWTl0rTQ2nkKdyQJMic30Fd7rDXCu0QBkrYbSHy3fNS6QwOUejIgik3p2x81XDrC52KNKYNZEtOD967jSk6TsHYXDPGfOXmdENNJRmkuP0ssVaTyWZkDK8ii6QDEXIMJWmENekRNqJRY8pZZgO3P3vnhDMEQAW3FlZcFLfGtlp8eMHWsrepp9hys4NtsfGzeD3lInqE4k64pJivqLuqAFbcoWtNeZkdoCae",
            "useStandardLoginPage": true,
            "useCustomLoginPage": false,
            "showSuccessPage": true,
            "useStandardSuccessPage": true,
            "useCustomSuccessPage": false,
            "redirectAfterSuccessLogin": false,
            "successToInitiallyPage": false,
            "successToSpecifiedUrl": false,
            "showFailurePage": true,
            "showFailureViaLoginPage": true,
            "useStandardFailurePage": false,
            "useCustomFailurePage": false,
            "redirectAfterFailureLogin": false,
            "failureToInitiallyPage": false,
            "failureToSpecifiedUrl": false,
            "displaySessionTimer": false,
            "enableHttps": false,
            "enableHttp302": false,
            "forceAcceptNetwork": false,
            "overrideCertificateDomain": false,
            "useDefaultNetwork": true,
            "useCustomNetwork": false,
            "overrideVlan": false,
            "enableWallGarden": false,
            "languages": [
                "EL8SA6mBW73o9RQOT3UyRJqK4xgvFsrrGF8ir7CZi8uJSKKcf2RdMGaTCO4ph2rZYgUXcVwX4jNPacrSTVcX3QFSabkmQG1er6nD1wgNDjKbGyGFy4JU1nGpqsqg8OSUqvPxfRw13vG2RHrURr7VnUXvK4Z0l551oVWfNbpc4Of0xX298EByeEQaXKdz9RiL23eGusXUZswwFYLu5WWfHFsg978wltt2ATzvHi2S3ztmPjiLNTiAgLvI4PZiOSq",
                "pJBM1JQzzWO43PFFRNkDVB9CIx3adubEHlma4FNcGNdl7dahi74rwgb7V3Kpx24jo0xQ3uGK0sYvfCqNQz4jkDmQY71Hb7dEE5aCQdvok70BBgnsgMOba6tzwHEU9bOhFXjBSqoDMNg4NvoAJWsletJjb0vlUi8LwQeN5qTPJ0iLwV99fdRn85q2A5vBwyT9Q71k16B1UfGbl5zgvAPUiGIYD03JvU0R0aSOe1UiZ3HEUfCrkTDSt5lafgwTYAv"
            ],
            "defaultLanguage": "EN",
            "sessionExpireAlert": 2,
            "leaseTime": 35452,
            "registrationPeriod": 720,
            "successDelay": 22,
            "failureDelay": 23,
            "registrationType": "PPSK_SERVER",
            "internalDhcpType": "USE_EXTERNAL",
            "dhcpMode": "MODE_UNICAST"
		    }
		    </restapi>
		    </step>
	
			<step name="create.cwp.profile" description="">
			    <restapi name="createCwpProfile">    
			         {
			"ownerId": ${owner.id},
            "predefined": false,
           "jsonType": "cwp-profile",
           "name": "testcwp",
           "description": "adfadsf",
           "defaultCwp":"@{create.cwp}",
				  "entries": [ 
					{
		            "ownerId": ${owner.id},
		            "predefined": false,
		            "tags": [],
		            "description": "",
		            "cwp": "@{create.cwp}"
					}
					],
				  "enabled": true,
				  "registrationType": "PPSK_SERVER"
				}
			    </restapi>
			</step>		
			
		<step name="create.ssid.profile" description="">
			<restapi name = "createSsidProfile">
				{
				"jsonType" : "ssid-profile",
				"ownerId" : ${owner.id},
				"name" : "ppsk",
				"ssid" : "ppsk",
				"description" : "a ssid profile for integration test",
				"radioBand" : "DUAL",
				"ssidUsageIndustry" : "ENTERPRISE",
				"scheduleEntries": [],
				"ssidUsageUserGroup" : "STAFF_AND_TEACHERS",
				"accessSecurity": {
				                  "ownerId": ${owner.id},
				                  "predefined":false,
                                  "jsonType": "ppsk", 
                                  "keyManagement": "AUTO_PSK", 
                                  "encryptionMethod": "AUTO_TKIP_CCMP",
                                  "keyType": "ASCII", 
                                  "keyValue": "aerohive"
				                   },
				"defaultUserProfile" :"@{create.user.profile}",
				"enablePpskSelfRegistration": true,
				"ppskSelfRegistrationSsid": "regssid",
				"ppskSelfRegistrationCwpProfile":"@{create.cwp.profile}",
				"externalRadiusProfile" :"@{create.external.radius.profile}",
				"ppskUserGroups": [
    {
        "ownerId": ${owner.id},
    "predefined": false,
    "jsonType": "auto-ppsk-user-group",
    "name": "up1",
    "description": "up1",
    "userProfileAttribute": {
        "ownerId": ${owner.id},
        "predefined": false,
        "attrNumber": 221,
        "autoGenerated": false
    },
    "enableReauthorization": false,
    "reauthorizationTime": 602,
    "userCount": 2,
    "concatenatingString": "aerohive",
    "timeZone": "ogtgJTM9JoiKe3J5tBaVly89TgelMY0hA7cxScN8edjwQ10nb6XBHWUd98I5bRSc",
    "pskValidityPeriod": "ONCE",
    "startTime": 1395237623406,
    "endTime": 1395248974789,
    "characterTypesIncludeLetters": true,
    "characterTypesIncludeDigits": true,
    "characterTypesIncludeSpecialCharacters": true,
    "characterTypeCombination": "ALL_SELECTED_CHARACTER_TYPES",
    "userNamePrefix": "test",
    "ppskSecret": "aerohive",
    "location": "location111",
    "passwordLength": 8
    }
],
				"advancedSettings": 
				                  {
				                 "ownerId": ${owner.id},
			                   	"predefined": false,
				               	"userProfileApplicationSequence": "CWP_SSID_MAC",
				               	"ignoreBroadcastProbeReq": true,
				               	"veEnableVoiceEnterprise": true,
			               		"veEnable802Dot11k": false,
				               	"veEnable802Dot11v": false,
				               	"veEnable802Dot11r": true,
			               		"wmmEnableWmm": false,
			               		"wmmEnableWmmVideo": false,
			               		"wmmEnableWmmVoice": false,
			               		"wmmEnableUapsd": false,
			               		"multicastConvertIpToUnicast": "DISABLE",
			               		"multicastChannelUtilThreshold":100,
			               		"multicastMemberCountThreshold":3,
			               		"clientMaxClientLimit":5,
			               		"clientEapTimeout":187,
			               		"clientRtsThreshold":1769,
			               		"clientFragmentThreshold":353,
			               		"clientDtimSetting":223,
			               		"clientInactiveClientAgeout":8,
			               		"clientEapRetries":4,
			               		"clientRoamCacheUpdateInterval":19686,
			               		"clientRoamCacheAgeout":440,
			               		"clientLocalCacheTimeout":572714
				                    },
				"rateSettings": 
				               {
				              "ownerId": ${owner.id},
			              	"predefined": false,
			              	"enable11a": true,
			              	"enable11bg": true,
			              	"enable11n": true,
		              		"enable11ac": true,
		              		"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
			              	"enableStreamOne": true,
			              	"enableStreamTwo": true,
			              	"enableStreamThree": true,
			              	"mcsValueOne": 9,
			              	"mcsValueTwo": 9,
			              	"mcsValueThree": 9
			          	        },
				"ipBasedDos":"@{create.ipdosprevention}",
                 "stationBasedMacDos":"@{create.macdosprevention.station}",
                 "ssidBasedMacDos":"@{create.macdosprevention.ssid}",
                 "trafficFilter":"@{create.trafficfilter}",
				"advancedAccessSecurity": 
                            {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
				}
			</restapi>
		</step>	
		

		<step name="create.network.policy" description="">
			<restapi name = "createNetworkPolicy">
				{
				"ownerId" : ${owner.id},
				"predefined": false,
                "jsonType": "network-policy",
				"name" : "Aerohive_network",
				"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
		</step>
		<!--This step should be removed after Could 3.0 can push configuration to device-->
		<step name="create.device.1.ap330.v6101.as.ap">
			<restapi name = "createDevice">
				{
				"ownerId":${owner.id},
				"ipAddress": "10.155.21.21",
				"macAddress": "${ap.mac}",
				"hostname": "virtual device for test",
				"serialNumber": "11112222333344",
				"productType": "AP_330",
				"softwareVersion": "${software.version}",
				"role": 19050,
				"function": "Ap",
				"adminState": "UNMANAGED",
				"isConnected": true
				}
			</restapi>
		</step>
		<step name="add.ssid.profile.into.network.policy" description="">
			<restapi name = "assignfeature">
				{
				 "jsonType":"network_policy",
                 "networkPolicyId":"@{create.network.policy}",
                 "featureId":"@{create.ssid.profile}"
				}
			</restapi>
		</step>
		<step name="assign.network.policy.to.device" description="">
			<restapi name ="assignnetworkpolicy">
				{
				 "device":"@{create.device.1.ap330.v6101.as.ap}",
                 "networkPolicy":"@{create.network.policy}"
				}
			</restapi>
		</step>

		<step name="download.cli.to.device" description="">
			<restapi name = "downloadcli">
				{
				"networkPolicyId":"@{create.network.policy}",
				"deviceIds":["@{create.device.1.ap330.v6101.as.ap}"],
				"configDownloadTypes":[ "deviceFull"]
				}
			</restapi>
		</step>
	</declaration>

	<stage>

		<step no="1">
			<call step="create.ipdosprevention" />
			<failed>next</failed>
		</step>
		<step no="2">
			<call step="create.macdosprevention.station" />
			<failed>next</failed>
		</step>
				<step no="3">
			<call step="create.macdosprevention.ssid" />
			<failed>next</failed>
		</step>
				<step no="4">
			<call step="create.trafficfilter" />
			<failed>next</failed>
		</step>
				<step no="5">
			<call step="create.user.profile" />
			<failed>next</failed>
		</step>
				<step no="6">
			<call step="create.auto.gen.ppsk.usergroup" />
			<failed>next</failed>
		</step>
				<step no="7">
			<call step="create.ssid.profile" />
			<failed>next</failed>
		</step>
		
		<step no="8">
			<call step="add.ssid.profile.into.network.policy" />
			<failed>next</failed>
		</step>
		
		<step no="9">
			<call step="assign.network.policy.to.device" />
			<failed>next</failed>
		</step>
		<step no="10">
			<call step="download.cli.to.device" />
			<failed>next</failed>
		</step>
		<step no="11">
			<script>
				rm -f ${log.dir}/${ap.mac}-deviceFull.config
			</script>
         </step>
         <step no="12">
			<ssh target="${tb.fileserver}" user="root">
			    -v ""
			    -v "cd /var/data/fileserver/configuration/${owner.id}/"
			    -v ""
			    -v "ll"
			    -v ""
				-v "tftp ${mpc.mif.ip} -c put ${ap.mac}-deviceFull.config"
			</ssh>
			<log-match> -n -i "No such file or directory"</log-match>
         </step>
		<step no="13">
			<log-file>${ap.mac}-deviceFull.config</log-file>
			<script>
				mv /tftpboot/${ap.mac}-deviceFull.config ${log.dir}/
			</script>
           <log-match>-i "ssid ppsk"</log-match>
            <log-match>-i "ssid ppsk security-object ppsk"</log-match>
            <log-match>-i "security-object ppsk"</log-match>
            <log-match>-i "security-object ppsk security protocol-suite wpa-auto-psk ascii-key ***"</log-match>
            <log-match>-i "security-object ppsk security private-psk"</log-match>
            <log-match>-i "no security-object ppsk security private-psk self-reg-enable"</log-match>
            <log-match>-i "security-object ppsk security private-psk default-psk-disabled"</log-match>
            <log-match>-i "security-object ppsk default-user-profile-attr 1"</log-match>
            <log-match>-i "ssid ppsk user-group autogene"</log-match>
         </step>
	</stage>
	<failed-process />
	<post-process />
</testcase>
