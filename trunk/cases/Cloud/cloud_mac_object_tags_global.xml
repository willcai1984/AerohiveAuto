<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>feature test cases</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		Verifiy the applicatin service and network service of ipfirewall rule

	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	

	
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>

	<property name="bandwidth" value="141721" />

	
	<property name="owner.id" value="103" />
	<property name="vlan.id" value="10" />
	<property name="userprofile.id" value="10" />
	<property name="owner.id" value="103" />
	<property name="mac_info1" value="cccccccccccc" />
	<property name="mac_info2" value="dddddddddddd" />
	<property name="mac_info3" value="eeeeeeeeeeee" />
	<property name="mac_info4" value="ffffffffffff" />
	<property name="mac_info5" value="gggggggggggg" />
	<property name="mac_info6" value="hhhhhhhhhhhh" />
	
	<declaration>

	
	
	
	
	<step name = "create.ipdosprevention" description=""> 
			<restapi name="createIpDosPrevention">
			{
			"ownerId":${owner.id},
			"predefined":false,
			"jsonType":"ip-dos-prevention",
			"name":"IP-dos-test",
			"description":"This is one ip dos",
			"enableSynCheck":false,
			"dosParams":[
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"RADIUS_ATTACK",
			"threshold":5,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":true},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ICMP_FLOOD",
			"threshold":20,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"IP_SPOOF",
			"threshold":3,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ADDRESS_SWEEP",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"PORT_SCAN",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"UDP_FLOOD",
			"threshold":50,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"SYN_FLOOD",
			"threshold":1000,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ARP_FLOOD",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false}
			]}}
		</restapi>
		</step>	
	
	<step name = "create.macdosprevention.station" description=""> 
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos2",
			"description": "This is one mac dos prevention",
			"dosType": "STATION",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false}]
			}
    </restapi>
		</step>	
	
	<step name = "create.macdosprevention.ssid" description=""> 
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos1",
			"description": "This is one mac dos prevention",
			"dosType": "SSID",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false}]
			}
    </restapi>
		</step>	
	
	<step name = "create.trafficfilter" description=""> 
			<restapi name="createTrafficFilter">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "traffic-filter",
			"name": "Default service filter",
			"description": "This is one mac dos",
			"enableSsh": true,
			"enableTelnet": false,
			"enablePing": true,
			"enableSnmp": false,
			"enableInterTraffic": true
			}
   </restapi>
		</step>	
		
		<step name = "create.macfilter" description="">
	      <restapi name="createMacFilter">
	      {
           "ownerId": ${owner.id},
           "predefined": false,
           "jsonType": "mac-filter",
           "name": "testmacfilter",
           "description": "testmacfilter",
           "rules": [{
                "ownerId": ${owner.id},
                "predefined": false,
                "macObject": {
                    "jsonType": "mac-object",
                    "ownerId": ${owner.id},
                    "predefined": false,
                    "name": "aaaa",
                    "description": "macoui",
                    "addressType": "MAC_OUI",
                    "entries":
                    [{
                         "ownerId": ${owner.id},
                         "predefined": false,
                         "tags":
                          [{
				             "jsonType": "device",
                             "ownerId": ${owner.id},
                             "predefined": false,
                             "value": "test_tag01"
				           },
				           {
				             "jsonType": "device",
                             "ownerId": ${owner.id},
                             "predefined": false,
                             "value": "test_tag02"
				           },
				           {
				             "jsonType": "device",
                             "ownerId": ${owner.id},
                             "predefined": false,
                             "value": "test_tag03"
				          }],
                            "description": "no tag",
                            "macInfo1": "${mac_info1}"
                     },
                     
                     {
                         "ownerId": ${owner.id},
                         "predefined": false,
                         "tags":
                          [{
				             "jsonType": "device",
                             "ownerId": ${owner.id},
                             "predefined": false,
                             "value": "test_tag04"
				           },
				           {
				             "jsonType": "device",
                             "ownerId": ${owner.id},
                             "predefined": false,
                             "value": "test_tag05"
				           }],
                            "description": "no tag",
                            "macInfo1": "${mac_info2}"
                     },
                     
                     {
                         "ownerId": ${owner.id},
                         "predefined": false,
                         "tags":
                          [{
				             "jsonType": "device",
                             "ownerId": ${owner.id},
                             "predefined": false,
                             "value": "test_tag06"
				           }],
                            "description": "no tag",
                            "macInfo1": "${mac_info3}"
                     },        
                     
                     {
                         "ownerId": ${owner.id},
                         "predefined": false,
                         "tags":
                          [{
				             "jsonType": "hostname",
                             "ownerId": ${owner.id},
                             "predefined": false,
                             "value": "AH-0d1a80"
				           }],
                            "description": "no tag",
                            "macInfo1": "${mac_info4}"
                     },
                     
                     {
                         "ownerId": ${owner.id},
                         "predefined": false,
                         "tags":
                          [{
				             "jsonType": "location",
                             "ownerId": ${owner.id},
                             "predefined": false,
                             "value": "|vhm_root|"
				           }],
                            "description": "no tag",
                            "macInfo1": "${mac_info5}"
                     },
                     
                     {
                         "ownerId": ${owner.id},
                         "predefined": false,
                         "tags":
                          [{
				             "jsonType": "global",
                             "ownerId": ${owner.id},
                             "predefined": false,
                             "value": ""
				           }],
                            "description": "no tag",
                            "macInfo1": "${mac_info6}"
                     }]     
                              },
                "action": "PERMIT"}
                       ]
                }
	      </restapi>
	</step>
		
	   
	   <step name="create.user.profile" description="">
			<restapi name = "createUserProfile">
				{
				"jsonType" : "user-profile",
				"ownerId" : 103,
				"name" : "UserProfile10",
				"predefined" : false,
				"vlan" : {
                        "jsonType" : "vlan",
                        "ownerId" : ${owner.id},
                        "name" : "Aerohive_VlanProfile",
                        "description" : "Vlan Profile for Demo",
                        "predefined" : false,
                        "entries" : 
            				[{
                              "ownerId" : ${owner.id},                        
                              "vlanNumber" : 1,
                              "tags" :
                            [{
				               "jsonType": "device",
                               "ownerId": ${owner.id},
                               "predefined": false,
                               "value": "test_tag01"
				             },
				             {
				               "jsonType": "device",
                               "ownerId": ${owner.id},
                               "predefined": false,
                               "value": "test_tag02"
				             },
				             {
				               "jsonType": "device",
                               "ownerId": ${owner.id},
                               "predefined": false,
                               "value": "test_tag03"
				             }]
				             },
				             
				            {
                             "ownerId" : ${owner.id},                        
                             "vlanNumber" : 2,
                             "tags" :
                            [{
				               "jsonType": "device",
                               "ownerId": ${owner.id},
                               "predefined": false,
                               "value": "test_tag04"
				             },
				             {
				               "jsonType": "device",
                               "ownerId": ${owner.id},
                               "predefined": false,
                               "value": "test_tag05"
				             }]
				             },
				             
				            {
                            "ownerId" : ${owner.id},                        
                            "vlanNumber" : 3,
                            "tags" :
                            [{
				               "jsonType": "device",
                               "ownerId": ${owner.id},
                               "predefined": false,
                               "value": "test_tag06"
				             }]
				             },
				             
				            {
                             "ownerId" : ${owner.id},                        
                             "vlanNumber" : 4,
                             "tags" :
                            [{
				               "jsonType": "hostname",
                               "ownerId": ${owner.id},
                               "predefined": false,
                               "value": "AH-0d1a80"
				             }]
				             },
				             
				             {
                             "ownerId" : ${owner.id},                        
                             "vlanNumber" : 5,
                             "tags" :
                            [{
				               "jsonType": "location",
                               "ownerId": ${owner.id},
                               "predefined": false,
                               "value": "|vhm_root|"
				             }]
				             },
				             
				             {
                             "ownerId" : ${owner.id},                        
                             "vlanNumber" : 6,
                             "tags" :
                            [{
				               "jsonType": "global",
                               "ownerId": ${owner.id},
                               "predefined": false,
                               "value": ""
				             }]
				             }]
                    	},
				"enableFirewall" : false,
 				
 				"ipFirewallDefaultAction" : "PERMIT", 			
				"enableSchedule" : false,
				"schedules" : [ ],
				"enableTrafficTunneling" : false,
				
				"enableClientSla" : false,
				"enableQos" : false,
				"restriction" : "DENY_CAR",
				"enableClassification" : false
				}
			</restapi>
		</step>
		<step name="create.ssid.profile" description="">
			<restapi name = "createSsidProfile">
				{
				"jsonType" : "ssid-profile",
				"ownerId" : 103,
				"name" : "open",
				"ssid" : "open",
				"description" : "a ssid profile for integration test",
				"radioBand" : "DUAL",
				"industry" : "ENTERPRISE",
				"scheduleEntries": [],
				"wirelessNetworkUsage" : "STAFF_AND_TEACHERS",
				"accessSecurity": {
				                  "ownerId": 103,
                                  "jsonType": "openAccess"
				                   },
				"defaultUserProfile" : "@{create.user.profile}",
				"advancedSettings": 
				                  {
				                 "ownerId": 103,
			                   	"predefined": false,
				               	"userProfileApplicationSequence": "CWP_SSID_MAC",
				               	"ignoreBroadcastProbeReq": true,
				               	"veEnableVoiceEnterprise": true,
			               		"veEnable802Dot11k": false,
				               	"veEnable802Dot11v": false,
				               	"veEnable802Dot11r": true,
			               		"wmmEnableWmm": false,
			               		"wmmEnableWmmVideo": false,
			               		"wmmEnableWmmVoice": false,
			               		"wmmEnableUapsd": false,
			               		"multicastConvertIpToUnicast": "DISABLE",
			               		"multicastChannelUtilThreshold":100,
			               		"multicastMemberCountThreshold":3,
			               		"clientMaxClientLimit":5,
			               		"clientEapTimeout":187,
			               		"clientRtsThreshold":1769,
			               		"clientFragmentThreshold":353,
			               		"clientDtimSetting":223,
			               		"clientInactiveClientAgeout":8,
			               		"clientEapRetries":4,
			               		"clientRoamCacheUpdateInterval":19686,
			               		"clientRoamCacheAgeout":440,
			               		"clientLocalCacheTimeout":572714
				                    },
				"rateSettings": 
				               {
				              "ownerId": 103,
			              	"predefined": false,
			              	"enable11a": true,
			              	"enable11bg": true,
			              	"enable11n": true,
		              		"enable11ac": true,
		              		"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
			              	"enableStreamOne": true,
			              	"enableStreamTwo": true,
			              	"enableStreamThree": true,
			              	"mcsValueOne": 9,
			              	"mcsValueTwo": 9,
			              	"mcsValueThree": 9
			          	        },
				"ipBasedDos": "@{create.ipdosprevention}",
				"stationBasedMacDos": "@{create.macdosprevention.station}",
				"ssidBasedMacDos": "@{create.macdosprevention.ssid}",
				"trafficFilter": "@{create.trafficfilter}",
				"macFilters": ["@{create.macfilter}"],
				"advancedAccessSecurity": 
                            {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
				}
			</restapi>
		</step>	
		

		<step name="create.network.policy" description="">
			<restapi name = "createNetworkPolicy">
				{
				"ownerId" : 103,
				"predefined": false,
   				"jsonType": "network-policy",
				"name" : "Aerohive_network",
				"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
		</step>
		<!--This step should be removed after Could 3.0 can push configuration to device-->
		 <step name="create.device.1.ap330.v6102.as.ap">
            <restapi name="createDevice">
                {
                    "ownerId":${owner.id},
              	  	"ipAddress": "${ap1.mgt0.ip}",
                	"macAddress":"${ap1.mgt0.mac}",
                    "hostname":"virtual device for test 1",
                    "serialNumber":"1111222233334444",
                    "productType":"AP_330",
                    "softwareVersion": "6.1.0.2",
                    "role":19050,
                    "function":"Ap",
                    "adminState":"UNMANAGED",
                    "isConnected":true
                }
			</restapi>
		</step>
		<step name="add.ssid.profile.into.network.policy" description="">
			<restapi name = "assignfeature">
				{
				"jsonType" : "network_policy",
				"networkPolicyId" : "@{create.network.policy}",
				"featureId" : "@{create.ssid.profile}"
				}
			</restapi>
		</step>
		<step name="assign.network.policy.to.device" description="">
			<restapi name ="assignnetworkpolicy">
				{
				 "device" : "@{create.device.1.ap330.v6102.as.ap}",
                 "networkPolicy" : "@{create.network.policy}"
				}
			</restapi>
		</step>

		<step name="download.cli.to.device" description="">
			<restapi name = "downloadcli">
				{
				"networkPolicyId" : "@{create.network.policy}",
				"deviceIds" : [ "@{create.device.1.ap330.v6102.as.ap}"],
				"configDownloadTypes" : [ "deviceFull"]
				}
			</restapi>
		</step>
		
		 <step name="update.device.config.ex.of.device1">
            <restapi name="updateDeviceConfigEx">
                {
                  "ownerId":"${owner.id}",
                  "ipAddress": "10.155.21.21",
                  "macAddress":"${ap1.mgt0.mac}",
                  "productType":"AP_330",
                  "deviceFunction":"Ap",
                  "device" : "@{create.device.1.ap330.v6102.as.ap}",
                  "networkPolicy" : "@{create.network.policy}",
                  "ipMode" : "DHCP_CLIENT_WITH_FALLBACK",
                  "tags" : [{
				               "jsonType": "device",
                               "ownerId": ${owner.id},
                               "predefined": false,
                               "value": "test_tag06"
				             }]
                }
            </restapi>
        </step>
		
	</declaration>

	<stage>
		
		
		
		<step no="1">
			<call step="create.macfilter" />
			<failed>next</failed>
		</step>
		<step no="1">
			<call step="create.ipdosprevention" />
			<failed>next</failed>
		</step>
		<step no="2">
			<call step="create.macdosprevention.station" />
			<failed>next</failed>
		</step>
				<step no="3">
			<call step="create.macdosprevention.ssid" />
			<failed>next</failed>
		</step>
				<step no="4">
			<call step="create.trafficfilter" />
			<failed>next</failed>
		</step>
				<step no="5">
			<call step="create.user.profile" />
			<failed>next</failed>
		</step>
				<step no="6">
			<call step="create.ssid.profile" />
			<failed>next</failed>
		</step>
		
		
		
		
		<step no="7">
			<call step="add.ssid.profile.into.network.policy" />
			<failed>next</failed>
		</step>
		
		<step no="8">
			<call step="create.device.1.ap330.v6102.as.ap" />
			<failed>next</failed>
		</step>
		
		<step no="8.5">
			<call step="update.device.config.ex.of.device1" />
			<failed>next</failed>
		</step>
		
		<step no="8">
			<call step="assign.network.policy.to.device" />
			<failed>next</failed>
		</step>
		
		
		
		<step no="9">
			<call step="download.cli.to.device" />
			<failed>next</failed>
		</step>
		<step no="10">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap1.mgt0.mac}-deviceFull.config"
			</ssh>
			<log-match>-i "security mac-filter open oui hh-hh-hh-hh-hh-hh permit"</log-match>
			
            <failed>next</failed>
         </step>
         		<step no="11">
			<desc>
				1. reboot the device make the configuration take effect.
			</desc>
			<console target="ap1">
				-v "reboot"
			</console>
			<failed>next</failed>
		</step>
		<step no="12" delay="10">
			<desc>
				1. Get the configuartion by CLI "show run config", and save to logfile.
			</desc>
			<log-file>check_hiveaps_capwap_state.log</log-file>
			<console target="ap1">
				-v "show running-config"
			</console>
			<desc> Verify the configuration file can be push to real device correctly</desc>
			<log-match>-i "security mac-filter open oui hh-hh-hh-hh-hh-hh permit"</log-match>
			
		</step>
	</stage>
	<failed-process />
	<post-process />
</testcase>



