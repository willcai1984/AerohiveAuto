<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>AP template test</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Basic AP devicet emplate test for port type, eth0 access, eth1 backhaul.
	</description>
	<numofap>1</numofap>
 	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>
	
	<desc>
		tbd
	</desc>
	
	<property name="owner.id" value="103" />
	<property name="owner.name" value="APtemplate_test" />
	<property name="vlan.id" value="106" />
	<property name="userprofile.id" value="106" />
	<property name="owner.ip" value="10.155.100.110" />
	<property name="owner.mac" value="FFFFFFFFFF33" />
	<property name="owner.sn" value="12345678901234" />
	<property name="owner.ver" value="6.1.0.2" />
	<property name="owner.func" value="Ap" />
	
	<declaration>
		<step name="create.devicetemplate.profile" description="">
			<restapi name="createDeviceTemplateProfile">
				{
				"jsonType": "device-template-profile",
    			"ownerId":${owner.id},
				"predefined": false,	
				"name":"${owner.name}",
				"description": "for AP 330",
				"defaultDeviceTemplate": 
				{
    				"ownerId":${owner.id},
    				"predefined": false,
    				"jsonType": "device-template",
    				"name": "AP template 1",
    				"description": "this is ap template",
    				"productType": "AP_330",
    				"deviceFunction": "Ap",
    				"loadBalanceMode": "AUTO",
    				"ethPortEntries": 
    				[
    				  {
    				    "ownerId":${owner.id},
    				    "predefined": false,
    				    "portAggregationSettings": 
    				    {
    				      "ownerId":${owner.id},
    				      "predefined": false,
    				      "portChannel": 19
    				    },
    				    "portMirrorSettings": [],
    				    "portType": 
    				      {
    				      	"jsonType": "access-port",
    				      	"ownerId":${owner.id},
    				      	"predefined": false,
    				      	"name": "access eth0",
    				      	"enabled": true
    				      },
    				    "ports": [0],
    				    "enableMirror": false,
    				    "enableAggregation": false
    				  },
    				  {
    				    "ownerId":${owner.id},
    				    "predefined": false,
    				    "portAggregationSettings": 
    				      {
    				      "ownerId":${owner.id},
    				      "predefined": false,
    				      "portChannel": 22
    				      },
    				    "portMirrorSettings": [],
    				    "portType": 
    				      {
    				      	"jsonType": "uplink-port",
    				      	"ownerId":${owner.id},
    				      	"predefined": false,
    				      	"name": "uplink eth1",
    				      	"enabled": true
    				      },
    				    "ports": [1],
    				    "enableMirror": false,
    				    "enableAggregation": false
      				  }
      				]
  				},
				"enabled": true,
				"productType": "AP_330",
				"deviceFunction": "Ap"
  				}
            </restapi>
		</step>
		
        <step name="create.user.profile" description="">
			<restapi name = "createUserProfile">
				{
				"jsonType" : "user-profile",
				"ownerId" : ${owner.id},
				"name" : "UserProfile10",
				"predefined" : false,
				"vlan" : {
				"jsonType" : "vlan",
				"ownerId" : ${owner.id},
				"name" : "${owner.name}",
				"description" : "Vlan Profile for Demo",
				"predefined" : false,
				"entries" : [ {
				"ownerId" : ${owner.id},
				"tags" : [],
				"vlanNumber" : ${vlan.id}
				} ]
				},
				"enableFirewall" : false,	
				"enableSchedule" : false,
				"schedules" : [],
				"enableTrafficTunneling" : false,
				"enableClientSla": true,
                "clientSlaSettings": {
                    "ownerId": ${owner.id},
                    "predefined": false,
                    "bandwidth": 141721,
                     "actionType": "NONE"
                   },
				"enableQos": false,
				"restriction": "DENY_CAR",
				"enableClassification": false
				}
			</restapi>
		</step>
		
		<step name = "create.ipdosprevention" description=""> 
			<restapi name="createIpDosPrevention">
			{
				"ownerId":${owner.id},
				"predefined":false,
				"jsonType":"ip-dos-prevention",
				"name":"IP-dos-test",
				"description":"This is one ip dos",
				"enableSynCheck":false,
				"dosParams":[
					{
						"ownerId":${owner.id},
						"predefined":false,
						"screeningType":"RADIUS_ATTACK",
						"threshold":5,
						"dosAction":"BAN_FOREVER",
						"duration":10,
						"enabled":true
					},
					
					{
						"ownerId":${owner.id},
						"predefined":false,
						"screeningType":"ICMP_FLOOD",
						"threshold":20,
						"dosAction":"BAN_FOREVER",
						"duration":10,
						"enabled":false
					},
			
					{
						"ownerId":${owner.id},
						"predefined":false,
						"screeningType":"IP_SPOOF",
						"threshold":3,
						"dosAction":"BAN_FOREVER",
						"duration":10,
						"enabled":false
					},
			
					{
						"ownerId":${owner.id},
						"predefined":false,
						"screeningType":"ADDRESS_SWEEP",
						"threshold":100,
						"dosAction":"BAN_FOREVER",
						"duration":10,
						"enabled":false
					},
			
					{
						"ownerId":${owner.id},
						"predefined":false,
						"screeningType":"PORT_SCAN",
						"threshold":100,
						"dosAction":"BAN_FOREVER",
						"duration":10,
						"enabled":false
					},
			
					{
						"ownerId":${owner.id},
						"predefined":false,
						"screeningType":"UDP_FLOOD",
						"threshold":50,
						"dosAction":"BAN_FOREVER",
						"duration":10,
						"enabled":false
					},
			
					{
						"ownerId":${owner.id},
						"predefined":false,
						"screeningType":"SYN_FLOOD",
						"threshold":1000,
						"dosAction":"BAN_FOREVER",
						"duration":10,
						"enabled":false
					},
			
					{
						"ownerId":${owner.id},
						"predefined":false,
						"screeningType":"ARP_FLOOD",
						"threshold":100,
						"dosAction":"BAN_FOREVER",
						"duration":10,
						"enabled":false
					}
				]
			}
			</restapi>
		</step>	
	
		<step name = "create.macdosprevention.station" description=""> 
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos2",
			"description": "This is one mac dos prevention",
			"dosType": "STATION",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false}]
			}
    		</restapi>
		</step>	
	
		<step name = "create.macdosprevention.ssid" description=""> 
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos1",
			"description": "This is one mac dos prevention",
			"dosType": "SSID",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false}]
			}
    		</restapi>
		</step>	
	
		<step name = "create.trafficfilter" description=""> 
			<restapi name="createTrafficFilter">
			{
				"ownerId": ${owner.id},
				"predefined": false,
				"jsonType": "traffic-filter",
				"name": "Default traffic filter",
				"description": "This is traffic filter",
				"enableSsh": true,
				"enableTelnet": false,
				"enablePing": true,
				"enableSnmp": false,
				"enableInterStationTraffic": true
			}
   			</restapi>
		</step>	
		
       	<step name="create.ssid.profile" description="">
			<restapi name = "createSsidProfile">
			{
				"jsonType" : "ssid-profile",
				"ownerId" : ${owner.id},
				"name" : "${owner.name}",
				"ssid" : "open",
				"description" : "a ssid profile for test",
				"radioBand" : "DUAL",
				"industry" : "CUSTOM",
				"scheduleEntries": [],
				"wirelessNetworkUsage" : "UNSECURED",
				"accessSecurity": 
					{
				    	"ownerId": ${owner.id},
				        "predefined": false,
                        "jsonType": "open-access"
				    },
				"defaultUserProfile":"@{create.user.profile}",
				"advancedSettings": 
					{
				    	"ownerId": ${owner.id},
			            "predefined": false,
			            "clientMaxClientLimit":5,
			            "clientEapTimeout":187,
			            "clientRtsThreshold":1769,
			            "clientFragmentThreshold":353,
			            "clientDtimSetting":223,
			            "clientInactiveClientAgeout":8,
			            "clientEapRetries":4,
			            "clientRoamCacheUpdateInterval":19686,
			            "clientRoamCacheAgeout":440,
			            "clientLocalCacheTimeout":572714
				     },
				"rateSettings": 
				     {
				        "ownerId": ${owner.id},
			            "predefined": false,
			            "enable11a": true,
			            "enable11bg": true,
			            "enable11n": true,
		              	"enable11ac": true,
		              	"disable11nHighCapabilities": true,
		                "rateSet11a": [
		                	"BASIC","BASIC","BASIC","OPTIONAL",
		                	"OPTIONAL","OPTIONAL","NA","NA"
		                ],
			            "rateSet11bg": [
                        	"BASIC","BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
                        	"OPTIONAL","OPTIONAL","NA", "NA", "NA", "NA"
                        ],
			            "rateSet11n": [
			              	"OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	"OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                            "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                            "OPTIONAL","OPTIONAL","OPTIONAL",
                            "NA","NA","NA","NA"
                        ],
			              	"enableStreamOne": true,
			              	"enableStreamTwo": true,
			              	"enableStreamThree": true,
			              	"mcsValueOne": 9,
			              	"mcsValueTwo": 9,
			              	"mcsValueThree": 9
			    	},
				"ipBasedDos":"@{create.ipdosprevention}",
				"stationBasedMacDos":"@{create.macdosprevention.station}",
				"ssidBasedMacDos":"@{create.macdosprevention.ssid}",
				"trafficFilter":"@{create.trafficfilter}",
				"advancedAccessSecurity": 
                	{
                    	"ownerId":${owner.id},
					    "predefined":false,
					    "gtkRekeyPeriod":4124,
					    "gtkTimeout":679,
					    "gtkRetries":10,
					    "ptkRekeyPeriod":49523,
					    "ptkTimeout":811,
					    "ptkRetries":3,
						"gmkRekeyPeriod":1603482,
						"replayWindow":10,
						"nonStrict":true,
						"reauthInterval":57688,
						"enablePreauthentication":false,
						"enableProactivePmkIdResponse":true,
						"localTkipCountermeasure":false,
						"remoteTkipCountermeasure":false,
						"enable802Dot11w":true,
						"useOf802Dot11w":"MANDATORY",
						"enableBroadcastOrMulticastIntegrityProtocol":false,
						"enableGmkRekeyPeriod":true,
						"enableGtkRekeyPeriod":true,
						"enablePtkRekeyPeriod":false,
						"enableReauthInterval":false
					}
			}
			</restapi>
		</step>	   	
        	
        <step name="create.device">
            <restapi name="createDevice">
                {
                    "ownerId":${owner.id},
                    "ipAddress": "${owner.ip}",
                    "macAddress":"${owner.mac}",
                    "hostname":"virtual device for test 1",
                    "serialNumber":"${owner.sn}",
                    "productType":"AP_330",
                    "softwareVersion": "${owner.ver}",
                    "role":19050,
                    "function":"${owner.func}",
                    "adminState":"UNMANAGED",
                    "isConnected":true
                }
            </restapi>
        </step>
        
        
        <step name="create.network.policy">
			<restapi name="createNetworkPolicy">
				{
					"ownerId" : ${owner.id},
					"jsonType": "network-policy",
					"name":"${owner.name}",
					"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
		</step>
        
        <step name="add.ssid.profile.into.network.policy">
            <restapi name="assignfeature">
                {
                    "jsonType" : "network_policy",
                    "networkPolicyId" : "@{create.network.policy}",
                    "featureId" : "@{create.ssid.profile}"
                }
            </restapi>
        </step>
        
        <step name="assign.network.policy.to.device">
			<restapi name="assignnetworkpolicy">
				{
					"device" :"@{create.device}",
					"networkPolicy" :"@{create.network.policy}"
				}
			</restapi>
		</step>
        
        <step name="download.cli.to.device">
			<restapi name="downloadcli">
				{
					"networkPolicyId" : "@{create.network.policy}",
					"deviceIds" : [ "@{create.device}"],
					"configDownloadTypes" : ["deviceFull"]
				}
			</restapi>
		</step>
        
	</declaration>
	
	<stage>
		
		<step no="1">
			<call step="create.devicetemplate.profile" />
			<failed>next</failed>
		</step>	
		
		<step no="1">
			<call step="create.user.profile" />
			<failed>next</failed>
		</step>	
		
		<step no="2">
			<call step="create.ssid.profile" />
			<failed>next</failed>
		</step>
		
		<step no="3">
			<call step="create.network.policy" />
			<failed>next</failed>
		</step>
		
		<step no="4">
			<call step="create.device" />
			<failed>next</failed>
		</step>

		<step no="5">
			<call step="add.ssid.profile.into.network.policy" />
            <failed>next</failed>
		</step>
		
		<step no="6">
			<call step="assign.network.policy.to.device" />
            <failed>next</failed>		
		</step>
		
		<step no="7">
			<call step="download.cli.to.device" />
            <failed>next</failed>		
		</step>
		
		<step no="8">		
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${owner.mac}-deviceFull.config"
			</ssh>
			<log-file>config_file.log</log-file>
			<desc> Verify TBD.</desc>
			<log-match>-i "TBD"</log-match>		
		</step>
	</stage>
	<failed-process />
	<post-process />
</testcase>
	
	
