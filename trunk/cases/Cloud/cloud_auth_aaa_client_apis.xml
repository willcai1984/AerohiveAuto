<testcase>
	<brief>All AAA client API for Cloud3.0</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		All AAA client API for AP test
	</description>
	<numofap>1</numofap>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>
	<property name="test1" value="ServiceType" />
	<property name="ap.mac" value="197711112222" />
	<property name="owner.id" value="102" />
	<property name="hostanme" value="test.aerohive.com" />
	<property name="accessap.ip1" value="10.155.1.1" />
	<property name="accessap.ip12" value="10.155.1.100" />

	<declaration>
		<step name="create.hostname.address.profile" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile",
				"description" : "this is hostname address profile",
				"hostname":"${hostanme}"
				}
            </restapi>
		</step>
		<step name="create.ip.range.address.profile">
		<restapi name="createIpRangeAddressProfile">
				{
				"ownerId" : "${owner.id}",
				"predefined" : false,
				"jsonType" : "ip_range",
				"name" : "IpRangeAddressProfile",
				"description" : "this is IpRangeAddressProfile",
				"ipAddressFrom": "${accessap.ip1}",
				"ipAddressTo" : "${accessap.ip2}"
				}
            </restapi>
		</step>
		<step name="create.external.radius.server1" description=""> 
			<restapi name="createExternalRadiusServer">
				{
				"ownerId": ${owner.id},
				"predefined": false,
				"jsonType": "ext-radius-server-entry",
				"name":"cloud-external-radius-server",
				"description": "This is a radius server",
				"serverType": "ACCOUNTING",
				"sharedSecret": "aerohive",
				"authenticationPort": 1812,
				"accountingPort": 1813,
				"serverIp": "@{create.hostname.address.profile}"
				}
            </restapi>
		</step>
		<step name="create.external.radius.profile1">
			<restapi name="createExternalRadiusProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "external-radius-profile",
				"name" : "Radius-client",
				"description" : "This is aExternalRadiusProfile",
				"externalRadiusServerOption" : "DESIGNATION",
				"entries" : 
				[{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"serverRole" : "PRIMARY",
				"defaultServerId" : "@{create.external.radius.server1}"
				}]
				}
			</restapi>
		</step>
		<step name="create.radius.proxy">
			<restapi name="createRadiusProxy">
				{
				"ownerId":${owner.id},
				"predefined":false,
				"jsonType":"radius-proxy",
				"name":"Radius-proxy-test",
				"description":"this is a RadiusProxy",
				"enableAcceptOtherDevsAuthReqs":false,
				"approvedRadiusClients":
				[{
				"ownerId":${owner.id},
				"predefined":false,
				"sharedSecret":"aerohive",
				"description":"This is a radius client",
				"clientIp": "@{create.ip.range.address.profile}"
				}],
				"realmNameFormat":"WINDOWS_NT_DOMAIN",
				"retryDelay":8,
				"retryCount":7,
				"deadTime":1104,
				"injectOperatorNameAttribute":true,
				"realms": 
				[{
				"ownerId":${owner.id},
				"predefined":false,
				"realmName":"ProxyRealm_test",
				"stripRealmName":false,
				"radiusServer": "@{create.external.radius.profile1}"
				}]
				}
			</restapi>
		</step>
		<step name="create.radius.op.name.attr.profile">
		<restapi name="createRadiusOpNameAttrProfile">
				{
				"ownerId": ${owner.id},
				"predefined": false,
				"jsonType": "radius-op-name",
				"name": "Radius_op_name_attr_profiles",
				"description": "this is a Radius_op_name_attr_profiles",
				"entries": 
				[{
				"ownerId":${owner.id},
				"predefined":false,
				"tags":[],
				"description":"This is a RadiusOpNameAttrProfileEntry",
				"entryValue":"entryValue",
				"namespaceIdType":"TADIG"
				}]
				}
        </restapi>
		</step>
		<step name="create.radius.user.group" description="">
			<restapi name="createRadiusUserGroup">
				{
				"ownerId":${owner.id},
				"predefined":false,
				"jsonType":"radius-user-group",
				"name":"Radius_user_group_test01",
				"description":"this is a RadiusUserGroup",
				"userProfileAttribute":
				{
				"ownerId":${owner.id},
				"predefined":false,
				"attrNumber":2669,
				"autoGenerated":true
				},
				"enableReauthorization": true,
				"reauthorizationTime":200,
				"credentialPersistencyStorage":"DRAM",
				"enableVoiceDeviceAuthentication":false
				}
           </restapi>
		</step>
		<step name="create.radius.user" description="">
			<restapi name="createRadiusUser">
				{
				"ownerId":${owner.id},
				"predefined":false,
				"jsonType":"radius-user",
				"name":"Radius_user_test01",
				"description":"this is a Radius user",
				"userGroup":"@{create.radius.user.group}",
				"password":"aerohive"
				}
            </restapi>
		</step>
		 <step name="create.device.1.ap330.v6102.as.ap">
            <restapi name="createDevice">
                {
                    "ownerId":102,
                    "ipAddress": "10.155.21.21",
                    "macAddress":"197711112222",
                    "hostname":"virtual device for test 1",
                    "serialNumber":"1111222233334444",
                    "productType":"AP_330",
                    "softwareVersion": "6.1.0.2",
                    "role":19050,
                    "function":"Ap",
                    "adminState":"UNMANAGED",
                    "isConnected":true
                }
            </restapi>
        </step>
	</declaration>
	<stage>
		<step no="3">
			<call step="create.radius.op.name.attr.profile" />
		</step>
		<step no="4">
			<call step="create.radius.user" />
		</step>
		<step no="5">
			<call step="create.radius.proxy" />
		</step>

		<step no="6">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat
				/var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>
		</step>
	</stage>
	<failed-process />
</testcase>

