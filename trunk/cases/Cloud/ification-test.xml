<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>feature test cases</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		Verifiy the security for ssid
		Open ssid

	</description>
	<numofap>1</numofap>
	<tbtype>winlin</tbtype>
	
	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>

	<property name="bandwidth" value="141721" />
	<property name="ap.mac" value="000011112103" />
	<property name="tb.fileserver" value="10.155.40.181" />
	<property name="owner.id" value="103" />
	<property name="vlan.id" value="10" />
	<property name="userprofile.id" value="10" />
	<property name="owner.id" value="103" />
	
	<declaration>
	<step name="create.IpFirewall" description="">
			<restapi name="createIpFirewall">
				
{
    "ownerId": "103",
    "predefined": false,
    "jsonType": "ip-firewall",
    "name": "IpFirewall1",
    "description": "thisisipfirewallprofile",
    "rules": [
        {
            "jsonType": "ip-firewall-rule",
            "ownerId": "103",
            "predefined": false,
            "ruleId": 1490543320,
            "applicationServices": [
                {
                    "jsonType": "application-service",
                    "ownerId": 103,
                    "predefined": false,
                    "name": "appservice",
                    "description": "appserve",
                    "shortName": "Y8oRcW5i",
                    "applicationDescription": "appservices",
                    "category": {
                        "jsonType": "application-service-category",
                        "ownerId": 103,
                        "predefined": false,
                        "name": "FYrLMSDA133QqQ2tjP1wMN9YSj5O0rnu",
                        "description": "appservices"
                    },
                    "idleTimeout": 100
                }
            ],
            "networkServices": [
                {
                    "jsonType": "network-service",
                    "ownerId": 103,
                    "predefined": false,
                    "name": "net1",
                    "description": "123",
                    "protocolType": "PROTOCOL_ID_SVP",
                    "cliDefaultFlag": false,
                    "protocolNumber": 100,
                    "portNumber": 100,
                    "idleTimeout": 100,
                    "algType": "ALG_TYPE_NONE",
                    "serviceType": 100,
                    "appId": 100
                }
            ],
            "action": "PERMIT",
            "loggingType": "BOTH",
            "sourceIp": {
                "jsonType": "wildcard",
                "ownerId": 103,
                "predefined": false,
                "name": "srcip",
                "description": "thisisaipobjectwithwildcard",
                "wildcard": "10.155.33.0",
                "wildcardMask": "255.255.255.0"
            },
            "destinationIp": {
                "jsonType": "hostname",
                "ownerId": 103,
                "predefined": false,
                "name": "destip",
                "description": "",
                "hostname": "www.baidu.com"
            }
        }
    ]
}

		</restapi>
		</step>
	
	
	
	
	<step name = "create.ipdosprevention" description=""> 
			<restapi name="createIpDosPrevention">
			{
			"ownerId":${owner.id},
			"predefined":false,
			"jsonType":"ip-dos-prevention",
			"name":"IP-dos-test",
			"description":"This is one ip dos",
			"enableSynCheck":false,
			"dosParams":[
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"RADIUS_ATTACK",
			"threshold":5,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":true},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ICMP_FLOOD",
			"threshold":20,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"IP_SPOOF",
			"threshold":3,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ADDRESS_SWEEP",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"PORT_SCAN",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"UDP_FLOOD",
			"threshold":50,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"SYN_FLOOD",
			"threshold":1000,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"screeningType":"ARP_FLOOD",
			"threshold":100,
			"dosAction":"BAN_FOREVER",
			"duration":10,
			"enabled":false}
			]}}
		</restapi>
		</step>	
	
	<step name = "create.macdosprevention.station" description=""> 
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos2",
			"description": "This is one mac dos prevention",
			"dosType": "STATION",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false}]
			}
    </restapi>
		</step>	
	
	<step name = "create.macdosprevention.ssid" description=""> 
			<restapi name="createMacDosPrevention">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "mac-dos-prevention",
			"name": "Aerohive-mac-dos1",
			"description": "This is one mac dos prevention",
			"dosType": "SSID",
			"dosParams": [
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"EAPOL",
			"threshold":1462667424,
			"interval":253332708,
			"enableBan":false,
			"ban":630770212,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"AUTH",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"ASSOC_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"DISASSOC",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_REQ",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false},
			
			{"ownerId":${owner.id},
			"predefined":false,
			"dosDetectionType":"PROBE_RESP",
			"threshold":950639156,
			"interval":254071646,
			"enableBan":false,
			"ban":848030328,
			"enabled":false}]
			}
    </restapi>
		</step>	
	
	<step name = "create.trafficfilter" description=""> 
			<restapi name="createTrafficFilter">
			{
			"ownerId": ${owner.id},
			"predefined": false,
			"jsonType": "traffic-filter",
			"name": "Default service filter",
			"description": "This is one mac dos",
			"enableSsh": true,
			"enableTelnet": false,
			"enablePing": true,
			"enableSnmp": false,
			"enableInterTraffic": true
			}
   </restapi>
		</step>	
		
	   
	   <step name="create.user.profile" description="">
			<restapi name = "createUserProfile">
				{
				"jsonType" : "user-profile",
				"ownerId" : 103,
				"name" : "UserProfile10",
				"predefined" : false,
				"vlan" : {
				"jsonType" : "vlan",
				"ownerId" : 103,
				"name" : "Aerohive_VlanProfile",
				"description" : "Vlan Profile for Demo",
				"predefined" : false,
				"entries" : [ {
				"ownerId" : 103,
				"tags" : [ ],
				"vlanNumber" : ${vlan.id}
				} ]
				},
				"enableFirewall" : true,
 				"inboundIpFirewallId" : refIdInTestStep = "create.IpFirewall",
 				"outboundIpFirewallId" : refIdInTestStep = "create.IpFirewall", 
 				"ipFirewallDefaultAction" : "PERMIT", 			
				"enableSchedule" : false,
				"schedules" : [ ],
				"enableTrafficTunneling" : false,
				"enableClientSla" : false,
				"enableQos" : false,
				"restriction" : "DENY_CAR",
				
				
				"enableClassification" : true,
 				"classification": {
				"ownerId": 103,
				"predefined": false,
				"attributes": [
					{
					"ownerId": 103,
					"predefined": false,
					"attrNumber": 3473,
					"autoGenerated": true
					}
					],
				"userGroups": [
				{
				"jsonType": "radius-user-group",
				"ownerId": 103,
				"predefined": false,
				"name": "usergroup1",
				"description": "usergroup1",
				"userProfileAttribute": {
				"ownerId": 103,
				"predefined": false,
				"attrNumber": 29,
				"autoGenerated": false
				},
				"vlan": 20,
				"reauthorizationTime": 22375,
				"credentialPersistencyStorage": "FLASH",
				"enableVoiceDeviceAuthentication": true
				}
				],
				"osObjects": [
				{
				"ownerId": 103,
				"predefined": false,
				"osName": "iphone",
				"items": [
				{
				"ownerId": 103,
				"predefined": false,
				"osVersion": "iso7",
				"description": "iphoneios7",
				"option55": "12"
				}
				],
				"dhcpItems": [
				{
				"ownerId": 103,
				"predefined": false,
				"osVersion": "iso7.1",
				"description": "iphoneiso7.1",
				"option55": "iso7.1"
				}
				
				]
				}
				],
				"clientOwnership": "BYOD"
                }
				}
			</restapi>
		</step>
		<step name="create.ssid.profile" description="">
			<restapi name = "createSsidProfile">
				{
				"jsonType" : "ssid-profile",
				"ownerId" : 103,
				"name" : "open",
				"ssid" : "open",
				"description" : "a ssid profile for integration test",
				"radioBand" : "DUAL",
				"ssidUsageIndustry" : "ENTERPRISE",
				"ssidUsageUserGroup" : "STAFF_AND_TEACHERS",
				"accessSecurity": {
				                  "ownerId": 103,
                                  "jsonType": "openAccess"
				                   },
				"defaultUserProfile" : refObjectInTestStep = "create.user.profile",
				"advancedSettings": 
				                  {
				                 "ownerId": 103,
			                   	"predefined": false,
				               	"userProfileApplicationSequence": "CWP_SSID_MAC",
				               	"ignoreBroadcastProbeReq": true,
				               	"veEnableVoiceEnterprise": true,
			               		"veEnable802Dot11k": false,
				               	"veEnable802Dot11v": false,
				               	"veEnable802Dot11r": true,
			               		"wmmEnableWmm": false,
			               		"wmmEnableWmmVideo": false,
			               		"wmmEnableWmmVoice": false,
			               		"wmmEnableUapsd": false,
			               		"multicastConvertIpToUnicast": "DISABLE",
			               		"multicastChannelUtilThreshold":100,
			               		"multicastMemberCountThreshold":3,
			               		"clientMaxClientLimit":5,
			               		"clientEapTimeout":187,
			               		"clientRtsThreshold":1769,
			               		"clientFragmentThreshold":353,
			               		"clientDtimSetting":223,
			               		"clientInactiveClientAgeout":8,
			               		"clientEapRetries":4,
			               		"clientRoamCacheUpdateInterval":19686,
			               		"clientRoamCacheAgeout":440,
			               		"clientLocalCacheTimeout":572714
				                    },
				"rateSettings": 
				               {
				              "ownerId": 103,
			              	"predefined": false,
			              	"enable11a": true,
			              	"enable11bg": true,
			              	"enable11n": true,
		              		"enable11ac": true,
		              		"disable11nHighCapabilities": true,
		                    "rateSet11a": ["BASIC","BASIC","BASIC","OPTIONAL","OPTIONAL",
		                                    "OPTIONAL","NA","NA"],
			              	"rateSet11bg": [
                                    "BASIC","BASIC","BASIC","BASIC",
                                    "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
                                    "NA", "NA", "NA", "NA"
                                ],
			              	"rateSet11n": [ "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL",
			              	               "OPTIONAL","OPTIONAL","OPTIONAL","NA","NA","NA","NA",
                                          "OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL","OPTIONAL", 
                                           "OPTIONAL","OPTIONAL","OPTIONAL",
                                            "NA","NA","NA","NA"],
			              	"enableStreamOne": true,
			              	"enableStreamTwo": true,
			              	"enableStreamThree": true,
			              	"mcsValueOne": 9,
			              	"mcsValueTwo": 9,
			              	"mcsValueThree": 9
			          	        },
				"ipBasedDos": refObjectInTestStep = "create.ipdosprevention",
				"stationBasedMacDos": refObjectInTestStep = "create.macdosprevention.station",
				"ssidBasedMacDos": refObjectInTestStep = "create.macdosprevention.ssid",
				"trafficFilter": refObjectInTestStep = "create.trafficfilter",
				"advancedAccessSecurity": 
                            {
                            "ownerId":${owner.id},
					        "predefined":false,
					        "gtkRekeyPeriod":4124,
					        "gtkTimeout":679,
					        "gtkRetries":10,
					        "ptkRekeyPeriod":49523,
					        "ptkTimeout":811,
					        "ptkRetries":3,
							"gmkRekeyPeriod":1603482,
							"replayWindow":10,
							"nonStrict":true,
							"reauthInterval":57688,
							"enablePreauthentication":false,
							"enableProactivePmkIdResponse":true,
							"localTkipCountermeasure":false,
							"remoteTkipCountermeasure":false,
							"enable802Dot11w":true,
							"useOf802Dot11w":"MANDATORY",
							"enableBroadcastOrMulticastIntegrityProtocol":false,
							"enableGmkRekeyPeriod":true,
							"enableGtkRekeyPeriod":true,
							"enablePtkRekeyPeriod":false,
							"enableReauthInterval":false
							}
				}
			</restapi>
		</step>	
		

		<step name="create.network.policy" description="">
			<restapi name = "createNetworkPolicy">
				{
				"ownerId" : 103,
				"name" : "Aerohive_network",
				"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
		</step>
		<!--This step should be removed after Could 3.0 can push configuration to device-->
		<step name="create.device.1.ap330.v6101.as.ap">
			<restapi name = "createDevice">
				{
				"ownerId":103,
				"ipAddress": "10.155.21.21",
				"macAddress": "000011112103",
				"hostname": "virtual device for test",
				"serialNumber": "11112222333344",
				"productType": "AP_330",
				"softwareVersion": "6.1.0.1",
				"role": 19050,
				"function": "Ap",
				"adminState": "UNMANAGED",
				"isConnected": true
				}
			</restapi>
		</step>
		<step name="add.ssid.profile.into.network.policy" description="">
			<restapi name = "assignfeature">
				{
				"jsonType" : "network_policy",
				"networkPolicyId" : refIdInTestStep = "create.network.policy",
				"featureId" : refIdInTestStep = "create.ssid.profile"
				}
			</restapi>
		</step>
		<step name="assign.network.policy.to.device" description="">
			<restapi name ="assignnetworkpolicy">
				{
				 "device" : refObjectInTestStep = "create.device.1.ap330.v6101.as.ap",
                 "networkPolicy" : refObjectInTestStep = "create.network.policy"
				}
			</restapi>
		</step>

		<step name="download.cli.to.device" description="">
			<restapi name = "downloadcli">
				{
				"networkPolicyId" : refIdInTestStep = "create.network.policy",
				"deviceIds" : [ refIdInTestStep = "create.device.1.ap330.v6101.as.ap"],
				"configDownloadTypes" : [ "deviceFull"]
				}
			</restapi>
		</step>
	</declaration>

	<stage>
		
		
		
		<step no="1">
			<call step="create.IpFirewall" />
			<failed>next</failed>
		</step>
		<step no="1">
			<call step="create.ipdosprevention" />
			<failed>next</failed>
		</step>
		<step no="2">
			<call step="create.macdosprevention.station" />
			<failed>next</failed>
		</step>
				<step no="3">
			<call step="create.macdosprevention.ssid" />
			<failed>next</failed>
		</step>
				<step no="4">
			<call step="create.trafficfilter" />
			<failed>next</failed>
		</step>
				<step no="5">
			<call step="create.user.profile" />
			<failed>next</failed>
		</step>
				<step no="6">
			<call step="create.ssid.profile" />
			<failed>next</failed>
		</step>
		
		<step no="7">
			<call step="add.ssid.profile.into.network.policy" />
			<failed>next</failed>
		</step>
		
		<step no="8">
			<call step="assign.network.policy.to.device" />
			<failed>next</failed>
		</step>
		<step no="9">
			<call step="download.cli.to.device" />
			<failed>next</failed>
		</step>
		<step no="10">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>
			<log-match>-i "ip-policy Ip Firewall"</log-match>
			<log-match>-i "user-profile userprofile1 security ip-policy from-access Ip Firewall to-access Ip Firewall"</log-match>
            
         </step>
	</stage>
	<failed-process />
	<post-process />
</testcase>