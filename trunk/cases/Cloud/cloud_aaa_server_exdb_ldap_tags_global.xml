<testcase>
	<brief>AAA Server LDAP Tags CLI test for Cloud3.0</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		AAA Server LDAP Tags CLI test
	</description>
	<numofap>1</numofap>
	<tbtype>winlin</tbtype>
	<desc>

	</desc>

	<pre-process>
		<stage>
			<step no="0">
				<desc>Initialize the DUT db</desc>
				<call step="init.cloud.server" />
			</step>
		</stage>
	</pre-process>
	<post-process>
		<stage>
			<step no="0">
				<desc>Clean up the DUT db</desc>
				<call step="cleanup.cloud.server" />
			</step>
		</stage>
	</post-process>
	<property name="test1" value="ServiceType" />
	<property name="ap.mac" value="197711112102" />
	<property name="owner.id" value="102" />
	<property name="accessap.ip1" value="10.155.1.100" />
	<property name="accessap.ip2" value="10.155.1.1555" />
	<property name="accessap.ip3" value="10.155.36.1" />
	<property name="accessap.ip4" value="10.155.36.155" />
	<property name="network.mask" value="255.255.25.0" />
	<property name="host.name1" value="ntp1.aerohive.com" />

	<declaration>
	    <step name="create.wildcard.address.profile" description="">
			<restapi name="createWildcardAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "wildcard",
				"name" : "WildcardIpObject",
				"description" : "this is WildcardIpObject",
				"wildcard": "${accessap.ip3}",
				"wildcardMask" : "${network.mask}"
				}
            </restapi>
		</step>
	 <step name="create.ip.range.address.profile" description="">
			<restapi name="createIpRangeAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" :false,
				"jsonType" : "ip_range",
				"name" : "IpRangeAddressProfile10",
				"description" : "this is IpRangeAddressProfile",
				"ipAddressFrom":"${accessap.ip3}",
				"ipAddressTo" : "${accessap.ip4}"
				}
            </restapi>
		</step>
		<step name="create.hostname.address.profile" description="">
			<restapi name="createHostnameAddressProfile">
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"jsonType" : "hostname",
				"name" : "HostnameAddressPrfoile",
				"description" : "this is hostname address profile",
				"hostname":"${host.name1}"
				}
            </restapi>
		</step>
		<step name="create.ip.address.profile" description="">
			<restapi name="createIpAddressProfile">
				{
				"ownerId" : "${owner.id}",
				"predefined" :false,
				"jsonType" : "ip",
				"name" : "IpAddressPrfoile.1",
				"ipAddress":
				"${accessap.ip2}"
				}
            </restapi>
		</step>
		<step name="create.device">
			<restapi name="createDevice">
				{
				"ownerId":${owner.id},
				"ipAddress":"10.155.21.212",
				"macAddress":"197711112102",
				"hostname":"virtual device for test 102",
				"serialNumber":"1977222233334102",
				"productType":"AP_330",
				"softwareVersion": "6.1.0.2",
				"role":19050,
				"function":"Ap",
				"adminState":"UNMANAGED",
				"isConnected":true
				}
			</restapi>
		</step>
		<step name="create.network.policy">
			<restapi name="createNetworkPolicy">
				{
				"ownerId" : ${owner.id},
				"name":"Cloud_automation",
				"type" : "NetworkAccessAndSwitching"
				}
			</restapi>
		</step>
		<step name="create.radius.user.group" description="">
			<restapi name="createRadiusUserGroup">
				{
				"ownerId":${owner.id},
				"predefined":false,
				"jsonType":"radius-user-group",
				"name":"Radius_user_group_test01",
				"description":"this is a RadiusUserGroup",
				"userProfileAttribute":{"ownerId":${owner.id},
				"predefined":false,
				"attrNumber":2669,
				"autoGenerated":true},
			    "enableReauthorization": true,
				"reauthorizationTime":200,
				"credentialPersistencyStorage":"DRAM",
				"enableVoiceDeviceAuthentication":false
				}
           </restapi>
		</step>
		<step name="create.radius.server.ldap">
			<restapi name="createRadiusServer">
				{
				"ownerId": ${owner.id},
				"predefined": false,
				"jsonType":"radius-server",
				"name": "AAA_Radius_Server",
				"description": "This is a AAA_Radius_Server",
				"enableAcceptOtherDevsAuthReqs": false,
				"approvedRadiusClients":
				[{
				"ownerId" : ${owner.id},
				"predefined" :false,
				"sharedSecret":"aerohive",
				"description" : "This is description",
				"clientIp" : {
				"ownerId" : ${owner.id},
				"jsonType": "ip",
				"predefined" : false,
				"name" : "ApprovedRadiusClients",
				"description": "This is approvedRadiusClients",
				"ipAddress" : "10.155.201.53"
				}
				}],

				"enableExternalUserDirectory":true,
				"enableLibrarySipServer": false,
				"enableLocalDatabase": false,
				"authentication": "TLS",
				"defaultAuthentication": "TLS",
				"enableVerifyServerCert": true,
				"serverKeyPassword": "aerohive",
				"enableCheckCommonName": false,
				"enableCheckTls": true,
				"enableCheckPeap": false,
				"enableCheckTtls":false,
				
				
				"externalUserDirectory":
				{
				"jsonType": "open-ldap",
				"ownerId": ${owner.id},
				"predefined": false,
				"retryInterval": 6919728,
				"retryIntervalUnit": "SECOND",
				"localCheckInterval": 2708,
				"localCheckIntervalUnit": "SECOND",
				"remoteCheckInterval": 209,
				"remoteCheckIntervalUnit": "MINUTE",
				"enableCaching": true,
				"cacheLifeTime": 1215327,
				"cacheLifeTimeUnit": "MINUTE",
				"entries": 
				[{
				"ownerId": ${owner.id},
                "predefined": false,
                "taggedEntries": [],
                "defaultServer": 
                {
                "jsonType": "open-ldap",
				"ownerId": ${owner.id},
				"predefined": false,
				"name": "Server_test011",
				"description":"This is one server",
				"serverIp": "@{create.hostname.address.profile}",
				"baseDn":"dc=HMQATEST,dc=COM",
				"bindDn":"ddd.dn",
				"bindDnPassword":"aerohive",
				"protocolType": "LDAP",
				"filterAttribute": "2B9R5VzVDF4hHO774IHmi9hZTrk4KeLv",
				"stripRealmName": true,
				"destinationPort": 6764,
				"enableTls": true,
				"verifyServerCert": "DEMAND",
				"serverKeyPassword": "aerohive",
				"caCertificate": 
				{"ownerId" : ${owner.id},
				"predefined" : false,
				"fileName" :"test_file_01",
				"fileSize" : 426,
				"fileType"
				:"SELF_GEN_CA",
				"encrypted" : false,
				"uploadTime" : 1387903732679,
				"issuer" :"73d4AQuCKHyClF2KAtVh0ARlD6gN5FzPuspxC2l1",
				"subject":"0X0sLkaJozxOiPz16S3HZXhxJn04AzD",
				"expireTime" :"1387903732999"
				},
				"serverCertificate": 
				{
				"ownerId":${owner.id},
				"predefined": false,
				"fileName": "Test_file",
				"fileSize": 13076,
				"fileType": "SELF_GEN_CA",
				"encrypted": false,
				"uploadTime":1388088615444,
				"issuer":"rW3ssznJpG3FbQ3w1Sxhkjr3INdhRZBBdFTJo29JSjdjNQ",
				"subject":"asldjlskdfj",
				"expireTime":"1388088615554"
				},
				"serverPrivateKey": 
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"fileName" : "serprivatekey_server",
				"fileSize" : 9072566,
				"fileType": "CA",
				"encrypted" : true,
				"uploadTime" : 1387942203647,
				"issuer":"rW3ssznJpG3FbG6tsdZ05Jr80QNzAXR3m",
				"subject":"aSGaflgmneq4qUjnCvLelV2tEi9mhqFOuff67nu",
				"expireTime":"1387903732999"
				}
                },
                "serverRole": "BACKUP3"
				}],
				"enableEdirectory": true,
                "enableAccountPolicyCheck": false
				},

				"caCertificate":
				{
				"ownerId" : ${owner.id},
				"predefined" : false,
				"fileName" :"test_file_01",
				"fileSize" : 426,
				"fileType":"SELF_GEN_CA",
				"encrypted" : false,
				"uploadTime" : 1387903732679,
				"issuer" :"73d4AQuCKHyClF2KAtVh0ARlD6gN5FzPuspxC2l1",
				"subject":"0X0sLkaJozxOiPz16S3HZXhxJn04AzD",
				"expireTime" :"1387903732999"
				},

				"serverCertificate":
				{
				"ownerId":${owner.id},
				"predefined": false,
				"fileName": "Test_file",
				"fileSize": 13076,
				"fileType": "SELF_GEN_CA",
				"encrypted": false,
				"uploadTime":1388088615444,
				"issuer":"rW3ssznJpG3FbQ3w1Sxhkjr3INdhRZBBdFTJo29JSjdjNQ",
				"subject":"asldjlskdfj",
				"expireTime":"1388088615554"
				},
				"serverPrivateKey":
				{"ownerId" : ${owner.id},
				"predefined" : false,
				"fileName" : "serprivatekey_server",
				"fileSize" : 9072566,
				"fileType": "CA",
				"encrypted" : true,
				"uploadTime" : 1387942203647,
				"issuer":"rW3ssznJpG3FbG6tsdZ05Jr80QNzAXR3m",
				"subject":"aSGaflgmneq4qUjnCvLelV2tEi9mhqFOuff67nu",
				"expireTime":"1387903732999"}
				}
			</restapi>
		</step>
		
	</declaration>
	<stage>
		<step no="1">
			<call step="create.radius.server.ldap" />
		</step>
		<step no="2">
			<ssh target="${tb.fileserver}" user="root">
				-v "cat /var/data/fileserver/configuration/${owner.id}/${ap.mac}-deviceFull.config"
			</ssh>
		</step>
	</stage>
	<failed-process />
</testcase>