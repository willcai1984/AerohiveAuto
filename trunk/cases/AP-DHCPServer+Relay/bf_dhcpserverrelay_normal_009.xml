<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify that the function of arp-check</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Set vlan to interface mgt0.1
		Set ip address to interface mgt0.1
		Enable dhcp-server of interface mgt0.1
		Set ip-pool to interface mgt0.1 dhcp-server
		Create a SSID and bind it to interface wifi0
		Create a user-profile and set the same vlan with mgt0.1
		Set the same attribute to SSID with user-profile
		_ff id 1 etype 0806 bidirectional
		_kdebug fe basic
		_kdebug fe detail
		Debug telnet

		Test Procedure:
		1. Show interface mgt0.1 dhcp-server to check if arp-check is enabled
		by default, then use a client connect to SSID, before mgt0.1 assign
		ip address to client, verify if will send a arp to check
		2. Disable arp-check by "no interface mgt0.1 dhcp-server arp-check",
		show interface mgt0.1 dhcp-server and show running-config to
		check, then use another client connect to SSID, before mgt0.1
		assign a ipaddress to client, verify if will send a arp
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<property name="dhcp_start" value="192.168.${tb.vlan4}.10" />
	<property name="dhcp_end" value="192.168.${tb.vlan4}.20" />
	<property name="conn1.ssid" value="${job.sid}-1" />

	<stage>
		<include prefix="0" file="subs/l2swcfg_port_newvlan.xml" args="${ap1.eth0.swport}, ${tb.vlan4}" />

		<step no="1">
			<desc>
				Set vlan to interface mgt0.1
				Set ip address to interface mgt0.1
				Enable dhcp-server of interface mgt0.1
				Set ip-pool to interface mgt0.1 dhcp-server
				Create a SSID and bind it to interface wifi0
				Create a user-profile and set the same vlan with mgt0.1
				Set the same attribute to SSID with user-profile
			</desc>
			<log-file>step1_config_laptop_connect_ssid.log</log-file>
			<telnet target="ap1">
				-v "interface mgt0.1 vlan ${tb.vlan4}"
				-v "interface mgt0.1 ip ${dhcp_start}/24"
				-v "interface mgt0.1 dhcp-server ip-pool ${dhcp_start} ${dhcp_end}"
				-v "interface mgt0.1 dhcp-server options lease-time 60"
				-v "interface mgt0.1 dhcp-server options default-gateway 192.168.${tb.vlan4}.254"
				-v "interface mgt0.1 dhcp-server enable"
				-v "ssid ${conn1.ssid}"
				-v "security-object ${conn1.ssid}"
				-v "ssid ${conn1.ssid} security-object ${conn1.ssid}"
				-v "user-profile ${conn1.ssid}"
				-v "security-object ${conn1.ssid} default-user-profile-attr 1"
				-v "user-profile ${conn1.ssid} qos-policy def-user-qos vlan-id ${tb.vlan4} attribute 1"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "capwap client enable"
				-v "interface mgt0.1 dhcp-server arp-check"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				clear log all
			</desc>
			<telnet target="ap1">
				-v "clear arp-cache"
				-v "clear log all"
				-v "_ff id 1 etype 0806 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				Show interface mgt0.1 dhcp-server to check if arp-check is enabled
				by default, then use a client connect to SSID, before mgt0.1 assign
				ip address to client, verify if will send a arp to check
			</desc>
			<log-file>step1.2_check_default_arp_check_enabled.log</log-file>
			<telnet target="ap1">
				-v "show interface mgt0.1 dhcp-server"
			</telnet>
			<log-match>-c -i "Arp-check" -i "enabled"</log-match>
		</step>

		<step no="1.3">
			<desc>
				Backup file aerohive
				Clear file aerohive
			</desc>
			<ssh host="${tb.syslog_server}" prompt=">|.*#">
				-v "echo "" &gt; /var/log/aerohive"
			</ssh>
		</step>

		<step no="1.4">
			<desc>
				Set logging server
			</desc>
			<log-file>step1.4_set_logging_server.log</log-file>
			<telnet target="ap1">
				-v "logging server ${tb.syslog_server} level debug"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				Laptop has been associated with AP1
				create config file of wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "echo \"ctrl_interface=/var/run/wpa_supplicant\" > /tmp/wpa_supplicant.cfg"
				-v "ifconfig ${sta1.tif.name} down"
				-v "ifconfig ${sta1.tif.name} up"
			</ssh>
		</step>

		<step no="2.2" delay="5">
			<desc>
				start wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "killall wpa_supplicant"
				-v "wpa_supplicant -i ${sta1.tif.name} ${sta1.wpa_flag} -c /tmp/wpa_supplicant.cfg -B"
			</ssh>
		</step>

		<step no="2.3">
			<desc>config the laptop to apply the ssid profile,then start to associate</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${conn1.ssid}\""
				-v "set_network 0 key_mgmt NONE"
				-v "set_network 0 priority 5"
				-v "select_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<step no="2.4" delay="15" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>check if the client was associated successfully</desc>
			<log-file>wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="2.5" delay="10">
			<desc>ifconfig to show the ip add</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "dhclient ${sta1.tif.name} -r"
				-v "dhclient ${sta1.tif.name}"
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
			<log-match>-e "inet addr"</log-match>
		</step>

		<step no="2.6">
			<desc>Get laptop1's ip</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.7">
			<desc>
				check the server status
			</desc>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-e "${sta1.tif.ip}" -c</log-match>
		</step>

		<step no="2.8">
			<desc>
				show interface
			</desc>
			<log-file>step2.6_show_interface.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
		</step>

		<step no="2.9" delay="10">
			<desc>
				Get mgt0.1 mac
			</desc>
			<setvar name="mgt0.1_mac">
				${bin.dir}/getbyrexp.py -p "(?i)Mgt0.1\s+(\w+:\w+:\w+)\s+" -f ${log.dir}/step2.6_show_interface.log -t str
			</setvar>
		</step>

		<step no="2.10">
			<desc>
				show arp
			</desc>
			<log-file>step2.8_check_arp.log</log-file>
			<telnet target="ap1">
				-v "show arp"
			</telnet>
		</step>

		<step no="2.11" delay="300">
			<desc>
				check log
			</desc>
			<log-file>step2.9_check_log.log</log-file>
			<ssh host="${tb.syslog_server}">
				-v "cat /var/log/aerohive"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) mgt0.1 ${mgt0.1_mac}-&gt;[\da-f-A-F:]+ arp ${dhcp_start}\(${mgt0.1_mac}\)-&gt;${sta1.tif.ip}\(0000:0000:0000\) \d+ bytes" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) wifi0.1 ${mgt0.1_mac}-&gt;[\da-f-A-F:]+ arp ${dhcp_start}\(${mgt0.1_mac}\)-&gt;${sta1.tif.ip}\(0000:0000:0000\) \d+ bytes" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(o\) eth0 ${mgt0.1_mac}-&gt;[\da-f-A-F:]+ arp ${dhcp_start}\(${mgt0.1_mac}\)-&gt;${sta1.tif.ip}\(0000:0000:0000\) \d+ bytes" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="3">
			<desc>
				Disable arp-check by "no interface mgt0.1 dhcp-server arp-check",
				show interface mgt0.1 dhcp-server and show running-config to
				check, then use another client connect to SSID,
			</desc>
			<telnet target="ap1">
				-v "no interface mgt0.1 dhcp-server arp-check"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				show interface mgt0.1 dhcp-server
			</desc>
			<log-file>step3.1_arp_check_disabled.log</log-file>
			<telnet target="ap1">
				-v "show interface mgt0.1 dhcp-server"
			</telnet>
			<log-match>-c -i "Arp-check" -i "disabled"</log-match>
		</step>

		<step no="3.2">
			<desc>
				show running-config
			</desc>
			<log-file>step3.2_show_run.log</log-file>
			<telnet target="ap1">
				-v "show running-config"
			</telnet>
			<log-match>-c -i "no interface mgt0.1 dhcp-server arp-check"</log-match>
		</step>

		<step no="3.3">
			<desc>
				clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<step no="4.1">
			<desc>
				Laptop has been associated with AP1
				create config file of wpa_supplicant
			</desc>
			<ssh target="sta2">
				-v "echo \"ctrl_interface=/var/run/wpa_supplicant\" > /tmp/wpa_supplicant.cfg"
				-v "ifconfig ${sta2.tif.name} down"
				-v "ifconfig ${sta2.tif.name} up"
			</ssh>
		</step>

		<step no="4.2" delay="5">
			<desc>
				start wpa_supplicant
			</desc>
			<ssh target="sta2">
				-v "killall wpa_supplicant"
				-v "wpa_supplicant -i ${sta2.tif.name} ${sta2.wpa_flag} -c /tmp/wpa_supplicant.cfg -B"
			</ssh>
		</step>

		<step no="4.3">
			<desc>config the laptop to apply the ssid profile,then start to associate</desc>
			<ssh target="sta2" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${conn1.ssid}\""
				-v "set_network 0 key_mgmt NONE"
				-v "set_network 0 priority 5"
				-v "select_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<step no="4.4" delay="15" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>check if the client was associated successfully</desc>
			<log-file>wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta2" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="4.5" delay="10">
			<desc>ifconfig to show the ip add</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta2" timeout="80">
				-v "dhclient ${sta2.tif.name}"
				-v "ifconfig ${sta2.tif.name}"
			</ssh>
			<log-match>-e "inet addr"</log-match>
		</step>

		<step no="4.6">
			<desc>Get laptop1's ip</desc>
			<setvar name="sta2.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta2.tif.name} -nomask
			</setvar>
		</step>

		<step no="4.7">
			<desc>
				check the server status
			</desc>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-e "${sta2.tif.ip}" -c</log-match>
		</step>

		<step no="5" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Arp-check is disabled, no arp be sent before assign a ip address to client
			</desc>
			<log-file>step5_show_logging_buffered_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) mgt0.1 ${mgt0.1_mac}-&gt;ffff:ffff:ffff arp ${dhcp_start}\(${mgt0.1_mac}\)-&gt;${sta2.tif.ip}\(0000:0000:0000\) \d+ bytes" -c 0 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) wifi1.1 ${mgt0.1_mac}-&gt;ffff:ffff:ffff arp ${dhcp_start}\(${mgt0.1_mac}\)-&gt;${sta2.tif.ip}\(0000:0000:0000\) \d+ bytes" -c 0 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) wifi0.1 ${mgt0.1_mac}-&gt;ffff:ffff:ffff arp ${dhcp_start}\(${mgt0.1_mac}\)-&gt;${sta2.tif.ip}\(0000:0000:0000\) \d+ bytes" -c 0 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) eth0 ${mgt0.1_mac}-&gt;ffff:ffff:ffff arp ${dhcp_start}\(${mgt0.1_mac}\)-&gt;${sta2.tif.ip}\(0000:0000:0000\) \d+ bytes" -c 0 -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					cancel new vlan
				</desc>
				<telnet host="${tb.l2sw}" prompt=".*[>|#]">
					-v "enable"
					-v "config"
					-v "vlan database"
					-v "no vlan ${tb.vlan4}"
					-v "end"
					-v "show vlan"
				</telnet>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>