<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>DCD process be killed and restart, verify dhcp server still works normal</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>

		Pre-Condition:

		Set a dhcp server mgt0.1 and set some options
		Set a SSID and use mgt0.1 as dhcp server

		Test Procedure:

		1. Kill dcd process in shell, after process restart again, check config
		2. Use a laptop to connect to SSID, verify if can get correct ip address
		Execute result
		1. Config still exist
		2.Can get ip address, dhcp server works normal
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="tb.vlan4.dhcp_start" value="192.168.${tb.vlan4}.10" />
	<property name="tb.vlan4.dhcp_end" value="192.168.${tb.vlan4}.14" />
	<property name="mgt0.1_ip" value="192.168.${tb.vlan4}.10" />
	<property name="def_gw_id" value="192.168.${tb.vlan4}.254" />
	<property name="dns1_id" value="192.168.${tb.vlan4}.100" />
	<property name="domain_name_id" value="192.168.${tb.vlan4}.110" />
	<property name="mtu_id" value="1500" />
	<property name="netmask_id" value="255.255.255.0" />
	<property name="ntp1_id" value="192.168.${tb.vlan4}.120" />
	<property name="pop3_id" value="192.168.${tb.vlan4}.130" />
	<property name="smtp_id" value="192.168.${tb.vlan4}.140" />
	<property name="lease_time" value="120" />

	<stage>
		<step no="0">
			<desc>
				-if eth1 exist,shutdown eth1
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<console target="ap1">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<include prefix="0.1" file="subs/l2swcfg_port_newvlan.xml" args="${ap1.eth0.swport}, ${tb.vlan4}" />

		<step no="1">
			<desc>
				Set a dhcp server mgt0.1 and set some options
			</desc>
			<console target="ap1">
				-v "interface mgt0.1 vlan ${tb.vlan4}"
				-v "interface mgt0.1 ip ${mgt0.1_ip}/24"
				-v "interface mgt0.1 dhcp-server ip-pool ${tb.vlan4.dhcp_start} ${tb.vlan4.dhcp_end}"
				-v "interface mgt0.1 dhcp-server options default-gateway ${def_gw_id}"
				-v "interface mgt0.1 dhcp-server options dns1 ${dns1_id}"
				-v "interface mgt0.1 dhcp-server options domain-name ${domain_name_id}"
				-v "interface mgt0.1 dhcp-server options mtu ${mtu_id}"
				-v "interface mgt0.1 dhcp-server options netmask ${netmask_id}"
				-v "interface mgt0.1 dhcp-server options ntp1 ${ntp1_id}"
				-v "interface mgt0.1 dhcp-server options pop3 ${pop3_id}"
				-v "interface mgt0.1 dhcp-server options smtp ${smtp_id}"
				-v "interface mgt0.1 dhcp-server options lease-time ${lease_time}"
				-v "interface mgt0.1 dhcp-server enable"
			</console>
		</step>

		<step no="1.1">
			<desc>
				Set a SSID and use mgt0.1 as dhcp server
			</desc>
			<console target="ap1">
				-v "ssid ${ssid.name}"
				-v "security-object ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "user-profile ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${tb.vlan4} attribute 1"
				-v "interface wifi0 ssid ${ssid.name}"
			</console>
		</step>

		<step no="1.2">
			<desc>
				show run
			</desc>
			<log-file>step1.2_show_running.log</log-file>
			<console target="ap1">
				-v "show running-config"
			</console>
			<log-match>-c -i "interface mgt0.1 vlan ${tb.vlan4}"</log-match>
			<log-match>-c -i "interface mgt0.1 ip ${mgt0.1_ip}/24"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server ip-pool ${tb.vlan4.dhcp_start} ${tb.vlan4.dhcp_end}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options default-gateway ${def_gw_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options dns1 ${dns1_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options domain-name ${domain_name_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options mtu ${mtu_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options netmask ${netmask_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options ntp1 ${ntp1_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options pop3 ${pop3_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options smtp ${smtp_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options lease-time ${lease_time}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server enable"</log-match>
			<log-match>-c -i "ssid ${ssid.name}"</log-match>
			<log-match>-c -i "security-object ${ssid.name}"</log-match>
			<log-match>-c -i "ssid ${ssid.name} security-object ${ssid.name}"</log-match>
			<log-match>-c -i "security-object ${ssid.name} default-user-profile-attr 1"</log-match>
			<log-match>-c -i "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${tb.vlan4} attribute 1"</log-match>
			<log-match>-c -i "interface wifi0 ssid ${ssid.name}"</log-match>
		</step>

		<step no="2">
			<desc>
				1. Kill dcd process in shell, after process restart again, check config
			</desc>
			<log-file>check_dcd_process_1.log</log-file>
			<console target="ap1" prompt="AH.*(#|$)">
				-b -sp "${ap1.shellpwd}"
				-v "_shell"
				-v "killall -9 ah_dcd"
				-v "ps"
				-v "exit"
			</console>
			<no-error-check />
		</step>

		<step no="2.1" delay="20">
			<desc>
				delay dcd process restart
			</desc>
			<log-file>check_dcd_process_2.log</log-file>
			<console target="ap1" prompt="AH.*(#|$)">
				-b -sp "${ap1.shellpwd}"
				-v "_shell"
				-v "ps"
				-v "exit"
			</console>
			<log-match>-i "/opt/ah/bin/ah_dcd"</log-match>
			<no-error-check />
		</step>

		<step no="2.2">
			<desc>
				show run
			</desc>
			<log-file>step2.2_show_running.log</log-file>
			<console target="ap1">
				-v "show running-config"
			</console>
			<log-match>-c -i "interface mgt0.1 vlan ${tb.vlan4}"</log-match>
			<log-match>-c -i "interface mgt0.1 ip ${mgt0.1_ip}/24"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server ip-pool ${tb.vlan4.dhcp_start} ${tb.vlan4.dhcp_end}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options default-gateway ${def_gw_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options dns1 ${dns1_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options domain-name ${domain_name_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options mtu ${mtu_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options netmask ${netmask_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options ntp1 ${ntp1_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options pop3 ${pop3_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options smtp ${smtp_id}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server options lease-time ${lease_time}"</log-match>
			<log-match>-c -i "interface mgt0.1 dhcp-server enable"</log-match>
			<log-match>-c -i "ssid ${ssid.name}"</log-match>
			<log-match>-c -i "security-object ${ssid.name}"</log-match>
			<log-match>-c -i "ssid ${ssid.name} security-object ${ssid.name}"</log-match>
			<log-match>-c -i "security-object ${ssid.name} default-user-profile-attr 1"</log-match>
			<log-match>-c -i "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${tb.vlan4} attribute 1"</log-match>
			<log-match>-c -i "interface wifi0 ssid ${ssid.name}"</log-match>
		</step>

		<step no="3.1">
			<desc>
				Laptop has been associated with AP1
				create config file of wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "echo \"ctrl_interface=/var/run/wpa_supplicant\" > /tmp/wpa_supplicant.cfg"
				-v "ifconfig ${sta1.tif.name} down"
				-v "ifconfig ${sta1.tif.name} up"
			</ssh>
		</step>

		<step no="3.2" delay="5">
			<desc>
				start wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "killall wpa_supplicant"
				-v "wpa_supplicant -i ${sta1.tif.name} ${sta1.wpa_flag} -c /tmp/wpa_supplicant.cfg -B"
			</ssh>
		</step>

		<step no="3.3">
			<desc>config the laptop to apply the ssid profile,then start to associate</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "set_network 0 priority 5"
				-v "select_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<step no="3.4" delay="15" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>check if the client was associated successfully</desc>
			<log-file>wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="3.5" delay="10">
			<desc>ifconfig to show the ip add</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "dhclient ${sta1.tif.name}"
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
			<log-match>-e "inet addr"</log-match>
		</step>

		<step no="3.6">
			<desc>Get laptop1's ip</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="3.7">
			<desc>
				check the server status
			</desc>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-e "${sta1.tif.ip}" -c</log-match>
		</step>

	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					cancel new vlan
				</desc>
				<telnet host="${tb.l2sw}" prompt=".*[>|#]">
					-v "enable"
					-v "config"
					-v "vlan database"
					-v "no vlan ${tb.vlan4}"
					-v "end"
					-v "show vlan"
				</telnet>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>