<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Set static IP (un-routable) on AP WAN port, wired client, wireless client </brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Basic WAN routing and NAT features are validated

		Test Procedure:
		Set a non-valid IP address to the WAN port, and/or combinations of invalid static IP
		addresses on wired and wireless clients (including APs and clients attached to eth1
		of BR).
		Attempt to pass outbound traffic and traffic within the remote location (both L2 and
		L3 traffic).
	</description>
	<numofbr>1</numofbr>
	<numofcvg>0</numofcvg>
	<tbtype>winlin</tbtype>

	<property name="br1.sta1.invalid.ip" value="2.2.2.2" />
	<property name="br1.vpc1.invalid.ip" value="3.3.3.3" />

	<stage>
		<step no="1">
			<desc>
				disable eth0 dhcp client
			</desc>
			<console target="br1.br">
				-v "no interface eth0 dhcp client"
			</console>
		</step>

		<step no="2">
			<desc>
				Set a non-valid IP address to the WAN port
			</desc>
			<console target="br1.br">
				-v "interface eth0 ip ${br1.br.eth0.test_addr1}/24"
				-v "show interface eth0"
			</console>
		</step>

		<step no="3">
			<desc>
				Set a invalid IP address to the wireless client
			</desc>
			<ssh target="br1.sta1">
				-v "ifconfig ${br1.sta1.tif.name} down"
				-v "ifconfig ${br1.sta1.tif.name} up"
				-v "ifconfig ${br1.sta1.tif.name} ${br1.sta1.invalid.ip}"
				-v "ifconfig ${br1.sta1.tif.name}"
			</ssh>
		</step>

		<step no="4">
			<desc>
				Set a invalid IP address to the wired client
			</desc>
			<ssh target="br1.vpc1">
				-v "ifconfig ${br1.vpc1.tif.name} down"
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "ifconfig ${br1.vpc1.tif.name} ${br1.vpc1.invalid.ip}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
		</step>

		<step no="5">
			<multi-setvar>
				echo "br1.sta1.route=$(echo ${br1.sta1.invalid.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<step no="5.1">
			<multi-setvar>
				echo "br1.vpc1.route=$(echo ${br1.vpc1.invalid.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<step no="5.2">
			<desc>
				BR Set static routing to net on pc2
			</desc>
			<telnet target="${br1.br.eth0.test_addr1}">
				-v "ip route net ${br1.sta1.route} 255.255.255.0 gateway ${br1.br.eth0.test_addr1}"
				-v "ip route net ${br1.vpc1.route} 255.255.255.0 gateway ${br1.br.eth0.test_addr1}"
			</telnet>
		</step>

		<step no="Open.debug">
			<desc>
				Open debug switch
			</desc>
			<telnet target="${br1.br.eth0.test_addr1}">
				-v "_ff id 1 dst-ip ${pub.ftp1.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
			</telnet>
		</step>

		<step no="6">
			<desc>
				wireless client ping ftp server
			</desc>
			<log-file>step6_ping_ftp_server.log</log-file>
			<ssh target="br1.sta1">
				-v "ping ${pub.ftp1.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from" -i "ttl="</log-match>
		</step>

		<step no="6.1">
			<desc>
				wired client ping ftp server
			</desc>
			<log-file>step6.1_ping_ftp_server.log</log-file>
			<ssh target="br1.vpc1">
				-v "ping ${pub.ftp1.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from" -i "ttl="</log-match>
		</step>

		<step no="7">
			<desc>
				show route
			</desc>
			<ssh target="br1.sta1">
				-v "route"
			</ssh>
		</step>

		<step no="7.1">
			<desc>
				show route
			</desc>
			<ssh target="br1.vpc1">
				-v "route"
			</ssh>
		</step>

		<step no="7.2">
			<desc>
				show ip route
			</desc>
			<telnet target="${br1.br.eth0.test_addr1}">
				-v "show ip route"
			</telnet>
		</step>

		<step no="8">
			<desc>
				Check for abnormities in route and NAT tables
			</desc>
			<log-file>step10_login_shell_check_nat.log</log-file>
			<telnet target="br1.br" prompt="AH.*$">
				-b -sp "${br1.br.shellpwd}"
				-v "_shell"
				-v "iptables -t nat -nvL"
				-v "exit 0"
				-v ""
			</telnet>
		</step>

		<step no="9" delay="10">
			<desc>
				show logging buffered
			</desc>
			<log-file>step9_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.eth0.test_addr1}" timeout="800">
				-v "show logging buffered"
				-v ""
			</telnet>
			<no-error-check />
		</step>
	</stage>
</testcase>
