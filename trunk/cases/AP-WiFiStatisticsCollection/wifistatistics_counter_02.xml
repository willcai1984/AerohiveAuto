<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check if "Show in wifi0.1/wifi1.2 counter""Show in wifi0.1/wifi1.2 _Counter""Clear in wifi0.1/wifi1.2 counter" work normal or not</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Initial configuration:
		Radio profile ng phymode 11ng
		Radio profile na phymode 11na
		In wifi0 radio profile ng
		In wifi1 radio profile na
		Hive statistics
		In mgt0 hive statistics
		Ssid ${ssid.name}-1
		Ssid ${ssid.name}-2
		In wifi0 ssid ${ssid.name}-1
		In wifi1 ssid ${ssid.name}-2

		Test Procedure:
		1) Push initial configuration to AP
		2) Connect client to AP ssid ${ssid.name}-1 and run traffic between AP and sta
		3) Check if wifi0.1 counter have been displayed correctly by CLi:
		"show in wifi0.1 counter"
		"show in wifi0.1 _counter"
		And content "rx data frames" "rx management frames""tx data
		frames""tx beacon frames" should have the value value0.
		4) Clear interface wifi0.1 counter to check if the above value value0 have been
		decreased
		CLI:"clear in wifi0.1 counter"
		"Show in wifi0.1 counter"
		"show in wifi0.1 _counter"
		5) Connect client to AP ssid ${ssid.name}-2 and run traffic between AP and sta
		6) Check if wifi1.2 counter have been displayed correctly by CLi:
		"show in wifi1.2 counter"
		"show in wifi1.2 _counter"
		And content "rx data frames" "rx management frames""tx data
		frames""tx beacon frames" should have the value value1.
		7) Clear interface wifi1.2 counter to check if the above value value1 have been
		decreased
		CLI:"clear in wifi1.2 counter"
		"Show in wifi1.2 counter"
		"show in wifi1.2 _counter
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<stage>
		<step no="1">
			<desc>
				Initial configuration:
				radio profile ng phymode 11ng
				radio profile na phymode 11na
				in wifi0 radio profile ng
				in wifi1 radio profile na
				hive statistics
				in mgt0 hive statistics
				ssid ${ssid.name}-1
				ssid ${ssid.name}-2
				int wifi0 ssid ${ssid.name}-1
				int wifi1 ssid ${ssid.name}-2
			</desc>
			<telnet target="ap1">
				-v "radio profile ng phymode 11ng"
				-v "interface wifi0 radio profile ng"
				-v "hive statistics"
				-v "interface mgt0 hive statistics"
				-v "ssid ${ssid.name}-1"
				-v "interface wifi0 ssid ${ssid.name}-1"
			</telnet>
		</step>

		<step no="1.1">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				Initial configuration:
				radio profile na phymode 11na and wif1 related configure
			</desc>
			<telnet target="ap1">
				-v "radio profile na phymode 11na"
				-v "interface wifi1 radio profile na"
				-v "ssid ${ssid.name}-2"
				-v "interface wifi1 ssid ${ssid.name}-2"
			</telnet>
		</step>
        
		<step no="2">
			<desc>
				Ececute CLI command on MP:
				show interface wifi0.1 counter
			</desc>
			<log-file>step2.log</log-file>
			<console target="ap1">
				-v "show interface wifi0.1 counter"
			</console>
			<no-error-check />
		</step>

		<step no="2.1">
			<desc>
				get wifi0.1 content "rx data frames"
			</desc>
			<setvar name="rx_data_frames_0">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx data frames" -f ${log.dir}/step2.log -t str
			</setvar>
		</step>
		
		<step no="2.2">
			<desc>
				get wifi0.1 content "tx airtime"
			</desc>
			<setvar name="tx airtime_0">
				${bin.dir}/getbyrexp.py -p "(\d+\.\d+)m?s\s+tx airtime$" -f ${log.dir}/step2.log -t str
			</setvar>
		</step>
		
		<step no="2.3">
			<desc>
				get wifi0.1 content "tx data frames"
			</desc>
			<setvar name="tx_data_frames_0">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx data frames" -f ${log.dir}/step2.log -t str
			</setvar>
		</step>
		
        <property name="conn1.ssid" value="${ssid.name}-1" />
		<property name="conn2.ssid" value="${ssid.name}-2" />
		<property name="conn2.pif" value="wifi1" />
		
		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}_new.xml" obj-args="conn1, sta1, ap1"/>
		<include prefix="3.1" file="subs/sta_ping.xml" args="sta1, ${ap1.mgt0.ip}, 55"/>
		
		<step no="3.2">
			<desc>
				check station
			</desc>
			<log-file>step3.2.log</log-file>
			<console target="ap1">
			    -v "show l3 in"
				-v "show sta"
			</console>
			<no-error-check />
		</step>	
		
		<step no="4" delay="10">
			<desc>
				Ececute CLI command on MP:
				show interface wifi0.1 counter
			</desc>
			<log-file>step4.log</log-file>
			<console target="ap1">
				-v "show interface wifi0.1 counter"
			</console>
			<no-error-check />
		</step>
		
		<step no="4.1" delay="10">
			<desc>
				Ececute CLI command on MP:
				show interface wifi0.1 _counter
			</desc>
			<log-file>step4.1.log</log-file>
			<console target="ap1">
				-v "show interface wifi0.1 _counter"
			</console>
			<log-match>-e "rx data frames"</log-match>
			<log-match>-e "tx data frames"</log-match>
			<log-match>-e "tx airtime"</log-match>
			<no-error-check />
		</step>
		
		<step no="5">
			<desc>
				get wifi0.1 content "rx data frames"
			</desc>
			<setvar name="rx_data_frames_1">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx data frames" -f ${log.dir}/step4.log -t str
			</setvar>
		</step>

		<step no="5.1">
			<desc>
				get wifi0.1 content "tx airtime"
			</desc>
			<setvar name="tx airtime_1">
				${bin.dir}/getbyrexp.py -p "(\d+\.\d+)m?s\s+tx airtime$" -f ${log.dir}/step4.log -t str
			</setvar>
		</step>
		
		<step no="5.2">
			<desc>
				get wifi0.1 content "tx data frames"
			</desc>
			<setvar name="tx_data_frames_1">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx data frames" -f ${log.dir}/step4.log -t str
			</setvar>
		</step>
		
		<step no="6">
			<desc>
				compare content "tx airtime"
			</desc>
			 <script>
             echo ${tx airtime_0} ${tx airtime_1} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>
		
		<step no="6.1">
			<desc>
				compare content "tx data frames"
			</desc>
			 <script>
             echo ${tx_data_frames_0} ${tx_data_frames_1} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>	
		
		<step no="6.2">
			<desc>
				compare content "rx data frames"
			</desc>
			 <script>
             echo ${rx_data_frames_0} ${rx_data_frames_1} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>	
	
	    <step no="7">
			<desc>
				Clear interface wifi0.1 counter to check if the above value value0 have been
				decreased
				CLI:"clear in wifi0.1 counter"
				"Show in wifi0.1 counter"
			</desc>
			<log-file>step7.log</log-file>
			<telnet target="ap1">
				-v "clear in wifi0.1 counter"
				-v "Show in wifi0.1 counter"
			</telnet>
			<no-error-check />
		</step>
		
		<step no="8">
			<desc>
				get wifi0.1 content "rx data frames"
			</desc>
			<setvar name="rx_data_frames_2">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx data frames" -f ${log.dir}/step7.log -t str
			</setvar>
		</step>

		<step no="8.1">
			<desc>
				get wifi0.1 content "tx airtime"
			</desc>
			<setvar name="tx airtime_2">
				${bin.dir}/getbyrexp.py -p "(\d+\.\d+)m?s\s+tx airtime$" -f ${log.dir}/step7.log -t str
			</setvar>
		</step>
		
		<step no="8.2">
			<desc>
				get wifi0.1 content "tx data frames"
			</desc>
			<setvar name="tx_data_frames_2">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx data frames" -f ${log.dir}/step7.log -t str
			</setvar>
		</step>
		
		<step no="9">
			<desc>
				compare content "tx data frames"
			</desc>
			 <script>
             echo ${tx_data_frames_2} ${tx_data_frames_1} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>
		
		<step no="9.1">
			<desc>
				compare content "tx airtime"
			</desc>
			 <script>
             echo ${tx airtime_2} ${tx airtime_1} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>
		
		<step no="9.2">
			<desc>
				compare content "rx data frames"
			</desc>
			 <script>
             echo ${rx_data_frames_2} ${rx_data_frames_1} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>	
		
	    <step no="10">
			<desc>
				Ececute CLI command on MP:
				show interface wifi1.2 counter
			</desc>
			<log-file>step10.log</log-file>
			<console target="ap1">
				-v "show interface wifi1.2 counter"
			</console>
			<no-error-check />
		</step>

		<step no="10.1">
			<desc>
				get wifi1.2 content "rx data frames"
			</desc>
			<setvar name="rx_data_frames_00">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx data frames" -f ${log.dir}/step10.log -t str
			</setvar>
		</step>
		
		<step no="10.2">
			<desc>
				get wifi1.2 content "tx airtime"
			</desc>
			<setvar name="tx airtime_00">
				${bin.dir}/getbyrexp.py -p "(\d+\.\d+)m?s\s+tx airtime$" -f ${log.dir}/step10.log -t str
			</setvar>
		</step>
		
		<step no="10.3">
			<desc>
				get wifi1.2 content "tx data frames"
			</desc>
			<setvar name="tx_data_frames_00">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx data frames" -f ${log.dir}/step10.log -t str
			</setvar>
		</step>
			
		<include prefix="11" file="subs/sta_wifi_connect_${tb.os}_new.xml" obj-args="conn2, sta2, ap1"/>
		<include prefix="11.1" file="subs/sta_ping.xml" args="sta2, ${ap1.mgt0.ip}, 55"/>
		
		<step no="11.2">
			<desc>
				check station
			</desc>
			<log-file>step11.2.log</log-file>
			<console target="ap1">
			    -v "show l3 in"
				-v "show sta"
			</console>
			<no-error-check />
		</step>	
		
		<step no="14" delay="10">
			<desc>
				Ececute CLI command on MP:
				show interface wifi1.2 counter
			</desc>
			<log-file>step14.log</log-file>
			<console target="ap1">
				-v "show interface wifi1.2 counter"
			</console>
			<no-error-check />
		</step>
		
		<step no="14.1" delay="10">
			<desc>
				Ececute CLI command on MP:
				show interface wifi1.2 _counter
			</desc>
			<log-file>step14.1.log</log-file>
			<console target="ap1">
				-v "show interface wifi1.2 _counter"
			</console>
			<log-match>-e "rx data frames"</log-match>
			<log-match>-e "tx data frames"</log-match>
			<log-match>-e "tx airtime"</log-match>
			<no-error-check />
		</step>
		
		<step no="15">
			<desc>
				get wifi1.2 content "rx data frames"
			</desc>
			<setvar name="rx_data_frames_11">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx data frames" -f ${log.dir}/step14.log -t str
			</setvar>
		</step>

		<step no="15.1">
			<desc>
				get wifi1.2 content "rx management frames"
			</desc>
			<setvar name="tx airtime_11">
				${bin.dir}/getbyrexp.py -p "(\d+\.\d+)m?s\s+tx airtime$" -f ${log.dir}/step14.log -t str
			</setvar>
		</step>
		
		<step no="15.2">
			<desc>
				get wifi1.2 content "tx data frames"
			</desc>
			<setvar name="tx_data_frames_11">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx data frames" -f ${log.dir}/step14.log -t str
			</setvar>
		</step>
		
		<step no="16">
			<desc>
				compare content "tx airtime"
			</desc>
			 <script>
             echo ${tx airtime_00} ${tx airtime_11} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>
		
		<step no="16.1">
			<desc>
				compare content "tx data frames"
			</desc>
			 <script>
             echo ${tx_data_frames_00} ${tx_data_frames_11} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>
		
		<step no="16.2">
			<desc>
				compare content "rx data frames"
			</desc>
			 <script>
             echo ${rx_data_frames_00} ${rx_data_frames_11} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>	
	
	    <step no="17">
			<desc>
				Clear interface wifi1.2 counter to check if the above value value0 have been
				decreased
				CLI:"clear in wifi1.2 counter"
				"Show in wifi1.2 counter"
			</desc>
			<log-file>step17.log</log-file>
			<telnet target="ap1">
				-v "clear in wifi1.2 counter"
				-v "Show in wifi1.2 counter"
			</telnet>
			<no-error-check />
		</step>
		
		<step no="18">
			<desc>
				get wifi1.2 content "rx data frames"
			</desc>
			<setvar name="rx_data_frames_22">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+rx data frames" -f ${log.dir}/step17.log -t str
			</setvar>
		</step>

		<step no="18.1">
			<desc>
				get wifi1.2 content "rx management frames"
			</desc>
			<setvar name="tx airtime_22">
				${bin.dir}/getbyrexp.py -p "(\d+\.\d+)m?s\s+tx airtime$" -f ${log.dir}/step17.log -t str
			</setvar>
		</step>
		
		<step no="18.2">
			<desc>
				get wifi1.2 content "tx data frames"
			</desc>
			<setvar name="tx_data_frames_22">
				${bin.dir}/getbyrexp.py -p "(\d+)\s+tx data frames" -f ${log.dir}/step17.log -t str
			</setvar>
		</step>
		
		<step no="19">
			<desc>
				compare content "tx airtime"
			</desc>
			 <script>
             echo ${tx airtime_22} ${tx airtime_11} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>
		
		<step no="19.1">
			<desc>
				compare content "tx data frames"
			</desc>
			 <script>
             echo ${tx_data_frames_22} ${tx_data_frames_11} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>
		
		<step no="19.2">
			<desc>
				compare content "tx data frames"
			</desc>
			 <script>
             echo ${rx_data_frames_22} ${rx_data_frames_11} | awk '{
             if ($2 &gt; $1)
                {exit (0);}
            else
                {exit (1);}
            }'
            </script>
		</step>	
		
		
    </stage>
</testcase>