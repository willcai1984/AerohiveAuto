<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>(IxPort: CoF=2) Ingress filtering check for access port</brief>
	<priority>high</priority>
	<automated>yes</automated>

	<description>
		Topology to use	
		IXIA PORT1++++(access)Switch(trunk)++++IXIA PORT2
		Description	Ingress filtering check for access port
		Platform Dependence	SR2024
		Pre-condition	?	Reset config of switch to factory default
		?	Create vlan related vlan first on switch
		?	IXIA PORT1 connect to a switch access port, pvid 10
		?	IXIA PORT2 connect to a switch trunk port, pvid is default vlan, allow all
		Test procedure	1.	Set IXIA PORT2 to capture frames
		2.	IXIA PORT1 send untagged frames to IXIA PORT2        Result1
		3.	IXIA PORT1 send priority-tagged frames to IXIA PORT2       Result2
		4.	IXIA PORT1 send vlan 10 tagged frames to IXIA PORT2       Result3
		5.	IXIA PORT1  send vlan 20 tagged frames to IXIA PORT2        Result4
		Expect result	Result1:   IXIA PORT2 can receive the frames sent by IXIA PORT1, the frames are with vlan tag 10
		?pass

		Result2:   IXIA PORT2 can receive the frames sent by IXIA PORT1, the frames are with vlan tag 10
		?pass

		Result3:   IXIA PORT2 can’t receive any frames, because access port only received untagged frames
		?pass

		Result4:   IXIA PORT2 can’t receive any frames, because access port only received untagged frames
		?pass
	</description>

	<numofsw>1</numofsw>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<!-- self defined steps -->
		</stage>
		<include file="include/sw_default_pre_process.xml" />
	</pre-process>

	<property name="sw1.port1.ixia_port.mac" value="0000.0000.0015"/>
	<stage>
		<step no="1">
			<desc>
				configure switch, port1 is access, port2 is trunk
			</desc>
			<telnet target="sw1">
				-v "vlan ${tb.vlan1}"
				-v "vlan ${tb.vlan2}"
				-v "interface ${sw1.port1} switchport access vlan ${tb.vlan1}"
				-v "interface ${sw1.port2} switchport mode trunk"
				-v "show vlan brief"
				-v "show vlan summary"
				-v "show vlan id ${tb.vlan1}"
				-v "show vlan id ${tb.vlan2}"
			</telnet>
		</step>

		<property name="stream1.txport1" value="${sw1.port1.ixia_port}" />
		<property name="stream1.txvlan" value="${tb.vlan1}" />
		<property name="stream1.rxport1" value="${sw1.port2.ixia_port}" />
		<property name="stream1.txport1.mac" value="${sw1.port1.ixia_port.mac}" />
		<property name="stream1.rxport1.mac" value="ffff.ffff.ffff" />
		<property name="stream1.etype" value="0x0800" />
		<property name="stream1.UDFoffset" value="34" />
		<property name="stream1.patternOffset2" value="38" />

		<step no="2.1">
			<desc>add udf1 to check vlan${stream1.txvlan}</desc>
			<setvar name="stream1.UDFsignature1">
				echo "8100`printf %04x ${stream1.txvlan}`"
			</setvar>
		</step>
		<step no="2.2">
			<desc>
				build stream1, port1 sends untagged pkt to port2, start transmit and get statistics
			</desc>
			<log-file>eth2test1.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -tclServerIP ${pub.tclserver1.ip} -portList ${sw1.port1.ixia_port},${sw1.port2.ixia_port},${sw1.port3.ixia_port},${sw1.port4.ixia_port} -phyList ${sw1.port1.phytype},${sw1.port2.phytype},${sw1.port3.phytype},${sw1.port4.phytype}" 
				-v ""

				<!--configure the first stream -->
				-v "traffic_configure_eth2 -portListIn ${stream1.txport1},${stream1.rxport1}
				-mac_dst ${stream1.rxport1.mac}
				-mac_src ${stream1.txport1.mac}
				-eth2_protocol ${stream1.etype}
				-udf_offset ${stream1.UDFoffset}
				-patternOffset2 ${stream1.patternOffset2}
				-pattern1In 0x${stream1.UDFsignature1}
				-patternMask1In 0x00000000
				-patternOffset1 12
				-userDefinedStat2Pattern pattern1AndPattern2"
				-v ""

				-v "start_trans_getstats -txPortList ${stream1.txport1} -rxPortList ${stream1.rxport1}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort ${stream1.txport1} -oneRxPort ${stream1.rxport1}"
				-v ""
				-v "ctrl-c"
			</ssh>
		</step>
		<step no="2.3">
			<desc>check FDB</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
		</step>
		<step no="2.4">
			<desc>
				analyse statistics on rxport 
			</desc>
			<log-file>eth2test1.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream1.txport1} ${stream1.rxport1} framesSent userDefinedStat2 result is equal"</log-match>
		</step>

		<property name="stream2.txport1" value="${sw1.port1.ixia_port}" />
		<property name="stream2.txvlan" value="${tb.vlan1}" />
		<property name="stream2.rxport1" value="${sw1.port2.ixia_port}" />
		<property name="stream2.txport1.mac" value="${sw1.port1.ixia_port.mac}" />
		<property name="stream2.rxport1.mac" value="ffff.ffff.ffff" />
		<property name="stream2.etype" value="0x0800" />
		<property name="stream2.UDFoffset" value="38" />
		<property name="stream2.patternOffset2" value="38" />

		<step no="3.1">
			<desc>add udf1 to check vlan${stream2.txvlan}</desc>
			<setvar name="stream2.UDFsignature1">
				echo "8100`printf %04x $(expr 8192 + ${stream2.txvlan})`"
			</setvar>
		</step>
		<step no="3.2">
			<desc>
				build stream2, port1 sends priority-tagged pkt to port2
			</desc>
			<log-file>eth2test2.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -tclServerIP ${pub.tclserver1.ip} -portList ${sw1.port1.ixia_port},${sw1.port2.ixia_port},${sw1.port3.ixia_port},${sw1.port4.ixia_port} -phyList ${sw1.port1.phytype},${sw1.port2.phytype},${sw1.port3.phytype},${sw1.port4.phytype}" 
				-v ""

				<!--configure the first stream -->
				-v "traffic_configure_eth2 -portListIn ${stream2.txport1},${stream2.rxport1}
				-mac_dst ${stream2.rxport1.mac}
				-mac_src ${stream2.txport1.mac}
				-vlan enable
				-vlan_id 0
				-vlan_dot1p 1
				-vlan_cfi 0
				-eth2_protocol ${stream2.etype}
				-udf_offset ${stream2.UDFoffset}
				-patternOffset2 ${stream2.patternOffset2}
				-pattern1In 0x${stream2.UDFsignature1}
				-patternMask1In 0x00000000
				-patternOffset1 12
				-userDefinedStat2Pattern pattern1AndPattern2"
				-v ""

				-v "start_trans_getstats -txPortList ${stream2.txport1} -rxPortList ${stream2.rxport1}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort ${stream2.txport1} -oneRxPort ${stream2.rxport1}"
				-v ""
				-v "ctrl-c"
			</ssh>
		</step>
		<step no="3.3">
			<desc>check FDB</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
		</step>
		<step no="3.4">
			<desc>
				analyse statistics on rxport 
			</desc>
			<log-file>eth2test2.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream2.txport1} ${stream2.rxport1} framesSent userDefinedStat2 result is equal"</log-match>
		</step>

		<property name="stream3.txport1" value="${sw1.port1.ixia_port}" />
		<property name="stream3.txvlan" value="${tb.vlan1}" />
		<property name="stream3.rxport1" value="${sw1.port2.ixia_port}" />
		<property name="stream3.txport1.mac" value="${sw1.port1.ixia_port.mac}" />
		<property name="stream3.rxport1.mac" value="ffff.ffff.ffff" />
		<property name="stream3.etype" value="0x0800" />
		<property name="stream3.UDFoffset" value="38" />
		<property name="stream3.patternOffset2" value="38" />

		<step no="4.1">
			<desc>add udf1 to check vlan${stream3.txvlan}</desc>
			<setvar name="stream3.UDFsignature1">
				echo "8100`printf %04x ${stream3.txvlan}`"
			</setvar>
		</step>
		<step no="4.2">
			<desc>
				build stream3, port1 sends vlan${stream3.txvlan} tagged pkt to port2 
			</desc>
			<log-file>eth2test3.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -tclServerIP ${pub.tclserver1.ip} -portList ${sw1.port1.ixia_port},${sw1.port2.ixia_port},${sw1.port3.ixia_port},${sw1.port4.ixia_port} -phyList ${sw1.port1.phytype},${sw1.port2.phytype},${sw1.port3.phytype},${sw1.port4.phytype}" 
				-v ""

				<!--configure the first stream -->
				-v "traffic_configure_eth2 -portListIn ${stream3.txport1},${stream3.rxport1}
				-mac_dst ${stream3.rxport1.mac}
				-mac_src ${stream3.txport1.mac}
				-vlan enable
				-vlan_id ${stream3.txvlan}
				-vlan_dot1p 0
				-vlan_cfi 0
				-eth2_protocol ${stream3.etype}
				-udf_offset ${stream3.UDFoffset}
				-patternOffset2 ${stream3.patternOffset2}
				-pattern1In 0x${stream3.UDFsignature1}
				-patternMask1In 0x00000000
				-patternOffset1 12
				-userDefinedStat2Pattern pattern1AndPattern2"
				-v ""

				-v "start_trans_getstats -txPortList ${stream3.txport1} -rxPortList ${stream3.rxport1}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort ${stream3.txport1} -oneRxPort ${stream3.rxport1}"
				-v ""
				-v "ctrl-c"
			</ssh>
		</step>
		<step no="4.3">
			<desc>check FDB</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
		</step>
		<step no="4.4">
			<desc>
				analyse statistics on rxport 
			</desc>
			<log-file>eth2test3.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream3.txport1} ${stream3.rxport1} framesSent userDefinedStat2 result is block"</log-match>
		</step>

		<property name="stream4.txport1" value="${sw1.port1.ixia_port}" />
		<property name="stream4.txvlan" value="${tb.vlan2}" />
		<property name="stream4.rxport1" value="${sw1.port2.ixia_port}" />
		<property name="stream4.txport1.mac" value="${sw1.port1.ixia_port.mac}" />
		<property name="stream4.rxport1.mac" value="ffff.ffff.ffff" />
		<property name="stream4.etype" value="0x0800" />
		<property name="stream4.UDFoffset" value="38" />
		<property name="stream4.patternOffset2" value="38" />

		<step no="5.1">
			<desc>add udf1 to check vlan${stream4.txvlan}</desc>
			<setvar name="stream4.UDFsignature1">
				echo "8100`printf %04x ${stream4.txvlan}`"
			</setvar>
		</step>
		<step no="5.2">
			<desc>
				build stream4, port1 sends vlan${stream4.txvlan} tagged pkt to port2 
			</desc>
			<log-file>eth2test4.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -tclServerIP ${pub.tclserver1.ip} -portList ${sw1.port1.ixia_port},${sw1.port2.ixia_port},${sw1.port3.ixia_port},${sw1.port4.ixia_port} -phyList ${sw1.port1.phytype},${sw1.port2.phytype},${sw1.port3.phytype},${sw1.port4.phytype}" 
				-v ""

				<!--configure the first stream -->
				-v "traffic_configure_eth2 -portListIn ${stream4.txport1},${stream4.rxport1}
				-mac_dst ${stream4.rxport1.mac}
				-mac_src ${stream4.txport1.mac}
				-vlan enable
				-vlan_id ${stream4.txvlan}
				-vlan_dot1p 0
				-vlan_cfi 0
				-eth2_protocol ${stream4.etype}
				-udf_offset ${stream4.UDFoffset}
				-patternOffset2 ${stream4.patternOffset2}
				-pattern1In 0x${stream4.UDFsignature1}
				-patternMask1In 0x00000000
				-patternOffset1 12
				-userDefinedStat2Pattern pattern1AndPattern2"
				-v ""

				-v "start_trans_getstats -txPortList ${stream4.txport1} -rxPortList ${stream4.rxport1}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort ${stream4.txport1} -oneRxPort ${stream4.rxport1}"
				-v ""
				-v "ctrl-c"
			</ssh>
		</step>
		<step no="5.3">
			<desc>check FDB</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
		</step>
		<step no="5.4">
			<desc>
				analyse statistics on rxport 
			</desc>
			<log-file>eth2test4.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream4.txport1} ${stream4.rxport1} framesSent userDefinedStat2 result is block"</log-match>
		</step>
	</stage>
	<post-process>
		<stage>
			<!-- self defined steps, no need script now -->
		</stage>
		<include file="include/sw_default_post_process.xml" />
	</post-process>
</testcase>
