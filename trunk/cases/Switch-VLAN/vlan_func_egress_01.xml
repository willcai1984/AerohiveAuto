<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>(IxPort: CoF=2) Egress filtering for access port</brief>
	<priority>high</priority>
	<automated>yes</automated>

	<description>
		Topology to use	
		IXIA PORT1++++(trunk)Switch(access)++++IXIA PORT2

		Description	Egress filtering for access port
		Platform Dependence	SR2024
		Pre-condition	?	Reset config of switch to factory default
		?	Create vlan related vlan first on switch
		?	IXIA PORT1 connect to switch trunk port, pvid is 10, allow all
		?	IXIA PORT2 connect to switch access port, pvid is 20
		Test procedure	1.	Set IXIA PORT2 to capture frames
		2.	IXIA PORT1 send vlan 20 tagged frames to switch       Result1
		3.	IXIA PORT1 send vlan 10 tagged frames to switch       Result2
		Expect result	Result1:   IXIA PORT2 can receive frames sent by IXIA PORT1, and the frames is untagged
		?pass
		Result2:   IXIA PORT2 donâ€™t receive any frames
		?pass
	</description>

	<numofsw>1</numofsw>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<!-- self defined steps -->
		</stage>
		<include file="include/sw_default_pre_process.xml" />
	</pre-process>

	<property name="sw1.port1.ixia_port.mac" value="0000.0000.0015"/>

	<stage>
		<step no="1">
			<desc>
				configure switch, port1 is trunk, port2 is access
			</desc>
			<telnet target="sw1">
				-v "vlan ${tb.vlan1}"
				-v "vlan ${tb.vlan2}"
				-v "interface ${sw1.port1} switchport mode trunk"
				-v "interface ${sw1.port1} switchport trunk allow vlan all"
				-v "interface ${sw1.port1} switchport trunk native vlan ${tb.vlan1}"
				-v "interface ${sw1.port2} switchport access vlan ${tb.vlan2}"
				-v "show vlan brief"
				-v "show vlan summary"
				-v "show vlan id ${tb.vlan1}"
				-v "show vlan id ${tb.vlan2}"
			</telnet>
		</step>

		<property name="stream1.txport1" value="${sw1.port1.ixia_port}" />
		<property name="stream1.txvlan" value="${tb.vlan2}" />
		<property name="stream1.rxport1" value="${sw1.port2.ixia_port}" />
		<property name="stream1.txport1.mac" value="${sw1.port1.ixia_port.mac}" />
		<property name="stream1.rxport1.mac" value="ffff.ffff.ffff" />
		<property name="stream1.etype" value="0x0800" />
		<property name="stream1.UDFoffset" value="38" />
		<property name="stream1.patternOffset2" value="34" />

		<step no="2.1">
			<desc>add udf1 to check vlan${stream1.txvlan}</desc>
			<setvar name="stream1.UDFsignature1">
				echo "8100`printf %04x ${stream1.txvlan}`"
			</setvar>
		</step>
		<step no="2.2">
			<desc>
				build stream1, port1 sends vlan${stream1.txvlan} tagged frames to por2 
			</desc>
			<log-file>eth2test1.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -tclServerIP ${pub.tclserver1.ip} -portList ${sw1.port1.ixia_port},${sw1.port2.ixia_port},${sw1.port3.ixia_port},${sw1.port4.ixia_port} -phyList ${sw1.port1.phytype},${sw1.port2.phytype},${sw1.port3.phytype},${sw1.port4.phytype}" 
				-v ""

				<!--configure the first stream -->
				-v "traffic_configure_eth2 -portListIn ${stream1.txport1},${stream1.rxport1}
				-mac_dst ${stream1.rxport1.mac}
				-mac_src ${stream1.txport1.mac}
				-vlan enable
				-vlan_id ${stream1.txvlan}
				-vlan_dot1p 0
				-vlan_cfi 0
				-eth2_protocol ${stream1.etype}
				-udf_offset ${stream1.UDFoffset}
				-patternOffset2 ${stream1.patternOffset2}
				-pattern1In 0x08000000
				-patternMask1In 0x00001111
				-patternOffset1 12
				-userDefinedStat2Pattern pattern1AndPattern2"
				-v ""

				-v "start_trans_getstats -txPortList ${stream1.txport1} -rxPortList ${stream1.rxport1}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort ${stream1.txport1} -oneRxPort ${stream1.rxport1}"
				-v ""
				-v "ctrl-c"
			</ssh>
		</step>
		<step no="2.3">
			<desc>check FDB</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
		</step>
		<step no="2.4">
			<desc>
				analyse statistics on rxport 
			</desc>
			<log-file>eth2test1.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream1.txport1} ${stream1.rxport1} framesSent userDefinedStat2 result is equal"</log-match>
		</step>

		<property name="stream2.txport1" value="${sw1.port1.ixia_port}" />
		<property name="stream2.txvlan" value="${tb.vlan1}" />
		<property name="stream2.rxport1" value="${sw1.port2.ixia_port}" />
		<property name="stream2.txport1.mac" value="${sw1.port1.ixia_port.mac}" />
		<property name="stream2.rxport1.mac" value="ffff.ffff.ffff" />
		<property name="stream2.etype" value="0x0800" />
		<property name="stream2.UDFoffset" value="38" />
		<property name="stream2.patternOffset2" value="34" />

		<step no="3.1">
			<desc>add udf1 to check vlan${stream2.txvlan}</desc>
			<setvar name="stream2.UDFsignature1">
				echo "8100`printf %04x ${stream2.txvlan}`"
			</setvar>
		</step>
		<step no="3.2">
			<desc>
				build stream2, port1 sends vlan${stream2.txvlan} tagged frames to port2
			</desc>
			<log-file>eth2test2.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -tclServerIP ${pub.tclserver1.ip} -portList ${sw1.port1.ixia_port},${sw1.port2.ixia_port},${sw1.port3.ixia_port},${sw1.port4.ixia_port} -phyList ${sw1.port1.phytype},${sw1.port2.phytype},${sw1.port3.phytype},${sw1.port4.phytype}" 
				-v ""

				<!--configure the first stream -->
				-v "traffic_configure_eth2 -portListIn ${stream2.txport1},${stream2.rxport1}
				-mac_dst ${stream2.rxport1.mac}
				-mac_src ${stream2.txport1.mac}
				-vlan enable
				-vlan_id ${stream2.txvlan}
				-vlan_dot1p 0
				-vlan_cfi 0
				-eth2_protocol ${stream2.etype}
				-udf_offset ${stream2.UDFoffset}
				-patternOffset2 ${stream2.patternOffset2}
				-pattern1In 0x08000000
				-patternMask1In 0x00001111
				-patternOffset1 12
				-userDefinedStat2Pattern pattern1AndPattern2"
				-v ""

				-v "start_trans_getstats -txPortList ${stream2.txport1} -rxPortList ${stream2.rxport1}"
				-v ""
				-v "check_equal_tx_with_rx -oneTxPort ${stream2.txport1} -oneRxPort ${stream2.rxport1}"
				-v ""
				-v "ctrl-c"
			</ssh>
		</step>
		<step no="3.3">
			<desc>check FDB</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
		</step>
		<step no="3.4">
			<desc>
				analyse statistics on rxport 
			</desc>
			<log-file>eth2test2.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream2.txport1} ${stream2.rxport1} framesSent userDefinedStat2 result is block"</log-match>
		</step>
	</stage>

	<post-process>
		<stage>
			<!-- self defined steps, no need script now -->
		</stage>
		<include file="include/sw_default_post_process.xml" />
	</post-process>
</testcase>
