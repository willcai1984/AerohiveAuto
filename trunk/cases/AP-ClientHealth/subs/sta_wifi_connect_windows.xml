<include obj-arg-names="__CONN__,__STA__, __AP__" arg-names="debug_level">
	<step no="debug.x">
		<desc>debug info</desc>
		<script>
			echo "debug_level=${debug_level}"
			echo "negt_test=${__CONN__.auth_negative_test}"
		</script>
	</step>
	<step no="set_default_value_of_pif">
		<desc>set the default value of __AP__tif</desc>
		<if>"${__AP__.pif}" == ""</if>
		<setvar name="__CONN__.pif">
			echo "wifi0";
		</setvar>
	</step>

	<step no="set_default_value_of_ssid">
		<desc>set default ssid name</desc>
		<if>"${__CONN__.ssid}" == ""</if>
		<setvar name="__CONN__.ssid">
			echo "${ssid.name}";
		</setvar>
	</step>

	<step no="set_default_value_of_proto">
		<desc>set default ssid name</desc>
		<if>"${__CONN__.proto}" == ""</if>
		<setvar name="__CONN__.proto">
			echo "open";
		</setvar>
	</step>
	
	<step no="set_default_value_of_psk_keytype">
		<desc>set default value of psk keytype</desc>
		<if>"${__CONN__.psk.keytype}" == ""</if>
		<setvar name="__CONN__.psk.keytype">
			echo "ascii";
		</setvar>
	</step>


	<step no="set_default_value_of_lif_1">
		<desc>show ssid ${__CONN__.ssid} on __AP__</desc>
		<if>"${debug}" >= 1</if>
		<log-file>show_ssid_${__CONN__.ssid}.log</log-file>
		<telnet target="__AP__">
			-v "show ssid ${__CONN__.ssid}"
		</telnet>
	</step>

	<step no="set_default_value_of_lif_2">
		<desc>get the logical interface of ssid ${__CONN__.ssid}</desc>
		<if>"${debug}" >= 1 </if>
		<setvar name="__CONN__.lif">
			${bin.dir}/getbyrexp.py -p "(?i)(${__CONN__.pif}\.\d)" -t str -f ${log.dir}/show_ssid_${__CONN__.ssid}.log
		</setvar>
	</step>
	<step no="set_default_value_of_debug">
		<desc>set default ssid nameiii</desc>
		<if>"${debug_level}" == ""</if>
		<setvar name="debug_level">
			echo 0;
		</setvar>
	</step>

	<step no="geneter.the.temple.file">
		<if> "${__CONN__.psk.keytype}" == "ascii" </if>
		<desc>Generate profile for ssid ${conn1.ssid}</desc>
		<log-file>__STA___to_${__CONN__.ssid}.xml</log-file>
		<script>
			${bin.dir}/winprof_gen.pl -f ${auto.root.dir}/subs/conf/${__CONN__.proto}.xml -l ${log.dir} -o __STA___to_${__CONN__.ssid}.xml -s "${__CONN__.ssid}";
		</script>
	</step>

	<step no="geneter.the.temple.file">
		<if> "${__CONN__.psk.keytype}" == "hex" </if>
		<desc>Generate profile for ssid ${conn1.ssid}</desc>
		<log-file>__STA___to_${__CONN__.ssid}.xml</log-file>
		<script>
			${bin.dir}/winprof_gen.pl -f ${auto.root.dir}/subs/conf/${__CONN__.proto}-hex.xml -l ${log.dir} -o __STA___to_${__CONN__.ssid}.xml -s "${__CONN__.ssid}";
		</script>
	</step>

	<step no="change_default_psk_if_the_proto_is_psk">
		<desc>Generate profile for ssid ${__CONN__.ssid}</desc>
		<if> ("${__CONN__.proto}" == "wpa-tkip-psk" || "${__CONN__.proto}" == "wpa-aes-psk" || "${__CONN__.proto}" == "wpa2-tkip-psk" || "${__CONN__.proto}" == "wpa2-aes-psk" || "${__CONN__.proto}" == "wep-open" || "${__CONN__.proto}" == "wep-shared" ) &amp;&amp; ("${__CONN__.psk}" != "") </if>
		<script>
			sed -i "s/_PSK_/${__CONN__.psk}/" ${log.dir}/__STA___to_${__CONN__.ssid}.xml
		</script>
	</step>

	<step no="change_default_key_index_if_the_proto_wep">
		<desc>Generate profile for ssid ${__CONN__.ssid}</desc>
		<if> ("${__CONN__.proto}" == "wep-open" || "${__CONN__.proto}" == "wep-shared" ) &amp;&amp; ("${__CONN__.keyidx}" != "")</if>
		<script>
			sed -i "s/_KEYIDX_/${__CONN__.keyidx}/" ${log.dir}/__STA___to_${__CONN__.ssid}.xml
		</script>
	</step>

	<step no="transfer.the.profile.tohost">
		<desc>send the above ssid profile file to __STA__</desc>
		<script>
			staf local fs copy file ${log.dir}/__STA___to_${__CONN__.ssid}.xml tofile "c:\\staf\\wifi_aerohive_test.xml" tomachine ${__STA__.mif.ip}
		</script>
	</step>

	<step no="disconnect_old_connection">
		<desc>Bring down the Wireless interface of __STA__</desc>
		<script>
			${bin.dir}/stafcmd.pl -d ${__STA__.mif.ip} -v "netsh wlan disconnect interface=\"${__STA__.tif.name}\""
		</script>
	</step>

	<step no="delete_old_profile">
		<desc>Delete current Wireless profile on __STA__</desc>
		<script>
			${bin.dir}/stafcmd.pl -d ${__STA__.mif.ip} -v "netsh wlan delete profile * "
		</script>
	</step>

	<step no="add_new_profile">
		<desc>Add new profile for ssid ${__CONN__.ssid} to __STA__</desc>
		<script>
			${bin.dir}/stafcmd.pl -d ${__STA__.mif.ip} -v "netsh wlan add profile filename="c:\\staf\\wifi_aerohive_test.xml" interface=\"${__STA__.tif.name}\""
		</script>
	</step>

	<step no="get_sta_ip_info">
		<desc>get the ip info of ___STA___</desc>
		<log-file>ipconfig_${__STA__.mif.ip}.log</log-file>
		<script>
			perl ${bin.dir}/stafcmd.pl -d ${__STA__.mif.ip} -v "ipconfig /all" -l ${log.dir} -o ${log.file} 2>/dev/null
		</script>
	</step>

	<step no="get_sta_mac">
		<desc>Get __STA__'s mac</desc>
		<setvar name="__STA__.tif.mac">
			perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ipconfig_${__STA__.mif.ip}.log -i ${__STA__.tif.name} -m -o win -width | tr '[A-F]' '[a-f]'
		</setvar>
	</step>

	<step no="set_auth_debug_on_ap">
		<desc>enable debug on demand to trace DHCP issue</desc>
		<if>${debug_level} == 1 || ${debug_level} >= 5 	</if>
		<telnet target="__AP__">
			-v "_df id 1 data src-mac ${__STA__.tif.mac} bidirectional interface ${__CONN__.pif} "
			-v "_kdebug wifi-driver ${__AP__.pif} xmit"
			-v "_kde wifi-driver ${__CONN__.lif} auth"
			-v "_kde wifi-driver ${__CONN__.lif} assoc"
			-v "_kdebug wifi basic"
			-v "_debug auth basic"
			-v "_debug auth info"
			-v "_debug auth excessive"
			-v "_debug auth error"
			-v "clear log all"
		</telnet>
	</step>

	<step no="set_dhcp_debug_on_ap">
		<desc>enable debug on demand to trace DHCP issue</desc>
		<if>${debug_level} == 2 || ${debug_level} >= 5 	</if>
		<console target="__AP__">
			-v "_ff id 1 src-port 68 bidirectional"
			-v "_kdebug fe basic"
			-v "_kdebug fe detail"
			-v "clear log all"
		</console>
	</step>

	<step no="set_to_connect" delay="10">
		<desc>Bring up the client Wireless on __STA__</desc>
		<script>
			${bin.dir}/stafcmd.pl -d ${__STA__.mif.ip} -v "netsh wlan connect name=${__CONN__.ssid} interface=\"${__STA__.tif.name}\"" -v " netsh wlan show profiles"
		</script>
	</step>

	<step no="check_the_connection" delay="15" type="loop-check" loop-max-times="10" loop-interval="5">
		<desc>check if __STA__ is associated successfully</desc>
		<if> "${__CONN__.auth_negative_test}" == ""</if>
		<log-file>ipconfig___STA___${loop_check.idx}.log</log-file>
		<script>
			${bin.dir}/stafcmd.pl -d ${__STA__.mif.ip} -v "netsh wlan show interface " -l ${log.dir} -o ${log.file}
		</script>
		<log-match>-i  "State\s*:\s*connected" -c</log-match>
		<log-match>-i "SSID" -i "${__CONN__.ssid}" </log-match>
	</step>

	<step no="5.a" delay="15">
		<desc>check if __STA__ is associated unsuccessfully</desc>
		<if> "${__CONN__.auth_negative_test}" == "true"</if>
		<log-file>connect__STA___${loop_check.idx}.log</log-file>
		<script>
			${bin.dir}/stafcmd.pl -d ${__STA__.mif.ip} -v "netsh wlan show interface " -l ${log.dir} -o ${log.file}
		</script>
		<log-match>-n  -i "State\s*:\s*connected" -c</log-match>
		<log-match>-n -i "SSID" -i "${__CONN__.ssid}"</log-match>
	</step>

	<step no="trace_dhcp_bug">
		<desc>check debug on demand to trace DHCP issue</desc>
		<if>${debug_level} >= 1 </if>
		<log-file>trace___STA___dhcp.log</log-file>
		<console target="__AP__" timeout="600">
			-v "show logging buffered";exit 0
		</console>
		<no-error-check />
	</step>

	<step no="get_sta_ip" delay="15" type="loop-check" loop-max-times="10" loop-interval="5">
		<desc>get interface info  on ___STA___</desc>
		<if> "${__CONN__.auth_negative_test}" != "true" &amp;&amp; "${__CONN__.dhcp_negative_test}" != "true"  </if>
		<log-file>get_ip___STA___${loop_check.idx}.log</log-file>
		<script>
			perl ${bin.dir}/stafcmd.pl -d ${__STA__.mif.ip} -v "ipconfig /all" -l ${log.dir} -o ${log.file} 2>/dev/null
		</script>
		<log-match bin="${bin.dir}/searchbyrexp.py"> -p "Default Gateway . . . . . . . . . :\s+(\d+)" -f ${log.dir}/${log.file}</log-match>
	</step>

	<!--<step no="get_sta_ip_negative">-->
	<!--	<desc>Show interface on laptop2</desc>-->
	<!--	<if> "${__CONN__.auth_negative_test}" == "true" || "${__CONN__.dhcp_negative_test}" == "true"  </if>-->
	<!--	<log-file>get_ip___STA____neg.log</log-file>-->
	<!--	<script>-->
	<!--		perl ${bin.dir}/stafcmd.pl -d ${__STA__.mif.ip} -v "ipconfig /all" -l ${log.dir} -o ${log.file}-->
	<!--	</script>-->
	<!--	<log-match> -n -i "Default Gateway" </log-match>-->
	<!--</step>-->

	<step no="get_sta_ip_info2">
		<desc>get the ip info of ___STA___ after auth finished</desc>
		<if> "${__CONN__.auth_negative_test}" != "true" &amp;&amp; "${__CONN__.dhcp_negative_test}" != "true"  </if>
		<log-file>ipconfig__${__STA__.mif.ip}_af_.log</log-file>
		<script>
			perl ${bin.dir}/stafcmd.pl -d ${__STA__.mif.ip} -v "ipconfig /all" -l ${log.dir} -o ${log.file} 2>/dev/null
		</script>
	</step>

	<step no="get_sta_ip">
		<desc>Get ___STA___'s ip</desc>
		<if> "${__CONN__.auth_negative_test}" != "true" &amp;&amp; "${__CONN__.dhcp_negative_test}" != "true"  </if>
		<setvar name="__STA__.tif.ip">
			perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ipconfig__${__STA__.mif.ip}_af_.log -i ${__STA__.tif.name} -o win -nomask
		</setvar>
	</step>
</include>
