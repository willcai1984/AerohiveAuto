<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>VLAN configuration mgmt test</brief>
	<priority>high</priority>
	<automated>yes</automated>

	<description>
		Topology to use
		Switch

		Pre-condition:
		Reset config of switch to factory default

		Test procedure:
		1. for bug 28150:;

		Expect result:


	</description>

	<numofsw>1</numofsw>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<!-- self defined steps -->
		</stage>
		<include file="include/sw_default_pre_process.xml" />
	</pre-process>

	<property name="sw1.port1.ixia_port.mac" value="0000.0000.0015" />
	<property name="sw1.port2.ixia_port.mac" value="0000.0000.0016" />
	<property name="sw1.port3.ixia_port.mac" value="0000.0000.0017" />
	<property name="stream1.txport1" value="${sw1.port1.ixia_port}" />
	<property name="stream1.rxport1" value="${sw1.port2.ixia_port}" />
	<property name="stream1.rxport2" value="${sw1.port3.ixia_port}" />
	<property name="stream1.txport1.mac" value="${sw1.port1.ixia_port.mac}" />
	<property name="stream1.rxport1.mac" value="ffff.ffff.ffff" />
	<property name="stream1.etype" value="0x0800" />
	<property name="stream1.UDFoffset" value="34" />
	<property name="stream1.patternOffset1" value="38" />

	<stage>
		<step no="1">
			<desc>
				configure switch, port1 is trunk
			</desc>
			<telnet target="sw1">
				-v "vlan ${tb.vlan1}"
				-v "vlan ${tb.vlan2}"
				-v "interface ${sw1.port1} switchport mode trunk"
				-v "interface ${sw1.port1} switchport trunk allow vlan all"

				-v "show vlan brief"
				-v "show vlan summary"
				-v "show vlan id ${tb.vlan1}"
				-v "show vlan id ${tb.vlan2}"
				-v "show interface ${sw1.port1} switchport"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				get ${sw1.port1} mac
			</desc>
			<log-file>show_interface.log</log-file>
			<telnet target="sw1">
				-v "show interface | in ${sw1.port1}"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				get ${sw1.port1} mac
			</desc>
			<setvar name="stream1.txport1.mac">
				${bin.dir}/getbyrexp.py -p "${sw1.port1}\s+([\w:]+)\s+ enable" -f ${log.dir}/show_interface.log -t str
			</setvar>

		</step>

		<step no="3.1">
			<desc>add udf1 to check vlan</desc>
			<setvar name="stream1.UDFsignature1">
				echo "8100`printf %04x $(expr 0 + ${tb.vlan1})`"
			</setvar>
		</step>

		<step no="3.2">
			<desc>
				build untagged stream, txport is port1, rxport are port2 and port3, start transmit and get statistics
			</desc>
			<log-file>eth2test.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -tclServerIP ${pub.tclserver1.ip} -portList ${sw1.port1.ixia_port},${sw1.port2.ixia_port},${sw1.port3.ixia_port},${sw1.port4.ixia_port} -phyList ${sw1.port1.phytype},${sw1.port2.phytype},${sw1.port3.phytype},${sw1.port4.phytype}"
				-v ""

				<!--configure the first stream -->
				-v "traffic_configure_eth2 -portListIn ${stream1.txport1},${stream1.rxport1},${stream1.rxport2}
				-mac_dst ffff.ffff.ffff
				-mac_src ${stream1.txport1.mac}
				<!-- -vlan enable -vlan_id ${tb.vlan1} -vlan_dot1p 0 -vlan_cfi 0 -->
				-eth2_protocol ${stream1.etype}
				-udf_offset ${stream1.UDFoffset}
				-patternOffset2 ${stream1.UDFoffset}
				-pattern1In 0x08000000
				-patternMask1In 0x00001111
				-patternOffset1 12
				-userDefinedStat2Pattern pattern1AndPattern2"
				-v ""

				<!-- start transmit -->
				-v "start_trans_getstats -txPortList ${stream1.txport1} -rxPortList ${stream1.rxport1},${stream1.rxport2}"
				-v ""
				<!-- check the result -->
				-v "check_equal_tx_with_rx -oneTxPort ${stream1.txport1} -oneRxPort ${stream1.rxport1}"
				-v ""
				-v "ctrl-c"
			</ssh>
		</step>
		<step no="3.3">
			<desc>check FDB</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
			<log-match>-c -n -i "${sw1.port1}" -i "${stream1.txport1.mac}"</log-match>
		</step>
		<step no="3.4">
			<desc>
				analyse statistics on rxport, port2 received untagged pkt
			</desc>
			<log-file>eth2test.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream1.txport1} ${stream1.rxport1} framesSent userDefinedStat2 result is equal"</log-match>
		</step>

		<step no="4.1">
			<desc>
				configure switch,set port1 monitor session destination, port2 monitor session source
			</desc>
			<telnet target="sw1">
				-v "monitor session dd "
				-v "monitor session dd destination interface ${sw1.port1}"
				-v "monitor session dd source interface ${sw1.port2} both"
				-v "monitor session dd enable"
				-v "show interface ${sw1.port1} switchport"
				-v "show vlan-entry chip"
			</telnet>
			<log-match>-c -i "Port Mirror:" -i "enable"</log-match>
			<log-match>-c -i "${sw1.port1}" -i "4095"</log-match>
		</step>

		<step no="4.2">
			<desc>
				disable monitor session
			</desc>
			<telnet target="sw1">
				-v "no monitor session dd "
				-v "show interface ${sw1.port1} switchport"
				-v "show vlan-entry chip"
			</telnet>
			<log-match>-c -i "Port Mirror:" -i "disable"</log-match>
			<log-match>-c -i "${sw1.port1}" -i "1"</log-match>
			<no-error-check />
		</step>

		<step no="5.1">
			<desc>add udf1 to check vlan</desc>
			<setvar name="stream1.UDFsignature1">
				echo "8100`printf %04x $(expr 0 + ${tb.vlan1})`"
			</setvar>
		</step>

		<step no="5.2">
			<desc>
				build untagged stream, txport is port1, rxport are port2 and port3, start transmit and get statistics
			</desc>
			<log-file>eth2test.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -userName ${job.user}${job.sid} -tclServerIP ${pub.tclserver1.ip} -portList ${sw1.port1.ixia_port},${sw1.port2.ixia_port},${sw1.port3.ixia_port},${sw1.port4.ixia_port} -phyList ${sw1.port1.phytype},${sw1.port2.phytype},${sw1.port3.phytype},${sw1.port4.phytype}"
				-v ""

				<!--configure the first stream -->
				-v "traffic_configure_eth2 -portListIn ${stream1.txport1},${stream1.rxport1},${stream1.rxport2}
				-mac_dst ffff.ffff.ffff
				-mac_src ${stream1.txport1.mac}
				<!-- -vlan enable -vlan_id ${tb.vlan1} -vlan_dot1p 0 -vlan_cfi 0 -->
				-eth2_protocol ${stream1.etype}
				-udf_offset ${stream1.UDFoffset}
				-patternOffset2 ${stream1.UDFoffset}
				-pattern1In 0x08000000
				-patternMask1In 0x00001111
				-patternOffset1 12
				-userDefinedStat2Pattern pattern1AndPattern2"
				-v ""

				<!-- start transmit -->
				-v "start_trans_getstats -txPortList ${stream1.txport1} -rxPortList ${stream1.rxport1},${stream1.rxport2}"
				-v ""
				<!-- check the result -->
				-v "check_equal_tx_with_rx -oneTxPort ${stream1.txport1} -oneRxPort ${stream1.rxport1}"
				-v ""
				-v "ctrl-c"
			</ssh>
		</step>
		<step no="5.3">
			<desc>check FDB</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
			<log-match>-c -n -i "${sw1.port1}" -i "${stream1.txport1.mac}"</log-match>
		</step>
		<step no="5.4">
			<desc>
				analyse statistics on rxport, port2 received untagged pkt, port3 can't received packet
			</desc>
			<log-file>eth2test.log</log-file>
			<log-match>-e "checkEqualTxWithRX ${stream1.txport1} ${stream1.rxport1} framesSent userDefinedStat2 result is equal"</log-match>
		</step>



	</stage>

	<post-process>
		<stage>
			<!-- self defined steps, no need script now -->
		</stage>
		<include file="include/sw_default_post_process.xml" />
	</post-process>
</testcase>
