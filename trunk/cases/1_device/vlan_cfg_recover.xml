<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>VLAN configuration mgmt test</brief>
	<priority>high</priority>
	<automated>yes</automated>

	<description>
		Topology to use
		Switch

		Pre-condition:
		Reset config of switch to factory default

		Test procedure:


	</description>

	<numofsw>1</numofsw>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<comment>
		sw1.port1=eth1/5;
		sw1.port2=eth1/6;
		sw1.port3=eth1/13;
		sw1.port4=eth1/14;
		sw1.port3.ixia_port
		sw1.port1.ixia_port=1/2/7;
		sw1.port2.ixia_port=1/2/8;
		sw1.port1.ixia_port=1/2/9;
		sw1.port2.ixia_port=1/2/10;
		sw1.terminal.ip=10.155.32.105;
		sw1.terminal.port=2054;
		pub.chassis1.ip=10.155.33.216;
		pub.tclclient1.ip=10.155.40.10;

		mpc.mif.ip=10.155.32.128;
		mpc.tif.ip=10.68.136.253;
		mpc.user=root;
		mpc.passwd=aerohive;
		mpc.prompt=".*#";
		mpc.tif.name=eth1;
		tb.nvlan=100;
		tb.vlans=100,200,300;
		tb.vlan1=100;
		tb.vlan2=200;
		tb.vlan3=300;
	</comment>
	<pre-process>
		<stage>
			<!-- self defined steps -->
		</stage>
		<include file="include/sw_default_pre_process.xml" />
	</pre-process>

	<property name="vlan_range" value="1101-1354" />

	<stage>
		<step no="1">
			<desc>
				Show interface mgt0 to get ip address
			</desc>
			<log-file>mgt0_ip_info.log</log-file>
			<console target="sw1">
				-v "vlan ${tb.vlan1}"
				-v "vlan ${tb.vlan2}"
				-v 'show interface mgt0'
			</console>
			<no-error-check />
		</step>

		<step no="2">
			<desc>
				Get mgt0's ip address
			</desc>
			<setvar name="sw1.ip">
				python ${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -f ${log.dir}/mgt0_ip_info.log -t str
			</setvar>
			<no-error-check />
		</step>

		<step no="3">
			<desc>
				Configure 255 vlans 101-355
			</desc>
			<log-file>step3_config.log</log-file>
			<script timeout="180">
				python ${bin.dir}/ssh_execute_cli.py -cli 'vlan (l1)' -list '${vlan_range}' -d ${sw1.ip} -debug -l ${log.dir} -z ${log.file}
			</script>
			<no-error-check />
		</step>

		<step no="4">
			<desc>
				Show vlan summary
			</desc>
			<console target="sw1">
				-v "show vlan summary"
			</console>
			<no-error-check />
		</step>

		<step no="5">
			<desc>
				config port
			</desc>
			<console target="sw1">
				-v "interface ${sw1.port1} switchport mode access"
				-v "interface ${sw1.port1} switchport access vlan ${tb.vlan1}"

				-v "interface ${sw1.port2} switchport mode trunk"
				-v "interface ${sw1.port2} switchport trunk native vlan ${tb.vlan2}"
				-v "no interface ${sw1.port2} switchport trunk allow vlan all"
			</console>
			<no-error-check />
		</step>

		<step no="6">
			<desc>
				config port
			</desc>
			<console target="sw1">
				-v "show running"
			</console>
			<log-match>-c -i "interface ${sw1.port1} switchport access vlan ${tb.vlan1}"</log-match>
			<log-match>-c -i "interface ${sw1.port2} switchport mode trunk"</log-match>
			<log-match>-c -i "no interface ${sw1.port2} switchport trunk allow vlan all"</log-match>
			<log-match>-c -i "interface ${sw1.port2} switchport trunk native vlan ${tb.vlan2}"</log-match>
			<no-error-check />
		</step>

		<step no="7">
			<desc>
				agg config
			</desc>
			<console target="sw1">
				-v "agg 1"
				-v "interface agg1 switch mode trunk"
				-v "interface agg1 switch trunk native vlan ${tb.vlan1}"
				-v "interface ${sw1.port3} agg 1"
				-v "show agg 1"
			</console>
		</step>

		<step no="8">
			<desc>
				agg config
			</desc>
			<console target="sw1">
				-v "agg 2"
				-v "interface agg2 switch access vlan ${tb.vlan2}"
				-v "interface ${sw1.port4} agg 2"
				-v "show agg 2"
			</console>
		</step>

		<step no="9">
			<desc>
				agg config
			</desc>
			<console target="sw1">
				-v "agg 2"
				-v "interface agg2 switch access vlan ${tb.vlan2}"
				-v "interface ${sw1.port4} agg 2"
				-v "show agg 2"
			</console>
		</step>

		<step no="10">
			<desc>
				mirror session
			</desc>
			<telnet target="sw1">
				-v "monitor session dd"
				-v "monitor session dd destination interface ${sw1.port1}"
				-v "monitor session dd source interface ${sw1.port2} both"
				-v "monitor session dd enable"
				-v "show interface ${sw1.port1} switchport"
				-v "show vlan-entry chip"
			</telnet>
			<log-match>-c -i "Port Mirror:" -i "enable"</log-match>
			<log-match>-c -i "${sw1.port1}" -i "4095"</log-match>
		</step>

		<step no="11">
			<desc>
				create interface vlan validation check, create interface vlanx should create vlan x first;
			</desc>
			<telnet target="sw1">
				-v "vlan 1"
				-v "interface vlan 1"
				-v "show l3 interface"
			</telnet>
			<log-match>-c -i "vlan1"</log-match>
			<no-error-check />
		</step>

		<step no="12">
			<desc>
				show running;
			</desc>
			<telnet target="sw1">
				-v "show running"
			</telnet>
			<log-match>-c -i "interface ${sw1.port1} switchport access vlan ${tb.vlan1}"</log-match>
			<log-match>-c -i "interface ${sw1.port2} switchport mode trunk"</log-match>
			<log-match>-c -i "no interface ${sw1.port2} switchport trunk allow vlan all"</log-match>
			<log-match>-c -i "interface ${sw1.port2} switchport trunk native vlan ${tb.vlan2}"</log-match>
			<log-match>-c -i "monitor session dd"</log-match>
			<log-match>-c -i "monitor session dd destination interface ${sw1.port1}"</log-match>
			<log-match>-c -i "monitor session dd source interface ${sw1.port2} both"</log-match>
			<log-match>-c -i "monitor session dd enable"</log-match>
			<log-match>-c -i "agg 2"</log-match>
			<log-match>-c -i "agg 1"</log-match>
			<log-match>-c -i "interface agg1 switchport mode trunk"</log-match>
			<log-match>-c -i "interface agg1 switchport trunk native vlan ${tb.vlan1}"</log-match>
			<log-match>-c -i "interface ${sw1.port3} agg 1"</log-match>
			<log-match>-c -i "interface agg2 switchport access vlan ${tb.vlan2}"</log-match>
			<log-match>-c -i "interface ${sw1.port4} agg 2"</log-match>
			<no-error-check />
		</step>

		<step no="13">
			<desc>
				save config, and reboot, configurate recover
			</desc>
			<console target="sw1" slow="1">
				-v "save config"
				-v "reboot"
			</console>
			<no-error-check />
		</step>

		<step no="14" delay="240">
			<desc>
				configurate recover
			</desc>
			<telnet target="sw1">
				-v "show running"
			</telnet>
			<log-match>-c -i "interface ${sw1.port1} switchport access vlan ${tb.vlan1}"</log-match>
			<log-match>-c -i "interface ${sw1.port2} switchport mode trunk"</log-match>
			<log-match>-c -i "no interface ${sw1.port2} switchport trunk allow vlan all"</log-match>
			<log-match>-c -i "interface ${sw1.port2} switchport trunk native vlan ${tb.vlan2}"</log-match>
			<log-match>-c -i "monitor session dd"</log-match>
			<log-match>-c -i "monitor session dd destination interface ${sw1.port1}"</log-match>
			<log-match>-c -i "monitor session dd source interface ${sw1.port2} both"</log-match>
			<log-match>-c -i "monitor session dd enable"</log-match>
			<log-match>-c -i "agg 2"</log-match>
			<log-match>-c -i "agg 1"</log-match>
			<log-match>-c -i "interface agg1 switchport mode trunk"</log-match>
			<log-match>-c -i "interface agg1 switchport trunk native vlan ${tb.vlan1}"</log-match>
			<log-match>-c -i "interface ${sw1.port3} agg 1"</log-match>
			<log-match>-c -i "interface agg2 switchport access vlan ${tb.vlan2}"</log-match>
			<log-match>-c -i "interface ${sw1.port4} agg 2"</log-match>
		</step>

	</stage>

	<post-process>
		<stage>
			<!-- self defined steps, no need script now -->
		</stage>
		<include file="include/sw_default_post_process.xml" />
	</post-process>
</testcase>
