<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>clear MAC learned on port and VLAN when port change VLAN</brief>
	<priority>high</priority>
	<automated>yes</automated>

	<description>
		bug 20071
		Topology to use	
		PC1++++++ Switch   

		Description	when a port change VLAN, MACs on this VLAN and port should be deleted, shutdown command test, update fdb when trunk port change allow list
		Platform Dependence	Chesapeake
		Pre-condition	?	PC1 connect to switch port1
		PC1 is in vlan1
		Test procedure	Dynamic unicast mac entries
		1.	PC1 send frames to switch, then stop
		2.	Check learned MACs
		3.	change port from vlan1 to vlan2
		4.  check FDB table, should be null

	</description>

	<numofsw>1</numofsw>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<comment>
		sw1.port1=eth1/5;
		sw1.port2=eth1/6;
		sw1.port3=eth1/13;
		sw1.port4=eth1/14;
		sw1.port3.ixia_port
		sw1.port1.ixia_port=1/2/7;
		sw1.port2.ixia_port=1/2/8;
		sw1.port1.ixia_port=1/2/9;
		sw1.port2.ixia_port=1/2/10;
		sw1.terminal.ip=10.155.32.105;
		sw1.terminal.port=2054;
		pub.chassis1.ip=10.155.33.216;
		pub.tclclient1.ip=10.155.40.10;

		mpc.mif.ip=10.155.32.128;
		mpc.tif.ip=10.68.136.253;
		mpc.user=root;
		mpc.passwd=aerohive;
		mpc.prompt=".*#";
		mpc.tif.name=eth1;
		tb.nvlan=100;
		tb.vlans=100,200,300;
		tb.vlan1=100;
		tb.vlan2=200;
		tb.vlan3=300;
	</comment>
	<pre-process>
		<stage>
			<!-- self defined steps -->
		</stage>
		<include file="include/sw_default_pre_process.xml" />
	</pre-process>

	<stage>
		<property name="sw1.port1.ixia_port.mac" value="0000.0000.0011"/>
		<property name="sw1.port2.ixia_port.mac" value="0000.0000.0012"/>
		<property name="sw1.port3.ixia_port.mac" value="0000.0000.0013"/>
		<step no="1">
			<desc>
				configure ports 1 in vlan 1, create vlan 2
			</desc>
			<telnet target="sw1">
				-v "vlan ${tb.vlan1}"
				-v "vlan ${tb.vlan2}"
				-v "interface ${sw1.port1} switchport access vlan ${tb.vlan1}"
				-v "show vlan brief"
				-v "show vlan summary"
				-v "show vlan id ${tb.vlan1}"
				-v "clear mac-address-table all"
				-v "show mac-address-table all"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				port1 send pkts to let switch learn FDB entries	
			</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${sw1.port1.ixia_port},${sw1.port2.ixia_port},${sw1.port3.ixia_port},${sw1.port4.ixia_port} -phyList ${sw1.port1.phytype},${sw1.port2.phytype},${sw1.port3.phytype},${sw1.port4.phytype}"
				-v ""

				<!--configure the first stream -->
				-v "traffic_configure_eth2 -portListIn ${sw1.port1.ixia_port}
				-mac_dst ffff.ffff.ffff 
				-mac_src ${sw1.port1.ixia_port.mac}
				-eth2_protocol 0x0800"
				-v ""

				-v "start_trans_getstats -txPortList ${sw1.port1.ixia_port} -rxPortList ${sw1.port1.ixia_port}"
				-v ""
				-v "ctrl-c"
			</ssh>
		</step>
		
		<step no="2.2">
			<desc>check FDB, mac entries are learned from port 1</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
			<log-match>-e "${tb.vlan1}\s*${sw1.port1.ixia_port.mac}\s*${sw1.port1}\s*no"</log-match>
		</step>
		
		<step no="2.3">
			<desc>change port's vlan, then check FDB, should be no MAC entry in vlan 1</desc>
			<telnet target="sw1">
				-v "interface ${sw1.port1} switchport access vlan ${tb.vlan2}"
				-v "show mac-address-table vlan ${tb.vlan1}"
			</telnet>
			<log-match>-e "Total mac entry num: 0"</log-match>
		</step>
		
		<step no="2.31">
			<desc>set port1 as trunk mode</desc>
			<telnet target="sw1">
				-v "interface ${sw1.port1} switchport mode trunk"
				-v "interface ${sw1.port1} switchport trunk native vlan ${tb.vlan1}"
			</telnet>
		</step>
		
		<step no="2.4">
			<desc>
				port1 send pkts to let switch learn FDB entries	
			</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${sw1.port1.ixia_port},${sw1.port2.ixia_port},${sw1.port3.ixia_port},${sw1.port4.ixia_port} -phyList ${sw1.port1.phytype},${sw1.port2.phytype},${sw1.port3.phytype},${sw1.port4.phytype}"
				-v ""

				<!--configure the first stream -->
				-v "traffic_configure_eth2 -portListIn ${sw1.port1.ixia_port}
				-mac_dst ffff.ffff.ffff 
				-mac_src ${sw1.port1.ixia_port.mac}
				-eth2_protocol 0x0800"
				-v ""

				-v "start_trans_getstats -txPortList ${sw1.port1.ixia_port} -rxPortList ${sw1.port1.ixia_port}"
				-v ""
				-v ""
				-v "ctrl-c"
			</ssh>
		</step>
		
		<step no="2.5">
			<desc>check FDB, should be MAC entry in vlan 1, port 1</desc>
			<telnet target="sw1">
				-v "sh mac-address-table interface ${sw1.port1}"
			</telnet>
			<log-match>-e "${tb.vlan1}\s*${sw1.port1.ixia_port.mac}\s*${sw1.port1}\s*no"</log-match>
		</step>
		
		<step no="2.51">
			<desc>change allow list, check FDB, should be no MAC entry in vlan 1, port 1</desc>
			<telnet target="sw1">
				-v "no interface ${sw1.port1} switchport trunk allow vlan ${tb.vlan1}"
				-v "sh mac-address-table interface ${sw1.port1}"
			</telnet>
			<log-match>-e "${tb.vlan1}\s*${sw1.port1.ixia_port.mac}\s*${sw1.port1}\s*no" -n</log-match>
		</step>
		
		<step no="2.52">
			<desc>change allow list</desc>
			<telnet target="sw1">
				-v "interface ${sw1.port1} switchport trunk allow vlan ${tb.vlan1}"
			</telnet>
		</step>
		
		<step no="2.53">
			<desc>
				port1 send pkts to let switch learn FDB entries	
			</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${sw1.port1.ixia_port},${sw1.port2.ixia_port},${sw1.port3.ixia_port},${sw1.port4.ixia_port} -phyList ${sw1.port1.phytype},${sw1.port2.phytype},${sw1.port3.phytype},${sw1.port4.phytype}"
				-v ""

				<!--configure the first stream -->
				-v "traffic_configure_eth2 -portListIn ${sw1.port1.ixia_port}
				-mac_dst ffff.ffff.ffff 
				-mac_src ${sw1.port1.ixia_port.mac}
				-eth2_protocol 0x0800"
				-v ""

				-v "start_trans_getstats -txPortList ${sw1.port1.ixia_port} -rxPortList ${sw1.port1.ixia_port}"
				-v ""
				-v ""
				-v "ctrl-c"
			</ssh>
		</step>
		
		<step no="2.54">
			<desc>check FDB, should be MAC entry in vlan 1, port 1</desc>
			<telnet target="sw1">
				-v "sh mac-address-table interface ${sw1.port1}"
			</telnet>
			<log-match>-e "${tb.vlan1}\s*${sw1.port1.ixia_port.mac}\s*${sw1.port1}\s*no"</log-match>
		</step>
		
		<step no="2.6">
			<desc>shut down port1, then check mac entry in the port</desc>
			<telnet target="sw1">
				-v "interface ${sw1.port1} shutdown"
				-v "sh mac-address-table interface ${sw1.port1}"
			</telnet>
			<log-match>-e "Total mac entry num: 0"</log-match>
		</step>
		
		
	</stage>
	<post-process>
		<stage>
			<!-- self defined steps, no need script now -->
		</stage>
		<include file="include/sw_default_post_process.xml" />
	</post-process>
</testcase>
