<testcase>
	<brief>fiber_or_copper,port count:2</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<numofsw>1</numofsw>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	<description>
		QOSFORVOIP_Function_spwrr_1
		Test queue is 4 3 2 1 and 0.
	</description>
	<comment>
		sw1.port1=eth1/21;
		sw1.port1.phytype=copper;
		sw1.port5=eth1/25;
		sw1.port1.ixia_port=1/2/1;
		sw1.port1.ixia_port.phytype=copper;
		sw1.terminal.port=2016;
		tb.conserver.ip=localhost
		ap1.cons_name=tb1-SR2024-2
		pub.chassis1.ip=10.155.33.216;
		pub.tclserver1.ip=10.155.30.164;
		pub.tclclient1.ip=10.155.40.10;
		sw1.tclclient.ip=10.155.32.228;
		sw1.mgmtport=eth1/1;
		sw1.mgmtvlan=121;
		tb.conserver.ip=10.155.32.228;
		tb.conserver.user=root;
		tb.conserver.passwd=aerohive;
		sw1.cons_name=tb1-SR2024-2;
		sw1.user=admin;
		sw1.passwd=aerohive;
		sw1.prompt="AH-[a-z0-9A-Z_]*#";
	</comment>
	<property name="correct_vlan" value="101" />
	<property name="tx_port1" value="${sw1.port1.ixia_port}" />
	<property name="tx_port1.phytype" value="${sw1.port1.ixia_port.phytype}" />
	<property name="rx_port1" value="${sw1.port2.ixia_port}" />
	<property name="rx_port1.phytype" value="${sw1.port2.ixia_port.phytype}" />
	<property name="qos_name" value="qos" />
	<property name="frame_size" value="1000" />
	<property name="frame_rate" value="12500" />
	<property name="frame_rate_1" value="5000" />
	<property name="frame_rate_2" value="2500" />
	<property name="error" value="0.05" />
	<pre-process>
		<stage>
			<!-- self defined steps -->
		</stage>
		<include prefix="pre" file="include/sw_default_pre_process.xml" />
	</pre-process>

	<stage>
		<step no="1.1">
			<desc>
				Set qos class profile to port1, qos marker profile to port2, enable qos
			</desc>
			<telnet target="sw1">
				-v 'vlan ${correct_vlan}'
				-v 'no interface ${sw1.port1} shutdown'
				-v 'interface ${sw1.port1} switchport mode trunk'
				-v 'interface ${sw1.port1} switchport trunk allow vlan ${correct_vlan}'
				-v 'no interface ${sw1.port2} shutdown'
				-v 'interface ${sw1.port2} switchport mode trunk'
				-v 'interface ${sw1.port2} switchport trunk allow vlan ${correct_vlan}'
				-v 'qos classifier-profile ${qos_name} 8021p'
				-v 'qos marker-profile ${qos_name} 8021p'
				-v 'interface ${sw1.port1} qos-classifier ${qos_name}'
				-v 'interface ${sw1.port2} qos-marker ${qos_name}'
				-v 'qos enable'
				-v 'interface mtu 9600'
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				Set qos classifier map normal ordered(dot1p)
			</desc>
			<telnet target="sw1">
				-v 'qos classifier-map 8021p 0 0'
				-v 'qos classifier-map 8021p 1 1'
				-v 'qos classifier-map 8021p 2 2'
				-v 'qos classifier-map 8021p 3 3'
				-v 'qos classifier-map 8021p 4 4'
				-v 'qos classifier-map 8021p 5 5'
				-v 'qos classifier-map 8021p 6 6'
				-v 'qos classifier-map 8021p 7 7'
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				show classifier map table to check(dot1p)
			</desc>
			<log-file>step1.3_show_classifier_map.log</log-file>
			<telnet target="sw1">
				-v 'show qos classifier-map 8021p'
			</telnet>
			<log-match>-e '^\d\s+0\s+0' -re</log-match>
			<log-match>-e '^\d\s+1\s+1' -re</log-match>
			<log-match>-e '^\d\s+2\s+2' -re</log-match>
			<log-match>-e '^\d\s+3\s+3' -re</log-match>
			<log-match>-e '^\d\s+4\s+4' -re</log-match>
			<log-match>-e '^\d\s+5\s+5' -re</log-match>
			<log-match>-e '^\d\s+6\s+6' -re</log-match>
			<log-match>-e '^\d\s+7\s+7' -re</log-match>
		</step>

		<step no="1.4">
			<desc>
				Set qos marker map normal ordered(dot1p)
			</desc>
			<telnet target="sw1">
				-v 'qos marker-map 8021p 0 0'
				-v 'qos marker-map 8021p 1 1'
				-v 'qos marker-map 8021p 2 2'
				-v 'qos marker-map 8021p 3 3'
				-v 'qos marker-map 8021p 4 4'
				-v 'qos marker-map 8021p 5 5'
				-v 'qos marker-map 8021p 6 6'
				-v 'qos marker-map 8021p 7 7'
			</telnet>
		</step>

		<step no="1.5">
			<desc>
				show marker map table to check(dot1p)
			</desc>
			<log-file>step1.5_show_marker_map.log</log-file>
			<telnet target="sw1">
				-v 'show qos marker-map 8021p'
			</telnet>
			<log-match>-e '^\d\s+0\s+0' -re</log-match>
			<log-match>-e '^\d\s+1\s+1' -re</log-match>
			<log-match>-e '^\d\s+2\s+2' -re</log-match>
			<log-match>-e '^\d\s+3\s+3' -re</log-match>
			<log-match>-e '^\d\s+4\s+4' -re</log-match>
			<log-match>-e '^\d\s+5\s+5' -re</log-match>
			<log-match>-e '^\d\s+6\s+6' -re</log-match>
			<log-match>-e '^\d\s+7\s+7' -re</log-match>
		</step>

		<step no="1.6">
			<desc>
				show running to confirm
			</desc>
			<log-file>step1.6_show_running.log</log-file>
			<telnet target="sw1">
				-v 'show running-config'
			</telnet>
		</step>
		
		<step no="2.1">
			<desc>
				connect to ixia, configure stream 1/2/3/4/5/6/7/8 priority is 0/1/2/3/4/5/6/7. port1 send traffic;(700M to 1000M)
				expect stream 1: equal to send num; stream 2: equal to send num; stream 3: equal to send num; stream 4: equal to send num; stream 5: equal to send num;stream 6: equal to send num;stream 7: equal to send num;stream 8: equal to send num
			</desc>
			<log-file>step2.1_ixia_send_traffic.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${rx_port1} -phyList ${tx_port1.phytype},${rx_port1.phytype}"
				-v ""
				<!-- configure stream 1 priority 0 and rate is 100Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 0
				-rate_pps ${frame_rate}
				-frame_length ${frame_size}"
				-v ""
				<!-- configure stream 2 priority 1 and rate is 100Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 1
				-rate_pps ${frame_rate}
				-frame_length ${frame_size}"
				-v ""
				<!-- configure stream 3 priority 2 and rate is 100Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 2
				-rate_pps ${frame_rate}
				-frame_length ${frame_size}"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0016
				-mac_src 0000.0000.0015"
				-v ""
				<!-- configure stream 4 priority 3 and rate is 100Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 3
				-rate_pps ${frame_rate}
				-frame_length ${frame_size}"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0016
				-mac_src 0000.0000.0015"
				-v ""
				<!-- configure stream 5 priority 4 and rate is 100Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 4
				-rate_pps ${frame_rate}
				-frame_length ${frame_size}"
				-v ""
				<!-- configure stream 6 priority 5 and rate is 100Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 5
				-rate_pps ${frame_rate}
				-frame_length ${frame_size}"
				-v ""
				<!-- configure stream 7 priority 6 and rate is 100Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 6
				-rate_pps ${frame_rate}
				-frame_length ${frame_size}"
				-v ""
				<!-- configure stream 8 priority 7 and rate is 100Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 7
				-rate_pps ${frame_rate}
				-frame_length ${frame_size}"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0016
				-mac_src 0000.0000.0015"
				-v ""
				-v "start_stream_trans_getstats -txPortList ${tx_port1} -rxPortList ${rx_port1} -duration 10 -firstTryFlag false"
				-v "ctrl-c"
			</ssh>
			<no-error-check />
		</step>

		<step no="2.2.1">
			<desc>
				get stream send frames num
			</desc>
			<setvar name="stream1.send">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step2.1_ixia_send_traffic.log -t ${tx_port1}.1 -tp 'framesSent'
			</setvar>
		</step>

		<step no="2.2.2">
			<desc>
				get stream 1 receive frames num
			</desc>
			<setvar name="stream1.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step2.1_ixia_send_traffic.log -r ${rx_port1}.1 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="2.2.2.1">
			<desc>
				check if stream 1 receive equals to stream 1 send
			</desc>
			<log-file>step2.2.2.1_stream_1_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream1.send} -cn ${stream1.receive} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream1.receive} is in the range of ${stream1.send} and allowed error"</log-match>
		</step>

		<step no="2.2.3">
			<desc>
				get stream 2 receive frames num
			</desc>
			<setvar name="stream2.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step2.1_ixia_send_traffic.log -r ${rx_port1}.2 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="2.2.3.1">
			<desc>
				check if stream 2 receive equals to stream 1 send
			</desc>
			<log-file>step2.2.3.1_stream_2_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream1.send} -cn ${stream2.receive} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream2.receive} is in the range of ${stream1.send} and allowed error"</log-match>
		</step>

		<step no="2.2.4">
			<desc>
				get stream 3 receive frames num
			</desc>
			<setvar name="stream3.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step2.1_ixia_send_traffic.log -r ${rx_port1}.3 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="2.2.4.1">
			<desc>
				check if stream 3 receive equals to stream 1 send
			</desc>
			<log-file>step2.2.4.1_stream_3_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream1.send} -cn ${stream3.receive} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream3.receive} is in the range of ${stream1.send} and allowed error"</log-match>
		</step>

		<step no="2.2.5">
			<desc>
				get stream 4 receive frames num
			</desc>
			<setvar name="stream4.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step2.1_ixia_send_traffic.log -r ${rx_port1}.4 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="2.2.5.1">
			<desc>
				check if stream 4 receive equals to stream 1 send
			</desc>
			<log-file>step2.2.5.1_stream_4_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream1.send} -cn ${stream4.receive} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream4.receive} is in the range of ${stream1.send} and allowed error"</log-match>
		</step>


		<step no="2.2.6">
			<desc>
				get stream 5 receive frames num
			</desc>
			<setvar name="stream5.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step2.1_ixia_send_traffic.log -r ${rx_port1}.5 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="2.2.6.1">
			<desc>
				check if stream 5 receive equals to stream 1 send
			</desc>
			<log-file>step2.2.6.1_stream_5_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream1.send} -cn ${stream5.receive} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream5.receive} is in the range of ${stream1.send} and allowed error"</log-match>
		</step>


		<step no="2.2.7">
			<desc>
				get stream 6 receive frames num
			</desc>
			<setvar name="stream6.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step2.1_ixia_send_traffic.log -r ${rx_port1}.6 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="2.2.7.1">
			<desc>
				check if stream 6 receive equals to stream 1 send
			</desc>
			<log-file>step2.2.7.1_stream_6_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream1.send} -cn ${stream6.receive} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream6.receive} is in the range of ${stream1.send} and allowed error"</log-match>
		</step>

		<step no="2.2.8">
			<desc>
				get stream 7 receive frames num
			</desc>
			<setvar name="stream7.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step2.1_ixia_send_traffic.log -r ${rx_port1}.7 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="2.2.8.1">
			<desc>
				check if stream 7 receive equals to stream 1 send
			</desc>
			<log-file>step2.2.8.1_stream_7_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream1.send} -cn ${stream7.receive} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream7.receive} is in the range of ${stream1.send} and allowed error"</log-match>
		</step>

		<step no="2.2.9">
			<desc>
				get stream 8 receive frames num
			</desc>
			<setvar name="stream8.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step2.1_ixia_send_traffic.log -r ${rx_port1}.8 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="2.2.9.1">
			<desc>
				check if stream 8 receive equals to stream 1 send
			</desc>
			<log-file>step2.2.9.1_stream_8_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream1.send} -cn ${stream8.receive} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream8.receive} is in the range of ${stream1.send} and allowed error"</log-match>
		</step>

		<step no="3.1">
			<desc>
				port1 send traffic, 260M(40*5+20*3) to 100M, expect
				stream 1: equal to 0.019*stream1 send;(leave 40M for 0-4)
				stream 2: equal to 0.098*stream1 send;
				stream 3: equal to 0.196*stream1 send;
				stream 4: equal to 0.294*stream1 send;
				stream 5: equal to 0.392*stream1 send.
				stream 6: equal to port6 send.
				stream 7: equal to port6 send.
				stream 8: equal to port6 send.
			</desc>
			<log-file>step3.1_ixia_send_traffic.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180">
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${rx_port1} -phyList ${tx_port1.phytype},${rx_port1.phytype}"
				-v ""
				<!-- configure port 1 to 1000M -->
				<!-- configure port 2 to 100M -->
				-v "ah_port_config -onePort ${rx_port1}
				-1000fullIn false
				"
				<!-- configure stream 1 priority 0 and rate is 20Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 0
				-rate_pps ${frame_rate_1}
				-frame_length ${frame_size}"
				-v ""
				<!-- configure stream 2 priority 1 and rate is 20Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 1
				-rate_pps ${frame_rate_1}
				-frame_length ${frame_size}"
				-v ""
				<!-- configure stream 3 priority 2 and rate is 20Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 2
				-rate_pps ${frame_rate_1}
				-frame_length ${frame_size}"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0016
				-mac_src 0000.0000.0015"
				-v ""
				<!-- configure stream 4 priority 3 and rate is 20Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 3
				-rate_pps ${frame_rate_1}
				-frame_length ${frame_size}"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0016
				-mac_src 0000.0000.0015"
				-v ""
				<!-- configure stream 5 priority 4 and rate is 20Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 4
				-rate_pps ${frame_rate_1}
				-frame_length ${frame_size}"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0016
				-mac_src 0000.0000.0015"
				-v ""
				<!-- configure stream 6 priority 5 and rate is 20Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 5
				-rate_pps ${frame_rate_2}
				-frame_length ${frame_size}"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0016
				-mac_src 0000.0000.0015"
				-v ""
				<!-- configure stream 7 priority 6 and rate is 20Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 6
				-rate_pps ${frame_rate_2}
				-frame_length ${frame_size}"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0016
				-mac_src 0000.0000.0015"
				-v ""
				<!-- configure stream 8 priority 7 and rate is 20Mbps -->
				-v "traffic_configure_eth2 -portListIn ${tx_port1}
				-mac_dst 0000.0000.0015
				-mac_src 0000.0000.0016
				-vlan enable
				-vlan_id ${correct_vlan}
				-vlan_dot1p 7
				-rate_pps ${frame_rate_2}
				-frame_length ${frame_size}"
				-v ""
				-v "traffic_configure_eth2 -portListIn ${rx_port1}
				-mac_dst 0000.0000.0016
				-mac_src 0000.0000.0015"
				-v ""
				<!-- configure port 1 and 2 to multi -->
				-v "port_multi_stream_statistic_set -portList ${tx_port1},${rx_port1}"
				-v ""
				<!-- start send frames on port1 -->
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v "clear_statistic -portList ${tx_port1},${rx_port1}"
				-v ""
				-v "start_transmit -portList ${tx_port1} -firstTryFlag false"
				-v ""
				-v "wait_time -second 10"
				-v ""
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v "get_stream_statistic -portList ${tx_port1},${rx_port1}"
				-v ""
				-v "ctrl-c"
			</ssh>
			<no-error-check />
		</step>

		<step no="3.2.1">
			<desc>
				get stream send frames num
			</desc>
			<setvar name="stream1.send">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step3.1_ixia_send_traffic.log -t ${tx_port1}.1 -tp 'framesSent'
			</setvar>
		</step>

		<step no="3.2.2">
			<desc>
				get stream 1 receive frames num
			</desc>
			<setvar name="stream1.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step3.1_ixia_send_traffic.log -r ${rx_port1}.1 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="3.2.2.1">
			<desc>
				check if stream 1 equal to 0.019*stream1 send;
			</desc>
			<log-file>step3.2.2.1_stream_1_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream1.send} -so '*' -sv 0.0019 -cn ${stream1.receive} -v ${stream1.send} -e ${error} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream1.receive} is in the range of .* and allowed error"</log-match>
		</step>

		<step no="3.2.3">
			<desc>
				get stream 2 receive frames num
			</desc>
			<setvar name="stream2.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step3.1_ixia_send_traffic.log -r ${rx_port1}.2 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="3.2.3.1">
			<desc>
				check if stream 2 equal to equal to 0.098*stream1 send;
			</desc>
			<log-file>step3.2.3.1_stream_2_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream1.send} -so '*' -sv 0.098 -cn ${stream2.receive} -v ${stream1.send} -e ${error} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream2.receive} is in the range of .* and allowed error"</log-match>
		</step>

		<step no="3.2.4">
			<desc>
				get stream 3 receive frames num
			</desc>
			<setvar name="stream3.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step3.1_ixia_send_traffic.log -r ${rx_port1}.3 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="3.2.4.1">
			<desc>
				check if stream 3 equal to 0.196*stream1 send;
			</desc>
			<log-file>step3.2.4.1_stream_3_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream1.send} -so '*' -sv 0.196 -cn ${stream3.receive} -v ${stream1.send} -e ${error} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream3.receive} is in the range of .* and allowed error"</log-match>
		</step>


		<step no="3.2.5">
			<desc>
				get stream 4 receive frames num
			</desc>
			<setvar name="stream4.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step3.1_ixia_send_traffic.log -r ${rx_port1}.4 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="3.2.5.1">
			<desc>
				check if stream 4 equal to 0.294*stream1 send;
			</desc>
			<log-file>step3.2.5.1_stream_4_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream1.send} -so '*' -sv 0.294 -cn ${stream4.receive} -v ${stream1.send} -e ${error} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream4.receive} is in the range of .* and allowed error"</log-match>
		</step>

		<step no="3.2.6">
			<desc>
				get stream 5 receive frames num
			</desc>
			<setvar name="stream5.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step3.1_ixia_send_traffic.log -r ${rx_port1}.5 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="3.2.6.1">
			<desc>
				check if stream 4 equal to 0.392*stream1 send;
			</desc>
			<log-file>step3.2.6.1_stream_5_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream1.send} -so '*' -sv 0.392 -cn ${stream5.receive} -v ${stream1.send} -e ${error} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream5.receive} is in the range of .* and allowed error"</log-match>
		</step>

		<step no="3.2.7.1">
			<desc>
				get stream6 send frames num
			</desc>
			<setvar name="stream6.send">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step3.1_ixia_send_traffic.log -t ${tx_port1}.6 -tp 'framesSent'
			</setvar>
		</step>

		<step no="3.2.7.2">
			<desc>
				get stream 6 receive frames num
			</desc>
			<setvar name="stream6.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step3.1_ixia_send_traffic.log -r ${rx_port1}.6 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="3.2.7.3">
			<desc>
				check if stream 6 receive equals to stream 6 send
			</desc>
			<log-file>step3.2.7.3_stream_6_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream6.send} -cn ${stream6.receive} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream6.receive} is in the range of ${stream6.send} and allowed error"</log-match>
		</step>

		<step no="3.2.8">
			<desc>
				get stream 7 receive frames num
			</desc>
			<setvar name="stream7.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step3.1_ixia_send_traffic.log -r ${rx_port1}.7 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="3.2.8.1">
			<desc>
				check if stream 7 receive equals to stream 6 send
			</desc>
			<log-file>step3.2.8.1_stream_7_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream6.send} -cn ${stream7.receive} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream7.receive} is in the range of ${stream6.send} and allowed error"</log-match>
		</step>

		<step no="3.2.9">
			<desc>
				get stream 8 receive frames num
			</desc>
			<setvar name="stream8.receive">
				python ${bin.dir}/get_ixia_pkt.py -f ${log.dir}/step3.1_ixia_send_traffic.log -r ${rx_port1}.8 -rp 'framesReceived'
			</setvar>
		</step>

		<step no="3.2.9.1">
			<desc>
				check if stream 8 receive equals to stream 6 send
			</desc>
			<log-file>step3.2.9.1_stream_8_receive.log</log-file>
			<script>
				python ${bin.dir}/num_compare.py -sn ${stream6.send} -cn ${stream8.receive} > ${log.dir}/${log.file}
			</script>
			<no-error-check />
			<log-match>-e "${stream8.receive} is in the range of ${stream6.send} and allowed error"</log-match>
		</step>
	</stage>	
	
	<post-process>
		<stage>
			<!-- self defined steps, no need script now -->
		</stage>
		<include prefix="post" file="include/sw_default_post_process.xml" />
	</post-process>
</testcase>