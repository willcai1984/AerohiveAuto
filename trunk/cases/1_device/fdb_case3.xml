<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>MAC entry update according to port-channel operation</brief>
	<priority>high</priority>
	<automated>yes</automated>

	<description>
		bug 20109, 22252, 23822
		Topology to use	
		IXIA++++++ Switch

		Description	when disable MAC learning, should clear MAC entry, when enable learning, should learn MAC
		Platform Dependence	Chesapeake
		Pre-condition	?	PC1 connect to switch port1
		PC1 is in vlan1
		Test procedure	Dynamic unicast mac entries
		1.	IXIA send frames to switch
		2.  Create agg 1
		3.  config static MAC on port 1
		3.	Check learned MACs of port 1
		4.  add port 1 to agg 1, FDB table should be null
		5.  send frames into agg 1, config static MAC on agg 1
		6.  Check MAC entry on agg 1
		7.  delete agg 1
		8.  check FDB table, should be null
	</description>

	<numofsw>1</numofsw>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<comment>
		sw1.port1=eth1/5;
		sw1.port2=eth1/6;
		sw1.port3=eth1/13;
		sw1.port4=eth1/14;
		sw1.port3.ixia_port
		sw1.port1.ixia_port=1/2/7;
		sw1.port2.ixia_port=1/2/8;
		sw1.port1.ixia_port=1/2/9;
		sw1.port2.ixia_port=1/2/10;
		sw1.terminal.ip=10.155.32.105;
		sw1.terminal.port=2054;
		pub.chassis1.ip=10.155.33.216;
		pub.tclclient1.ip=10.155.40.10;

		mpc.mif.ip=10.155.32.128;
		mpc.tif.ip=10.68.136.253;
		mpc.user=root;
		mpc.passwd=aerohive;
		mpc.prompt=".*#";
		mpc.tif.name=eth1;
		tb.nvlan=100;
		tb.vlans=100,200,300;
		tb.vlan1=100;
		tb.vlan2=200;
		tb.vlan3=300;
	</comment>
	<pre-process>
		<stage>
			<!-- self defined steps -->
		</stage>
		<include file="include/sw_default_pre_process.xml" />
	</pre-process>

	<stage>
		<property name="sw1.port1.ixia_port.mac" value="0000.0000.0011"/>
		<property name="sw1.port2.ixia_port.mac" value="0000.0000.0012"/>
		<property name="sw1.port3.ixia_port.mac" value="0000.0000.0013"/>
		<property name="static_mac" value="0001.0000.0011"/>
		<property name="agg1" value="1"/>
		<step no="1">
			<desc>
				configure ports 1 in vlan 1
			</desc>
			<telnet target="sw1">
				-v "vlan ${tb.vlan1}"
				-v "agg ${agg1}"
				-v "interface agg1 switchport access vlan ${tb.vlan1}"
				-v "interface ${sw1.port1} switchport access vlan ${tb.vlan1}"
				-v "show vlan brief"
				-v "show vlan summary"
				-v "show vlan id ${tb.vlan1}"
				-v "clear mac-address-table all"
				-v "show mac-address-table all"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				port1 send pkts to let switch learn FDB entries	
			</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${sw1.port1.ixia_port},${sw1.port2.ixia_port},${sw1.port3.ixia_port},${sw1.port4.ixia_port} -phyList ${sw1.port1.phytype},${sw1.port2.phytype},${sw1.port3.phytype},${sw1.port4.phytype}"
				-v ""

				<!--configure the first stream -->
				-v "traffic_configure_eth2 -portListIn ${sw1.port1.ixia_port}
				-mac_dst ffff.ffff.ffff 
				-mac_src ${sw1.port1.ixia_port.mac}
				-eth2_protocol 0x0800"
				-v ""

				-v "start_trans_getstats -txPortList ${sw1.port1.ixia_port} -rxPortList ${sw1.port1.ixia_port}"
				-v ""
				-v ""
				-v "ctrl-c"
			</ssh>
		</step>
		
		<step no="2.2">
			<desc>check FDB, mac entries are learned from port 1</desc>
			<telnet target="sw1">
				-v "mac-address-table static ${static_mac} vlan ${tb.vlan1} interface ${sw1.port1}"
				-v "show mac-address-table all"
			</telnet>
			<log-match>-e "${tb.vlan1}\s*${sw1.port1.ixia_port.mac}\s*${sw1.port1}\s*no"</log-match>
			<log-match>-e "${tb.vlan1}\s*${static_mac}\s*${sw1.port1}\s*yes"</log-match>
		</step>
		
		<step no="2.3">
			<desc>check FDB, should not display static MAC when show dynamic MAC</desc>
			<telnet target="sw1">
				-v "show mac-address-table static"
			</telnet>
			<log-match>-e "no\s*no" -n</log-match>
		</step>
				
		<step no="2.4">
			<desc>add port 1 to agg1, check FDB, should be no entry on interface port1</desc>
			<telnet target="sw1">
				-v "interface ${sw1.port1} agg ${agg1}"
				-v "show mac-address-table interface ${sw1.port1}"
			</telnet>
			<log-match>-e "Total mac entry num: 0"</log-match>
		</step>
		
		<step no="2.5">
			<desc>add static mac on agg1</desc>
			<telnet target="sw1">
				-v "mac-address-table static ${static_mac} vlan ${tb.vlan1} interface agg1"
			</telnet>
		</step>
		
		<step no="2.51">
			<desc>
				learning mac on agg1
			</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${sw1.port1.ixia_port},${sw1.port2.ixia_port},${sw1.port3.ixia_port},${sw1.port4.ixia_port} -phyList ${sw1.port1.phytype},${sw1.port2.phytype},${sw1.port3.phytype},${sw1.port4.phytype}"
				-v ""

				<!--configure the first stream -->
				-v "traffic_configure_eth2 -portListIn ${sw1.port1.ixia_port}
				-mac_dst ffff.ffff.ffff 
				-mac_src ${sw1.port1.ixia_port.mac}
				-eth2_protocol 0x0800"
				-v ""

				-v "start_trans_getstats -txPortList ${sw1.port1.ixia_port} -rxPortList ${sw1.port1.ixia_port}"
				-v ""
				-v ""
				-v "ctrl-c"
			</ssh>
		</step>
		
		<step no="2.6">
			<desc>check FDB, mac entries are learned from agg 1</desc>
			<telnet target="sw1">
				-v "show mac-address-table all"
			</telnet>
			<log-match>-e "${tb.vlan1}\s*${sw1.port1.ixia_port.mac}\s*agg1\s*no"</log-match>
			<log-match>-e "${tb.vlan1}\s*${static_mac}\s*agg1\s*yes"</log-match>
		</step>
		
		<step no="2.7">
			<desc>config static mac to a port who belongs to a agg should failed</desc>
			<telnet target="sw1">
				-v "mac-address-table static ${static_mac} vlan ${tb.vlan1} interface ${sw1.port1}"
			</telnet>
			<log-match>-e "Interface belongs to an aggregate-port"</log-match>
		</step>
				
		<step no="2.8">
			<desc>delete agg 1, check FDB, should be no entry on agg 1</desc>
			<telnet target="sw1">
				-v "no agg ${agg1}"
				-v "show mac-address-table interface agg1"
			</telnet>
			<log-match>-e "Total mac entry num: 0"</log-match>
		</step>
		
	</stage>
	<post-process>
		<stage>
			<!-- self defined steps, no need script now -->
		</stage>
		<include file="include/sw_default_post_process.xml" />
	</post-process>
</testcase>
