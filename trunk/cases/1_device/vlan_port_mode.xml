<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>VLAN configuration mgmt test</brief>
	<priority>high</priority>
	<automated>yes</automated>

	<description>
		Topology to use
		Switch

		Pre-condition:
		Reset config of switch to factory default

		Test procedure:
		1. check show running of port trunk native vlan, port is in vlan 1;
		port1 mode trunk, native vlan 2, show interface port1 switchport, show running, result1(bug 19834);
		2. no port1 switchport trunk allow vlan 1, show interface port1 switchport, show running, result2(bug 20004);
		3. port1 trunk voice vlan 1, show interface port1 switchport, no port1 trunk voice vlan, show interface
		port1 switchport,result3(19883);
		4. port1 mode access, show interface port1 switchport, result4(bug 20256);
		5. port1 access vlan 5, result5;
		6. vlan 5, port1 access vlan 5, result6;
		7. port1 mode trunk, show interface port1 switchport, result7;
		8. port1 trunk natie vlan 100, show interface port1 switchport, result8(bug 20005);
		9. create vlan 200, show interface port1 switchport, result9(bug 20080);
		10. port2 access vlan 200, delete vlan 200, show interface port2 switchport, result10(bug 23973);
		11. no port1 switchport
		trunk allow vlan
		all, show interface port1 switchport, no vlan
		100,show interface port1 switchport, result11(bug 20463);
		12. port3 mode wan, save config, reboot, result12(bug
		20034/20437/19636/20886/20437);

		Expect result:
		result1: port1 native vlan 2, vlan 1 in port allow-list;
		result2: vlan 1 is removed from port allow-list;
		result3: voice vlan 1, voice vlan delete succeed;
		result4: port1 pvid id 1;
		result5: access vlan should be existed vlan; access vlan 5 failed;
		result6: port1 access vlan 5 succeed;
		result7: port1 native vlan 1;
		result8: port1 native vlan 100;
		result9: vlan 200 is in port1 allow-list;
		result10: port2 pvid change from 200 to 1;
		result11: port1 native vlan 200, port allow-list is empty;
		result12: port1 native vlan 100, no allow-list; port2 access vlan 1, port3 mode wan;
	</description>

	<numofsw>1</numofsw>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<comment>
		sw1.port1=eth1/5;
		sw1.port1.phytype=copper;
		sw1.port2=eth1/6;
		sw1.port2.phytype=copper;
		sw1.port3=eth1/7;
		sw1.port3.phytype=copper;
		sw1.port4=eth1/8;
		sw1.port4.phytype=copper;
		sw1.mgt0.port=eth1/1;
		sw1.mgt0.vlan=121;
		sw1.port1.ixia_port=1/1/5;
		sw1.port2.ixia_port=1/1/6;
		sw1.port3.ixia_port=1/1/3;
		sw1.port4.ixia_port=1/1/4;
		pub.chassis1.ip=10.155.33.216;
		pub.tclclient1.ip=10.155.40.10;
		pub.tclserver1.ip=10.155.30.178;
		tb.conserver.ip=10.155.32.228;
		tb.conserver.user=root;
		tb.conserver.passwd=aerohive;
		sw1.cons_name=tb1-SR2024-3;
		sw1.user=admin;
		sw1.passwd=aerohive;
		sw1.prompt="AH-[a-z0-9A-Z_]*#";
		mpc.mif.ip=10.155.32.228;
		mpc.tif.ip=10.68.136.252;
		mpc.user=root;
		mpc.passwd=aerohive;
		mpc.prompt=".*#";
		mpc.tif.name=eth1;
		tb.nvlan=100;
		tb.vlans=100,200,300;
		tb.vlan1=100;
		tb.vlan2=200;
		tb.vlan3=300;
	</comment>
	<pre-process>
		<stage>
			<!-- self defined steps -->
		</stage>
		<include file="include/sw_default_pre_process.xml" />
	</pre-process>

	<property name="sw1.port1.ixia_port.mac" value="0000.0000.0015" />
	<property name="vlan_range" value="1101-1354" />

	<stage>
		<step no="1">
			<desc>
				check port trunk config;
			</desc>
			<log-file>vlan_port_mode_1.log</log-file>
			<telnet target="sw1">
				-v "interface ${sw1.port1} switchport mode trunk"
				-v "interface ${sw1.port1} switchport trunk allow vlan all"
				-v "interface ${sw1.port1} switchport trunk native vlan ${tb.vlan1}"
				-v "show interface ${sw1.port1} switchport"
				-v "show running"
				-v "show vlan id 1"
			</telnet>
			<log-match>-c -i "Port Mode:" -i "trunk"</log-match>
			<log-match>-c -i "Static Trunking Native VLAN: " -i "${tb.vlan1}"</log-match>
			<log-match>-c -i "interface ${sw1.port1} switchport trunk native vlan ${tb.vlan1}"</log-match>
			<log-match>-c -i "1" -i "VLAN1" -i "${sw1.port1}" -i "trunk"</log-match>
		</step>

		<step no="2">
			<desc>
				port allow vlan check;
			</desc>
			<log-file>vlan_port_mode_2.log</log-file>
			<telnet target="sw1">
				-v "no interface ${sw1.port1} switchport trunk allow vlan 1"
				-v "show vlan id 1"
			</telnet>
			<log-match>-c -i "1" -i "VLAN1" -i "${sw1.port1}" -i "trunk" -n</log-match>
		</step>

		<step no="2.1">
			<desc>
				port allow vlan check;
			</desc>
			<log-file>vlan_port_mode_2.log</log-file>
			<telnet target="sw1">
				-v "show running"
			</telnet>
			<log-match>-c -i "interface ${sw1.port1} switchport trunk allow vlan 2 - 4094"</log-match>
		</step>

		<step no="3">
			<desc>
				port1 trunk voice vlan check;
			</desc>
			<log-file>vlan_port_mode_3.log</log-file>
			<telnet target="sw1">
				-v "interface ${sw1.port1} switchport trunk voice-vlan 1"
				-v "show interface ${sw1.port1} switchport"
			</telnet>
			<log-match>-c -i "Static Voice VLAN:" -i "1"</log-match>
		</step>

		<step no="3.1">
			<desc>
				port1 trunk voice vlan check;
			</desc>
			<log-file>vlan_port_mode_3.log</log-file>
			<telnet target="sw1">
				-v "show running"
			</telnet>
			<log-match>-c -i "interface ${sw1.port1} switchport trunk voice-vlan 1"</log-match>
		</step>

		<step no="4">
			<desc>
				no port1 trunk voice vlan, show interface port1 switchport
			</desc>
			<log-file>vlan_port_mode_4.log</log-file>
			<telnet target="sw1">
				-v "no interface ${sw1.port1} switchport trunk voice-vlan"
				-v "show interface ${sw1.port1} switchport"
			</telnet>
			<log-match>-c -i "Static Voice VLAN:" -i "0"</log-match>
		</step>

		<step no="4.1">
			<desc>
				no port1 trunk voice vlan, show interface port1 switchport
			</desc>
			<log-file>vlan_port_mode_4.log</log-file>
			<telnet target="sw1">
				-v "show running"
			</telnet>
			<log-match>-c -i "interface ${sw1.port1} switchport trunk voice-vlan 1" -n </log-match>
		</step>

		<step no="5">
			<desc>
				trunk port change to access
			</desc>
			<log-file>vlan_port_mode_5.log</log-file>
			<telnet target="sw1">
				-v "interface ${sw1.port1} switchport mode access"
				-v "show interface ${sw1.port1} switchport"
			</telnet>
			<log-match>-c -i "Port Mode:" -i "access" </log-match>
			<log-match>-c -i "Static Access VLAN:" -i "1"</log-match>
		</step>

		<step no="6">
			<desc>
				access vlan validation check, access vlan id doesn't exist;
			</desc>
			<log-file>vlan_port_mode_6.log</log-file>
			<telnet target="sw1">
				-v "interface ${sw1.port1} switchport mode access"
				-v "interface ${sw1.port1} switchport access vlan 1000"
				-v "show interface ${sw1.port1} switchport"
			</telnet>
			<log-match>-c -i "Port Mode:" -i "access" </log-match>
			<log-match>-c -i "Static Access VLAN:" -i "1000" -n</log-match>
			<no-error-check />
		</step>

		<step no="7">
			<desc>
				access vlan validation check, access vlan exist;
			</desc>
			<log-file>vlan_port_mode_7.log</log-file>
			<telnet target="sw1">
				-v "vlan ${tb.vlan1}"
				-v "interface ${sw1.port1} switchport mode access"
				-v "interface ${sw1.port1} switchport access vlan ${tb.vlan1}"
				-v "show interface ${sw1.port1} switchport"
			</telnet>
			<log-match>-c -i "Port Mode:" -i "access" </log-match>
			<log-match>-c -i "Static Access VLAN:" -i "${tb.vlan1}"</log-match>
			<no-error-check />
		</step>

		<step no="8">
			<desc>
				change access port to trunk mode
			</desc>
			<log-file>vlan_port_mode_8.log</log-file>
			<telnet target="sw1">
				-v "interface ${sw1.port1} switchport mode trunk"
				-v "show interface ${sw1.port1} switchport"
			</telnet>
			<log-match>-c -i "Port Mode:" -i "trunk" </log-match>
			<log-match>-c -i "Static Trunking Native VLAN:" -i "1"</log-match>
			<no-error-check />
		</step>

		<step no="9">
			<desc>
				change trunk port native vlan to a doesn't exist VLAN
			</desc>
			<log-file>vlan_port_mode_9.log</log-file>
			<telnet target="sw1">
				-v "interface ${sw1.port1} switchport trunk native vlan 1000"
				-v "show interface ${sw1.port1} switchport"
			</telnet>
			<log-match>-c -i "Port Mode:" -i "trunk" </log-match>
			<log-match>-c -i "Static Trunking Native VLAN:" -i "1000"</log-match>
			<no-error-check />
		</step>

		<step no="10">
			<desc>
				change trunk port native vlan to an exist VLAN
			</desc>
			<log-file>vlan_port_mode_10.log</log-file>
			<telnet target="sw1">
				-v "interface ${sw1.port1} switchport trunk native vlan ${tb.vlan1}"
				-v "show interface ${sw1.port1} switchport"
			</telnet>
			<log-match>-c -i "Port Mode:" -i "trunk" </log-match>
			<log-match>-c -i "Static Trunking Native VLAN:" -i "${tb.vlan1}"</log-match>
			<no-error-check />
		</step>

		<step no="11">
			<desc>
				create a new VLAN, port1 will be the member of this new VLAN
			</desc>
			<log-file>vlan_port_mode_11.log</log-file>
			<telnet target="sw1">
				-v "vlan 1000"
				-v "show vlan id 1000"
			</telnet>
			<log-match>-c -i "1000" -i "VLAN1000" -i "${sw1.port1}"</log-match>
		</step>

		<step no="12">
			<desc>
				delete port access vlan, port should be access 1;
			</desc>
			<log-file>vlan_port_mode_12.log</log-file>
			<telnet target="sw1">
				-v "vlan ${tb.vlan2}"
				-v "interface ${sw1.port2} switchport mode access"
				-v "interface ${sw1.port2} switchport access vlan ${tb.vlan2}"
				-v "show interface ${sw1.port2} switchport"
			</telnet>
			<log-match>-c -i "Port Mode:" -i "access"</log-match>
			<log-match>-c -i "Static Access VLAN:" -i "${tb.vlan2}"</log-match>
		</step>

		<step no="13">
			<desc>
				delete port access vlan
			</desc>
			<log-file>vlan_port_mode_13.log</log-file>
			<telnet target="sw1">
				-v "no vlan ${tb.vlan2}"
				-v "show interface ${sw1.port2} switchport"
			</telnet>
			<log-match>-c -i "Static Access VLAN:" -i "1"</log-match>
			<no-error-check />
		</step>

		<step no="14">
			<desc>
				no port1 trunk allow vlan all
			</desc>
			<log-file>vlan_port_mode_14.log</log-file>
			<telnet target="sw1">
				-v "no interface ${sw1.port1} switchport trunk allow vlan all"
				-v "show vlan id ${tb.vlan1}"
			</telnet>
			<log-match>-c -n -i "${tb.vlan1}" -i "VLAN${tb.vlan1}" -i "${sw1.port1}" -i "trunk"</log-match>
		</step>

		<step no="14.0.1">
			<desc>
				Show interface mgt0 to get ip address
			</desc>
			<log-file>mgt0_ip_info.log</log-file>
			<console target="sw1">
				-v 'show interface mgt0'
			</console>
			<no-error-check />
		</step>

		<step no="14.0.2">
			<desc>
				Get mgt0's ip address
			</desc>
			<setvar name="sw1.ip">
				python ${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -f ${log.dir}/mgt0_ip_info.log -t str
			</setvar>
			<no-error-check />
		</step>

		<step no="14.1">
			<desc>
				Configure 255 vlans 101-355
			</desc>
			<log-file>step1.1_config.log</log-file>
			<script timeout="180">
				python ${bin.dir}/ssh_execute_cli.py -cli 'vlan (l1)' -list '${vlan_range}' -d ${sw1.ip} -debug -l ${log.dir} -z ${log.file}
			</script>
			<no-error-check />
		</step>

		<step no="14.2">
			<desc>
				show vlan brief
			</desc>
			<telnet target="sw1">
				-v "show vlan summary"
			</telnet>
			<log-match>-c -i "Reserved VLAN range:" -i "3712 - 4094"</log-match>
			<log-match>-c -i "Number of existing VLANs:" -i "255"</log-match>
		</step>

		<step no="14.3">
			<desc>
				port3 config to trunk
			</desc>
			<telnet target="sw1">
				-v "interface ${sw1.port3} switchport mode trunk"
				-v "show interface ${sw1.port3} switchport"
			</telnet>
			<log-match>-c -i "Port Mode:" -i "trunk"</log-match>
			<log-match>-c -i "Static Trunking Native VLAN:" -i "1"</log-match>
		</step>

		<step no="14.4">
			<desc>
				port3 no trunk allow vlan all
			</desc>
			<telnet target="sw1">
				-v "no interface ${sw1.port3} switchport trunk allow vlan all"
			</telnet>
		</step>

		<step no="14.5">
			<desc>
				port3 no trunk allow vlan all
			</desc>
			<telnet target="sw1">
				-v "show running"
			</telnet>
			<log-match>-c -i "no interface ${sw1.port3} switchport trunk allow vlan all"</log-match>
		</step>

		<step no="14.6">
			<desc>
				port3 config to access
			</desc>
			<telnet target="sw1">
				-v "interface ${sw1.port3} switchport mode access"
			</telnet>
		</step>		

	</stage>

	<post-process>
		<stage>
			<!-- self defined steps, no need script now -->
		</stage>
		<include file="include/sw_default_post_process.xml" />
	</post-process>
</testcase>
