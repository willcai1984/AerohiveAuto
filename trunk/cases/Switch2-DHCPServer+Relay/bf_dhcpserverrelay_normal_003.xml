<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify that the function of dhcp-server ip-pool.</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Set vlan to interface mgt0.1
		Set ip address to interface mgt0.1
		Enable dhcp-server of interface mgt0.1
		Create a SSID and bind it to interface wifi0
		Create a user-profile and set the same vlan with mgt0.1
		Set the same attribute to SSID with user-profile

		Test Procedure:
		1. Verify that can set ip-pool correctly for interface mgt0.x and the
		interface mgt0.x net address must be in the range.
		2. Verify that can change the first ip address and the last ip address.
		3. Verify that can remove the ip-pool.
		4. Verify that can set 8 ip-pools for one mgt0.x
		5. Verify that ip-pool can not overlap for different interface.
		6. Verify that can not set ip-pool when mgt0.x address is not set.
		7. Verify that can remove the mgt0.x even ip-pool is set.
		8. Verify that there is not error happen when ip-pool is not set and
		dhcp-server is enabled.
		9. Set ip-pool, use a laptop connect to SSID, check if client can obtain
		ip address, check ip range
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="vlan_id" value="8" />
	<property name="mask_addr" value="24" />
	<property name="dhcp_start" value="192.168.${vlan_id}.6" />
	<property name="dhcp_start_1" value="192.168.${vlan_id}.1" />
	<property name="dhcp_start_2" value="192.168.${vlan_id}.8" />
	<property name="dhcp_start_3" value="192.168.${vlan_id}.11" />
	<property name="dhcp_start_4" value="192.168.${vlan_id}.16" />
	<property name="dhcp_start_5" value="192.168.${vlan_id}.21" />
	<property name="dhcp_start_6" value="192.168.${vlan_id}.26" />
	<property name="dhcp_start_7" value="192.168.${vlan_id}.31" />
	<property name="dhcp_start_8" value="192.168.${vlan_id}.36" />
	<property name="dhcp_start_9" value="192.168.${vlan_id}.41" />
	<property name="dhcp_start_10" value="192.168.${vlan_id}.1" />
	<property name="dhcp_end" value="192.168.${vlan_id}.7" />
	<property name="dhcp_end_1" value="192.168.${vlan_id}.5" />
	<property name="dhcp_end_2" value="192.168.${vlan_id}.10" />
	<property name="dhcp_end_3" value="192.168.${vlan_id}.15" />
	<property name="dhcp_end_4" value="192.168.${vlan_id}.20" />
	<property name="dhcp_end_5" value="192.168.${vlan_id}.25" />
	<property name="dhcp_end_6" value="192.168.${vlan_id}.30" />
	<property name="dhcp_end_7" value="192.168.${vlan_id}.35" />
	<property name="dhcp_end_8" value="192.168.${vlan_id}.40" />
	<property name="dhcp_end_9" value="192.168.${vlan_id}.45" />
	<property name="dhcp_end_10" value="192.168.${vlan_id}.5" />

	<stage>
		<step no="0">
			<desc>
				Set interface vlan and ip
			</desc>
			<log-file>step0_config_interface_vlan.log</log-file>
			<ssh target="ap1">
				-v "vlan ${vlan_id}"
				-v "interface vlan ${vlan_id}"
				-v "interface vlan${vlan_id} ip ${dhcp_start}/${mask_addr}"
				-v "interface vlan${vlan_id} dhcp-server enable"
			</ssh>
		</step>

		<step no="1">
			<desc>
				set ip-pool correctly for interface vlan
			</desc>
			<log-file>step1_set_ip_pool.log</log-file>
			<ssh target="ap1">
				-v "interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start} ${dhcp_end}"
			</ssh>
		</step>

		<step no="1.1">
			<desc>
				Verify that can set ip-pool correctly for interface vlan
			</desc>
			<log-file>step1.1_check_mgt0.1_ip_pool.log</log-file>
			<ssh target="ap1">
				-v "show interface vlan${vlan_id} dhcp-server"
			</ssh>
			<log-match>-e "${dhcp_start} - ${dhcp_end}"</log-match>
		</step>

		<step no="2">
			<desc>
				change the first ip address
			</desc>
			<log-file>step2_change_first_ip.log</log-file>
			<ssh target="ap1">
				-v "interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_1} ${dhcp_end_1}"
			</ssh>
		</step>

		<step no="2.1">
			<desc>
				Verify that can change the first ip address
			</desc>
			<log-file>step2.1_change_first_ip.log</log-file>
			<ssh target="ap1">
				-v "show interface vlan${vlan_id} dhcp-server"
			</ssh>
			<log-match>-e "${dhcp_start_1} - ${dhcp_end}"</log-match>
		</step>

		<step no="2.2">
			<desc>
				change the last ip address
			</desc>
			<log-file>step2.2_change_last_ip.log</log-file>
			<ssh target="ap1">
				-v "interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_2} ${dhcp_end_2}"
			</ssh>
		</step>

		<step no="2.3">
			<desc>
				Verify that can change the first ip address
			</desc>
			<log-file>step2.3_change_last_ip.log</log-file>
			<ssh target="ap1">
				-v "show interface vlan${vlan_id} dhcp-server"
			</ssh>
			<log-match>-e "${dhcp_start_1} - ${dhcp_end_2}"</log-match>
		</step>

		<step no="3">
			<desc>
				remove the ip-pool.
			</desc>
			<ssh target="ap1">
				-v "no interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_1} ${dhcp_end_2}"
			</ssh>
		</step>

		<step no="3.1">
			<desc>
				Verify that can remove the ip-pool.
			</desc>
			<log-file>step3.1_can_remove_ip_pool.log</log-file>
			<ssh target="ap1">
				-v "show interface vlan${vlan_id} dhcp-server"
			</ssh>
			<log-match>-n -e "${dhcp_start_1} - ${dhcp_end_2}"</log-match>
		</step>

		<step no="3.2">
			<desc>
				disable interface vlan dhcp-server
			</desc>
			<log-file>step3.2_disable_dhcp_server.log</log-file>
			<ssh target="ap1">
				-v "no interface vlan${vlan_id} dhcp-server enable"
			</ssh>
		</step>

		<step no="4">
			<desc>
				set 8 ip-pools for one interface vlan
			</desc>
			<log-file>step4_set_8_ip_pools.log</log-file>
			<ssh target="ap1">
				-v "interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_1} ${dhcp_end_1}"
				-v "interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_2} ${dhcp_end_2}"
				-v "interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_3} ${dhcp_end_3}"
				-v "interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_4} ${dhcp_end_4}"
				-v "interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_5} ${dhcp_end_5}"
				-v "interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_6} ${dhcp_end_6}"
				-v "interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_7} ${dhcp_end_7}"
				-v "interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_8} ${dhcp_end_8}"
			</ssh>
		</step>

		<step no="4.1">
			<desc>
				check the ip-pool config
			</desc>
			<log-file>step4.1_show_running_config.log</log-file>
			<ssh target="ap1">
				-v "show running-config"
			</ssh>
			<log-match>-e "interface vlan${vlan_id} dhcp-server ip-pool 192.168.8.1 192.168.8.5"</log-match>
			<log-match>-e "interface vlan${vlan_id} dhcp-server ip-pool 192.168.8.8 192.168.8.10"</log-match>
			<log-match>-e "interface vlan${vlan_id} dhcp-server ip-pool 192.168.8.11 192.168.8.15"</log-match>
			<log-match>-e "interface vlan${vlan_id} dhcp-server ip-pool 192.168.8.16 192.168.8.20"</log-match>
			<log-match>-e "interface vlan${vlan_id} dhcp-server ip-pool 192.168.8.21 192.168.8.25"</log-match>
			<log-match>-e "interface vlan${vlan_id} dhcp-server ip-pool 192.168.8.26 192.168.8.30"</log-match>
			<log-match>-e "interface vlan${vlan_id} dhcp-server ip-pool 192.168.8.31 192.168.8.35"</log-match>
			<log-match>-e "interface vlan${vlan_id} dhcp-server ip-pool 192.168.8.36 192.168.8.40"</log-match>
		</step>

		<step no="4.2">
			<desc>
				set 9 ip-pools for one vlan interface error
			</desc>
			<log-file>step4.2_error_ip_pool.log</log-file>
			<ssh target="ap1">
				-v "interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_9} ${dhcp_end_9}"
			</ssh>
			<log-match>-c -e "ERROR: The number of IP pools up to maximum 8"</log-match>
			<no-error-check />
		</step>

		<step no="5">
			<desc>
				Verify that ip-pool can not overlap for different interface.
			</desc>
			<log-file>step5_verify_ip_pool_not_overlap.log</log-file>
			<ssh target="ap1">
				-v "interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_10} ${dhcp_end_10}"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)ERROR:\s+The\s+IP\s+pool\s+overlapped\s+with\s+IP\s+pool\s+\[${dhcp_start_1}\s+-\s+${dhcp_end_1}\]" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -e "ERROR: Invalid parameter(s)"</log-match>
			<no-error-check />
		</step>

		<step no="5.1">
			<desc>
				Clear ip-pool and ip
			</desc>
			<log-file>step5.1_Clear_mgt0.1_ip-pool.log</log-file>
			<ssh target="ap1">
				-v "no interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_1} ${dhcp_end_1}"
				-v "no interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_2} ${dhcp_end_2}"
				-v "no interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_3} ${dhcp_end_3}"
				-v "no interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_4} ${dhcp_end_4}"
				-v "no interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_5} ${dhcp_end_5}"
				-v "no interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_6} ${dhcp_end_6}"
				-v "no interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_7} ${dhcp_end_7}"
				-v "no interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start_8} ${dhcp_end_8}"
				-v "no interface vlan${vlan_id} ip"
			</ssh>
		</step>

		<step no="6">
			<desc>
				Verify that can not set ip-pool when vlan interface address is not set.
			</desc>
			<log-file>step6_can_not_set_ip_pool.log</log-file>
			<ssh target="ap1">
				-v "interface vlan ${vlan_id}"
				-v "interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start} ${dhcp_end}"
			</ssh>
			<log-match>-c -e "Error: get IP address of vlan${vlan_id} failed"</log-match>
			<log-match>-c -e "ERROR: Invalid parameter(s)"</log-match>
			<no-error-check />
		</step>

		<step no="7">
			<desc>
				set vlan interface address and ip-pool.
			</desc>
			<log-file>step7_set_ip_pool.log</log-file>
			<ssh target="ap1">
				-v "interface vlan${vlan_id} ip ${dhcp_start}/${mask_addr}"
				-v "interface vlan${vlan_id} dhcp-server ip-pool ${dhcp_start} ${dhcp_end}"
			</ssh>
		</step>

		<step no="7.1">
			<desc>
				remove the vlan interface even ip-pool is set.
			</desc>
			<ssh target="ap1">
				-v "no interface vlan ${vlan_id}"
			</ssh>
		</step>

		<step no="7.2">
			<desc>
				Verify that can remove the vlan interface even ip-pool is set.
			</desc>
			<log-file>step7.2_show_running_config.log</log-file>
			<ssh target="ap1">
				-v "show running-config"
			</ssh>
			<log-match>-n -e "interface vlan ${vlan_id}"</log-match>
		</step>

		<step no="8">
			<desc>
				8. Verify that there is not error happen when ip-pool is not set and
				dhcp-server is enabled.
			</desc>
			<log-file>step8_check_not_error.log</log-file>
			<ssh target="ap1">
				-v "vlan ${vlan_id}"
				-v "interface vlan ${vlan_id}"
				-v "interface vlan${vlan_id} ip ${dhcp_start}/${mask_addr}"
				-v "interface vlan${vlan_id} dhcp-server enable"
				-v "show logging buffered level error"
			</ssh>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)show logging buffered level error" -p "(?i)error" -e "(?i)AH.*#" -nb -c 0 -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="9">
			<desc>
				eth1 access vlan_id
			</desc>
			<log-file>step9_port_config.log</log-file>
			<ssh target="ap1">
				-v "interface ${sta1.sw.if} switchport mode access"
				-v "interface ${sta1.sw.if} switchport access vlan ${vlan_id}"
			</ssh>
		</step>

		<step no="10">
			<desc>1. Connect a PC to switch</desc>
			<log-file>ifconfig_vpc1_.log</log-file>
			<ssh target="sta1" timeout="120">
				-v "dhclient ${sta1.tif.name}"
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="10.1">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="sta1.tif.ip">
				${bin.dir}/getinfo_ip.py -d ${sta1.mif.ip} -i ${sta1.tif.name} -v 'ip' -u ${sta1.user} -p ${sta1.passwd}
			</setvar>
		</step>

	</stage>
</testcase>