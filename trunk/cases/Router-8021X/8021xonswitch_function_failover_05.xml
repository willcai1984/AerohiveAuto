<?xml version="1.0" encoding="UTF-8"?>
<testcase>
    <brief>Auth fail VLAN not configured Platform  Dependence SR2024</brief>
    <priority>High</priority>
    <automated>yes</automated>
    <description>
        
		Pre-Condition:

			MAC. CWP configured, auth fail VLAN not configured
			MAC, CWP will fail
			security-object &lt;security-object name&gt;
			security-object &lt;security-object name&gt; security aaa radius-
			server primary &lt;ip address of radius server&gt; shared-secret 
			&lt;share-key&gt;
			security-object &lt;security-object name&gt; security aaa radius-
			server accounting primary &lt;ip address of radius server&gt; 
			shared-secret &lt;share-key&gt;
			security-object &lt;security-object name&gt; security additional-
			auth-method mac-based-auth auth-method chap
			security-object &lt;security-object name&gt; security additional-
			auth-method captive-web-portal auth-user-profile-attr &lt;upid&gt;
			security-object &lt;security-object name&gt; security additional-
			auth-method captive-web-portal auth-method chap
			security-object &lt;security-object name&gt; security additional-
			auth-method captive-web-portal pass-through vlan &lt;vlan id&gt;
			security-object &lt;security-object name&gt; security additional-
			auth-method captive-web-portal success-redirect original-
			page
			security-object &lt;security-object name&gt; web-server index-file 
			authentication.html
			security-object &lt;security-object name&gt; web-directory &lt;web-
			directory name&gt;
			interface &lt;ethx/y&gt; switchport mode access
			interface &lt;ethx/y&gt; security-object &lt;security-object name&gt;

		Test Procedure:

			1.	Enable Auth on port, check port access, result 1
	</description>
	<numofcvg>0</numofcvg>
	<numofbr>1</numofbr>
	<tbtype>windows</tbtype>

	<property name="br.route.netmask" value="255.255.255.0" />
	<property name="acct1.vlan" value="${br1.vpc1.vlan}" />

	<stage>
		<include prefix="start_selenium_server1" file="subs/start_selenium_server.xml" args="${sta1.mif.ip}, ${job_selenium_dir}, ${job_selenium_jar}, ${job_selenium_workload}" />

		<step no="0">
			<desc>
				-ifconfig to show the mac info
			</desc>
			<log-file>step0_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="60">
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
		</step>

		<step no="0.1a">
			<desc>get raw mac of vpc1</desc>
			<setvar name="br1.vpc1.tif.mac1">
				echo $(${bin.dir}/getbyrexp.py -p "HWaddr ([\da-fA-F:]+)" -f ${log.dir}/step0_ifconfig_vpc1_.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="0.1b">
			<desc>get mac of br1.vpc1</desc>
			<setvar name="br1.vpc1.tif.mac">
				echo $(echo $(echo ${br1.vpc1.tif.mac1} | cut -d : -f1)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f2,3)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f4,5)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f6))
			</setvar>
		</step>

		<include prefix="add.account1" file="subs/ldap_add.xml" args="${br1.vpc1.tif.mac}, ${br1.vpc1.tif.mac}" obj-args="acct1" />

		<step no="pre_step">
			<desc>configure mgt0.1 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask ${br.route.netmask}"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>

		<step no="1">
			<desc>
				1. Set one security-object with radius-server
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "security-object lan1"
				-v "security-object lan1 security protocol-suite 802.1x"
				-v "security-object lan1 security aaa radius primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object lan1 security aaa radius-server accounting primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object lan1 security additional-auth-method mac-based-auth auth-method chap"
				-v "security-object lan1 security additional-auth-method captive-web-portal auth-user-profile-attr 1 timer-display"
				-v "security-object lan1 web-server"
				-v "security-object lan1 security additional-auth-method captive-web-portal timer-display alert 10"
				-v "security-object lan1 security additional-auth-method captive-web-portal pass-through vlan ${br1.vpc1.vlan}"
				-v "security-object lan1 security additional-auth-method captive-web-portal failure-redirect login-page"
			</telnet>
		</step>

		<step no="2">
			<desc>
				2. Set one user-profile and define the attribute x,
				3. Set the eth1 mode as bridge-access and bind the attribute to it
				4. Bind the security-object to the eth1.
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"
				-v "interface eth1 mode bridge-access"
				-v "interface eth1 security-object lan1"
				-v "interface eth1 mac-learning enable"
				-v "aaa mac-format case-sensitivity lower-case"
				-v "aaa mac-format delimiter dot"
				-v "aaa mac-format style five-delimiter"
				-v "_debug auth all"
				-v "clear log all"
				-v "clear auth station"
			</telnet>
		</step>

		<step no="3">
			<desc>
				vpc1 ping mgt0.1
			</desc>
			<log-file>step3_ping_log.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${br1.br.mgt0.1.ip} -c 4"
			</ssh>
			<log-match>-n -c -i "from ${br1.br.mgt0.1.ip}: " -i "ttl="</log-match>
		</step>

		<step no="3.1">
			<desc>
				-kill process
			</desc>
			<ssh target="br1.vpc1" timeout="200">
				-v "killall -9 wpa_supplicant -q"
				-v "killall dhclient -q"
			</ssh>
		</step>

		<step no="3.2" delay="10">
			<desc>
				access public HM through CWP
			</desc>
			<log-file>first_log_in.html</log-file>
			<script timeout="500">
				export PYTHONPATH=${auto.root.dir}; python ${auto.root.dir}/webui/scripts/cwp/cwp_login_negative.py -r http://${sta1.mif.ip}:4444/wd/hub --parameters visit.url=${pub.hm2.ip} visit.pre_url=www.test${job.sid}.com login.username=${br1.vpc1.tif.mac} login.password=${br1.vpc1.tif.mac} -t ff -f ${log.dir}/${log.file} -l info &gt; ${log.dir}/first_session_id.log
			</script>
		</step>
		
		<step no="3.3">
			<desc>
				get ip address
			</desc>
			<log-file>step3.4_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="3.4a">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="3.5" type="loop-check" loop-max-times="6" loop-interval="10">
			<desc>
				show 802.1x-mac-table
			</desc>
			<log-file>step3.5_show_8021x_mac_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show 802.1x-mac-table"
			</telnet>
		</step>

		<step no="3.5a" type="loop-check" loop-max-times="6" loop-interval="10">
			<desc>
				check auth
			</desc>
			<log-file>step3.5a_check_auth_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show auth interface eth1"
			</telnet>
		</step>

		<step no="3.5b" delay="15">
			<desc>
				show logging buffered
			</desc>
			<log-file>step3.5b_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Station ${br1.vpc1.tif.mac} is authenticated to" -i "thru SSID lan1"</log-match>
			<log-match>-c -i "IEEE 802.1X: ${br1.vpc1.tif.mac} BE_AUTH entering state SUCCESS"</log-match>
			<log-match>-c -i "STA(${br1.vpc1.tif.mac}) login to SSID(eth1) by user_name=${br1.vpc1.tif.mac}"</log-match>
			<log-match>-c -i "Don't need do CWP auth for sta ${br1.vpc1.tif.mac}"</log-match>
			<log-match>-n -c -i "MAC-based auth: RADIUS server send OK to station ${br1.vpc1.tif.mac}"</log-match>
			<log-match>-n -c -i "authentication OK, username ${br1.vpc1.tif.mac}"</log-match>
			<log-match>-n -c -i "start MAC-based auth for sta ${br1.vpc1.tif.mac}"</log-match>
			<log-match>-c -i "Station is authenticated: SPA=${br1.vpc1.tif.mac}" -i "if=eth1" -i "VLAN-ID=${br1.vpc1.vlan}/${br1.vpc1.vlan}" -i "ssid=lan1"</log-match>
		</step>

		<step no="3.6" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				vpc1 ping pub dns
			</desc>
			<log-file>step3.6_ping_log_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>
	</stage>

	<post-process>
		<stage>

			<include prefix="stop_selenium_server1" file="subs/stop_selenium_server.xml" args="${sta1.mif.ip}, ${job_selenium_workload}" />

			<include prefix="del.account1" file="subs/ldap_delete.xml" args="${br1.vpc1.tif.mac}" />

		</stage>

		<include file="include/br_default_post_process.xml" />
	</post-process>
</testcase>
