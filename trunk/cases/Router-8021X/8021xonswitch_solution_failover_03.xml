<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>MAC Auth failover to 802.1X Platform Dependence SR2024</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		MAC Auth, 802.1X configured,
		security-object &lt;security-object name&gt;
		security-object &lt;security-object name&gt; security aaa radius-
		server primary &lt;ip address of radius server&gt; shared-secret
		&lt;share-key&gt;
		security-object &lt;security-object name&gt; security aaa radius-
		server accounting primary &lt;ip address of radius server&gt;
		shared-secret &lt;share-key&gt;
		security-object &lt;security-object name&gt; additional-auth-
		method mac-based-auth auth-method chap
		security-object &lt;security-object name&gt; security protocol-
		suite 802.1x
		security-object &lt;security-object name&gt; initial-auth-method
		mac-based-auth
		interface &lt;ethx/y&gt; switchport mode access
		interface &lt;ethx/y&gt; security-object &lt;security-object name&gt;
		Initial auth is MAC Auth, MAC Auth will fail

		Test Procedure:
		1. Enable Auth on port, check port access, result 1
		2. PC1 do 802.1X auth, check port access, result2
	</description>
	<numofcvg>0</numofcvg>
	<numofbr>1</numofbr>
	<tbtype>linux</tbtype>

	<property name="br.route.netmask" value="255.255.255.0" />
	<property name="acct2.vlan" value="${br1.vpc1.vlan}" />
	<property name="acct1.vlan" value="${br1.vpc2.vlan}" />

	<stage>
		<step no="0">
			<desc>
				-ifconfig to show mac info
			</desc>
			<log-file>step0_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="60">
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
		</step>

		<step no="0.1a">
			<desc>get raw mac of vpc1</desc>
			<setvar name="br1.vpc1.tif.mac1">
				echo $(${bin.dir}/getbyrexp.py -p "HWaddr ([\da-fA-F:]+)" -f ${log.dir}/step0_ifconfig_vpc1_.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="0.1b">
			<desc>get mac of br1.vpc1</desc>
			<setvar name="br1.vpc1.tif.mac">
				echo $(echo $(echo ${br1.vpc1.tif.mac1} | cut -d : -f1)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f2,3)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f4,5)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f6))
			</setvar>
		</step>

		<include prefix="add.account1" file="subs/ldap_add.xml" args="${br1.vpc1.tif.mac}, ${br1.vpc1.tif.mac}" obj-args="acct1" />

		<include prefix="add.account2" file="subs/ldap_add.xml" args="${job.sid}-aerohive, aerohive" obj-args="acct2" />

		<step no="pre_step">
			<desc>configure mgt0.1 with dhcp service enable</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask ${br.route.netmask}"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
				-v "interface mgt0.2 vlan ${br1.vpc2.vlan}"
				-v "interface mgt0.2 ip ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
				-v "interface mgt0.2 dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface mgt0.2 dhcp-server options netmask ${br.route.netmask}"
				-v "interface mgt0.2 dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface mgt0.2 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.2 dhcp-server enable"
			</telnet>
		</step>

		<step no="1">
			<desc>
				1. Set one security-object with radius-server
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "security-object lan1"
				-v "security-object lan1 security protocol-suite 802.1x"
				-v "security-object lan1 security aaa radius primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object lan1 security additional-auth-method mac-based-auth auth-method chap"
			</telnet>
		</step>

		<step no="2">
			<desc>
				2. Set one user-profile and define the attribute x,
				3. Set the eth1 mode as bridge-access and bind the attribute to it
				4. Bind the security-object to the eth1.
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "security-object lan1 security initial-auth-method mac-based-auth"
				-v "user-profile lan1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"
				-v "user-profile lan2 qos-policy def-user-qos vlan-id ${br1.vpc2.vlan} attribute 2"
				-v "interface eth1 mode bridge-access"
				-v "interface eth1 security-object lan1"
				-v "interface eth1 mac-learning enable"
				-v "aaa mac-format case-sensitivity lower-case"
				-v "aaa mac-format delimiter colon"
				-v "aaa mac-format style five-delimiter"
				-v "_debug auth all"
				-v "clear log all"
				-v "clear auth station"
			</telnet>
		</step>

		<step no="3">
			<desc>
				vpc1 ping mgt0.1
			</desc>
			<log-file>step3_ping_log.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${br1.br.mgt0.1.ip} -c 4"
			</ssh>
			<log-match>-n -c -i "from ${br1.br.mgt0.1.ip}: " -i "ttl="</log-match>
		</step>

		<step no="4">
			<desc>
				-get ip address
			</desc>
			<log-file>step4_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-n -i "inet addr"</log-match>
		</step>

		<step no="4.1" type="loop-check" loop-max-times="6" loop-interval="5">
			<desc>
				show 802.1x-mac-table
			</desc>
			<log-file>step4.1_show_8021x_mac_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show 802.1x-mac-table"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.vpc1.tif.mac}[\t ]+${br1.vpc2.vlan}[\t ]+eth1[\t ]+CLOSE[\t ]+N/A" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.1" type="loop-check" loop-max-times="6" loop-interval="10">
			<desc>
				-check auth
			</desc>
			<log-file>step4.1_check_auth_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show auth interface eth1"
			</telnet>
			<log-match>-c -i "Initial-auth=MAC-based-auth"</log-match>
			<log-match>-c -i "Protocol-suite=802.1X"</log-match>
			<log-match>-c -i "MAC-based-auth=Enabled"</log-match>
			<log-match>-c -i "Auth-mode=host-based"</log-match>
			<log-match>-n -c -i "${br1.vpc1.tif.mac}" -i "done" -i "${br1.vpc1.tif.mac}"</log-match>
		</step>

		<step no="4.2" delay="10">
			<desc>
				show logging buffered
			</desc>
			<log-file>step4.2_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "MAC-based auth: RADIUS server send reject to station ${br1.vpc1.tif.mac}"</log-match>
			<log-match>-c -i "authentication FAILED, type RADIUS, username ${br1.vpc1.tif.mac1}"</log-match>
			<log-match>-c -i "start MAC-based auth for sta ${br1.vpc1.tif.mac}"</log-match>
		</step>

		<step no="4.3" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				vpc1 ping pub dns
			</desc>
			<log-file>step4.3_ping_log_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 4"
			</ssh>
			<log-match>-n -c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>

		<step no="5">
			<desc>
				-prepare config file with correct username and wrong password
			</desc>
			<log-file>step5_auth_log.log</log-file>
			<ssh target="br1.vpc1">
				-v "echo -e \&quot; ctrl_interface=DIR=/var/run/wpa_supplicant \\n ap_scan=0 \\n network={ \\n key_mgmt=IEEE8021X \\n eap=MD5 \\n identity=\\x22${job.sid}-aerohive\\x22 \\n password=\\x22aerohive\\x22 \\n eapol_flags=0 \\n } \&quot; &gt; /tmp/wpa_supplicant.conf"
			</ssh>
		</step>

		<step no="5.1">
			<desc>
				-Laptop auth
			</desc>
			<log-file>step5.1_auth_log.log</log-file>
			<ssh target="br1.vpc1">
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "wpa_supplicant -B -i ${br1.vpc1.tif.name} -c /tmp/wpa_supplicant.conf -D wired"
			</ssh>
		</step>

		<step no="5.2" delay="15" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				-check connect status
			</desc>
			<log-file>step5.2_check_connection.log</log-file>
			<ssh target="br1.vpc1" prompt=">|.*#" timeout="200">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-c -i "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="5.3">
			<desc>
				-release ip address
			</desc>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name} -r"
			</ssh>
		</step>

		<step no="5.4" delay="10">
			<desc>
				-get ip address
			</desc>
			<log-file>step5.4_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="6" type="loop-check" loop-max-times="6" loop-interval="10">
			<desc>
				show 802.1x-mac-table
			</desc>
			<log-file>step6_show_8021x_mac_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show 802.1x-mac-table"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${br1.vpc1.tif.mac}[\t ]+${br1.vpc1.vlan}[\t ]+eth1[\t ]+CLOSE[\t ]+N/A" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6.1" type="loop-check" loop-max-times="6" loop-interval="10">
			<desc>
				-check auth
			</desc>
			<log-file>step6.1_check_auth_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show auth interface eth1"
			</telnet>
			<log-match>-c -i "Initial-auth=MAC-based-auth"</log-match>
			<log-match>-c -i "Protocol-suite=802.1X"</log-match>
			<log-match>-c -i "MAC-based-auth=Enabled"</log-match>
			<log-match>-c -i "Auth-mode=host-based"</log-match>
			<log-match>-c -i "${br1.vpc1.tif.mac}" -i "done" -i "${job.sid}-aerohive"</log-match>
		</step>

		<step no="6.2" delay="10">
			<desc>
				show logging buffered
			</desc>
			<log-file>step6.2_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="500">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Station ${br1.vpc1.tif.mac} is authenticated to" -i "thru SSID lan1"</log-match>
			<log-match>-c -i "STA(${br1.vpc1.tif.mac}) login to SSID(eth1) by user_name=${job.sid}-aerohive"</log-match>
			<log-match>-c -i "IEEE 802.1X: ${br1.vpc1.tif.mac} BE_AUTH entering state SUCCESS"</log-match>
			<log-match>-c -i "MAC-based auth: RADIUS server send reject to station ${br1.vpc1.tif.mac}"</log-match>
			<log-match>-c -i "authentication FAILED, type RADIUS, username ${br1.vpc1.tif.mac1}"</log-match>
			<log-match>-n -c -i "MAC-based auth: RADIUS server send OK to station ${br1.vpc1.tif.mac}"</log-match>
			<log-match>-n -c -i "authentication OK, username ${br1.vpc1.tif.mac}"</log-match>
			<log-match>-c -i "start MAC-based auth for sta ${br1.vpc1.tif.mac}"</log-match>
			<log-match>-c -i "Station is authenticated: SPA=${br1.vpc1.tif.mac}" -i "if=eth1" -i "VLAN-ID=${br1.vpc1.vlan}/${br1.vpc1.vlan}" -i "ssid=lan1"</log-match>
		</step>

		<step no="6.3" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				vpc1 ping pub dns
			</desc>
			<log-file>step6.3_ping_log_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 4"
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}: " -i "ttl="</log-match>
		</step>
	</stage>

	<post-process>
		<stage>

			<include prefix="del.account1" file="subs/ldap_delete.xml" args="${br1.vpc1.tif.mac}" />

			<include prefix="del.account2" file="subs/ldap_delete.xml" args="${job.sid}-aerohive" />

		</stage>

		<include file="include/br_default_post_process.xml" />
	</post-process>
</testcase>