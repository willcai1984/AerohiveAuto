<testcase>
	<brief>(IxPort: CoF=0) upgrade via uboot image_flash</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<numofsw>1</numofsw>
	<tbtype>winlin</tbtype>

	<description>
		upgrade via uboot image_flash
	</description>
	<comment>
	</comment>
	<property name="sw1.user" value="admin" />
	<property name="sw1.passwd" value="aerohive" />
	<property name="bootload_passwd" value="administrator" />
	<property name="correct_vlan" value="101" />
	<property name="incorrect_vlan" value="102" />
	<property name="tcl_script_server.user" value="root" />
	<property name="tcl_script_server.passwd" value="aerohive" />
	<property name="tcl_script_server.path" value="/home/python/tcl/v1" />

	<stage>

		<if>"${img.name}" != ""</if>

		<step no="1.0.1">
			<desc>
				Show interface mgt0 to get ip address
			</desc>
			<log-file>step1.0.1_mgt0_ip_info.log</log-file>
			<console target="sw1">
				-v 'show interface mgt0'
			</console>
		</step>

		<step no="1.0.2">
			<desc>
				Get mgt0's ip address
			</desc>
			<setvar name="sw1.ip">
				python ${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -f ${log.dir}/step1.0.1_mgt0_ip_info.log -t str
			</setvar>
		</step>

		<step no="1.1">
			<desc>
				set bootparam
			</desc>
			<log-file>step1.1_set_bootparam.log</log-file>
			<console target="sw1">
				-v 'boot-param server ${mpc.tif.ip}'
				-v 'boot-param boot-file ${img.name}'
			</console>
		</step>

		<step no="2.1">
			<desc>
				enter into bootloader mode
			</desc>
			<log-file>step2.1_enter_bootloader.log</log-file>
			<console target="sw1" prompt="[=A-Za-z0-9]+>+|AH-[0-9A-Za-z]*#">
				-bp ${bootload_passwd}
				-v 'reboot'
			</console>
		</step>

		<step no="3.1">
			<desc>
				image flash
			</desc>
			<log-file>step3.1_image_flash.log</log-file>
			<console target="sw1" prompt="SR[=0-9A-Za-z]*>>" slow="60">
				-v 'image_flash'
			</console>
			<!--<log-match>-i "done"</log-match>-->
		</step>

		<step no="4.1">
			<desc>
				go out of bootloader
			</desc>
			<console target="sw1" prompt="SR[=0-9A-Za-z]*>>">
				-v 'reset'
			</console>
		</step>
		
		<step no="4.2">
			<desc>On MPC, ident img_ver and img_date, and save to image_ver.txt</desc>
			<log-file>image_ver.txt</log-file>
			<script>
				ident /tftpboot/${img.name} > ${log.dir}/${log.file}
			</script>
		</step>
		
		<step no="4.3">
			<desc>show dut_ver and dut_date</desc>
			<log-file>show_ver_detail_sw1.log</log-file>
			<console target="sw1" slow="3">
				-v "show version"
			</console>
		</step>
		
		<step no="4.4">
			<desc>get img_ver, img_date, dut_ver, dut_date</desc>
			<multi-setvar>
				echo img_ver=`cat ${log.dir}/image_ver.txt |grep Reversion| awk '{print $2}'|cut -d. -f1,2,3`
				echo dut_ver=`cat ${log.dir}/show_ver_detail_sw1.log|grep "Version:"|awk '{print $3}'|sed 's/r/./'|cut -c1-5`
				echo img_date_day=`cat ${log.dir}/image_ver.txt|grep DATE|awk '{print $2" "$3" "$4}'|sed 's/ /_/g'`
				echo dut_date_day=`cat ${log.dir}/show_ver_detail_sw1.log|grep "Build time:"|tail -n 1|awk '{print $3" "$4" "$5}'|sed 's/ /_/g'`
				echo img_date_hour=`cat ${log.dir}/image_ver.txt|grep DATE|awk '{print $5}'|cut -c1-4`
				echo dut_date_hour=`cat ${log.dir}/show_ver_detail_sw1.log|grep "Build time:"|tail -n 1|awk '{print $6}'|cut -c1-4`
			</multi-setvar>
		</step>
		
		<step no="4.5">
			<desc>
				compare dut_ver and dut_date with img_ver and img_date
			</desc>
			<script>
				echo ${img_ver} ${dut_ver} ${img_date_day} ${dut_date_day} ${img_date_hour} ${dut_date_hour} | awk '{
				if ( $1 == $2 &amp;&amp; $3 == $4 &amp;&amp; $5 == $6)
				{exit (0);}
				else
				{exit (1);}
				}'
			</script>
		</step>

	</stage>

	<stage>
		<if>"${img.name}" == ""</if>
		<step no="5.1">
			<desc>img.name is null echo information</desc>
			<log-file>echo_information.log</log-file>
			<script>
				echo "img.name is null; need to upgrade device under test before running this case" > ${log.dir}/echo_information.log
				exit 1
			</script>
		</step>
	</stage>
	<failed-process>
		<stage>
			<step no="post_1">
				<desc>go out of bootloader</desc>
				<console target="sw1" prompt="SR[=0-9A-Za-z]*>>">
					-v "reset"
				</console>
				<no-error-check />
			</step>
		</stage>
	</failed-process>
</testcase>