<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check all user can use /ssh/ping/ function by hive on default setup.</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Manage IP is on default setup

		Test Procedure:
		-use computer1 to telnet/ssh/ping/snmp the portal1 which can get the
		result 1.
		- Change the computer1 IP and telnet/ssh/ping/snmp the portal1 which
		can get the result 1.
		Enable telnet and snmp on hive of portal1, verify telnet and snmp in
		computer1
	</description>
	<numofap>2</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="0.1">
			<if>"${ap1.eth1.existed}" == "true"</if>
			<desc>shutdown eth1</desc>
			<console target="ap1">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="1">
			<desc>
				-config hive on ap1
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 mode backhaul"
				-v "interface wifi1 radio channel 36"
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
			</telnet>
		</step>

		<step no="2">
			<desc>
				-config hive on ap2
			</desc>
			<console target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi1 mode backhaul"
				-v "interface wifi1 radio channel 36"
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
			</console>
		</step>

		<step no="2.1">
			<desc>
				-show snmp info
			</desc>
			<log-file>step2.1_show_snmp_info.log</log-file>
			<console target="ap1">
				-v "show snmp"
			</console>
		</step>

		<step no="2.2">
			<desc>
				get snmp contact info
			</desc>
			<setvar name="ap1.snmp.contact">
				${bin.dir}/getbyrexp.py -p "Syscontact:\s*(\S+)\s*" -t str -f ${log.dir}/step2.1_show_snmp_info.log
			</setvar>
		</step>

		<step no="3">
			<desc>
				show ap2's interface wifi1 info
			</desc>
			<log-file>show_ap2_interface_info.log</log-file>
			<console target="ap2">
				-v "show interface wifi1"
			</console>
		</step>

		<step no="3.1">
			<desc>
				get ap2's wifi1's mac address
			</desc>
			<setvar name="ap2_wifi1_mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_ap2_interface_info.log -i wifi1 -o aero -m -width 2
			</setvar>
		</step>

		<step no="3.2">
			<desc>
				show ap1's interface wifi1 info
			</desc>
			<log-file>show_ap1_interface_info.log</log-file>
			<console target="ap1">
				-v "show interface wifi1"
			</console>
		</step>

		<step no="3.3">
			<desc>
				get ap1's wifi1's mac address
			</desc>
			<setvar name="ap1_wifi1_mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_ap1_interface_info.log -i wifi1 -o aero -m -width 2
			</setvar>
		</step>
	</stage>

	<stage loop-values="1..10" loop-passed-break="true">
		<step no="4" delay="5">
			<desc>
				reset hive settings
			</desc>
			<telnet target="ap1" timeout="180">
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
			</telnet>
		</step>
		<step no="4.1" delay="5">
			<desc>
				show acsp neighbor to make sure ap1 is ap2's acsp neighbor when ap2's wifi1's acsp neighbor list less than 128
			</desc>
			<log-file>step4.1_show_acsp_neighbor_${loop_check.idx}.log</log-file>
			<telnet target="ap1" timeout="180">
				-v "show acsp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2_wifi1_mac}\s+Backhaul\s+${hive.name}" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>

	<stage loop-values="1..10" loop-passed-break="true">
		<step no="4.2" delay="5">
			<desc>
				reset hive settings
			</desc>
			<telnet target="ap2" timeout="180">
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
			</telnet>
		</step>
		<step no="4.3" delay="5">
			<desc>
				show acsp neighbor to make sure ap1 is ap2's acsp neighbor when ap2's wifi1's acsp neighbor list less than 128
			</desc>
			<log-file>step4.3_show_acsp_neighbor_${loop_check.idx}.log</log-file>
			<telnet target="ap2" timeout="180">
				-v "show acsp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap1_wifi1_mac}\s+Backhaul\s+${hive.name}" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>

	<stage>
		<step no="5" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				show amrp neighbor
			</desc>
			<log-file>step5_show_amrp_neighbor_${loop_check.idx}.log</log-file>
			<telnet target="ap1" timeout="180">
				-v "show amrp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2_wifi1_mac}\s+${ap2.mgt0.ip}\s+TWO-WAY" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6">
			<desc>
				-shutdown ap1's eth0
			</desc>
			<console target="ap1">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<step no="default.manage.1">
			<desc>
				- management the portal which can get the result 1.
				ssh portal and check the result
			</desc>
			<log-file>default.manage.1_ssh_mp.log</log-file>
			<ssh target="ap1" timeout="500">
				-v "show admin active"
			</ssh>
			<log-match>-e "admin" -i "tty"</log-match>
		</step>

		<step no="7">
			<desc>
				-clear log all
			</desc>
			<console target="ap1">
				-v "_ff dst-port 23 bidirectional"
				-v "_ff dst-port 161 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
			</console>
		</step>

		<step no="default.manage.2">
			<desc>
				-- management the portal which can get the result 1.
				telnet portal and check the result
			</desc>
			<log-file>default.manage.2_telnet_mp.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "telnet ${ap1.mgt0.ip}"
			</ssh>
			<log-match>-e "telnet: connect to address ${ap1.mgt0.ip}: Connection timed out" -e "telnet: Unable to connect to remote host: Connection timed out"</log-match>
		</step>

		<step no="7.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step7.1_show_logging_buffered.log</log-file>
			<console target="ap1">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "telnet not enabled on wifi1.1, drop pkt"</log-match>
		</step>

		<step no="default.manage.3">
			<desc>
				-- management the portal which can get the result 1.
				ping portal and check the result
			</desc>
			<log-file>default.manage.3_ping_mp.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
		</step>

		<step no="8">
			<desc>
				-clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="default.manage.4">
			<desc>
				-- management the portal which can get the result 1.
				snmp portal and check the result
			</desc>
			<log-file>default.manage.4_snmp_mp.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "service snmpd start"
				-v "snmpget -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4.0"
			</ssh>
			<log-match>-e "Timeout: No Response from ${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="8.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step8.1_show_logging_buffered.log</log-file>
			<console target="ap1">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "snmp not enabled on wifi1.1, drop pkt"</log-match>
		</step>

		<step no="hztb.manage.1">
			<desc>
				- management the portal which can get the result 1.
				ssh portal and check the result
			</desc>
			<ssh host="${tb.server1}" prompt='root@.*~.*#'>
				-v 'rm -rf /root/.ssh/known_hosts'
				-v 'echo "clicfg.pl -i 22 -o 60 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m ${ap.def.prompt} -n -z hztb.manage.1.1_telnet_ap1.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
		</step>

		<step no="hztb.manage.1.1">
			<desc>
				- cat file
			</desc>
			<log-file>hztb.manage.1.1_check_result.log</log-file>
			<ssh host="${tb.server1}">
				-v "cat /tmp/hztb.manage.1.1_telnet_ap1.log"
			</ssh>
			<log-match>-e "admin" -i "tty"</log-match>
		</step>

		<step no="9">
			<desc>
				-clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="hztb.manage.2">
			<desc>
				-- management the portal which can get the result 1.
				telnet portal and check the result
			</desc>
			<log-file>hztb.manage.2_telnet_mp.log</log-file>
			<ssh host="${tb.server1}" timeout="300">
				-v "telnet ${ap1.mgt0.ip}"
			</ssh>
			<log-match>-e "telnet: connect to address ${ap1.mgt0.ip}: Connection timed out" -e "telnet: Unable to connect to remote host: Connection timed out"</log-match>
		</step>

		<step no="9.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step9.1_show_logging_buffered.log</log-file>
			<console target="ap1">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "telnet not enabled on wifi1.1, drop pkt"</log-match>
		</step>

		<step no="hztb.manage.3">
			<desc>
				-- management the portal which can get the result 1.
				ping portal and check the result
			</desc>
			<log-file>hztb.manage.3_ping_mp.log</log-file>
			<ssh host="${tb.server1}" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
		</step>

		<step no="10">
			<desc>
				-clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="hztb.manage.4">
			<desc>
				-- management the portal which can get the result 1.
				snmp portal and check the result
			</desc>
			<log-file>hztb.manage.4_snmp_mp.log</log-file>
			<ssh host="${tb.server1}" timeout="300">
				-v "service snmpd start"
				-v "snmpget -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4.0"
			</ssh>
			<log-match>-e "Timeout: No Response from ${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="10.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step10.1_show_logging_buffered.log</log-file>
			<console target="ap1">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "snmp not enabled on wifi1.1, drop pkt"</log-match>
		</step>

		<step no="11">
			<desc>
				-- Enable telnet on hive by hive xxx manage telnet,enable snmp on hive
				by hive xxx manage snmp,
			</desc>
			<console target="ap1">
				-v "hive ${hive.name} manage telnet"
				-v "hive ${hive.name} manage snmp"
			</console>
		</step>

		<step no="11.1">
			<desc>
				show hive xxx manage
			</desc>
			<log-file>step11.1_show_hive_manage.log</log-file>
			<console target="ap1">
				-v "show hive ${hive.name} manage"
			</console>
			<log-match>-e "Ping"</log-match>
			<log-match>-e "SSH"</log-match>
			<log-match>-e "Telnet"</log-match>
			<log-match>-e "SNMP"</log-match>
		</step>

		<step no="new.ssid.manage.all.1">
			<desc>
				- management the portal which can get the result 2.
				telnet portal and check the result
			</desc>
			<log-file>new.ssid.manage.all.1_telnet_potal1.log</log-file>
			<telnet target="ap1" timeout="500">
				-v "show admin active"
			</telnet>
			<log-match>-e "admin" -i "pts"</log-match>
		</step>

		<step no="new.ssid.manage.all.2">
			<desc>
				-- management the portal which can get the result 2.
				snmp portal and check the result
			</desc>
			<log-file>new.ssid.manage.all.2_snmp_potal1.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "snmpget -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4.0"
			</ssh>
			<log-match>-e "SNMPv2-MIB::sysContact.0 = STRING: ${ap1.snmp.contact}"</log-match>
		</step>
	</stage>
</testcase>    