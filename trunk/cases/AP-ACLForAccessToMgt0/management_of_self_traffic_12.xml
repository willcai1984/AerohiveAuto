<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check that telnet/ssh/ping/snmp/all is forbidden when disable telnet/ssh/ping/snmp by eth0.</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Manager IP is on default setup

		Test Procedure:
		-Disable telnet/ssh/ping/snmp on eth0, use PC to ping/ssh/telnet/snmp AP
		-Enable telnet/ssh/ping/snmp on eth0, use PC to ping/ssh/telnet/snmp AP
		-Set admin manager-ip make which same subnet with PC or different subnet, from PC ping/telnet/ssh/snmp AP
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="0">
			<desc>
				reset configs
			</desc>
			<console target="ap1">
				-v "reset config"
			</console>
		</step>

		<step no="0.1">
			<desc>
				shutdown eth1
			</desc>
			<if>"${img.prodtype}" != "AP120"</if>
			<console target="ap1">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="1">
			<desc>
				-Disable the telnet/ssh/ping/snmp/all on the Eth0.
			</desc>
			<console target="ap1">
				-v "console page 0"
				-v "no interface eth0 manage all"
			</console>
		</step>

		<step no="1.1">
			<desc>
				-open debug mode
			</desc>
			<console target="ap1">
				-v "_ff dst-port 22 bidirectional"
				-v "_ff dst-port 23 bidirectional"
				-v "_ff dst-port 161 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</console>
		</step>

		<step no="1.2">
			<desc>
				-clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="disable.manage.all.1">
			<desc>
				Use the computer2 to ssh the portal1 which can get the result 1.
			</desc>
			<log-file>disable.manage.all.1_ssh_ap1.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "ssh admin@${ap1.mgt0.ip}"
			</ssh>
			<log-match>-e "connect to host ${ap1.mgt0.ip} port 22: Connection timed out"</log-match>
		</step>

		<step no="disable.manage.all.1.1">
			<desc>
				show logging buffered.
			</desc>
			<log-file>disable.manage.all.1.1_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "ssh not enabled on eth0, drop pkt"</log-match>
		</step>

		<step no="disable.manage.all.2">
			<desc>
				-clear log all.
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="disable.manage.all.2.1">
			<desc>
				Use the computer2 to telnet the portal1 which can get the result 1.
			</desc>
			<log-file>disable.manage.all.2.1_telnet_ap1.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "telnet ${ap1.mgt0.ip}"
			</ssh>
			<log-match>-e "telnet: connect to address ${ap1.mgt0.ip}: Connection timed out"</log-match>
		</step>

		<step no="disable.manage.all.2.2">
			<desc>
				show logging buffered.
			</desc>
			<log-file>disable.manage.all.2.2_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "telnet not enabled on eth0, drop pkt"</log-match>
		</step>

		<step no="disable.manage.all.3">
			<desc>
				Use the computer2 to ping the portal1 which can get the result 1.
			</desc>
			<log-file>disable.manage.all.3_ping_ap1.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
			<log-match>-e "100% packet loss"</log-match>
		</step>

		<step no="disable.manage.all.4">
			<desc>
				-clear log all.
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="disable.manage.all.4.1">
			<desc>
				Use the computer2 to snmp the portal1 which can get the result 1.
			</desc>
			<log-file>disable.manage.all.4.1_snmp_ap1.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "service snmpd start"
				-v "snmpwalk -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4"
			</ssh>
			<log-match>-e "Timeout: No Response from ${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="disable.manage.all.4.2">
			<desc>
				show logging buffered.
			</desc>
			<log-file>disable.manage.all.4.2_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "snmp not enabled on eth0, drop pkt"</log-match>
		</step>

		<step no="2">
			<desc>
				-enable the telnet/ssh/ping/snmp/all on the Eth0
			</desc>
			<console target="ap1">
				-v "interface eth0 manage all"
			</console>
		</step>

		<step no="2.1">
			<desc>
				-show snmp info
			</desc>
			<log-file>step2.1_show_snmp_info.log</log-file>
			<telnet target="ap1">
				-v "show snmp"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				get snmp contact info
			</desc>
			<setvar name="ap1.snmp.contact">
				${bin.dir}/getbyrexp.py -p "Syscontact:\s*(\S+)\s*" -t str -f ${log.dir}/step2.1_show_snmp_info.log
			</setvar>
		</step>

		<step no="enable.manage.all.1">
			<desc>
				Use the computer2 to ssh the portal1 which can get the result 2.
			</desc>
			<log-file>enable.manage.all.1_ssh_ap1.log</log-file>
			<ssh target="ap1">
				-v "show admin active"
			</ssh>
			<log-match>-e "admin" -i "pts"</log-match>
		</step>

		<step no="enable.manage.all.2">
			<desc>
				Use the computer2 to telnet the portal1 which can get the result 2.
			</desc>
			<log-file>enable.manage.all.2_telnet_ap1.log</log-file>
			<telnet target="ap1">
				-v "show admin active"
			</telnet>
			<log-match>-e "admin" -i "pts"</log-match>
		</step>

		<step no="enable.manage.all.3">
			<desc>
				Use the computer2 to ping the portal1 which can get the result 2.
			</desc>
			<log-file>enable.manage.all.3_ping_ap1.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
		</step>

		<step no="enable.manage.all.3.1">
			<desc>
				check ping result
			</desc>
			<log-file>enable.manage.all.3.1_ping_result.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -p ",\s*(\d+)% packet loss" -f ${log.dir}/enable.manage.all.3_ping_ap1.log --script "int(m.group(1))&lt;=20" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "True"</log-match>
		</step>

		<step no="enable.manage.all.4">
			<desc>
				Use the computer2 to snmp the portal1 which can get the result 2.
			</desc>
			<log-file>enable.manage.all.4_snmp_ap1.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "snmpwalk -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4"
			</ssh>
			<log-match>-e "SNMPv2-MIB::sysContact.0 = STRING: ${ap1.snmp.contact}"</log-match>
		</step>

		<step no="3">
			<desc>
				-specify a particular IP addr and netmask on the Eth0 (pc within netmask).
			</desc>
			<console target="ap1">
				-v "admin manager-ip ${tb.vlan1.network}"
			</console>
		</step>

		<step no="within.netmask.enable.manage.all.1">
			<desc>
				Use the computer2 to ssh the portal1 which can get the result 2.
			</desc>
			<log-file>within.netmask.enable.manage.all.1_ssh_ap1.log</log-file>
			<ssh target="ap1">
				-v "show admin active"
			</ssh>
			<log-match>-e "admin" -i "pts"</log-match>
		</step>

		<step no="within.netmask.enable.manage.all.2">
			<desc>
				Use the computer2 to telnet the portal1 which can get the result 2.
			</desc>
			<log-file>within.netmask.enable.manage.all.2_telnet_ap1.log</log-file>
			<telnet target="ap1">
				-v "show admin active"
			</telnet>
			<log-match>-e "admin" -i "pts"</log-match>
		</step>

		<step no="within.netmask.enable.manage.all.3">
			<desc>
				Use the computer2 to ping the portal1 which can get the result 2.
			</desc>
			<log-file>within.netmask.enable.manage.all.3_ping_ap1.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
		</step>

		<step no="within.netmask.enable.manage.all.3.1">
			<desc>
				check ping result
			</desc>
			<log-file>within.netmask.enable.manage.all.3.1_ping_result.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -p ",\s*(\d+)% packet loss" -f ${log.dir}/within.netmask.enable.manage.all.3_ping_ap1.log --script "int(m.group(1))&lt;=20" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "True"</log-match>
		</step>

		<step no="within.netmask.enable.manage.all.4">
			<desc>
				Use the computer2 to snmp the portal1 which can get the result 2.
			</desc>
			<log-file>within.netmask.enable.manage.all.4_snmp_ap1.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "snmpwalk -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4"
			</ssh>
			<log-match>-e "SNMPv2-MIB::sysContact.0 = STRING: ${ap1.snmp.contact}"</log-match>
		</step>

		<step no="4">
			<desc>
				- -specify a particular IP addr and netmask on the Eth0 (pc without netmask).
			</desc>
			<console target="ap1">
				-v "no admin manager-ip ${tb.vlan1.network}"
				-v "admin manager-ip ${tb.vlan2.network}"
			</console>
		</step>

		<step no="4.1">
			<desc>
				-open debug mode
			</desc>
			<console target="ap1">
				-v "_ff dst-port 22 bidirectional"
				-v "_ff dst-port 23 bidirectional"
				-v "_ff dst-port 161 bidirectional"
				-v "_kdebug fe basic"
			</console>
		</step>

		<step no="4.2">
			<desc>
				- -clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="without.netmask.enable.manage.all.1">
			<desc>
				Use the computer2 to ssh the portal1 which can get the result 1.
			</desc>
			<log-file>without.netmask.enable.manage.all.1_ssh_ap1.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "ssh admin@${ap1.mgt0.ip}"
			</ssh>
			<log-match>-e "connect to host ${ap1.mgt0.ip} port 22: Connection timed out"</log-match>
		</step>

		<step no="without.netmask.enable.manage.all.1.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>without.netmask.enable.manage.all.1.1_show_logging_buffered.log</log-file>
			<console target="ap1">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "src-ip ${mpc.tif.ip} not allowed to connect to device"</log-match>
		</step>

		<step no="without.netmask.enable.manage.all.2">
			<desc>
				clear log all.
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="without.netmask.enable.manage.all.2.1">
			<desc>
				Use the computer2 to telnet the portal1 which can get the result 1.
			</desc>
			<log-file>without.netmask.enable.manage.all.2.1_telnet_ap1.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "telnet ${ap1.mgt0.ip}"
			</ssh>
			<log-match>-e "telnet: connect to address ${ap1.mgt0.ip}: Connection timed out"</log-match>
		</step>

		<step no="without.netmask.enable.manage.all.2.2">
			<desc>
				show logging buffered
			</desc>
			<log-file>without.netmask.enable.manage.all.2.2_show_logging_buffered.log</log-file>
			<console target="ap1">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "src-ip ${mpc.tif.ip} not allowed to connect to device"</log-match>
		</step>

		<step no="without.netmask.enable.manage.all.3">
			<desc>
				Use the computer2 to ping the portal1 which can get the result 1.
			</desc>
			<log-file>without.netmask.enable.manage.all.3_ping_ap1.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
			<log-match>-e "100% packet loss"</log-match>
		</step>

		<step no="without.netmask.enable.manage.all.4">
			<desc>
				clear log all.
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="without.netmask.enable.manage.all.4.1">
			<desc>
				Use the computer2 to snmp the portal1 which can get the result 1.
			</desc>
			<log-file>without.netmask.enable.manage.all.4.1_snmp_ap1.log</log-file>
			<ssh host="${mpc.mif.ip}" timeout="300">
				-v "snmpwalk -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4"
			</ssh>
			<log-match>-e "Timeout: No Response from ${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="without.netmask.enable.manage.all.4.2">
			<desc>
				show logging buffered
			</desc>
			<log-file>without.netmask.enable.manage.all.4.2_show_logging_buffered.log</log-file>
			<console target="ap1">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "src-ip ${mpc.tif.ip} not allowed to connect to device"</log-match>
		</step>
	</stage>
</testcase>