<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check only specific user can use telnet/ssh/ping/snmp function by SSIDs bound to the wifi0.x and the SSID do not affect another SSID. .</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Manager IP is on default setup

		Test Procedure:
		-Create a SSID in portal.
		-Enable the telnet/ssh/ping/snmp/all and specify a particular IP addr
		and netmask on the SSID.
		-Associate a computer1 to the portal by the SSID(the computer1 addr is
		within the range of the netmask ).
		-telnet/ssh/ping/snmp the portal which can get the result 1.
		-Create another SSID, reassociate the computer1 to the portal with the
		second SSID and telnet/ssh/ping/snmp the portal which can get the
		result 1.
		-Reassociate the computer1 to the portal with the first SSID and put the
		command "no admin manager-ip" which can get the result 1.
		- enable/disable management all can take effect.
		- Shutdown, no shutdown the wifi0, the configuration is still efficient.
		- Restart the box, the configuration is still efficient.
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	
	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn1.proto" value="open" />
	
	<property name="conn2.ssid" value="${ssid.name}_1" />
	<property name="conn2.proto" value="open" />

	<stage>

		<step no="0.1">
			<desc>
				shutdown interface eth1
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<console target="ap1">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="1">
			<desc>
				-create a ssid on ap1,and bind it to wifi0
			</desc>
			<ssh target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</ssh>
		</step>

		<step no="1.1">
			<desc>
				--Enable the telnet/ssh/ping/snmp/all and specify a particular IP addr
				and netmask on the SSID.
			</desc>
			<ssh target="ap1">
				-v "ssid ${ssid.name} manage all"
				-v "admin manager-ip ${tb.vlan1.network}"
			</ssh>
		</step>

		<step no="2">
			<desc>
				-show snmp info
			</desc>
			<log-file>step2_show_snmp_info.log</log-file>
			<console target="ap1">
				-v "show snmp"
			</console>
		</step>

		<step no="2.1">
			<desc>
				get snmp contact info
			</desc>
			<setvar name="ap1.snmp.contact">
				${bin.dir}/getbyrexp.py -p "Syscontact:\s*(\S+)\s*" -t str -f ${log.dir}/step2_show_snmp_info.log
			</setvar>
		</step>

		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="4">
			<desc>
				delete tmp files
			</desc>
			<ssh target="sta1">
				-v "rm -f /tmp/within.netmask.enable.manage.all.1_ssh_portal.log"
				-v "rm -f /tmp/within.netmask.enable.manage.all.2_telnet_portal.log"
				-v "rm -f /tmp/new.ssid.enable.manage.all.1_ssh_portal.log"
				-v "rm -f /tmp/new.ssid.enable.manage.all.2_telnet_portal.log"
				-v "rm -f /tmp/remove.manager.ip.1_ssh_portal.log"
				-v "rm -f /tmp/remove.manager.ip.2_telnet_portal.log"
				-v "rm -f /tmp/remove.without.netmask.manager.ip.1_ssh_portal.log"
				-v "rm -f /tmp/remove.without.netmask.manager.ip.2_telnet_portal.log"
				-v "rm -f /tmp/enable.manage.all.1_ssh_portal.log"
				-v "rm -f /tmp/enable.manage.all.2_telnet_portal.log"
				-v "rm -f /tmp/down-up.wifi0.enable.manage.all.1_ssh_portal.log"
				-v "rm -f /tmp/down-up.wifi0.enable.manage.all.2_telnet_portal.log"
				-v "rm -f /tmp/reboot.enable.manage.all.1_ssh_portal.log"
				-v "rm -f /tmp/reboot.enable.manage.all.2_telnet_portal.log"
			</ssh>
		</step>

		<step no="within.netmask.enable.manage.all.1">
			<desc>
				- management the portal which can get the result 1.
				ssh portal and check the result
			</desc>
			<ssh target="sta1" timeout="900" prompt='root@.*~.*#'>
				-v 'rm -rf /root/.ssh/known_hosts'
				-v 'echo "clicfg.pl -i 22 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"AH.*#\" -n -z within.netmask.enable.manage.all.1_ssh_portal.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="within.netmask.enable.manage.all.1.1">
			<desc>
				-check the result of ssh portal.
			</desc>
			<log-file>within.netmask.enable.manage.all.1.1_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/within.netmask.enable.manage.all.1_ssh_portal.log"
			</ssh>
			<log-match>-i "admin" -i "pts" -c</log-match>
		</step>

		<step no="within.netmask.enable.manage.all.1.2">
			<desc>
				-Remove temporary file
			</desc>
			<ssh target="sta1">
				-v "rm -f /tmp/tmp.sh"
			</ssh>
		</step>

		<step no="within.netmask.enable.manage.all.2">
			<desc>
				-- management the portal which can get the result 1.
				telnet portal and check the result
			</desc>
			<ssh target="sta1" timeout="900" prompt='root@.*~.*#'>
				-v 'echo "clicfg.pl -i 23 -o 500 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"AH.*#\" -n -z within.netmask.enable.manage.all.2_telnet_portal.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="within.netmask.enable.manage.all.2.1">
			<desc>
				-check the result of telnet portal.
			</desc>
			<log-file>within.netmask.enable.manage.all.2.1_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/within.netmask.enable.manage.all.2_telnet_portal.log"
			</ssh>
			<log-match>-i "admin" -i "pts" -c</log-match>
		</step>

		<step no="within.netmask.enable.manage.all.2.2">
			<desc>
				-Remove temporary file
			</desc>
			<ssh target="sta1">
				-v "rm -f /tmp/tmp.sh"
			</ssh>
		</step>

		<step no="within.netmask.enable.manage.all.3">
			<desc>
				-- management the portal which can get the result 1.
				ping portal and check the result
			</desc>
			<log-file>within.netmask.enable.manage.all.3_ping_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
		</step>

		<step no="within.netmask.enable.manage.all.3.1">
			<desc>
				check ping result
			</desc>
			<log-file>within.netmask.enable.manage.all.3.1_check_result.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -p ",\s*(\d+)% packet loss" -f ${log.dir}/within.netmask.enable.manage.all.3_ping_portal.log --script "int(m.group(1))&lt;=50" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "True"</log-match>
		</step>

		<step no="within.netmask.enable.manage.all.4">
			<desc>
				-- management the portal which can get the result 1.
				snmp portal and check the result
			</desc>
			<log-file>within.netmask.enable.manage.all.4_snmp_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "service snmpd start"
				-v "snmpget -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4.0"
			</ssh>
			<log-match>-e "SNMPv2-MIB::sysContact.0 = STRING: ${ap1.snmp.contact}"</log-match>
		</step>

		<step no="5">
			<desc>
				-Create another SSID, reassociate the computer1 to the portal
			</desc>
			<console target="ap1">
				-v "ssid ${ssid.name}_1"
				-v "interface wifi0 ssid ${ssid.name}_1"
				-v "ssid ${ssid.name}_1 manage all"
			</console>
		</step>

		<step no="5.1">
			<desc>
				-kill the process wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "killall wpa_supplicant"
			</ssh>
		</step>

	<include prefix="6" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta1, ap1" />

		<step no="new.ssid.enable.manage.all.1">
			<desc>
				-ssh the portal which can get the result 1.
			</desc>
			<ssh target="sta1" timeout="900" prompt='root@.*~.*#'>
				-v 'rm -rf /root/.ssh/known_hosts'
				-v 'echo "clicfg.pl -i 22 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"AH.*#\" -n -z new.ssid.enable.manage.all.1_ssh_portal.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="new.ssid.enable.manage.all.1.1">
			<desc>
				-check ssh portal's result
			</desc>
			<log-file>new.ssid.enable.manage.all.1.1_check_result.log</log-file>
			<ssh target="sta1" timeout="500">
				-v "cat /tmp/new.ssid.enable.manage.all.1_ssh_portal.log"
			</ssh>
			<log-match>-i "admin" -i "pts" -c</log-match>
		</step>

		<step no="new.ssid.enable.manage.all.1.2">
			<desc>
				Remove temporary file
			</desc>
			<ssh target="sta1" timeout="500">
				-v "rm -f /tmp/tmp.sh"
			</ssh>
		</step>

		<step no="new.ssid.enable.manage.all.2">
			<desc>
				-telnet the portal which can get the result 1.
			</desc>
			<ssh target="sta1" timeout="900" prompt='root@.*~.*#'>
				-v 'echo "clicfg.pl -i 23 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"AH.*#\" -n -z new.ssid.enable.manage.all.2_telnet_portal.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="new.ssid.enable.manage.all.2.1">
			<desc>
				-check telnet portal's result
			</desc>
			<log-file>new.ssid.enable.manage.all.2.1_check_result.log</log-file>
			<ssh target="sta1" timeout="500">
				-v "cat /tmp/new.ssid.enable.manage.all.2_telnet_portal.log"
			</ssh>
			<log-match>-i "admin" -i "pts" -c</log-match>
		</step>

		<step no="new.ssid.enable.manage.all.2.2">
			<desc>
				Remove temporary file
			</desc>
			<ssh target="sta1" timeout="500">
				-v "rm -f /tmp/tmp.sh"
			</ssh>
		</step>

		<step no="new.ssid.enable.manage.all.3">
			<desc>
				--ping the portal which can get the result 1.
			</desc>
			<log-file>new.ssid.enable.manage.all.3_ping_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
		</step>

		<step no="new.ssid.enable.manage.all.3.1">
			<desc>
				--check ping result
			</desc>
			<log-file>new.ssid.enable.manage.all.3.1_check_result.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -p ",\s*(\d+)% packet loss" -f ${log.dir}/new.ssid.enable.manage.all.3_ping_portal.log --script "int(m.group(1))&lt;=50" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "True"</log-match>
		</step>

		<step no="new.ssid.enable.manage.all.4">
			<desc>
				--snmp the portal which can get the result 1.
			</desc>
			<log-file>new.ssid.enable.manage.all.4_snmp_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "snmpget -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4.0"
			</ssh>
			<log-match>-e "SNMPv2-MIB::sysContact.0 = STRING: ${ap1.snmp.contact}"</log-match>
		</step>

		<step no="7">
			<desc>
				-kill the process wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "killall wpa_supplicant"
			</ssh>
		</step>

		<include prefix="8" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />		

		<step no="8.5">
			<desc>
				-put the command "no admin manager-ip" which can get the result 1.
			</desc>
			<console target="ap1">
				-v "no admin manager-ip ${tb.vlan1.network}"
			</console>
		</step>

		<step no="remove.manager.ip.1">
			<desc>
				-ssh the portal which can get the result 1.
			</desc>
			<ssh target="sta1" timeout="900" prompt='root@.*~.*#'>
				-v 'rm -rf /root/.ssh/known_hosts'
				-v 'echo "clicfg.pl -i 22 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"AH.*#\" -n -z remove.manager.ip.1_ssh_portal.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="remove.manager.ip.1.1">
			<desc>
				-check ssh portal's result
			</desc>
			<log-file>remove.manager.ip.1.1_check_result.log</log-file>
			<ssh target="sta1" timeout="500">
				-v "cat /tmp/remove.manager.ip.1_ssh_portal.log"
			</ssh>
			<log-match>-i "admin" -i "pts" -c</log-match>
		</step>

		<step no="remove.manager.ip.1.2">
			<desc>
				-check ssh portal's result
			</desc>
			<ssh target="sta1" timeout="500">
				-v "rm -f /tmp/tmp.sh"
			</ssh>
		</step>

		<step no="remove.manager.ip.2">
			<desc>
				-telnet the portal which can get the result 1.
			</desc>
			<ssh target="sta1" timeout="900" prompt='root@.*~.*#'>
				-v 'echo "clicfg.pl -i 23 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"AH.*#\" -n -z remove.manager.ip.2_telnet_portal.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="remove.manager.ip.2.1">
			<desc>
				-check telnet portal's result
			</desc>
			<log-file>remove.manager.ip.2.1_check_result.log</log-file>
			<ssh target="sta1" timeout="500">
				-v "cat /tmp/remove.manager.ip.2_telnet_portal.log"
			</ssh>
			<log-match>-i "admin" -i "pts" -c</log-match>
		</step>

		<step no="remove.manager.ip.2.2">
			<desc>
				-check ssh portal's result
			</desc>
			<ssh target="sta1" timeout="500">
				-v "rm -f /tmp/tmp.sh"
			</ssh>
		</step>

		<step no="remove.manager.ip.3">
			<desc>
				--ping the portal which can get the result 1.
			</desc>
			<log-file>remove.manager.ip.3_ping_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
		</step>

		<step no="remove.manager.ip.3.1">
			<desc>
				--check ping result
			</desc>
			<log-file>remove.manager.ip.3.1_check_result.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -p ",\s*(\d+)% packet loss" -f ${log.dir}/remove.manager.ip.3_ping_portal.log --script "int(m.group(1))&lt;=50" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "True"</log-match>
		</step>

		<step no="remove.manager.ip.4">
			<desc>
				--snmp the portal which can get the result 1.
			</desc>
			<log-file>remove.manager.ip.4_snmp_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "snmpget -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4.0"
			</ssh>
			<log-match>-e "SNMPv2-MIB::sysContact.0 = STRING: ${ap1.snmp.contact}"</log-match>
		</step>

		<step no="9">
			<desc>
				-put the command "admin manager-ip a.b.c.d/24" which can get the result 2.
			</desc>
			<console target="ap1">
				-v "admin manager-ip ${tb.vlan2.network}"
			</console>
		</step>

		<step no="9.1">
			<desc>
				-open debug mode.
			</desc>
			<console target="ap1">
				-v "_ff dst-port 22 bidirectional"
				-v "_ff dst-port 23 bidirectional"
				-v "_ff dst-port 161 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</console>
		</step>

		<step no="9.2">
			<desc>
				-clear log all.
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="without.netmask.enable.manage.all.1">
			<desc>
				Use the computer1 to ssh the portal which can get the result 2.
			</desc>
			<log-file>without.netmask.enable.manage.all.1_ssh_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ssh admin@${ap1.mgt0.ip}"
			</ssh>
			<log-match>-e "connect to host ${ap1.mgt0.ip} port 22: Connection timed out"</log-match>
		</step>

		<step no="without.netmask.enable.manage.all.1.1">
			<desc>
				show logging buffered.
			</desc>
			<log-file>without.netmask.enable.manage.all.1.1_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "src-ip ${sta1.tif.ip} not allowed to connect to device"</log-match>
		</step>

		<step no="without.netmask.enable.manage.all.2">
			<desc>
				-clear log all.
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="without.netmask.enable.manage.all.2.1">
			<desc>
				Use the computer1 to telnet the portal which can get the result 2.
			</desc>
			<log-file>without.netmask.enable.manage.all.2.1_telnet_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "telnet ${ap1.mgt0.ip}"
			</ssh>
			<log-match>-e "telnet: connect to address ${ap1.mgt0.ip}: Connection timed out"</log-match>
		</step>

		<step no="without.netmask.enable.manage.all.2.2">
			<desc>
				show logging buffered.
			</desc>
			<log-file>without.netmask.enable.manage.all.2.2_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "src-ip ${sta1.tif.ip} not allowed to connect to device"</log-match>
		</step>

		<step no="without.netmask.enable.manage.all.3">
			<desc>
				Use the computer1 to ping the portal which can get the result 2.
			</desc>
			<log-file>without.netmask.enable.manage.all.3_ping_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
			<log-match>-e "100% packet loss"</log-match>
		</step>

		<step no="without.netmask.enable.manage.all.4">
			<desc>
				-clear log all.
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="without.netmask.enable.manage.all.4.1">
			<desc>
				Use the computer1 to snmp the portal which can get the result 2.
			</desc>
			<log-file>without.netmask.enable.manage.all.4.1_snmp_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "snmpwalk -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4"
			</ssh>
			<log-match>-e "Timeout: No Response from ${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="without.netmask.enable.manage.all.4.2">
			<desc>
				show logging buffered.
			</desc>
			<log-file>without.netmask.enable.manage.all.4.2_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "src-ip ${sta1.tif.ip} not allowed to connect to device"</log-match>
		</step>

		<step no="10">
			<desc>
				-put the command "no admin manager-ip" which can get the result 1.
			</desc>
			<console target="ap1">
				-v "no admin manager-ip ${tb.vlan2.network}"
			</console>
		</step>

		<step no="remove.without.netmask.manager.ip.1">
			<desc>
				-ssh the portal which can get the result 1.
			</desc>
			<ssh target="sta1" timeout="900" prompt='root@.*~.*#'>
				-v 'rm -rf /root/.ssh/known_hosts'
				-v 'echo "clicfg.pl -i 22 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"AH.*#\" -n -z remove.without.netmask.manager.ip.1_ssh_portal.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="remove.without.netmask.manager.ip.1.1">
			<desc>
				-check ssh portal's result
			</desc>
			<log-file>remove.without.netmask.manager.ip.1.1_check_result.log</log-file>
			<ssh target="sta1" timeout="500">
				-v "cat /tmp/remove.without.netmask.manager.ip.1_ssh_portal.log"
			</ssh>
			<log-match>-i "${ap.def.user}" -i "pts" -c</log-match>
		</step>

		<step no="remove.without.netmask.manager.ip.1.2">
			<desc>
				Remove temporary file
			</desc>
			<ssh target="sta1" timeout="500">
				-v "rm -f /tmp/tmp.sh"
			</ssh>
		</step>

		<step no="remove.without.netmask.manager.ip.2">
			<desc>
				-telnet the portal which can get the result 1.
			</desc>
			<ssh target="sta1" timeout="900" prompt='root@.*~.*#'>
				-v 'echo "clicfg.pl -i 23 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"AH.*#\" -n -z remove.without.netmask.manager.ip.2_telnet_portal.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="remove.without.netmask.manager.ip.2.1">
			<desc>
				-check telnet portal's result
			</desc>
			<log-file>remove.without.netmask.manager.ip.2.1_check_result.log</log-file>
			<ssh target="sta1" timeout="500">
				-v "cat /tmp/remove.without.netmask.manager.ip.2_telnet_portal.log"
			</ssh>
			<log-match>-i "${ap.def.user}" -i "pts" -c</log-match>
		</step>

		<step no="remove.without.netmask.manager.ip.2.2">
			<desc>
				Remove temporary file
			</desc>
			<ssh target="sta1" timeout="500">
				-v "rm -f /tmp/tmp.sh"
			</ssh>
		</step>

		<step no="remove.without.netmask.manager.ip.3">
			<desc>
				--ping the portal which can get the result 1.
			</desc>
			<log-file>remove.without.netmask.manager.ip.3_ping_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
		</step>

		<step no="remove.without.netmask.manager.ip.3.1">
			<desc>
				--check ping result
			</desc>
			<log-file>remove.without.netmask.manager.ip.3.1_check_result.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -p ",\s*(\d+)% packet loss" -f ${log.dir}/remove.without.netmask.manager.ip.3_ping_portal.log --script "int(m.group(1))&lt;=50" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "True"</log-match>
		</step>

		<step no="remove.without.netmask.manager.ip.4">
			<desc>
				--snmp the portal which can get the result 1.
			</desc>
			<log-file>remove.without.netmask.manager.ip.4_snmp_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "snmpget -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4.0"
			</ssh>
			<log-match>-e "SNMPv2-MIB::sysContact.0 = STRING: ${ap1.snmp.contact}"</log-match>
		</step>

		<step no="11">
			<desc>
				-enable management all can take effect.
			</desc>
			<console target="ap1">
				-v "ssid ${ssid.name} manage all"
			</console>
		</step>

		<step no="enable.manage.all.1">
			<desc>
				- management the portal which can get the result 1.
				ssh portal and check the result
			</desc>
			<ssh target="sta1" timeout="900" prompt='root@.*~.*#'>
				-v 'rm -rf /root/.ssh/known_hosts'
				-v 'echo "clicfg.pl -i 22 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"AH.*#\" -n -z enable.manage.all.1_ssh_portal.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="enable.manage.all.1.1">
			<desc>
				-check the result of ssh portal.
			</desc>
			<log-file>enable.manage.all.1.1_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/enable.manage.all.1_ssh_portal.log"
			</ssh>
			<log-match>-i "${ap.def.user}" -i "pts" -c</log-match>
		</step>

		<step no="enable.manage.all.1.2">
			<desc>
				Remove temporary file
			</desc>
			<ssh target="sta1">
				-v "rm -f /tmp/tmp.sh"
			</ssh>
		</step>

		<step no="enable.manage.all.2">
			<desc>
				-- management the portal which can get the result 1.
				telnet portal and check the result
			</desc>
			<ssh target="sta1" timeout="900" prompt='root@.*~.*#'>
				-v 'echo "clicfg.pl -i 23 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"AH.*#\" -n -z enable.manage.all.2_telnet_portal.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="enable.manage.all.2.1">
			<desc>
				-check the result of telnet portal.
			</desc>
			<log-file>enable.manage.all.2.1_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/enable.manage.all.2_telnet_portal.log"
			</ssh>
			<log-match>-i "${ap.def.user}" -i "pts" -c</log-match>
		</step>

		<step no="enable.manage.all.2.2">
			<desc>
				Remove temporary file
			</desc>
			<ssh target="sta1">
				-v "rm -f /tmp/tmp.sh"
			</ssh>
		</step>

		<step no="enable.manage.all.3">
			<desc>
				-- management the portal which can get the result 1.
				ping portal and check the result
			</desc>
			<log-file>enable.manage.all.3_ping_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
		</step>

		<step no="enable.manage.all.3.1">
			<desc>
				check ping result
			</desc>
			<log-file>enable.manage.all.3.1_check_result.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -p ",\s*(\d+)% packet loss" -f ${log.dir}/enable.manage.all.3_ping_portal.log --script "int(m.group(1))&lt;=50" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "True"</log-match>
		</step>

		<step no="enable.manage.all.4">
			<desc>
				-- management the portal which can get the result 1.
				snmp portal and check the result
			</desc>
			<log-file>enable.manage.all.4_snmp_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "snmpget -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4.0"
			</ssh>
			<log-match>-e "SNMPv2-MIB::sysContact.0 = STRING: ${ap1.snmp.contact}"</log-match>
		</step>

		<step no="12">
			<desc>
				-Shutdown the wifi0
			</desc>
			<console target="ap1">
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</console>
		</step>

		<step no="12.1" delay="5">
			<desc>
				-no Shutdown the wifi0
			</desc>
			<console target="ap1">
				-v "no interface wifi0 ssid ${ssid.name} shutdown"
			</console>
		</step>

		<step no="13">
			<desc>
				-kill the process wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "killall wpa_supplicant"
			</ssh>
		</step>

		<include prefix="14" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta1, ap1" />

		<step no="down-up.wifi0.enable.manage.all.1">
			<desc>
				- management the portal which can get the result 1.
				ssh portal and check the result
			</desc>
			<ssh target="sta1" timeout="900" prompt='root@.*~.*#'>
				-v 'rm -rf /root/.ssh/known_hosts'
				-v 'echo "clicfg.pl -i 22 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"AH.*#\" -n -z down-up.wifi0.enable.manage.all.1_ssh_portal.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="down-up.wifi0.enable.manage.all.1.1">
			<desc>
				-check the result of ssh portal.
			</desc>
			<log-file>down-up.wifi0.enable.manage.all.1.1_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/down-up.wifi0.enable.manage.all.1_ssh_portal.log"
			</ssh>
			<log-match>-i "${ap.def.user}" -i "pts" -c</log-match>
		</step>

		<step no="down-up.wifi0.enable.manage.all.1.2">
			<desc>
				Remove temporary file
			</desc>
			<ssh target="sta1">
				-v "rm -f /tmp/tmp.sh"
			</ssh>
		</step>

		<step no="down-up.wifi0.enable.manage.all.2">
			<desc>
				-- management the portal which can get the result 1.
				telnet portal and check the result
			</desc>
			<ssh target="sta1" timeout="900" prompt='root@.*~.*#'>
				-v 'echo "clicfg.pl -i 23 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"AH.*#\" -n -z down-up.wifi0.enable.manage.all.2_telnet_portal.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="down-up.wifi0.enable.manage.all.2.1">
			<desc>
				-check the result of telnet portal.
			</desc>
			<log-file>down-up.wifi0.enable.manage.all.2.1_check_result.log</log-file>
			<ssh target="sta1" timeout="180">
				-v "cat /tmp/down-up.wifi0.enable.manage.all.2_telnet_portal.log"
			</ssh>
			<log-match>-i "${ap.def.user}" -i "pts" -c</log-match>
		</step>

		<step no="down-up.wifi0.enable.manage.all.2.2">
			<desc>
				Remove temporary file
			</desc>
			<ssh target="sta1">
				-v "rm -f /tmp/tmp.sh"
			</ssh>
		</step>

		<step no="down-up.wifi0.enable.manage.all.3">
			<desc>
				-- management the portal which can get the result 1.
				ping portal and check the result
			</desc>
			<log-file>down-up.wifi0.enable.manage.all.3_ping_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
		</step>

		<step no="down-up.wifi0.enable.manage.all.3.1">
			<desc>
				check ping result
			</desc>
			<log-file>down-up.wifi0.enable.manage.all.3.1_check_result.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -p ",\s*(\d+)% packet loss" -f ${log.dir}/down-up.wifi0.enable.manage.all.3_ping_portal.log --script "int(m.group(1))&lt;=50" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "True"</log-match>
		</step>

		<step no="down-up.wifi0.enable.manage.all.4">
			<desc>
				-- management the portal which can get the result 1.
				snmp portal and check the result
			</desc>
			<log-file>down-up.wifi0.enable.manage.all.4_snmp_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "snmpget -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4.0"
			</ssh>
			<log-match>-e "SNMPv2-MIB::sysContact.0 = STRING: ${ap1.snmp.contact}"</log-match>
		</step>

		<step no="15">
			<desc>
				-Restart the box
			</desc>
			<console target="ap1">
				-v "save config"
				-v "reboot"
			</console>
		</step>

		<step no="15.1" delay="120">
			<desc>
				-kill the process wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "killall wpa_supplicant"
			</ssh>
		</step>

		<include prefix="16" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="reboot.enable.manage.all.1">
			<desc>
				- management the portal which can get the result 1.
				ssh portal and check the result
			</desc>
			<ssh target="sta1" timeout="900" prompt='root@.*~.*#'>
				-v 'rm -rf /root/.ssh/known_hosts'
				-v 'echo "clicfg.pl -i 22 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"AH.*#\" -n -z reboot.enable.manage.all.1_ssh_portal.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="reboot.enable.manage.all.1.1">
			<desc>
				-check the result of ssh portal.
			</desc>
			<log-file>reboot.enable.manage.all.1.1_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/reboot.enable.manage.all.1_ssh_portal.log"
			</ssh>
			<log-match>-i "${ap.def.user}" -i "pts" -c</log-match>
		</step>

		<step no="reboot.enable.manage.all.1.2">
			<desc>
				Remove temporary file
			</desc>
			<ssh target="sta1">
				-v "rm -f /tmp/tmp.sh"
			</ssh>
		</step>

		<step no="reboot.enable.manage.all.2">
			<desc>
				-- management the portal which can get the result 1.
				telnet portal and check the result
			</desc>
			<ssh target="sta1" timeout="900" prompt='root@.*~.*#'>
				-v 'echo "clicfg.pl -i 23 -o 600 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m \"AH.*#\" -n -z reboot.enable.manage.all.2_telnet_portal.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="reboot.enable.manage.all.2.1">
			<desc>
				-check the result of telnet portal.
			</desc>
			<log-file>reboot.enable.manage.all.2.1_check_result.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/reboot.enable.manage.all.2_telnet_portal.log"
			</ssh>
			<log-match>-i "${ap.def.user}" -i "pts" -c</log-match>
		</step>

		<step no="reboot.enable.manage.all.2.2">
			<desc>
				Remove temporary file
			</desc>
			<ssh target="sta1">
				-v "rm -f /tmp/tmp.sh"
			</ssh>
		</step>

		<step no="reboot.enable.manage.all.3">
			<desc>
				-- management the portal which can get the result 1.
				ping portal and check the result
			</desc>
			<log-file>reboot.enable.manage.all.3_ping_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
		</step>

		<step no="reboot.enable.manage.all.3.1">
			<desc>
				check ping result
			</desc>
			<log-file>reboot.enable.manage.all.3.1_check_result.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -p ",\s*(\d+)% packet loss" -f ${log.dir}/reboot.enable.manage.all.3_ping_portal.log --script "int(m.group(1))&lt;=50" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "True"</log-match>
		</step>

		<step no="reboot.enable.manage.all.4">
			<desc>
				-- management the portal which can get the result 1.
				snmp portal and check the result
			</desc>
			<log-file>reboot.enable.manage.all.4_snmp_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "snmpget -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4.0"
			</ssh>
			<log-match>-e "SNMPv2-MIB::sysContact.0 = STRING: ${ap1.snmp.contact}"</log-match>
		</step>

		<step no="17">
			<desc>
				-disable management all can take effect.
			</desc>
			<console target="ap1">
				-v "no ssid ${ssid.name} manage all"
			</console>
		</step>

		<step no="17.1">
			<desc>
				-open debug mode.
			</desc>
			<console target="ap1">
				-v "_ff dst-port 22 bidirectional"
				-v "_ff dst-port 23 bidirectional"
				-v "_ff dst-port 161 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</console>
		</step>

		<step no="17.2">
			<desc>
				-clear log all.
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="disable.manage.all.1">
			<desc>
				Use the computer1 to ssh the portal which can get the result 2.
			</desc>
			<log-file>disable.manage.all.1_ssh_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ssh admin@${ap1.mgt0.ip}"
			</ssh>
			<log-match>-e "connect to host ${ap1.mgt0.ip} port 22: Connection timed out"</log-match>
		</step>

		<step no="disable.manage.all.1.1">
			<desc>
				show logging buffered.
			</desc>
			<log-file>disable.manage.all.1.1_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "ssh not enabled on wifi0.1, drop pkt"</log-match>
		</step>

		<step no="disable.manage.all.2">
			<desc>
				-clear log all.
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="disable.manage.all.2.1">
			<desc>
				Use the computer1 to telnet the portal which can get the result 2.
			</desc>
			<log-file>disable.manage.all.2.1_telnet_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "telnet ${ap1.mgt0.ip}"
			</ssh>
			<log-match>-e "telnet: connect to address ${ap1.mgt0.ip}: Connection timed out"</log-match>
		</step>

		<step no="disable.manage.all.2.2">
			<desc>
				show logging buffered.
			</desc>
			<log-file>disable.manage.all.2.2_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "telnet not enabled on wifi0.1, drop pkt"</log-match>
		</step>

		<step no="disable.manage.all.3">
			<desc>
				Use the computer1 to ping the portal which can get the result 2.
			</desc>
			<log-file>disable.manage.all.3_ping_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
			<log-match>-e "100% packet loss"</log-match>
		</step>

		<step no="disable.manage.all.4">
			<desc>
				-clear log all.
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="disable.manage.all.4.1">
			<desc>
				Use the computer1 to snmp the portal which can get the result 2.
			</desc>
			<log-file>disable.manage.all.4.1_snmp_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "snmpwalk -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4"
			</ssh>
			<log-match>-e "Timeout: No Response from ${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="disable.manage.all.4.2">
			<desc>
				show logging buffered.
			</desc>
			<log-file>disable.manage.all.4.2_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "snmp not enabled on wifi0.1, drop pkt"</log-match>
		</step>

		<step no="18">
			<desc>
				-Shutdown the wifi0
			</desc>
			<console target="ap1">
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</console>
		</step>

		<step no="18.1" delay="5">
			<desc>
				-no Shutdown the wifi0
			</desc>
			<console target="ap1">
				-v "no interface wifi0 ssid ${ssid.name} shutdown"
			</console>
		</step>

		<step no="18.2">
			<desc>
				-clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="19">
			<desc>
				-kill the process wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "killall wpa_supplicant"
			</ssh>
		</step>

		<include prefix="20" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="20.1">
			<desc>
				pc connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<include prefix="20.2" file="subs/chk_conn_in_sta.xml" args="sta1" />

		<step no="down-up.wifi0.disable.manage.all.1">
			<desc>
				Use the computer1 to ssh the portal which can get the result 2.
			</desc>
			<log-file>down-up.wifi0.disable.manage.all.1_ssh_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ssh admin@${ap1.mgt0.ip}"
			</ssh>
			<log-match>-e "connect to host ${ap1.mgt0.ip} port 22: Connection timed out"</log-match>
		</step>

		<step no="down-up.wifi0.disable.manage.all.1.1">
			<desc>
				show logging buffered.
			</desc>
			<log-file>down-up.wifi0.disable.manage.all.1.1_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "ssh not enabled on wifi0.1, drop pkt"</log-match>
		</step>

		<step no="down-up.wifi0.disable.manage.all.2">
			<desc>
				-clear log all.
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="down-up.wifi0.disable.manage.all.2.1">
			<desc>
				Use the computer1 to telnet the portal which can get the result 2.
			</desc>
			<log-file>down-up.wifi0.disable.manage.all.2.1_telnet_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "telnet ${ap1.mgt0.ip}"
			</ssh>
			<log-match>-e "telnet: connect to address ${ap1.mgt0.ip}: Connection timed out"</log-match>
		</step>

		<step no="down-up.wifi0.disable.manage.all.2.2">
			<desc>
				show logging buffered.
			</desc>
			<log-file>down-up.wifi0.disable.manage.all.2.2_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "telnet not enabled on wifi0.1, drop pkt"</log-match>
		</step>

		<step no="down-up.wifi0.disable.manage.all.3">
			<desc>
				Use the computer1 to ping the portal which can get the result 2.
			</desc>
			<log-file>down-up.wifi0.disable.manage.all.3_ping_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
			<log-match>-e "100% packet loss"</log-match>
		</step>

		<step no="down-up.wifi0.disable.manage.all.4">
			<desc>
				-clear log all.
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="down-up.wifi0.disable.manage.all.4.1">
			<desc>
				Use the computer1 to snmp the portal which can get the result 2.
			</desc>
			<log-file>down-up.wifi0.disable.manage.all.4.1_snmp_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "snmpwalk -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4"
			</ssh>
			<log-match>-e "Timeout: No Response from ${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="down-up.wifi0.disable.manage.all.4.2">
			<desc>
				show logging buffered.
			</desc>
			<log-file>down-up.wifi0.disable.manage.all.4.2_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "snmp not enabled on wifi0.1, drop pkt"</log-match>
		</step>

		<step no="21">
			<desc>
				-Restart the box
			</desc>
			<console target="ap1">
				-v "save config"
				-v "reboot"
			</console>
		</step>

		<step no="21.1">
			<desc>
				-open debug mode.
			</desc>
			<console target="ap1">
				-v "_ff dst-port 22 bidirectional"
				-v "_ff dst-port 23 bidirectional"
				-v "_ff dst-port 161 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</console>
		</step>

		<step no="21.2" delay="10">
			<desc>
				-kill the process wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "killall wpa_supplicant"
			</ssh>
		</step>

		<include prefix="22" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="22.1">
			<desc>
				pc connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<include prefix="22.2" file="subs/chk_conn_in_sta.xml" args="sta1" />


		<step no="22.3">
			<desc>
				--clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="reboot.disable.manage.all.1">
			<desc>
				Use the computer1 to ssh the portal which can get the result 2.
			</desc>
			<log-file>reboot.disable.manage.all.1_ssh_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ssh admin@${ap1.mgt0.ip}"
			</ssh>
			<log-match>-e "connect to host ${ap1.mgt0.ip} port 22: Connection timed out"</log-match>
		</step>

		<step no="reboot.disable.manage.all.1.1">
			<desc>
				show logging buffered.
			</desc>
			<log-file>reboot.disable.manage.all.1.1_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "ssh not enabled on wifi0.1, drop pkt"</log-match>
		</step>

		<step no="reboot.disable.manage.all.2">
			<desc>
				-clear log all.
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="reboot.disable.manage.all.2.1">
			<desc>
				Use the computer1 to telnet the portal which can get the result 2.
			</desc>
			<log-file>reboot.disable.manage.all.2.1_telnet_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "telnet ${ap1.mgt0.ip}"
			</ssh>
			<log-match>-e "telnet: connect to address ${ap1.mgt0.ip}: Connection timed out"</log-match>
		</step>

		<step no="reboot.disable.manage.all.2.2">
			<desc>
				show logging buffered.
			</desc>
			<log-file>reboot.disable.manage.all.2.2_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "telnet not enabled on wifi0.1, drop pkt"</log-match>
		</step>

		<step no="reboot.disable.manage.all.3">
			<desc>
				Use the computer1 to ping the portal which can get the result 2.
			</desc>
			<log-file>reboot.disable.manage.all.3_ping_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
			<log-match>-e "100% packet loss"</log-match>
		</step>

		<step no="reboot.disable.manage.all.4">
			<desc>
				-clear log all.
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="reboot.disable.manage.all.4.1">
			<desc>
				Use the computer1 to snmp the portal which can get the result 2.
			</desc>
			<log-file>reboot.disable.manage.all.4.1_snmp_portal.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "snmpwalk -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4"
			</ssh>
			<log-match>-e "Timeout: No Response from ${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="reboot.disable.manage.all.4.2">
			<desc>
				show logging buffered.
			</desc>
			<log-file>reboot.disable.manage.all.4.2_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="500">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "snmp not enabled on wifi0.1, drop pkt"</log-match>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					delete tmp files
				</desc>
				<ssh target="sta1">
					-v "rm -f /tmp/within.netmask.enable.manage.all.1_ssh_portal.log"
					-v "rm -f /tmp/within.netmask.enable.manage.all.2_telnet_portal.log"
					-v "rm -f /tmp/new.ssid.enable.manage.all.1_ssh_portal.log"
					-v "rm -f /tmp/new.ssid.enable.manage.all.2_telnet_portal.log"
					-v "rm -f /tmp/remove.manager.ip.1_ssh_portal.log"
					-v "rm -f /tmp/remove.manager.ip.2_telnet_portal.log"
					-v "rm -f /tmp/remove.without.netmask.manager.ip.1_ssh_portal.log"
					-v "rm -f /tmp/remove.without.netmask.manager.ip.2_telnet_portal.log"
					-v "rm -f /tmp/enable.manage.all.1_ssh_portal.log"
					-v "rm -f /tmp/enable.manage.all.2_telnet_portal.log"
					-v "rm -f /tmp/down-up.wifi0.enable.manage.all.1_ssh_portal.log"
					-v "rm -f /tmp/down-up.wifi0.enable.manage.all.2_telnet_portal.log"
					-v "rm -f /tmp/reboot.enable.manage.all.1_ssh_portal.log"
					-v "rm -f /tmp/reboot.enable.manage.all.2_telnet_portal.log"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>