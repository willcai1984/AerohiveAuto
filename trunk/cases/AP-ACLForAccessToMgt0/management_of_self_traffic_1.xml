<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check all user can use management function by SSIDs on default setup.</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Manage IP is on default setup

		Test Procedure:
		-Create a SSID in Mp1 .
		-Check which management options be enabled by default by show ssid
		xxx manage
		-Associate a computer1 to the MP1 by the SSID.
		- management the Mp1 which can get the result 1.
		- Change the computer1 IP and telnet/ssh/ping/snmp the Mp1 which
		can get the result 1.
		- Change the SSID, reassociate to the MP1 and telnet/ssh/ping/snmp
		the Mp1 which can get the result 1.
		Enable telnet on SSID by ssid xxx manage telnet,enable snmp on SSID
		by ssid xxx manage snmp, from computer1 to verify telnet and snmp,
		get the result2
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<!-- <property name="conn1.ssid" value="${ssid.name}" /> -->
	<!-- <property name="conn1.proto" value="open" /> -->

	<!-- <property name="conn2.ssid" value="${ssid.name}_1" /> -->
	<!-- <property name="conn2.proto" value="open" /> -->

	<stage>
		<step no="2.1">
			<desc>
				-show snmp info
			</desc>
			<log-file>step2.1_show_snmp_info.log</log-file>
			<console target="ap1">
				-v "show snmp"
			</console>
		</step>

		<step no="2.2">
			<desc>
				get snmp contact info
			</desc>
			<setvar name="ap1.snmp.contact">
				${bin.dir}/getbyrexp.py -p "Syscontact:\s*(\S+)\s*" -t str -f ${log.dir}/step2.1_show_snmp_info.log
			</setvar>
		</step>

		<step no="3">
			<desc>
				-create a ssid on ap1,and bind it to wifi0
			</desc>
			<console target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
			</console>
		</step>

		<step no="3.1">
			<desc>
				-Check which management options be enabled by default by show ssid
				xxx manage
			</desc>
			<log-file>step5.1_show_ssid_manage.log</log-file>
			<console target="ap1">
				-v "show ssid ${ssid.name} manage"
			</console>
			<log-match>-e "Ping"</log-match>
			<log-match>-e "SSH"</log-match>
			<log-match>-n -e "Telnet"</log-match>
			<log-match>-n -e "SNMP"</log-match>
		</step>

		<!-- <include prefix="4" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" /> -->


		<step no="2.1">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>

		<include prefix="2.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />


		<step no="4.1">
			<desc>
				delete tmp files
			</desc>
			<ssh target="sta1" timeout="500">
				-v "rm -f /tmp/step5_ssh_ap1.log"
				-v "rm -f /tmp/step13_ssh_ap1.log"
				-v "rm -f /tmp/step16_ping_ap1.log"
				-v "rm -f /tmp/step19_telnet_ap1.log"
			</ssh>
		</step>

		<step no="5">
			<desc>
				- management the Mp1 which can get the result 1.
				ssh mp1 and check the result
			</desc>
			<ssh target="sta1" prompt='root@.*~.*#'>
				-v 'rm -rf /root/.ssh/known_hosts'
				-v 'echo "clicfg.pl -i 22 -o 60 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m ${ap.def.prompt} -n -z step5_ssh_ap1.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="6">
			<desc>
				- cat file
			</desc>
			<log-file>step6_ssh_ap1.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/step5_ssh_ap1.log"
			</ssh>
			<log-match>-e "admin" -i "tty"</log-match>
		</step>

		<step no="6.1">
			<desc>
				-open debug mode
			</desc>
			<console target="ap1">
				-v "_ff dst-port 23 bidirectional"
				-v "_ff dst-port 161 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</console>
		</step>

		<step no="6.2">
			<desc>
				-clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="7">
			<desc>
				-- management the Mp1 which can get the result 1.
				telnet mp1 and check the result
			</desc>
			<log-file>step7_telnet_ap1.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "telnet ${ap1.mgt0.ip}"
			</ssh>
			<log-match>-i "Connection timed out"</log-match>
		</step>

		<step no="7.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step7.1_show_logging_buffered.log</log-file>
			<console target="ap1">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "telnet not enabled on wifi0.1, drop pkt"</log-match>
		</step>

		<step no="8">
			<desc>
				-- management the Mp1 which can get the result 1.
				ping mp1 and check the result
			</desc>
			<log-file>step8_ping_ap1.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
		</step>

		<step no="8.1">
			<desc>
				check ping result
			</desc>
			<log-file>step8.1_ping_result.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -p ",\s*(\d+)% packet loss" -f ${log.dir}/step8_ping_ap1.log --script "int(m.group(1))&lt;=20" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "True"</log-match>
		</step>

		<step no="8.2">
			<desc>
				-clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="9">
			<desc>
				-- management the Mp1 which can get the result 1.
				snmp mp1 and check the result
			</desc>
			<log-file>step9_snmp_ap1.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "service snmpd start"
				-v "snmpget -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4.0"
			</ssh>
			<no-error-check />
			<log-match>-e "Timeout: No Response from ${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="9.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step9.1_show_logging_buffered.log</log-file>
			<console target="ap1">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "snmp not enabled on wifi0.1, drop pkt"</log-match>
		</step>

		<step no="10">
			<desc>
				-create a ssid on ap1,and bind it to wifi0
			</desc>
			<console target="ap1">
				-v "ssid ${ssid.name}_1"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}_1"
			</console>
		</step>

		<step no="11">
			<desc>
				-kill the process wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "killall wpa_supplicant"
			</ssh>
		</step>



		<!-- <include prefix="4" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta1, ap1" /> -->
		<step no="12.1">
			<multi-setvar>
				echo "conn2.ssid=${ssid.name}_1"
				echo "conn2.proto=open"
				echo "conn2.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>

		<include prefix="12.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta1, ap1" />


		<step no="13">
			<desc>
				- management the Mp1 which can get the result 1.
				ssh mp1 and check the result
			</desc>
			<ssh target="sta1" prompt='root@.*~.*#'>
				-v 'rm -rf /root/.ssh/known_hosts'
				-v 'echo "clicfg.pl -i 22 -o 60 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m ${ap.def.prompt} -n -z step13_ssh_ap1.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="13.1">
			<desc>
				- cat file
			</desc>
			<log-file>step13.1_ssh_ap1.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/step13_ssh_ap1.log"
			</ssh>
			<log-match>-e "admin" -i "tty"</log-match>
		</step>

		<step no="13.2">
			<desc>
				-clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="14">
			<desc>
				-- management the Mp1 which can get the result 1.
				telnet mp1 and check the result
			</desc>
			<log-file>step14_telnet_ap1.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "telnet ${ap1.mgt0.ip}"
			</ssh>
			<no-error-check />
			<log-match>-e "Connection timed out"</log-match>
		</step>

		<step no="15">
			<desc>
				show logging buffered
			</desc>
			<log-file>step15_show_logging_buffered.log</log-file>
			<console target="ap1">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "telnet not enabled on wifi0.2, drop pkt"</log-match>
		</step>

		<step no="16">
			<desc>
				-- management the Mp1 which can get the result 1.
				ping mp1 and check the result
			</desc>
			<log-file>step16_ping_ap1.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5" ; exit 0
			</ssh>
		</step>

		<step no="16.1">
			<desc>
				check ping result
			</desc>
			<log-file>step16.1_ping_result.log</log-file>
			<script>
				${bin.dir}/getbyrexp.py -p ",\s*(\d+)% packet loss" -f ${log.dir}/step16_ping_ap1.log --script "int(m.group(1))&lt;=20" > ${log.dir}/${log.file}
			</script>
			<log-match>-e "True"</log-match>
		</step>

		<step no="16.2">
			<desc>
				-clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
			</console>
		</step>

		<step no="17">
			<desc>
				-- management the Mp1 which can get the result 1.
				snmp mp1 and check the result
			</desc>
			<log-file>step17_snmp_ap1.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "snmpget -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4.0"
			</ssh>
			<no-error-check />
			<log-match>-e "Timeout: No Response from ${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="17.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step17.1_show_logging_buffered.log</log-file>
			<console target="ap1">
				-v "show logging buffered" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "snmp not enabled on wifi0.2, drop pkt"</log-match>
		</step>

		<step no="18">
			<desc>
				-- Enable telnet on SSID by ssid xxx manage telnet,enable snmp on SSID
				by ssid xxx manage snmp,
			</desc>
			<console target="ap1">
				-v "ssid ${ssid.name}_1 manage telnet"
				-v "ssid ${ssid.name}_1 manage snmp"
			</console>
		</step>

		<step no="18.1">
			<desc>
				show ssid xxx manage
			</desc>
			<log-file>step18.1_show_ssid_manage.log</log-file>
			<console target="ap1">
				-v "show ssid ${ssid.name}_1 manage"
			</console>
			<log-match>-e "Ping"</log-match>
			<log-match>-e "SSH"</log-match>
			<log-match>-e "Telnet"</log-match>
			<log-match>-e "SNMP"</log-match>
		</step>

		<step no="18.2">
			<desc>
				-- sta1 Ping ap'mgt0
			</desc>
			<log-file>step18.2_ping.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "ping ${ap1.mgt0.ip} -c 5"
			</ssh>
		</step>

		<step no="19">
			<desc>
				-- management the Mp1 which can get the result 2.
				telnet mp1 and check the result
			</desc>
			<ssh target="sta1" prompt='root@.*~.*#'>
				-v 'rm -rf /root/.ssh/known_hosts'
				-v 'echo "clicfg.pl -i 23 -o 60 -d ${ap1.mgt0.ip} -u ${ap.def.user} -p ${ap.def.passwd} -m ${ap.def.prompt} -n -z step19_telnet_ap1.log -l /tmp/ -v \"show admin active\"" > /tmp/tmp.sh'
				-v 'sh /tmp/tmp.sh'
				-v 'sleep 20'
				-v ''
			</ssh>
			<no-error-check />
		</step>

		<step no="19.1">
			<desc>
				- cat file
			</desc>
			<log-file>step21.1_ssh_ap1.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "cat /tmp/step19_telnet_ap1.log"
			</ssh>
			<log-match>-e "admin" -i "tty"</log-match>
		</step>

		<step no="20">
			<desc>
				-- management the Mp1 which can get the result 2.
				snmp mp1 and check the result
			</desc>
			<log-file>step20_snmp_ap1.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "snmpget -v 2c ${ap1.mgt0.ip} -c hivecommunity .1.3.6.1.2.1.1.4.0"
			</ssh>
			<no-error-check />
			<log-match>-e "${ap1.snmp.contact}"</log-match>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					delete tmp files
				</desc>
				<ssh target="sta1" timeout="500">
					-v "rm -f /tmp/tmp.sh"
					-v "rm -f /tmp/step7_ssh_ap1.log"
					-v "rm -f /tmp/step13_ssh_ap1.log"
					-v "rm -f /tmp/step16_ping_ap1.log"
					-v "rm -f /tmp/step19_telnet_ap1.log"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>