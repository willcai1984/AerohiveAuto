<?xml version="1.0" encoding="UTF-8"?>
<testcase>
    <brief>Forwarding and Routing traffic based on policy, oif is wifi0 interface Platform  Dependence BR100,BR200,BR200-WP,BRAP330,BRAP350,BRAP121,BRAP141</brief>
    <priority>High</priority>
    <automated>yes</automated>
    <description>
        
		Pre-Condition:

			Set interface wifi0 mode wan

		Test Procedure:

			1.	Set a match-map 
			2.	Set a route-map, the oif for all traffic is wifi0 interface,
			3.	Create one routing policy, bind the route-map and match-map
			4.	Laptop connect to the match-map
			5.	Laptop send traffic to vpn network, check result1
			6.	Laptop send traffic to internet, check result2
			7.	wifi0 down
			8.	Laptop send traffic to vpn network, check result3
			9.	Laptop send traffic to internet, check result3
			10.	Wifi0 up
			11.	Laptop send traffic to vpn network, check result1
			12.	Laptop send traffic to internet, check result2
    </description>
    <numofbr>2</numofbr>
	<numofcvg>1</numofcvg>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>linux</tbtype>
	
	<property name="conn1.ssid" value="${job.sid}-${tb.name}-01" />
	<stage>
		<step no="1.1">
			<desc>
				config ssid1 on  br2
			</desc>
			<telnet target="${br2.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br2.vlan1}"
				-v "interface mgt0.1 ip ${br2.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br2.br.mgt0.1.ip_pool_start} ${br2.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br2.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
				-v "security-object sta1"
				-v "security-object sta1 default-user-profile-attr 1"
				-v "ssid ${conn1.ssid}"
				-v "ssid ${conn1.ssid} security-object sta1"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "user-profile sta1 qos-policy def-user-qos vlan-id ${br2.vlan1} attribute 1"
			</telnet>
		</step>
		<step no="1.2">
			<desc>
				config wifi0 as wan-client on br1
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface wifi0  mode wan-client"
				-v "client-mode ssid ${conn1.ssid}"
				-v "client-mode connect ssid ${conn1.ssid}"
			</telnet>
		</step>
		
		<step no="1.3" delay="60" type="loop-check" loop-max-times="10" loop-interval="20">
			<desc>
				show l3 interface ,check the wifi0.2 get ip address
			</desc>
			<log-file>step1.3_Get_wifi0.2_wan.ip.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show l3 interface"
			</telnet>
			<log-match>-n -i "wifi0.2.*0.0.0.0"</log-match>
		</step>
		
		<step no="1.4">
			<desc>get wifi0.2 ip address on BR side</desc>
			<setvar name="br1.wifi0.2.wan.ip">
				cat  ${log.dir}/step1.3_Get_wifi0.2_wan.ip.log|grep wifi0.2|awk '{print $2}'
			</setvar>
		</step>
		
		<step no="2">
			<desc>
				config mgt0.1 and mgt0.2 with dhcp service enable,dns service enable
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vlan1}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				Create user-profile bind eth1
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "interface eth1 mac-learning enable"
				-v "security-object lan1"
				-v "security-object lan1 default-user-profile-attr 1"
				-v "interface eth1 security-object lan1"
				-v "user-profile fw qos-policy def-user-qos vlan-id ${br1.vlan1} attribute 1"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				Set a match-map user-profile fw to any
				Set a route-map, the oif for all traffic is wifi0 interface
				Bind one match-map to routing policy
			</desc>
			<log-file>step2.2_Set_match_map.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "routing match-map ma user-profile fw to any"
				-v "routing route-map ra via wifi0"
				-v "routing policy pa id 1 match-map ma route-map ra"
			</telnet>
		</step>

		<step no="3">
			<desc>
				Laptop connect to the BR any access mode interface
			</desc>
			<log-file>step3_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ifconfig ${br1.vpc1.tif.name} down"
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "dhclient ${br1.vpc1.tif.name} -r"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="3.1">
			<desc>get raw mac of vpc1</desc>
			<setvar name="br1.vpc1.tif.mac1">
				echo $(${bin.dir}/getbyrexp.py -p "HWaddr ([\da-fA-F:]+)" -f ${log.dir}/step3_ifconfig_vpc1_.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="3.2">
			<desc>get mac of br1.vpc1</desc>
			<setvar name="br1.vpc1.tif.mac">
				echo $(echo $(echo ${br1.vpc1.tif.mac1} | cut -d : -f1)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f2,3)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f4,5)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f6))
			</setvar>
		</step>

		<step no="3.3">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="4" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				show ip rule
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "show ip rule"
			</telnet>
			<log-match> -i "from all fwmark 0x10000/0xff0000 lookup wifi0.2" </log-match>
			
		</step>

		<step no="open.debug" delay="60">
			<desc>
				open debug switch
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "_ff id 1 src-ip ${br1.vpc1.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="5" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to vpn network,ping is failed
			</desc>
			<log-file>step5_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
		</step>

		<step no="5.1" delay="10">
			<desc>
				show logging buffered,the ping traffic is forwarded on wifi0.2 interface
			</desc>
			<log-file>step5.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth1 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) mgt0.1 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) wifi0.2 ${br1.wifi0.2.wan.ip}->${cvg1.vpc1.tif.ip}"</log-match>
		</step>

		<step no="6" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to internet,ping is successful
			</desc>
			<log-file>step6_ping_ftp_server_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}" -i "ttl="</log-match>
		</step>

		<step no="6.1" delay="10">
			<desc>
				show logging buffered,the ping traffic is forwarded on wifi0.2 interface
			</desc>
			<log-file>step6.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) mgt0.1 ${pub.dns1.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) eth1 ${pub.dns1.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) mgt0.1 ${br1.vpc1.tif.ip}->${pub.dns1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth1 ${br1.vpc1.tif.ip}->${pub.dns1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) wifi0.2 ${br1.wifi0.2.wan.ip}->${pub.dns1.ip}"</log-match>
			<no-error-check />
		</step>

		<step no="7">
			<desc>
				Shutdown wifi0
			</desc>
			<console target="br1.br">
				-v "no client-mode connect"
				-v "show l3 interface"
				-v "show ip rule"
			</console>
		</step>

		<step no="8" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to vpn network,ping is failed
			</desc>
			<log-file>step8_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
		</step>

		<step no="8.1" delay="10">
			<desc>
				show logging buffered,the ping traffic is dropped base on the PBR ip rule
			</desc>
			<log-file>step8.1_show_logging_buffered.log</log-file>
			<console target="br1.br" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth1 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)routing done, ${br1.vpc1.tif.ip} -> ${cvg1.vpc1.tif.ip} ttl\(\d+\) proto\(\d+\) mark\s*\(\d+\).* \d+ bytes, no available route" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) mgt0.1 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			
			<no-error-check />
		</step>

		<step no="9" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to internet,ping is failed
			</desc>
			<log-file>step9_ping_ftp_server_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${pub.dns1.ip}" -i "ttl="</log-match>
		</step>

		<step no="9.1" delay="10">
			<desc>
				show logging buffered,,the ping traffic is dropped base on the PBR ip rule
			</desc>
			<log-file>step9.1_show_logging_buffered.log</log-file>
			<console target="br1.br" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth1 ${br1.vpc1.tif.ip}->${pub.dns1.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) mgt0.1 ${br1.vpc1.tif.ip}->${pub.dns1.ip}" -i "icmp-echo-req"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)routing done, ${br1.vpc1.tif.ip} -> ${pub.dns1.ip} ttl\(\d+\) proto\(\d+\) mark\s*\(\d+\) .*\d+ bytes, no available route" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="10">
			<desc>
				Enable br1 wifi0
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "client-mode connect ssid ${conn1.ssid}"
			</telnet>
		</step>
		
		<step no="10.1" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				show l3 interface on br1 ,check the wifi0.2 get ip address
			</desc>
			<log-file>step10.1_Get_wifi0.2_wan.ip.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show l3 interface"
			</telnet>
			<log-match>-n -i "wifi0.2.*0.0.0.0"</log-match>
		</step>

		<step no="11" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to vpn network
			</desc>
			<log-file>step11_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-n -c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
		</step>

		<step no="11.1" delay="10">
			<desc>
				show logging buffered
			</desc>
			<log-file>step11.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth1 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(u) mgt0.1 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) wifi0.2 ${br1.wifi0.2.wan.ip}->${cvg1.vpc1.tif.ip}"</log-match>
			<no-error-check />
		</step>

		<step no="12" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to internet
			</desc>
			<log-file>step12_ping_ftp_server_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}" -i "ttl="</log-match>
		</step>

		<step no="12.1" delay="10">
			<desc>
				show logging buffered
			</desc>
			<log-file>step12.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) mgt0.1 ${pub.dns1.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) eth1 ${pub.dns1.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) mgt0.1 ${br1.vpc1.tif.ip}->${pub.dns1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth1 ${br1.vpc1.tif.ip}->${pub.dns1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) wifi0.2 ${br1.wifi0.2.wan.ip}->${pub.dns1.ip}"</log-match>
			<no-error-check />
		</step>
	</stage>
</testcase>