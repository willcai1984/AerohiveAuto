<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Traffic to private are forwarded based routing policy when wan interface priority is changed Platform Dependence BR100,BR200,BR200-WP,BRAP330,BRAP350,BRAP121,BRAP141</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		1. Set interface eth0 mode wan
		2. Set interface usbnet0 mode wan
		3. The priority of the three wan interface :eth0-0,usbnet0-2000,wifi0-1000
		4. Have vpn tunnel-policy on every wan interface
		5. have established a tunnel on BR eth0 and CVG

		Test Procedure:
		1. Set match-map with from and to
		Routing match-map m11 iif eth3 to private
		Routing match-map m12 iif eth3 to any
		2. Set route-map
		Routing route-map r11 via encrypted
		Routing route-map r12 via eth0
		3. Bind the match-map and route-map to routing policy
		Routing policy p11 id 1 match-map m11 route-map r11
		Routing policy p22 id 2 match-map m12 route-map r12
		4. Laptop connect to BR eth3 interface,
		5. Laptop send traffic to vpn network,result1
		6. Laptop send traffic to internet network,result2
		7. Modify the eth0 priority as 1001
		8. Check the tunnel ,result 3
		9. Laptop send traffic to vpn network,result4
		10. Laptop send traffic to internet network,result2
		11. Modify the usbnet0 priority as 999
		12. Check the tunnel ,result5
		13. Laptop send
		traffic to vpn network,result6
		14. Laptop send traffic to internet network,result2
	</description>
	<numofbr>2</numofbr>
	<numofcvg>1</numofcvg>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>winlin</tbtype>

	<property name="apn.name" value="3gnet" />
	<property name="gw.addr" value="192.168.10.254" />
	<property name="gw.addr.1" value="8.8.8.8" />
	<property name="conn1.ssid" value="${job.sid}-1" />

	<stage>
		<!--<step no="0.1">
			<desc>
				show usbmodem info
			</desc>
			<log-file>step0.1_show_usbmodem_info.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show usbmodem info"
			</telnet>
			<log-match>-c -i "Manufacturer"</log-match>
			<log-match>-c -i "Model:"</log-match>
		</step>

		<step no="0.2">
			<desc>
				get dns server tshark process
			</desc>
			<setvar name="modem.name_1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step0.1_show_usbmodem_info.log -p "Manufacturer:\s+(\w+)" -t str
			</setvar>
		</step>

		<step no="0.3">
			<desc>
				get dns server tshark process
			</desc>
			<setvar name="modem.name_2">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step0.1_show_usbmodem_info.log -p "Model:\s+(\S+)" -t str
			</setvar>
		</step>

		<step no="0.4">
			<desc>
				get dns server tshark process
			</desc>
			<setvar name="modem.name">
				echo "${modem.name_1}_${modem.name_2}" | tr "A-Z" "a-z"
			</setvar>
		</step>
		<step no="0.5">
			<desc>
				Config parameters for usbmodem (mode, apn)
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "no track-wan use-for-wan-usbnet0 ip ${gw.addr.1}"
				-v "no track-wan use-for-wan-eth0 ip ${gw.addr}"
				-v "no track-wan use-for-wan-usbnet0 ip ${gw.addr}"
				-v "track-wan use-for-wan-eth0 default-gateway"
				-v "track-wan use-for-wan-usbnet0 default-gateway"
				-v "usbmodem mode always-connected"
				-v "usbmodem modem-id ${modem.name} apn ${apn.name}"
				-v "usbmodem enable"
			</telnet>
		</step>

		<step no="0.6" delay="10">
			<desc>
				Check the usbmodem status while WAN is eth0 by default
			</desc>
			<log-file>step0.6_check_default_usbmodem.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show usbmodem modem-id ${modem.name}"
			</telnet>
			<log-match>-c -i "Mode: always-connected"</log-match>
			<log-match>-c -i "APN: *3gnet"</log-match>
		</step>
		<step no="0.7" type="loop-check" loop-max-times="30" loop-interval="10">
			<desc>
				Check the usbmodem status
			</desc>
			<log-file>step0.7_check_usbmodem_status_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="300">
				-v "show usbmodem status"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)PPP Interface Status:" -ps p "(?i)State: up" -e "(?i)Connection closed" -f ${log.dir}/${log.file}</log-match>
		</step>-->
		
			<!--step1 is set wifi0 as wan  -->
		
		<step no="1.1">
			<desc>
				config ssid1 on  br2
			</desc>
			<telnet target="${br2.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br2.vlan1}"
				-v "interface mgt0.1 ip ${br2.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br2.br.mgt0.1.ip_pool_start} ${br2.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br2.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
				-v "security-object sta1"
				-v "security-object sta1 default-user-profile-attr 1"
				-v "ssid ${conn1.ssid}"
				-v "ssid ${conn1.ssid} security-object sta1"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "user-profile sta1 qos-policy def-user-qos vlan-id ${br2.vlan1} attribute 1"
			</telnet>
		</step>
		<step no="1.2">
			<desc>
				config wifi0 as wan-client on br1
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface wifi0  mode wan-client"
				-v "client-mode ssid ${conn1.ssid}"
				-v "client-mode connect ssid ${conn1.ssid}"
			</telnet>
		</step>
		
		<step no="1.3" delay="60" type="loop-check" loop-max-times="10" loop-interval="20">
			<desc>
				show l3 interface ,check the wifi0.2 get ip address
			</desc>
			<log-file>step1.3_Get_wifi0.2_wan.ip.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show l3 interface"
			</telnet>
			<log-match>-n -i "wifi0.2.*0.0.0.0"</log-match>
		</step>
		
		<step no="1.4">
			<desc>get wifi0.2 ip address on BR side</desc>
			<setvar name="br1.wifi0.2.wan.ip">
				cat  ${log.dir}/step1.3_Get_wifi0.2_wan.ip.log|grep wifi0.2|awk '{print $2}'
			</setvar>
		</step>

		<include prefix="2" file="subs/vpn_setup_one.xml" obj-args="cvg1, br1" />

		<step no="3">
			<desc>
				config mgt0.1  with dhcp service enable,dns service enable
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vlan1}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				Create user-profile bind eth1
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "interface eth1 mac-learning enable"
				-v "security-object lan1"
				-v "security-object lan1 default-user-profile-attr 1"
				-v "interface eth1 security-object lan1"
				-v "user-profile fw qos-policy def-user-qos vlan-id ${br1.vlan1} attribute 1"
			</telnet>
		</step>

		<step no="4">
			<desc>
				Set match-map with from and to
				Set a route-map, all traffic via tunnel interface on eth0
				Bind the match-map and route-map to routing policy
			</desc>
			<log-file>step4_Set_match_map.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "Routing match-map ma iif eth1 to private"
				-v "Routing match-map mb iif eth1 to any"
				-v "routing route-map ra via encrypted"
				-v "routing route-map rb via eth0"
				-v "routing policy pa id 1 match-map ma route-map ra"
				-v "routing policy pb id 2 match-map mb route-map rb"
				-v "show l3 interface"
				-v "show ip rule"
			</telnet>
		</step>

		<step no="5">
			<desc>
				Laptop connect to the BR any access mode interface
			</desc>
			<log-file>step5_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ifconfig ${br1.vpc1.tif.name} down"
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "dhclient ${br1.vpc1.tif.name} -r"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="5.1">
			<desc>get raw mac of vpc1</desc>
			<setvar name="br1.vpc1.tif.mac1">
				echo $(${bin.dir}/getbyrexp.py -p "HWaddr ([\da-fA-F:]+)" -f ${log.dir}/step3_ifconfig_vpc1_.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="5.2">
			<desc>get mac of br1.vpc1</desc>
			<setvar name="br1.vpc1.tif.mac">
				echo $(echo $(echo ${br1.vpc1.tif.mac1} | cut -d : -f1)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f2,3)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f4,5)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f6))
			</setvar>
		</step>

		<step no="5.3">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="5.4">
			<multi-setvar>
				echo "br1.br.mgt0.1.test.ip=$(echo ${br1.br.mgt0.1.ip_pool_start} | cut -d. -f1,2,3).234"
			</multi-setvar>
		</step>

		<step no="open.debug" delay="30">
			<desc>
				open debug switch
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "_ff id 1 src-ip ${br1.vpc1.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="6" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Laptop send traffic to vpn network,ping is successful
			</desc>
			<log-file>step6_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match> -c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
			<failed>next</failed>
		</step>

		<step no="6.1" delay="20">
			<desc>
				show logging buffered,ping traffic is forwarded on tunnel over eth0
			</desc>
			<log-file>step6.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match>-c -i "(o) eth0 ${br1.br.wan.ip}->${cvg1.cvg.tunnel.ip}.*UDP"</log-match>
			<log-match>-c -i "(o) tunnel0 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}"</log-match>
			<log-match>-c -i "(u) mgt0.1 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth1 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<no-error-check />
		</step>

		<step no="7" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Laptop send traffic to internet,ping is successful
			</desc>
			<log-file>step7_ping_ftp_server_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}" -i "ttl="</log-match>
			<failed>next</failed>
		</step>

		<step no="7.1" delay="20">
			<desc>
				show logging buffered,ping traffic is forwarded on eth0
			</desc>
			<log-file>step7.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) mgt0.1 ${pub.dns1.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) eth1 ${pub.dns1.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) mgt0.1 ${br1.vpc1.tif.ip}->${pub.dns1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth1 ${br1.vpc1.tif.ip}->${pub.dns1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) eth0 ${br1.br.wan.ip}->${pub.dns1.ip}"</log-match>
			<no-error-check />
			<failed>next</failed>
		</step>

		<step no="8">
			<desc>
				Modify the eth0 priority as 1001,the wifi0 priority will be the highest 
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface eth0 mode wan priority 1001"
			</telnet>
		</step>

		<step no="8.1" delay="10" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				check vpn ike sa on BR side
				destination to CVG public address
			</desc>
			<log-file>step7.1_chk_ike_sa_br${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -p 9 -i "1" -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>
		</step>

		<step no="8.2" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on CVG side
				destionation to BR public address
			</desc>
			<log-file>step8.2_chk_ike_sa_CVG_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "R" -p 9 -i "1" -i "${br2.br.nat.ip}"</log-match>
		</step>

		<step no="8.3" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check gre tunnel on br side
				remote to CVG wan address, local mgt0 address ,gateway CVG public address
			</desc>
			<log-file>step8.3_chk_gre_tunnel_br.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "tunnel\d+[\t ]*gre/ipsec[\t ]*${cvg1.cvg.wan.ip}[\t ]*${br1.br.mgt0.ip}[\t ]*\d+[\t ]*${cvg1.cvg.tunnel.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="8.4">
			<desc>
				check gre tunnel on cvg side
				local to CVG wan address
			</desc>
			<log-file>step8.4_chk_gre_tunnel_CVG.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "show vpn layer-3-tunnel"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "tunnel\d+[\t ]*gre/ipsec[\t ]*any[\t ]*${cvg1.cvg.wan.ip}[\t ]*\d+[\t ]*anonymous" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="9" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to vpn network,ping is successful
			</desc>
			<log-file>step9_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
			<failed>next</failed>
		</step>

		<step no="9.1" delay="20">
			<desc>
				show logging buffered,ping traffic is forwarded on tunnel over wifi0
			</desc>
			<log-file>step9.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) mgt0.1 ${cvg1.vpc1.tif.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) eth1 ${cvg1.vpc1.tif.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) mgt0.1 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth1 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) wifi0.2 ${br1.wifi0.2.wan.ip}->${cvg1.cvg.tunnel.ip}.*UDP"</log-match>
			<log-match>-c -i "(o) tunnel0 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}"</log-match>
			<no-error-check />
			<failed>next</failed>
		</step>

		<step no="10" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Laptop send traffic to internet,ping is successful
			</desc>
			<log-file>step10_ping_ftp_server_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}" -i "ttl="</log-match>
		</step>

		<step no="10.1" delay="20">
			<desc>
				show logging buffered,ping traffic is forwarded on eth0
			</desc>
			<log-file>step10.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) mgt0.1 ${pub.dns1.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) eth1 ${pub.dns1.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) mgt0.1 ${br1.vpc1.tif.ip}->${pub.dns1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth1 ${br1.vpc1.tif.ip}->${pub.dns1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) eth0 ${br1.br.wan.ip}->${pub.dns1.ip}"</log-match>
			<no-error-check />
		</step>

		<!--the usb network can't reach to the CVG network on the testbed,so not execute the step
		<step no="12">
			<desc>
				Modify the usbnet0 priority as 999
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface usbnet0 mode wan priority 999"
			</telnet>
		</step>

		<step no="10.1" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on BR side
				destination to CVG public address
			</desc>
			<log-file>step10.1_chk_ike_sa_br${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "I" -i "${cvg1.cvg.tunnel.ip}\[4500\]"</log-match>
		</step>

		<step no="10.2" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				check vpn ike sa on CVG side
				destionation to BR public address
			</desc>
			<log-file>step10.2_chk_ike_sa_CVG_${loop_check.idx}.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="5">
				-v "show vpn ike sa"
			</telnet>
			<log-match>-p 3 -i "9" -p 4 -i "R" -i "${br1.br.nat.ip}"</log-match>
		</step>

		<step no="11" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				Laptop send traffic to vpn network
			</desc>
			<log-file>step11_ping_cvg1.vpc1_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
			<failed>next</failed>
		</step>

		<step no="11.1" delay="20">
			<desc>
				show logging buffered
			</desc>
			<log-file>step11.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) mgt0.1 ${cvg1.vpc1.tif.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) eth1 ${cvg1.vpc1.tif.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) mgt0.1 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth1 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) tunnel0 ${br1.vpc1.tif.ip}->${cvg1.vpc1.tif.ip}"</log-match>
			<no-error-check />
			<failed>next</failed>
		</step>

		<step no="12" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				Laptop send traffic to internet
			</desc>
			<log-file>step12_ping_ftp_server_${loop_check.idx}.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ping ${pub.dns1.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.dns1.ip}" -i "ttl="</log-match>
		</step>

		<step no="12.1" delay="20">
			<desc>
				show logging buffered
			</desc>
			<log-file>step12.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) mgt0.1 ${pub.dns1.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) eth1 ${pub.dns1.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) mgt0.1 ${br1.vpc1.tif.ip}->${pub.dns1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth1 ${br1.vpc1.tif.ip}->${pub.dns1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) eth0 ${br1.br.wan.ip}->${pub.dns1.ip}"</log-match>
			<no-error-check />
		</step>-->
	</stage>
	
		<failed-process>
		<stage>
		<step no="1">
			<desc>
				 show log buffer on br if the case failed 
			</desc>
			<log-file>step1_show_gre_tunnel_br.log</log-file>
			<console target="br1.br" slow="yes">
				-v "show log buffer"
				
			</console>
			<no-error-check />
		</step>
		
		<step no="2">
			<desc>
				 show log buffer on cvg if the case failed 
			</desc>
			<log-file>step2_show_gre_tunnel_cvg.log</log-file>
			<telnet target="${cvg1.cvg.cons_ip}" port="${cvg1.cvg.cons_port}" timeout="60">
				-v "show log buffer"
				
			</telnet>
			<no-error-check />
		</step>
		
		</stage>

		<include file="include/br_default_failed_process.xml" />

	</failed-process>
</testcase>


