<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Multiple routing policy work at the same time when multiple type match-map not overlapped Platform Dependence BR100,BR200,BR200-WP,BRAP330,BRAP350,BRAP121,BRAP141</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		1. Set interface eth0 mode wan
		2. Set interface usbnet0 mode wan  "note:no the usb on the testbed ,so use wifi0-as-wan "
		3. have established a tunnel on BR eth0 and CVG

		Test Procedure:
		1. Set match-map with from and to
		Routing match-map m11 from network 1.1.1.0/24 to www.sina.com
		Routing match-map m12 from network 1.1.1.0/24 to any
		Routing match-map m21 from iprange 2.2.2.1-2.2.2.10 to any
		Routing match-map m31 from any to network 100.1.1.0/24
		Routing match-map m41 from any to iprange 200.1.1.1-200.1.1.10
		Routing match-map m51 iif eth3 to private
		Routing match-map m52 iif eth3
		2. Set route-map
		Routing route-map r11 via wifi0
		Routing route-map r12 via encrypted
		Routing route-map r21 via usbnet0
		Routing route-map r31 via eth0
		Routing route-map r41 via encrypted
		Routing route-map r51 via encrypted
		Routing route-map r52 via eth0
		3. Bind the match-map route-map to routing policy
		Routing policy p11 id 1 match-map m11 route-map r11
		Routing policy p12 id 2 match-map m12 route-map r12
		Routing policy p21 id 3 match-map m21 route-map r21
		Routing
		policy p31 id 4 match-map m31 route-map r31
		Routing policy p41 id 5 match-map m41 route-map r41
		Routing policy p51 id 6 match-map m51 route-map r51
		Routing policy p52 id 7 match-map m52 route-map r52
		4. Laptop1 connect to BR get ip address in the network 1.1.1.0/24
		5. Laptop1 connect to www.sina.com, result1
		6. Laptop1 send traffic to other network, check result2
		7. Laptop2 connect to BR get ip address is in the range 2.2.2.1-2.2.2.10
		8. Laptop2 connect to any network, result 3
		9. Laptop3 connect to BR any lan interface, and send traffic to network
		100.1.1.0/24,result4
		10. Laptop 4 connect to BR any lan interface, and send traffic to ip range
		200.1.1.1-200.1.1.10,result5
		11. Laptop 5 connect to BR eth3 interface,
		12. Laptop 5 send traffic to vpn network,result6
		13. Laptop 5 send traffic to internet network,result7
	</description>
	<numofbr>2</numofbr>
	<numofcvg>1</numofcvg>
	<cvg-opt-arm>two</cvg-opt-arm>
	<cvg-opt-fw>yes</cvg-opt-fw>
	<tbtype>winlin</tbtype>

	<property name="apn.name" value="3gnet" />
	<property name="gw.addr" value="192.168.10.254" />
	<property name="gw.addr.1" value="8.8.8.8" />
	<property name="conn1.ssid" value="${job.sid}-${tb.name}-01" />

	<stage>
		<!--<step no="0" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				show usbmodem info
			</desc>
			<log-file>step0_show_usbmodem_info_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show usbmodem info"
			</telnet>
			<log-match>-c -i "Manufacturer"</log-match>
			<log-match>-c -i "Model:"</log-match>
		</step>

		<step no="0.1">
			<desc>
				show usbmodem info
			</desc>
			<log-file>step0.1_show_usbmodem_info.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show usbmodem info"
			</telnet>
			<log-match>-c -i "Manufacturer"</log-match>
			<log-match>-c -i "Model:"</log-match>
		</step>

		<step no="0.2">
			<desc>
				get dns server tshark process
			</desc>
			<setvar name="modem.name_1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step0.1_show_usbmodem_info.log -p "Manufacturer:\s+(\w+)" -t str
			</setvar>
		</step>

		<step no="0.3">
			<desc>
				get dns server tshark process
			</desc>
			<setvar name="modem.name_2">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step0.1_show_usbmodem_info.log -p "Model:\s+(\S+)" -t str
			</setvar>
		</step>

		<step no="0.4">
			<desc>
				get dns server tshark process
			</desc>
			<setvar name="modem.name">
				echo "${modem.name_1}_${modem.name_2}" | tr "A-Z" "a-z"
			</setvar>
		</step>-->
		
		<step no="0.1">
			<desc>
				config ssid1 on  br2
			</desc>
			<telnet target="${br2.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br2.vlan1}"
				-v "interface mgt0.1 ip ${br2.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br2.br.mgt0.1.ip_pool_start} ${br2.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br2.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
				-v "security-object sta1"
				-v "security-object sta1 default-user-profile-attr 1"
				-v "ssid ${conn1.ssid}"
				-v "ssid ${conn1.ssid} security-object sta1"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "user-profile sta1 qos-policy def-user-qos vlan-id ${br2.vlan1} attribute 1"
			</telnet>
		</step>
		<step no="0.2">
			<desc>
				config wifi0 as wan-client on br1
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface wifi0  mode wan-client"
				-v "client-mode ssid ${conn1.ssid}"
				-v "client-mode connect ssid ${conn1.ssid}"
			</telnet>
		</step>
		
		<step no="0.3" delay="60" type="loop-check" loop-max-times="10" loop-interval="20">
			<desc>
				show l3 interface ,check the wifi0.2 get ip address
			</desc>
			<log-file>step0.3_Get_wifi0.2_wan.ip.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show l3 interface"
			</telnet>
			<log-match>-n -i "wifi0.2.*0.0.0.0"</log-match>
		</step>
		
		<step no="0.4">
			<desc>get wifi0.2 ip address on BR side</desc>
			<setvar name="br1.wifi0.2.wan.ip">
				cat  ${log.dir}/step0.3_Get_wifi0.2_wan.ip.log|grep wifi0.2|awk '{print $2}'
			</setvar>
		</step>

		<include prefix="1" file="subs/vpn_setup_one.xml" obj-args="cvg1, br1" />

		<step no="set_lan_info">
			<multi-setvar>
				echo "br1.br.mgt0.1.route=$(echo ${br1.br.mgt0.1.ip} | cut -d. -f1,2,3).0"
				echo "br1.br.mgt0.2.route=$(echo ${br1.br.mgt0.2.ip} | cut -d. -f1,2,3).0"
				echo "br1.br.mgt0.3.route=$(echo ${br1.br.mgt0.3.ip} | cut -d. -f1,2,3).0"
				echo "br1.br.mgt0.4.route=$(echo ${br1.br.mgt0.4.ip} | cut -d. -f1,2,3).0"
				echo "br1.br.mgt0.5.route=$(echo ${br1.br.mgt0.5.ip} | cut -d. -f1,2,3).0"
			</multi-setvar>
		</step>

		<step no="2">
			<desc>
				config mgt0.1 and mgt0.2 with dhcp service enable,dns service enable
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vpc1.vlan}"
				-v "interface mgt0.1 ip ${br1.br.mgt0.1.ip}/${br.lan.netmask}"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.br.mgt0.1.ip_pool_start} ${br1.br.mgt0.1.ip_pool_end}"
				-v "interface mgt0.1 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.1 dhcp-server options default-gateway ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server options dns1 ${br1.br.mgt0.1.ip}"
				-v "interface mgt0.1 dhcp-server enable"
				-v "interface mgt0.1 dns-server enable"
				-v "interface mgt0.2 vlan ${br1.vpc2.vlan}"
				-v "interface mgt0.2 ip ${br1.br.mgt0.2.ip}/${br.lan.netmask}"
				-v "interface mgt0.2 dhcp-server ip-pool ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end}"
				-v "interface mgt0.2 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.2 dhcp-server options default-gateway ${br1.br.mgt0.2.ip}"
				-v "interface mgt0.2 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.2 dhcp-server enable"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				config mgt0.1 and mgt0.2 with dhcp service enable,dns service enable
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.3 vlan ${br1.vpc3.vlan}"
				-v "interface mgt0.3 ip ${br1.br.mgt0.3.ip}/${br.lan.netmask}"
				-v "interface mgt0.3 dhcp-server ip-pool ${br1.br.mgt0.3.ip_pool_start} ${br1.br.mgt0.3.ip_pool_end}"
				-v "interface mgt0.3 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.3 dhcp-server options default-gateway ${br1.br.mgt0.3.ip}"
				-v "interface mgt0.3 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.3 dhcp-server enable"
				-v "interface mgt0.4 vlan ${br1.vpc4.vlan}"
				-v "interface mgt0.4 ip ${br1.br.mgt0.4.ip}/${br.lan.netmask}"
				-v "interface mgt0.4 dhcp-server ip-pool ${br1.br.mgt0.4.ip_pool_start} ${br1.br.mgt0.4.ip_pool_end}"
				-v "interface mgt0.4 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.4 dhcp-server options default-gateway ${br1.br.mgt0.4.ip}"
				-v "interface mgt0.4 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.4 dhcp-server enable"
				<!---v "routing internal-sub-network ${br1.br.mgt0.2.route}/${br.lan.netmask}"-->
				-v "routing internal-sub-network ${br1.br.mgt0.3.route}/${br.lan.netmask}"
				-v "routing internal-sub-network ${br1.br.mgt0.4.route}/${br.lan.netmask}"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				config mgt0.1 and mgt0.2 with dhcp service enable,dns service enable
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.5 vlan ${br1.vpc5.vlan}"
				-v "interface mgt0.5 ip ${br1.br.mgt0.5.ip}/${br.lan.netmask}"
				-v "interface mgt0.5 dhcp-server ip-pool ${br1.br.mgt0.5.ip_pool_start} ${br1.br.mgt0.5.ip_pool_end}"
				-v "interface mgt0.5 dhcp-server options netmask 255.255.255.0"
				-v "interface mgt0.5 dhcp-server options default-gateway ${br1.br.mgt0.5.ip}"
				-v "interface mgt0.5 dhcp-server options dns1 ${pub.dns1.ip}"
				-v "interface mgt0.5 dhcp-server enable"
			</telnet>
		</step>

		<step no="2.3">
			<desc>
				Create user-profile bind eth1
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "user-profile fw1 qos-policy def-user-qos vlan-id ${br1.vpc1.vlan} attribute 1"
				-v "user-profile fw2 qos-policy def-user-qos vlan-id ${br1.vpc2.vlan} attribute 2"
				-v "user-profile fw3 qos-policy def-user-qos vlan-id ${br1.vpc3.vlan} attribute 3"
				-v "user-profile fw4 qos-policy def-user-qos vlan-id ${br1.vpc4.vlan} attribute 4"
				-v "user-profile fw5 qos-policy def-user-qos vlan-id ${br1.vpc5.vlan} attribute 5"
				-v "interface eth1 mode bridge-access user-profile-attribute 1"
				-v "interface eth1 mac-learning enable"
				-v "interface eth2 mode bridge-802.1q"
				-v "interface eth2 mac-learning enable"
				-v "interface eth3 mode bridge-access user-profile-attribute 3"
				-v "interface eth3 mac-learning enable"
				-v "interface eth4 mode bridge-access user-profile-attribute 4"
				-v "interface eth4 mac-learning enable"
			</telnet>
		</step>

               <!--
		<step no="2.3">
			<desc>
				Config parameters for usbmodem (mode, apn)
			</desc>
			<telnet target="${br1.br.wan.ip}" timeout="180">
				-v "no track-wan use-for-wan-usbnet0 ip ${gw.addr.1}"
				-v "no track-wan use-for-wan-eth0 ip ${gw.addr}"
				-v "no track-wan use-for-wan-usbnet0 ip ${gw.addr}"
				-v "track-wan use-for-wan-eth0 default-gateway"
				-v "track-wan use-for-wan-usbnet0 default-gateway"
				-v "usbmodem mode always-connected"
				-v "usbmodem modem-id ${modem.name} apn ${apn.name}"
				-v "usbmodem enable"
			</telnet>
		</step>-->

		<step no="3" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				Laptop(br1.vpc1) connect to the BR eth1 interface
			</desc>
			<log-file>step3_ifconfig_vpc1_.log</log-file>
			<ssh target="br1.vpc1" timeout="120">
				-v "ifconfig ${br1.vpc1.tif.name} down"
				-v "ifconfig ${br1.vpc1.tif.name} up"
				-v "dhclient ${br1.vpc1.tif.name} -r"
				-v "dhclient ${br1.vpc1.tif.name}"
				-v "ifconfig ${br1.vpc1.tif.name}"
				-v "nslookup eth1"
			</ssh>
			<log-match>-i "inet addr"</log-match>
			<log-match>-i "Server:.*${br1.br.mgt0.1.ip}"</log-match>
		</step>

		<step no="3.1">
			<desc>get raw mac of vpc1</desc>
			<setvar name="br1.vpc1.tif.mac1">
				echo $(${bin.dir}/getbyrexp.py -p "HWaddr ([\da-fA-F:]+)" -f ${log.dir}/step3_ifconfig_vpc1_.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="3.2">
			<desc>get mac of br1.vpc1</desc>
			<setvar name="br1.vpc1.tif.mac">
				echo $(echo $(echo ${br1.vpc1.tif.mac1} | cut -d : -f1)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f2,3)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f4,5)$(echo ${br1.vpc1.tif.mac1} | cut -d : -f6))
			</setvar>
		</step>

		<step no="3.3">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc1.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc1.mif.ip} -u ${br1.vpc1.user} -p ${br1.vpc1.passwd} -i ${br1.vpc1.tif.name} -nomask
			</setvar>
		</step>

		<step no="4" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				Laptop(br1.vpc2) connect to the BR eth2 interface
			</desc>
			<log-file>step4_ifconfig_vpc2_.log</log-file>
			<ssh target="br1.vpc2" timeout="120">
				-v "ifconfig ${br1.vpc2.tif.name} down"
				-v "ifconfig ${br1.vpc2.tif.name} up"
				-v "dhclient ${br1.vpc2.tif.name} -r"
				-v "dhclient ${br1.vpc2.tif.name}"
				-v "ifconfig ${br1.vpc2.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="4.1">
			<desc>get raw mac of vpc1</desc>
			<setvar name="br1.vpc2.tif.mac1">
				echo $(${bin.dir}/getbyrexp.py -p "HWaddr ([\da-fA-F:]+)" -f ${log.dir}/step4_ifconfig_vpc2_.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="4.2">
			<desc>get mac of br1.vpc2</desc>
			<setvar name="br1.vpc2.tif.mac">
				echo $(echo $(echo ${br1.vpc2.tif.mac1} | cut -d : -f1)$(echo ${br1.vpc2.tif.mac1} | cut -d : -f2,3)$(echo ${br1.vpc2.tif.mac1} | cut -d : -f4,5)$(echo ${br1.vpc2.tif.mac1} | cut -d : -f6))
			</setvar>
		</step>

		<step no="4.3">
			<desc>set br1.vpc2.tif.ip var for vpc2 on BR side</desc>
			<setvar name="br1.vpc2.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc2.mif.ip} -u ${br1.vpc2.user} -p ${br1.vpc2.passwd} -i ${br1.vpc2.tif.name} -nomask
			</setvar>
		</step>

		<step no="5" type="loop-check" loop-max-times="10" loop-interval="10"> 
			<desc> br1.ap1 connect to the BR eth3 interface </desc>
		 	<log-file>step5_ifconfig_ap1_.log</log-file> 
		 	<console target="br1.ap1">
				 -v "no inter mgt0 dhcp client"
				 -v "inter mgt0 dhcp client"
				 -v "show inter mgt0 dhcp client"
		  	 </console> 
		  	 <log-match>-n -i " Get IP address 0.0.0.0"</log-match> 
		</step>
		
		<step no="5.1" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>get mgt0 ip of br1.ap1</desc>
			<setvar name="br1.ap1.mgt0.ip">
				${bin.dir}/getbyrexp.py -p "Get IP address (\d+\.\d+\.\d+\.\d+)" -f ${log.dir}/step5_ifconfig_ap1_.log -t str
			</setvar>
		</step>

		<step no="6" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				Laptop br1.vpc4 connect to the BR any access mode interface
			</desc>
			<log-file>step6_ifconfig_vpc4_.log</log-file>
			<ssh target="br1.vpc4" timeout="120">
				-v "ifconfig ${br1.vpc4.tif.name} down"
				-v "ifconfig ${br1.vpc4.tif.name} up"
				-v "dhclient ${br1.vpc4.tif.name} -r"
				-v "dhclient ${br1.vpc4.tif.name}"
				-v "ifconfig ${br1.vpc4.tif.name}"
			</ssh>
			<log-match>-i "inet addr"</log-match>
		</step>

		<step no="6.1">
			<desc>get raw mac of vpc1</desc>
			<setvar name="br1.vpc4.tif.mac1">
				echo $(${bin.dir}/getbyrexp.py -p "HWaddr ([\da-fA-F:]+)" -f ${log.dir}/step6_ifconfig_vpc4_.log -t str | tr "A-F" "a-f")
			</setvar>
		</step>

		<step no="6.2">
			<desc>get mac of br1.vpc1</desc>
			<setvar name="br1.vpc4.tif.mac">
				echo $(echo $(echo ${br1.vpc4.tif.mac1} | cut -d : -f1)$(echo ${br1.vpc4.tif.mac1} | cut -d : -f2,3)$(echo ${br1.vpc4.tif.mac1} | cut -d : -f4,5)$(echo ${br1.vpc4.tif.mac1} | cut -d : -f6))
			</setvar>
		</step>

		<step no="6.3">
			<desc>set br1.vpc1.tif.ip var for vpc1 on BR side</desc>
			<setvar name="br1.vpc4.tif.ip">
				${bin.dir}/getrmtip.pl -d ${br1.vpc4.mif.ip} -u ${br1.vpc4.user} -p ${br1.vpc4.passwd} -i ${br1.vpc4.tif.name} -nomask
			</setvar>
		</step>

		<step no="7">
			<desc>
				Set match-map on br
			</desc>
			<telnet target="${br1.br.wan.ip}" timeout="180">
				-v "Routing match-map m11 from network ${br1.br.mgt0.1.route}/24 to hostname ${pub.hm1.domain}"
				-v "Routing match-map m12 from network ${br1.br.mgt0.1.route}/24 to any"
				-v "Routing match-map m21 from iprange ${br1.br.mgt0.2.ip_pool_start} ${br1.br.mgt0.2.ip_pool_end} to any"
				-v "Routing match-map m31 from any to network ${pub.ftp1.ip}/32"
				-v "Routing match-map m41 from any to iprange ${pub.ad1.ip} ${pub.ad2.ip}"
				-v "Routing match-map m51 iif eth4 to private"
				-v "Routing match-map m52 iif eth4 to any"
			</telnet>
		</step>

		<step no="7.1">
			<desc>
				2. Set route-map and routing policy
				Routing route-map r11 via eth0
				Routing route-map r12 via encrypted
				Routing route-map r21 via wifi0
				Routing route-map r31 via wifi0
				Routing route-map r41 via encrypted
				Routing route-map r51 via encrypted
				Routing route-map r52 via eth0
			</desc>
			<telnet target="${br1.br.wan.ip}" timeout="180">
				-v "Routing route-map r11 via eth0"
				-v "Routing route-map r12 via encrypted"
				-v "Routing route-map r21 via wifi0"
				-v "Routing route-map r31 via wifi0"
				-v "Routing route-map r41 via encrypted"
				-v "Routing route-map r51 via encrypted"
				-v "Routing route-map r52 via eth0"
				-v "Routing policy p11 id 1 match-map m11 route-map r11"
				-v "Routing policy p12 id 2 match-map m12 route-map r12"
				-v "Routing policy p21 id 3 match-map m21 route-map r21"
				-v "Routing policy p31 id 4 match-map m31 route-map r31"
				-v "Routing policy p41 id 5 match-map m41 route-map r41"
				-v "Routing policy p51 id 6 match-map m51 route-map r51"
				-v "Routing policy p52 id 7 match-map m52 route-map r52"
				-v "show l3 interface"
				-v "show ip rule"
			</telnet>
		</step>

		<step no="7.2">
			<desc>enable debug on BR</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "_debug dns"
				-v "_ff id 1 src-ip ${br1.vpc1.tif.ip} bid"
				-v "_ff id 2 dst-port 53 bid"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="7.3" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				br1.vpc1 ping internal domain name,ping is successful
			</desc>
			<log-file>step7.3_ping.log</log-file>
			<ssh target="br1.vpc1">
				-v "ping ${pub.hm1.domain} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.hm1.domain}.*${pub.hm1.ip}" -i "ttl="</log-match>
			
		</step>

		<step no="7.4" delay="10">
			<desc>show log buff on br,the ping to hostname is forwarded on eth0,match the routing policy p11
			</desc>
			<log-file>7.4_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="500">
				-v "show vpn l3-tunnel-exception"
				-v "show log buff"
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) mgt0.1 ${pub.hm1.ip}->${br1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) eth1 ${pub.hm1.ip}->${br1.vpc1.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) mgt0.1 ${br1.vpc1.tif.ip}->${pub.hm1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth1 ${br1.vpc1.tif.ip}->${pub.hm1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) eth0 ${br1.br.wan.ip}->${pub.hm1.ip}"</log-match>
			<no-error-check />
		</step>
		<step no="8" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				br1.vpc1 ping exception the hostname which is define on the match-map m11,ping is success
			</desc>
			<log-file>step8_ping.log</log-file>
			<ssh target="br1.vpc1">
				-v "ping ${pub.dhcp.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.dhcp.ip}" -i "ttl="</log-match>
		</step>

		<step no="8.1" delay="10">
			<desc>show log buff on br,the ping traffic is forwarded on tunnel,match routing policy p12
			</desc>
			<log-file>8.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="500">
				-v "show log buff"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg1.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${br1.vpc1.tif.ip}\(&lt;NULL&gt;\)-&gt;${pub.dhcp.ip}\(tunnel0\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth1 ${br1.vpc1.tif.ip}-&gt;${pub.dhcp.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="8.2">
			<desc>enable debug on BR</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "no _ff id 1"
				-v "_ff id 1 src-ip ${br1.vpc2.tif.ip} bid"
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="9" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				br1.vpc2 ping internet ip ,ping is successful
			</desc>
			<log-file>step9_ping.log</log-file>
			<ssh target="br1.vpc2">
				-v "ping ${pub.tftp1.tip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.tftp1.tip}" -i "ttl="</log-match>
		</step>

		<step no="9.1" delay="10">
			<desc>show log buff on br,ping traffic is forwarded on wifi0.2, match the routing policy p21
			</desc>
			<log-file>9.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="500">
				-v "show log buff"
			</telnet>
			<log-match>-c -i "(o) wifi0.2 ${br1.wifi0.2.wan.ip}-&gt;${pub.tftp1.tip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth2 ${br1.vpc2.tif.ip}-&gt;${pub.tftp1.tip}" -i "icmp-echo-req"</log-match>
			<no-error-check />
		</step>
		
		<step no="open.debug">
			<desc>
				open debug switch
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "no _ff id 1"
				-v "_ff id 1 src-ip ${br1.ap1.mgt0.ip} bidirectional"
				-v "clear log buffer"
			</telnet>
		</step>
		
		<step no="10" type="loop-check" loop-max-times="5" loop-interval="10"> 
			<desc> br1.ap1 ping ${pub.ftp1.ip},ping is successful
			</desc>
		 	<log-file>step10_br1.ap1_ping.log</log-file> 
		 	<console target="br1.ap1">
				 -v "ping ${pub.ftp1.ip} count 3"
		  	 </console> 
		  	 <log-match>-c -i "from ${pub.ftp1.ip}"</log-match> 
		</step>
		
		<step no="10.1" delay="3">
			<desc>show log buff on br,the ping to ${pub.ftp1.ip} is forwarded wifi0,match the routing policy p31
			</desc>
			<log-file>10.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="500">
				-v "show log buff"
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) mgt0.3 ${pub.ftp1.ip}->${br1.ap1.mgt0.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) eth3 ${pub.ftp1.ip}->${br1.ap1.mgt0.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) mgt0.3 ${br1.ap1.mgt0.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth3 ${br1.ap1.mgt0.ip}->${pub.ftp1.ip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) wifi0.2 ${br1.wifi0.2.wan.ip}->${pub.ftp1.ip}"</log-match>
			<no-error-check />
		</step>
		
		<step no="11" type="loop-check" loop-max-times="5" loop-interval="10"> 
			<desc> br1.ap1 ping ${pub.ad1.ip},ping is successful
			</desc>
		 	<log-file>step11_br1.ap1_ping.log</log-file> 
		 	<console target="br1.ap1">
				 -v "ping ${pub.ad1.ip} count 3 "
		  	 </console> 
		  	 <log-match>-c -i "from ${pub.ad1.ip}"</log-match> 
		</step>
		
		<step no="11.1" delay="10">
			<desc>show log buff on br,the ping to ${pub.ad1.ip} is forwarded tunnel,match the routing policy p41
			</desc>
			<log-file>11.1_show_log_buf.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="500">
				-v "show log buff"
				-v "clear log buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg1.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${br1.ap1.mgt0.ip}\(&lt;NULL&gt;\)-&gt;${pub.ad1.ip}\(tunnel0\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth3 ${br1.ap1.mgt0.ip}-&gt;${pub.ad1.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		
		<step no="open.debug">
			<desc>
				open debug switch
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "no _ff id 1"
				-v "_ff id 1 src-ip ${br1.vpc4.tif.ip} bidirectional"
				-v "clear log buffer"
			</telnet>
		</step>
		
		<step no="12" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				Laptop(br1.vpc4) send traffic to vpn side network,ping is successfully
			</desc>
			<log-file>step12_ping_ftp_server.log</log-file>
			<ssh target="br1.vpc4" timeout="120">
				-v "ping ${cvg1.vpc1.tif.ip} -c 5"
			</ssh>
			<log-match>-c -i "from ${cvg1.vpc1.tif.ip}" -i "ttl="</log-match>
		</step>

		<step no="12.1" delay="20">
			<desc>
				show logging buffered,the ping traffic is forwarded on tunnel,match routing policy p51
			</desc>
			<log-file>step12.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v "clog log buffer"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)GRE-encap packet done =&gt;${br1.br.mgt0.ip}-&gt;${cvg1.cvg.wan.ip}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${br1.vpc4.tif.ip}\(&lt;NULL&gt;\)-&gt;${cvg1.vpc1.tif.ip}\(tunnel0\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) eth4 ${br1.vpc4.tif.ip}-&gt;${cvg1.vpc1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
		
		<step no="13" type="loop-check" loop-max-times="5" loop-interval="10">
			<desc>
				Laptop(br1.vpc4) send traffic to internet,ping is successfully
			</desc>
			<log-file>step13_ping_ftp_server.log</log-file>
			<ssh target="br1.vpc4" timeout="120">
				-v "ping ${pub.tftp1.tip} -c 5"
			</ssh>
			<log-match>-c -i "from ${pub.tftp1.tip}" -i "ttl="</log-match>
		</step>

		<step no="13.1" delay="20">
			<desc>
				show logging buffered,the ping traffic is forwarded on eth0,match routing policy p61
			</desc>
			<log-file>step13.1_show_logging_buffered.log</log-file>
			<telnet target="${br1.br.wan.ip}" timeout="600">
				-v "show logging buffered"
				-v "clog log buffer"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) mgt0.4 ${pub.tftp1.tip}->${br1.vpc4.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-reply" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -i "(o) eth4 ${pub.tftp1.tip}->${br1.vpc4.tif.ip}" -i "icmp-echo-reply"</log-match>
			<log-match>-c -i "(u) mgt0.4 ${br1.vpc4.tif.ip}->${pub.tftp1.tip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(i) eth4 ${br1.vpc4.tif.ip}->${pub.tftp1.tip}" -i "icmp-echo-req"</log-match>
			<log-match>-c -i "(o) eth0 ${br1.br.wan.ip}->${pub.tftp1.tip}"</log-match>
			<no-error-check />
		</step>
		
		
	</stage>
</testcase>