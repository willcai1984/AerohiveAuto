<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Exclude a roaming neighbour manually</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		Test Procedure:
		-config a ssid on AP1
		-two APs,they are roaming neighbour, result 1
		-exclude the roaming neighbour manually on AP1, result 2
		‘roaming neighbor exclude ip 1.1.1.1’
		-client connected to AP1, result 3
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>winlin</tbtype>
	<stage>

		<step no="SetUpAP.1-1-1">
			<desc>Set up Portal AP</desc>
			<log-file>setup_portal.log</log-file>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
			</console>
		</step>
		<include prefix="SetUpAP.1-2" file="subs/ap_renew_ip.xml" obj-args="ap1" />
		<step no="SetUpAP.1-1-2">
			<desc>Set up Portal AP</desc>
			<log-file>setup_portal.log</log-file>
			<ssh target="ap1">
				-v "user-profile datapath qos-policy def-user-qos vlan-id ${tb.nvlan} attribute 1"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa-auto-psk ascii aerohive"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</ssh>
		</step>
		
		<step no="SetUpAP.1-3">
			<desc>Set up Portal AP</desc>
			<log-file>setup_portal.log</log-file>
			<ssh target="ap1">
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "no roaming cache-broadcast neighbor-type backhaul enable"
				-v "_de auth info"
				-v "_de auth basic"
				-v "save config"
			</ssh>
		</step>

		<step no="SetUpAP.2-1-1">
			<desc>Set up AP2</desc>
			<log-file>setup_ap2.log</log-file>
			<console target="ap2">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
			</console>
		</step>
		
		<include prefix="SetUpAP.2-2" file="subs/ap_renew_ip.xml" obj-args="ap2" />
		<step no="SetUpAP.2-1-2">
			<desc>Set up AP2</desc>
			<log-file>setup_ap2.log</log-file>
			<ssh target="ap2">
				-v "user-profile datapath qos-policy def-user-qos vlan-id ${tb.vlan2} attribute 1"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa-auto-psk ascii aerohive"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</ssh>
		</step>
		
				<step no="SetUpAP.2-3">
			<desc>Set up AP2</desc>
			<log-file>setup_ap2.log</log-file>
			<ssh target="ap2">
				-v "ssid ${ap2.name}"
				-v "ssid ${ap2.name} security-object autoap"
				-v "interface wifi0 ssid ${ap2.name}"
				-v "interface wifi0 radio channel 11"
				-v "no roaming cache-broadcast neighbor-type backhaul enable"
				-v "_de auth info"
				-v "_de auth basic"
				-v "save config"
			</ssh>
		</step>
		
		
		<step no="GetAP2.IP.1" delay="15">
			<desc>show mgt0's ip of mp</desc>
			<log-file>mp_mgt_info.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>
		<step no="GetAP2.IP.2">
			<desc>Get mp's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/mp_mgt_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
		<step no="GetAP1.MAC.1" delay="15">
			<desc>show interface of Portal1</desc>
			<log-file>show_portal_interface.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
		</step>

		<step no="GetAP1.MAC.2">
			<desc>get the eth0 mac address of portal</desc>
			<setvar name="ap1.eth0.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_portal_interface.log -k eth0 -p 2
			</setvar>
		</step>

		<step no="GetAP2.MAC.1">
			<desc>show interface of AP2</desc>
			<log-file>show_ap2_interface.log</log-file>
			<console target="ap2">
				-v "show interface"
			</console>
		</step>

		<step no="GetAP2.MAC.2">
			<desc>get the eth0 mac address of AP2</desc>
			<setvar name="ap2.eth0.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ap2_interface.log -k eth0 -p 2
			</setvar>
		</step>

		<step no="CheckAP1RoamingNeighbor1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming neighbor 1 of ap1</desc>
			<log-file>show_roaming_neighbor1_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap2.mgt0.ip}" -i "${ap2.eth0.w4mac}" -p 4 -i "D" -c </log-match>
		</step>

		<step no="CheckAP2RoamingNeighbor1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming neighbor 1 of ap2</desc>
			<log-file>show_roaming_neighbor1_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap1.mgt0.ip}" -i "${ap1.eth0.w4mac}" -p 4 -i "D" -c </log-match>
		</step>

		<step no="ExcludeRoamingNeighbor.1" delay="30">
			<desc>exclude roaming neighbor</desc>
			<log-file>exclude_roaming_neighbor.log</log-file>
			<telnet target="ap1">
				-v "roaming neighbor exclude ip ${ap2.mgt0.ip}"
			</telnet>
		</step>

		<step no="CheckAP1RoamingNeighbor2" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming neighbor 2 of ap1</desc>
			<log-file>show_roaming_neighbor2_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap2.mgt0.ip}" -i "${ap2.eth0.w4mac}" -p 4 -i "E" -c </log-match>
			<log-match>-i "${ap2.mgt0.ip}" -i "${ap2.eth0.w4mac}" -p 5 -i "D" -c </log-match>
		</step>

		<step no="CheckAP2RoamingNeighbor2" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming neighbor 2 of ap2</desc>
			<log-file>show_roaming_neighbor2_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap1.mgt0.ip}" -i "${ap1.eth0.w4mac}" -p 4 -i "N/A" -c </log-match>
		</step>

		<property name="conn1.ssid" value="${ssid.name}" />
		<property name="conn1.proto" value="wpa-tkip-psk" />
		<property name="conn1.psk" value="aerohive" />
		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn1, sta1, ap1" />

		<step no="CheckAP2RoamingCache1.1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming cache 1 of ap2</desc>
			<log-file>show_roaming_cache1_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show roaming cache"
			</telnet>
			<log-match>-i "${sta1.tif.smac}" -c -p 11 -i "1" -p 12 -i "YNNN" -n</log-match>
		</step>

	</stage>

</testcase>

