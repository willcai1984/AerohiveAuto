<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Fast romaing between the two radios on the same AP</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-config a ssid with WPA2 802.1x auth method, bind it to both wifi0 and
		wifi1
		-make sure the STA supports PMK caching
		-radius server return uid and vid in access-accept
		-STA connects to wifi0, then connects to wifi1

		Test Procedure:
		-check the local cache, result 1
		-STA1 reconnects to wifi0, result 2
		-check the status of STA1
		-STA1 ping gateway success
		-STA1 reconnects to wifi1, result 4
		-check the status of STA1
		-STA1 ping gateway success
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="acct1.vlan" value="${tb.vlan1}" />
	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn1.proto" value="wpa2-aes-8021x" />
	<property name="conn1.username" value="${pub.radius1.username}" />
	<property name="conn1.passwd" value="${pub.radius1.passwd}" />
	<property name="wifi1.channel" value="36" />
	<property name="wifi0.channel" value="11" />

	<stage>
		<if>"${ap1.wifi1.existed}" == "true"</if>

		<include prefix="add.account" file="subs/ldap_add.xml" args="${conn1.username}, ${conn1.passwd}" obj-args="acct1" />

		<step no="0">
			<desc>config hive,vlan info</desc>
			<console target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

    <include prefix="0.1" file="subs/ap_renew_ip.xml" obj-args="ap1" />

		<step no="1">
			<desc>
				-config a ssid with WPA2 802.1x auth method, bind it to both wifi0 and wifi1
			</desc>
			<telnet target="ap1">
				-v "security-object autoap"
				-v "security-object autoap default-user-profile-attr 1"
				-v "security-object autoap security protocol-suite wpa2-aes-8021x"
				-v "security-object autoap security aaa radius primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap security protocol-suite wpa2-aes-8021x roaming proactive-pmkid-response"
				-v "security-object autoap security preauth"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "user-profile normal qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi1 ssid ${ssid.name}"
				-v "interface wifi1 ssid ${ssid.name} shutdown"
				-v "interface wifi0 radio channel ${wifi0.channel}"
				-v "interface wifi1 radio channel ${wifi1.channel}"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				show interface wifi0 info
			</desc>
			<log-file>step1.1_show_interface_wifi0_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi0"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				get wifi0's mac address (format:xx xx xx xx xx xx)
			</desc>
			<setvar name="ap1.wifi0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step1.1_show_interface_wifi0_info.log -i wifi0 -o aero -m -width
			</setvar>
		</step>

		<step no="1.3">
			<desc>
				show interface wifi1 info
			</desc>
			<log-file>step1.3_show_interface_wifi1_info.log</log-file>
			<telnet target="ap1">
				-v "show interface wifi1.2"
			</telnet>
		</step>

		<step no="1.4">
			<desc>
				get wifi1's mac address (format:xx xx xx xx xx xx)
			</desc>
			<setvar name="ap1.wifi1.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step1.3_show_interface_wifi1_info.log -i wifi1.2 -o aero -m -width
			</setvar>
		</step>

		<step no="2">
			<desc>show protocol suite on AP1</desc>
			<log-file>show_proto_ap1.log</log-file>
			<telnet target="ap1" timeout="10">
				-v "show security- autoap security protocol-suite"
			</telnet>
			<log-match>-i "Method=wpa2-aes-8021x"</log-match>
		</step>

		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="4">
			<desc>show roaming cache on AP1</desc>
			<log-file>step4_show_roaming_cache_ap1.log</log-file>
			<telnet target="ap1" timeout="10">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${ap1.wifi0.mac}" -i "0 *YNNN"</log-match>
		</step>

		<step no="5">
			<desc>
				-show auth to check local cache
			</desc>
			<log-file>step5_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-i "${sta1.tif.mac} *1" -i "done" -i "${conn1.username}"</log-match>
		</step>

		<step no="5.1">
			<desc> get new PMKid from wifi0</desc>
			<setvar name="wifi0.pmkid.id">
				${bin.dir}/getstring.pl -f ${log.dir}/step4_show_roaming_cache_ap1.log -p 7 -k ${sta1.tif.mac}
			</setvar>
		</step>

		<step no="5.2">
			<desc> get new PMK from wifi0</desc>
			<setvar name="wifi0.pmk.id">
				${bin.dir}/getstring.pl -f ${log.dir}/step4_show_roaming_cache_ap1.log -p 6 -k ${sta1.tif.mac}
			</setvar>
		</step>

		<step no="5.3">
			<desc>get bssid on AP1</desc>
			<setvar name="ap1.wifi0.bssid">
				${bin.dir}/getstring.pl -f ${log.dir}/step5_show_auth.log -k SSID= -k1 AA= -k2 \;|sed 's/://g; s/../&amp;:/g;s/.$//'
			</setvar>
		</step>

		<step no="6">
			<desc>
				-show ssid ${ssid.name} station
			</desc>
			<log-file>step6_show_ssid.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-i "${sta1.tif.mac} *${sta1.tif.ip}" -i "${tb.vlan1} *Yes *1" -p 7 -i "wpa2-8021x"</log-match>
		</step>

		<step no="6.1">
			<desc>
				up interface wifi1 on ap1
			</desc>
			<telnet target="ap1">
				-v "no interface wifi1 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="7">
			<desc>show auth on AP1</desc>
			<log-file>step7_show_auth_ap1.log</log-file>
			<telnet target="ap1" timeout="10">
				-v "show auth interface wifi1.2"
			</telnet>
		</step>

		<step no="7.1">
			<desc>get bssid on AP1</desc>
			<setvar name="ap1.wifi1.bssid">
				${bin.dir}/getstring.pl -f ${log.dir}/step7_show_auth_ap1.log -k SSID= -k1 AA= -k2 \;|sed 's/://g; s/../&amp;:/g;s/.$//'
			</setvar>
		</step>

		<step no="7.2">
			<desc>client does preauth against AP2</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "preauthenticate ${ap1.wifi1.bssid}"
				-v "quit"
			</ssh>
		</step>

		<step no="8" delay="30">
			<desc>enable auth debug on AP1</desc>
			<telnet target="ap1">
				-v "_ff id 1 src-mac ${sta1.tif.mac} etype 88c7 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_debug auth all"
				-v "clear log all"
			</telnet>
		</step>

		<step no="8.1">
			<desc>client roams to wifi1</desc>
			<ssh target="sta1" timeout="10" prompt=">|.*#">
				-v "wpa_cli"
				-v "set_network 0 bssid ${ap1.wifi1.bssid}"
				-v "reass"
				-v "quit"
			</ssh>
		</step>

		<step no="8.2" delay="25" type="loop-check" loop-max-times="15" loop-interval="5">
			<desc>check if the client was associated successfully</desc>
			<log-file>wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-c -i "bssid=${ap1.wifi1.bssid}"</log-match>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="9" delay="10">
			<desc>show roaming cache on AP1</desc>
			<log-file>step9_show_roaming_cache_ap1.log</log-file>
			<telnet target="ap1" timeout="10">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${ap1.wifi1.mac}" -i "0 *YNNN"</log-match>
			<log-match>-n -c -i "${sta1.tif.mac} *${ap1.wifi1.mac}" -i "0 *YNNN" -i "${wifi0.pmk.id}" -i "${wifi0.pmkid.id}"</log-match>
		</step>

		<step no="9.a">
			<desc> get new PMKid from wifi1</desc>
			<setvar name="wifi1.pmkid.id">
				${bin.dir}/getstring.pl -f ${log.dir}/step9_show_roaming_cache_ap1.log -p 7 -k ${sta1.tif.mac}
			</setvar>
		</step>

		<step no="9.b">
			<desc> get new PMK from wifi1</desc>
			<setvar name="wifi1.pmk.id">
				${bin.dir}/getstring.pl -f ${log.dir}/step9_show_roaming_cache_ap1.log -p 6 -k ${sta1.tif.mac}
			</setvar>
		</step>

		<step no="9.1">
			<desc>
				-show auth to check local cache
			</desc>
			<log-file>step9.1_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth interface wifi1.2"
			</telnet>
			<log-match>-i "${sta1.tif.mac} *1" -i "${conn1.username}" -i "${wifi1.pmk.id}" -i "${wifi1.pmkid.id}"</log-match>
			<log-match>-n -i "${sta1.tif.mac} *1" -i "${conn1.username}" -i "${wifi0.pmk.id}" -i "${wifi0.pmkid.id}"</log-match>
		</step>

		<step no="9.2">
			<desc>
				-show ssid ${ssid.name} station
			</desc>
			<log-file>step9.2_show_ssid.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-i "${sta1.tif.mac} *${sta1.tif.ip}" -i "1 *Yes *1" -p 7 -i "wpa2-8021x"</log-match>
		</step>

		<step no="10">
			<desc>enable auth debug on AP1</desc>
			<telnet target="ap1">
				-v "_ff id 1 src-mac ${sta1.tif.mac} etype 88c7 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_debug auth all"
				-v "clear log all"
			</telnet>
		</step>

		<step no="10.1">
			<desc>client roams to wifi0</desc>
			<ssh target="sta1" timeout="10" prompt=">|.*#">
				-v "wpa_cli"
				-v "set_network 0 bssid ${ap1.wifi0.bssid}"
				-v "reass"
				-v "quit"
			</ssh>
		</step>

		<step no="10.2" delay="15" type="loop-check" loop-max-times="15" loop-interval="5">
			<desc>check if the client was associated successfully</desc>
			<log-file>step10.2_wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-c -i "bssid=${ap1.wifi0.bssid}"</log-match>
			<log-match>-i "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="11" delay="20" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>check roaming process</desc>
			<log-file>step11_auth_debug_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Number of PMKIDs provided by station ${sta1.tif.mac} = 1"</log-match>
			<log-match>-c -i "Auth info is got from local PMKSA cache: SPA=${sta1.tif.mac}"</log-match>
			<log-match>-c -i "PMK from PMKSA cache - skip IEEE 802.1X/EAP"</log-match>
			<log-match>-c -i "STA\[${sta1.tif.mac}\] PMKID" -i "does match pmksa_cache"</log-match>
		</step>

		<step no="12">
			<desc>show roaming cache on AP1</desc>
			<log-file>step12_show_roaming_cache_ap1.log</log-file>
			<telnet target="ap1" timeout="10">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${ap1.wifi0.mac}" -i "0 *YNNN"</log-match>
		</step>

		<step no="12.1">
			<desc>
				-show auth to check local cache
			</desc>
			<log-file>step12.1_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *1 *${wifi0.pmk.id}" -i "${wifi0.pmkid.id}"</log-match>
		</step>

		<step no="12.2">
			<desc>
				-show ssid ${ssid.name} station
			</desc>
			<log-file>step12.2_show_ssid.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-i "${sta1.tif.mac} *${sta1.tif.ip}" -i "1 *Yes *1" -p 7 -i "wpa2-8021x"</log-match>
		</step>

		<include prefix="13" file="subs/sta_ping.xml" args="sta1, ${tb.vlan1.gw}, 5" />

		<step no="14">
			<desc>enable auth debug on AP1</desc>
			<telnet target="ap1">
				-v "clear log all"
			</telnet>
		</step>

		<step no="14.1">
			<desc>client roams to wifi1</desc>
			<ssh target="sta1" timeout="10" prompt=">|.*#">
				-v "wpa_cli"
				-v "set_network 0 bssid ${ap1.wifi1.bssid}"
				-v "reass"
				-v "quit"
			</ssh>
		</step>

		<step no="14.2" delay="5" type="loop-check" loop-max-times="15" loop-interval="5">
			<desc>check if the client was associated successfully</desc>
			<log-file>step14.2_wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-c -i "bssid=${ap1.wifi1.bssid}"</log-match>
			<log-match>-i "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="15" delay="20" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>check roaming process to AP1</desc>
			<log-file>step15_auth_debug_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match>-c -i "Number of PMKIDs provided by station ${sta1.tif.mac} = 1"</log-match>
			<log-match>-c -i "Auth info is got from local PMKSA cache: SPA=${sta1.tif.mac}"</log-match>
			<log-match>-c -i "PMK from PMKSA cache - skip IEEE 802.1X/EAP"</log-match>
			<log-match>-c -i "STA\[${sta1.tif.mac}\] PMKID" -i "does match pmksa_cache"</log-match>
		</step>

		<step no="16">
			<desc>show roaming cache on AP1</desc>
			<log-file>step16_show_roaming_cache_ap1.log</log-file>
			<telnet target="ap1" timeout="10">
				-v "show roaming cache"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *${ap1.wifi1.mac}" -i "0 *YNNN"</log-match>
		</step>

		<step no="16.1">
			<desc>
				-show auth to check local cache
			</desc>
			<log-file>step16.1_show_auth.log</log-file>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac} *1 *${wifi1.pmk.id}" -i "${wifi1.pmkid.id}"</log-match>
		</step>

		<step no="16.2">
			<desc>
				-show ssid ${ssid.name} station
			</desc>
			<log-file>step16.2_show_ssid.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-i "${sta1.tif.mac} *${sta1.tif.ip}" -i "1 *Yes *1" -p 7 -i "wpa2-8021x"</log-match>
		</step>

		<include prefix="17" file="subs/sta_ping.xml" args="sta1, ${tb.vlan1.gw}, 5" />
	</stage>

	<post-process>
		<stage>
			<include prefix="delete_account" file="subs/ldap_delete.xml" args="${conn1.username}" />

		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>