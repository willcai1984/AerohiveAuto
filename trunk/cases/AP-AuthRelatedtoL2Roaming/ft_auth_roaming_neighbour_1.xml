<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Auto detect a roaming neighbour,default hive name and password</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-two APs,they have the default hive name and password
		-two APs,they are acsp neighbors, may need to set fixed radio channel
		-the two APs can ping each other successfully
		Test Procedure:
		-shutdown hive on AP1
		-reboot AP2
		-after AP2 is up, enable ‘_de nbr all’
		-reboot AP1, no shutdown hive
		-after the AP1 boot up, check the roaming neighbor table, result 1
	</description>
	<numofap>2</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	<stage>

		<step no="SetUpAP.1">
			<desc>Set up Portal AP</desc>
			<log-file>setup_portal.log</log-file>
			<console target="ap1">
				-v "user-profile datapath qos-policy def-user-qos vlan-id ${tb.nvlan} attribute 1"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa-auto-psk ascii aerohive"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "_de auth info"
				-v "_de auth basic"
				-v "_de nbr all"
				-v "save config"
			</console>
		</step>

		<step no="SetUpAP.2">
			<desc>Set up AP2</desc>
			<log-file>setup_ap2.log</log-file>
			<console target="ap2">
				-v "user-profile datapath qos-policy def-user-qos vlan-id ${tb.vlan2} attribute 1"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa-auto-psk ascii aerohive"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "_de auth info"
				-v "_de auth basic"
				-v "_de nbr all"
				-v "_de nbrcom-lib basic"
				-v "_de nbr debug"
				-v "save config"
				-v "no interface mgt0 dhcp client"
				-v "interface mgt0 dhcp client"
			</console>
		</step>
		<step no="GetAP2.IP.1" delay="15">
			<desc>show mgt0's ip of mp</desc>
			<log-file>mp_mgt_info.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>
		<step no="GetAP2.IP.2">
			<desc>Get mp's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/mp_mgt_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
		<step no="GetAP1.MAC.1" delay="15">
			<desc>show interface of Portal1</desc>
			<log-file>show_portal_interface.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
		</step>

		<step no="GetAP1.MAC.2">
			<desc>get the eth0 mac address of portal</desc>
			<setvar name="ap1.eth0.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_portal_interface.log -k eth0 -p 2
			</setvar>
		</step>

		<step no="GetAP2.MAC.1">
			<desc>show interface of AP2</desc>
			<log-file>show_ap2_interface.log</log-file>
			<console target="ap2">
				-v "show interface"
			</console>
		</step>

		<step no="GetAP2.MAC.2">
			<desc>get the eth0 mac address of AP2</desc>
			<setvar name="ap2.eth0.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ap2_interface.log -k eth0 -p 2
			</setvar>
		</step>

		<step no="ShutdownHiveAP.1">
			<desc>Shutdown hive of ap1</desc>
			<if>"${ap1.wifi1.existed}"=="true"</if>
			<log-file>shutdown_hive_ap1.log</log-file>
			<console target="ap1">
				-v "interface wifi1 hive hive0 shutdown"
				-v "save config"
			</console>
		</step>

		<step no="RebootAP.1" delay="10">
			<desc>reboot AP2</desc>
			<log-file>reboot_ap2.log</log-file>
			<console target="ap2">
				-v "reboot"
			</console>
		</step>

		<step no="SetDeFlagAfterRebootAP.1">
			<desc>set flag after reboot AP2</desc>
			<log-file>set_flag_after_reboot_ap2.log</log-file>
			<console target="ap2" timeout="120">
				-v "_de auth info"
				-v "_de auth basic"
				-v "_de nbr all"
				-v "_de nbrcom-lib basic"
				-v "_de nbr debug"
				-v "save config"
			</console>
			<no-error-check />
		</step>
		<step no="GetAP2.IP.3" delay="15">
			<desc>show mgt0's ip of mp</desc>
			<log-file>mp_mgt_info_1.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>
		<step no="GetAP2.IP.4">
			<desc>Get mp's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/mp_mgt_info_1.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="RebootAP.2">
			<desc>reboot AP1</desc>
			<log-file>reboot_ap1.log</log-file>
			<console target="ap1">
				-v "reboot"
			</console>
		</step>

		<step no="SetDeFlagAfterRebootAP.2">
			<desc>set flag after reboot AP1</desc>
			<if>"${ap1.wifi1.existed}"=="true"</if>
			<log-file>set_flag_after_reboot_ap1.log</log-file>
			<console target="ap1" timeout="120">
				-v "no interface wifi1 hive hive0 shutdown"
			</console>
		</step>
		<step no="SetDeFlagAfterRebootAP.3">
			<desc>set flag after reboot AP1</desc>
			<log-file>set_flag_after_reboot.0_ap1.log</log-file>
			<console target="ap1" timeout="120">
				-v "_de auth info"
				-v "_de auth basic"
				-v "_de nbr all"
				-v "_de nbrcom-lib basic"
				-v "_de nbr debug"
				-v "save config"
			</console>
		</step>

		<step no="GetAP1.IP.1" delay="15">
			<desc>show mgt0's ip of ap1</desc>
			<log-file>ap1_mgt_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>
		<step no="GetAP1.IP.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap1_mgt_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
		
		<step no="CheckAP1RoamingNeighbor1" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>show roaming neighbor 1 of ap1</desc>
			<log-file>show_roaming_neighbor1_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1" timeout="180">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap2.mgt0.ip}" -i "${ap2.eth0.w4mac}" -p 4 -i "D" -c </log-match>
		</step>

		<step no="CheckAP2RoamingNeighbor1" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>show roaming neighbor 1 of ap2</desc>
			<log-file>show_roaming_neighbor1_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2" timeout="180">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap1.mgt0.ip}" -i "${ap1.eth0.w4mac}" -p 4 -i "D" -c </log-match>
		</step>
		</stage>

  <stage>
  	<if>"${img.prodtype}" == "AP71130" || "${img.prodtype}" == "AP230"</if>
		<step no="CheckAP2LogBuf.1">
			<desc>show log buf of ap2</desc>
			<log-file>show_log_buf_ap2.log</log-file>
			<telnet target="ap2">
				-v "show log buf"
			</telnet>
			<no-error-check />
			<log-match>-i "update ACSP nbr" -i "${ap1.mgt0.ip}" -i "${ap1.eth0.w4mac}" -c </log-match>
		</step>
	</stage>
	
	<stage>
  	<if>"${img.prodtype}" != "AP1130" &amp;&amp; "${img.prodtype}" != "AP230"</if>
		<step no="CheckAP2LogBuf.1">
			<desc>show log buf of ap2</desc>
			<log-file>show_log_buf_ap2.log</log-file>
			<telnet target="ap2">
				-v "show log buf"
			</telnet>
			<no-error-check />
			<log-match>-i "Added ACSP nbr" -i "${ap1.mgt0.ip}" -i "${ap1.eth0.w4mac}" -c </log-match>
		</step>
	</stage>

</testcase>
