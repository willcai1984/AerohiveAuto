<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Local cache can be generated on roaming neighbours, only with WPA2 802.1x auth</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-two APs, they are roaming neighbours
		-config the same ssid with WPA2 802.1x auth method
		-STA disable PMK cache
		-STA connects to AP1 with correct password

		Test Procedure:

		-check local cache on the AP1, result 1
		-STA reconnects to ssid, do full eap auth, check the cache on AP1, result 2
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn1.proto" value="wpa2-aes-8021x" />
	<property name="conn1.username" value="${pub.radius1.username}" />
	<property name="conn1.passwd" value="${pub.radius1.passwd}" />

	<stage>
		<step no="0.1">
			<desc>
				-config ssid with WPA2 802.1x auth method
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="0.2">
			<desc>
				-config ssid with WPA2 802.1x auth method
			</desc>
			<console target="ap2">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<include prefix="0.3" file="subs/ap_renew_ip.xml" obj-args="ap1" />

		<include prefix="0.4" file="subs/ap_renew_ip.xml" obj-args="ap2" />

		<step no="1">
			<desc>
				-config ssid with WPA2 802.1x auth method
			</desc>
			<ssh target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "security-object autoap"
				-v "security-object autoap default-user-profile-attr 1"
				-v "security-object autoap security protocol-suite wpa2-aes-8021x"
				-v "security-object autoap security aaa radius primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap security aaa radius-server accounting primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "user-profile normal qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
				-v "interface wifi0 radio channel 1"
				-v "interface wifi1 radio channel 153"
				-v "aaa radius-server local cache"
				-v "_debug auth all"
				-v "clear log all"
			</ssh>
		</step>

		<step no="2">
			<desc>
				-config ssid with WPA2 802.1x auth method
			</desc>
			<ssh target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "security-object autoap"
				-v "security-object autoap default-user-profile-attr 1"
				-v "security-object autoap security protocol-suite wpa2-aes-8021x"
				-v "security-object autoap security aaa radius primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap security aaa radius-server accounting primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap security local-cache timeout 60"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi1 ssid ${ssid.name}"
				-v "user-profile normal qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
				-v "interface wifi1 radio channel 153"
				-v "aaa radius-server local cache"
				-v "_debug auth all"
				-v "clear log all"
			</ssh>
		</step>


		<!-- <step no="pre1.1"> -->
		<!-- <desc> -->
		<!-- -show interface mgt0 in ap1 -->
		<!-- </desc> -->
		<!-- <log-file>step_pre1.1c_show_interface_mgt0_ap1.log</log-file> -->
		<!-- <ssh target="ap1"> -->
		<!-- -v "show interface mgt0" -->
		<!-- </ssh> -->
		<!-- </step> -->

		<!-- <step no="pre1.2"> -->
		<!-- <desc> -->
		<!-- Get mgt0 ap in ap1 -->
		<!-- </desc> -->
		<!-- <setvar name="ap1.mgt0.ip"> -->
		<!-- ${bin.dir}/getbyrexp.py -p "IP addr=(\S+);" -f ${log.dir}/step_pre1.1c_show_interface_mgt0_ap1.log -t str -->
		<!-- </setvar> -->
		<!-- </step> -->
		<!-- <step no="pre2.1"> -->
		<!-- <desc> -->
		<!-- -show interface mgt0 in ap1 -->
		<!-- </desc> -->
		<!-- <log-file>step_pre2.1c_show_interface_mgt0_ap2.log</log-file> -->
		<!-- <ssh target="ap2"> -->
		<!-- -v "show interface mgt0" -->
		<!-- </ssh> -->
		<!-- </step> -->

		<!-- <step no="pre2.2"> -->
		<!-- <desc> -->
		<!-- Get mgt0 ap in ap1 -->
		<!-- </desc> -->
		<!-- <setvar name="ap2.mgt0.ip"> -->
		<!-- ${bin.dir}/getbyrexp.py -p "IP addr=(\S+);" -f ${log.dir}/step_pre2.1c_show_interface_mgt0_ap2.log -t str -->
		<!-- </setvar> -->
		<!-- </step> -->

		<step no="3.0" delay="20">
			<desc>
				Just for delay
			</desc>
		</step>

		<step no="3.1" type="loop-check" loop-max-times="25" loop-interval="15">
			<desc>
				Show roaming cache on ap1
			</desc>
			<log-file>step3_show_roaming_cache_${loop_check.idx}.log</log-file>
			<ssh target="ap1">
				-v "show roaming neighbor"
			</ssh>
			<log-match>-i "${ap2.mgt0.ip}" -p 4 -i "D"</log-match>
		</step>

		<step no="3.2" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				Show roaming cache on ap2
			</desc>
			<log-file>step3.1_show_roaming_cache_${loop_check.idx}.log</log-file>
			<ssh target="ap2">
				-v "show roaming neighbor"
			</ssh>
			<log-match>-i "${ap1.mgt0.ip}" -p 4 -i "D"</log-match>
		</step>

		<step no="4">
			<desc>
				-clear auth cache
			</desc>
			<ssh target="ap1">
				-v "clear auth local-cache"
			</ssh>
		</step>

		<step no="4.1">
			<desc>
				-clear auth cache
			</desc>
			<ssh target="ap2">
				-v "clear auth local-cache"
			</ssh>
		</step>

		<step no="5.1">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=wpa2-aes-8021x"
				echo "conn1.pif=wifi0"
			</multi-setvar>
		</step>

		<include prefix="5.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<!-- <include prefix="6" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step6_show_logging_buffered.log" /> -->

		<!-- <step no="6.1"> -->
		<!-- <desc> -->
		<!-- -check local cache on the AP1, result 1 -->
		<!-- </desc> -->
		<!-- <log-file>step6_show_logging_buffered.log</log-file> -->
		<!-- <log-match>-i "added PMK to local cache:"</log-match> -->
		<!-- </step> -->

		<step no="6.1">
			<desc>
				-check local cache on the AP1, result 1
			</desc>
			<log-file>step6_show_logging_buffered.log</log-file>
			<ssh target="ap1">
				-v "show log buff"
			</ssh>
			<no-error-check />
			<log-match>-i "added PMK to local cache:"</log-match>
		</step>

		<step no="6.2">
			<desc>
				get session id
			</desc>
			<setvar name="pmk.value">
				${bin.dir}/getbyrexp.py -p "(?i)added PMK to local cache:\s*(\S+)\s*" -t str -f ${log.dir}/step6_show_logging_buffered.log -s none -g0
			</setvar>
		</step>

		<step no="7">
			<desc>
				-check local cache on the AP1, result 1
			</desc>
			<log-file>step7_show_auth.log</log-file>
			<ssh target="ap1">
				-v "show auth interface wifi0.1"
			</ssh>
			<log-match bin="${bin.dir}/searchblocks.py">-b "Local Cache Table:" -ps p1 "(?i)${sta1.tif.mac}\s*\d+\s*${pmk.value}.*${pub.radius1.username}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7.1" delay="60">
			<desc>
				-check local cache on the AP1, result 1
			</desc>
			<log-file>step7.1_show_auth.log</log-file>
			<ssh target="ap2">
				-v "show auth interface wifi1.2"
			</ssh>
			<log-match bin="${bin.dir}/searchblocks.py">-b "Local Cache Table:" -ps p1 "(?i)${sta1.tif.mac}\s*\d+\s*${pmk.value}.*${pub.radius1.username}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<include prefix="8" file="subs/release_station_wifi.xml" obj-args="sta1" />

		<step no="9">
			<desc>
				clear log all
			</desc>
			<ssh target="ap1">
				-v "clear auth local-cache"
				-v "clear log all"
			</ssh>
		</step>

		<step no="9.1">
			<desc>
				clear log all
			</desc>
			<ssh target="ap2">
				-v "clear auth local-cache"
				-v "clear log all"
			</ssh>
		</step>

		<include prefix="10" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<!-- <include prefix="12" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step12_show_logging_buffered.log" /> -->

		<!-- <step no="12.1"> -->
		<!-- <desc> -->
		<!-- -check local cache on the AP1, result 1 -->
		<!-- </desc> -->
		<!-- <log-file>step12_show_logging_buffered.log</log-file> -->
		<!-- <log-match>-c -i "added PMK to local cache:"</log-match> -->
		<!-- </step> -->

		<step no="12.1">
			<desc>
				-check local cache on the AP1, result 1
			</desc>
			<log-file>step12_show_logging_buffered.log</log-file>
			<ssh target="ap1">
				-v "show log buff"
			</ssh>
			<no-error-check />
			<log-match>-i "added PMK to local cache:"</log-match>
		</step>

		<step no="12.2">
			<desc>
				get session id
			</desc>
			<setvar name="pmk.value.reconnect">
				${bin.dir}/getbyrexp.py -p "(?i)added PMK to local cache:\s*(\S+)\s*" -t str -f ${log.dir}/step12_show_logging_buffered.log -s none -g0
			</setvar>
		</step>

		<step no="12">
			<desc>
				-STA reconnects to ssid, do full eap auth, check the cache on AP1,
				result 2
			</desc>
			<log-file>step12_show_auth.log</log-file>
			<ssh target="ap1">
				-v "show auth interface wifi0.1"
			</ssh>
			<log-match bin="${bin.dir}/searchblocks.py">-b "Local Cache Table:" -ps p1 "(?i)${sta1.tif.mac}\s*\d+\s*${pmk.value.reconnect}.*${pub.radius1.username}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="12.1" delay="60">
			<desc>
				check the cache on AP2,result 2
			</desc>
			<log-file>step12.1_show_auth.log</log-file>
			<ssh target="ap2">
				-v "show auth interface wifi1.2"
			</ssh>
			<log-match bin="${bin.dir}/searchblocks.py">-b "Local Cache Table:" -ps p1 "(?i)${sta1.tif.mac}\s*\d+\s*${pmk.value.reconnect}.*${pub.radius1.username}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="13">
			<desc>
				-STA reconnects to ssid, do full eap auth, check the cache on AP1,
				result 2
			</desc>
			<log-file>step13_show_roaming_cache.log</log-file>
			<ssh target="ap1">
				-v "show roaming cache"
			</ssh>
			<log-match>-c -i "${sta1.tif.mac}" -i "1 *${pmk.value.reconnect}*"</log-match>
		</step>
	</stage>
</testcase>