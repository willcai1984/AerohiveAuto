<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Include a roaming neighbour manually</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-two APs,they have the different hive name and password
		-two APs,they are not acsp neighbors
		-config a ssid on AP1,active it
		Test Procedure:
		-check the roaming neighbour table, result 1
		-include the roaming neighbour manully on AP1
		‘roaming neighbor include ip 1.1.1.1 255.255.255.0’
		-check the roaming neighbour table again, result 2,3
		-STA connects to ssid on AP1, result 4
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<stage>

		<step no="SetUpAP.1">
			<desc>Set up Portal AP</desc>
			<log-file>setup_portal.log</log-file>
			<console target="ap1">
				-v "user-profile datapath qos-policy def-user-qos vlan-id ${tb.nvlan} attribute 1"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa-auto-psk ascii aerohive"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi1 radio channel 153"
				-v "_de auth info"
				-v "_de auth basic"
				-v "save config"
			</console>
		</step>

		<step no="SetUpAP.2">
			<desc>Set up AP2</desc>
			<log-file>setup_ap2.log</log-file>
			<console target="ap2">
				-v "user-profile datapath qos-policy def-user-qos vlan-id ${tb.vlan2} attribute 1"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa-auto-psk ascii aerohive"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${ap2.name}1"
				-v "interface mgt0 hive ${ap2.name}1"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
				-v "ssid ${ap2.name}"
				-v "ssid ${ap2.name} security-object autoap"
				-v "interface wifi0 ssid ${ap2.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi1 radio channel 153"
				-v "_de auth info"
				-v "_de auth basic"
				-v "_de nbr all"
				-v "_de nbrcom-lib basic"
				-v "_de nbr debug"
				-v "_kde fe detail"
				-v "save config"
				-v "no interface mgt0 dhcp client"
				-v "interface mgt0 dhcp client"
			</console>
		</step>
		<step no="GetAP2.IP.1" delay="15">
			<desc>show mgt0's ip of mp</desc>
			<log-file>mp_mgt_info.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>
		<step no="GetAP2.IP.2">
			<desc>Get mp's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/mp_mgt_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
		<step no="GetAP1.MAC.1" delay="15">
			<desc>show interface of Portal1</desc>
			<log-file>show_portal_interface.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
		</step>

		<step no="GetAP1.MAC.2">
			<desc>get the eth0 mac address of portal</desc>
			<setvar name="ap1.eth0.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_portal_interface.log -k eth0 -p 2
			</setvar>
		</step>

		<step no="GetAP1.MAC.3">
			<desc>get the wifi1 mac address of portal</desc>
			<setvar name="ap1.wifi1.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_portal_interface.log -k wifi1 -p 2
			</setvar>
		</step>

		<step no="GetAP2.MAC.1">
			<desc>show interface of AP2</desc>
			<log-file>show_ap2_interface.log</log-file>
			<console target="ap2">
				-v "show interface"
			</console>
		</step>

		<step no="GetAP2.MAC.2">
			<desc>get the eth0 mac address of AP2</desc>
			<setvar name="ap2.eth0.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ap2_interface.log -k eth0 -p 2
			</setvar>
		</step>

		<step no="GetAP2.MAC.3">
			<desc>get the wifi1 mac address of AP2</desc>
			<setvar name="ap2.wifi1.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ap2_interface.log -k wifi1 -p 2
			</setvar>
		</step>

		<step no="CheckAP1RoamingNeighbor1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming neighbor 1 of ap1</desc>
			<log-file>show_roaming_neighbor1_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap2.mgt0.ip}" -i "${ap2.eth0.w4mac}" -c -n</log-match>
		</step>

		<step no="CheckAP2RoamingNeighbor1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming neighbor 1 of ap2</desc>
			<log-file>show_roaming_neighbor1_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap1.mgt0.ip}" -i "${ap1.eth0.w4mac}" -c -n</log-match>
		</step>

		<step no="IncludeRoamingNeighbor.1" delay="30">
			<desc>include roaming neighbor</desc>
			<log-file>include_roaming_neighbor.log</log-file>
			<telnet target="ap1">
				-v "roaming neighbor include ip ${ap2.mgt0.ip} 255.255.255.0"
			</telnet>
		</step>

		<step no="CheckAP1RoamingNeighbor2" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming neighbor 2 of ap1</desc>
			<log-file>show_roaming_neighbor2_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap2.mgt0.ip}" -i "0000:0000:0000" -p 4 -i "I" -c </log-match>
		</step>

		<step no="CheckAP2RoamingNeighbor2" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming neighbor 2 of ap2</desc>
			<log-file>show_roaming_neighbor2_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap1.mgt0.ip}" -i "0000:0000:0000" -c -n</log-match>
		</step>

		<include prefix="2.1" file="subs/wpa_supplicant_start.xml" args="sta1" />
		<step no="2.2" delay="30">
			<desc>
				config the laptop to apply the ssid profile,then start to associate
			</desc>
			<ssh target="sta1" prompt=">|.*#" timeout="30">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt WPA-PSK"
				-v "set_network 0 proto WPA"
				-v "set_network 0 pairwise TKIP"
				-v "set_network 0 group TKIP"
				-v "set_network 0 psk \"aerohive\""
				-v "set_network 0 priority 5"
				-v "select_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>
		<include prefix="2.3" file="subs/chk_conn_in_sta.xml" args="sta1" />
		<step no="2.4" delay="10">
			<desc>ifconfig to show the ip add</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>
		<step no="2.5">
			<desc>Get sta1's ip</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>
		<step no="2.6">
			<desc>Get sta1's mac</desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -m -width
			</setvar>
		</step>

		<step no="CheckAP2RoamingCache1.1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming cache 1 of ap2</desc>
			<log-file>show_roaming_cache1_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show roaming cache"
			</telnet>
			<log-match>-i "${sta1.tif.mac}" -c -p 11 -i "0" -p 12 -i "YNNN" -n</log-match>
		</step>

	</stage>

</testcase>
