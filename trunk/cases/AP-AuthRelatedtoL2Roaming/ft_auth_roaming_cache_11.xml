<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Clear roaming cache including hive-neighbours</brief>
	<priority>high</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-the three APs are roaming neighbors
		-config a ssid on AP1, and another ssid on AP3
		Test Procedure:
		-STA1 connects to ssid1 on AP1 success
		-STA2 connects to ssid2 on AP3 success
		-check roaming table on both the three APs, result 1
		-clear roaming cache including hive-neighbours on AP1
		â€˜clear auth roaming-cache hive-neighbors
		-check the roaming cache of STA1 on all APs, result 2
		-clear roaming cache including hive-neighbours on AP3
		-check the roaming cache of STA2 on all APs, result 3
	</description>
	<numofap>3</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="SetUpAP1.1">
			<desc>Set up AP1</desc>
			<log-file>setup_ap1.log</log-file>
			<console target="ap1">
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa-auto-psk ascii aerohive"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${ap.def.passwd}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi1 radio channel 153"
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
				-v "_debug auth all"
				-v "save config"
				-v "reboot"
			</console>
		</step>

		<step no="SetUpAP2.1">
			<desc>Set up AP2</desc>
			<log-file>setup_ap2.log</log-file>
			<console target="ap2">
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa-auto-psk ascii aerohive"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${ap.def.passwd}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
				-v "ssid ${ssid.name}_2"
				-v "ssid ${ssid.name}_2 security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}_2"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi1 radio channel 153"
				-v "user-profile ${ssid.name}_2 qos-policy def-user-qos vlan-id ${tb.vlan2} attribute 1"
				-v "_debug auth all"
				-v "save config"
				-v "no interface mgt0 dhcp client"
				-v "interface mgt0 dhcp client"
				-v "reboot"
			</console>
		</step>
		<step no="SetUpAP3.1">
			<desc>Set up AP3</desc>
			<log-file>setup_ap3.log</log-file>
			<console target="ap3">
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa-auto-psk ascii aerohive"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${ap.def.passwd}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
				-v "ssid ${ssid.name}_3"
				-v "ssid ${ssid.name}_3 security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}_3"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi1 radio channel 153"
				-v "user-profile ${ssid.name}_3 qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
				-v "_debug auth all"
				-v "save config"
				-v "reboot"
			</console>
		</step>
		
		<step no="0.1" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step0.1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="0.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
		
		<step no="1.1" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step1.1_show_interface_mgt0_info.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="1.2">
			<desc>Get ap2's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step1.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
		
		<step no="2.1" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step2.1_show_interface_mgt0_info.log</log-file>
			<console target="ap3">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="2.2">
			<desc>Get ap3's ip</desc>
			<setvar name="ap3.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step2.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="SetUpAP3.2" delay="300">
			<if>"${ap1.eth1.existed}"=="true"</if>
			<desc>Set up AP3</desc>
			<log-file>setup_eth1_ap3.log</log-file>
			<console target="ap3">
				-v "hive ${hive.name} manage Telnet"
				-v "interface eth1 shutdown"
				-v "interface wifi1 radio channel 153"
				-v "save config"
			</console>
		</step>

		<step no="CheckAmrpNeighbour.1" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show Portal amrp neighbor
			</desc>
			<log-file>show_portal_amrp_neighbor_${loop_check.idx}.log</log-file>
			<console target="ap1" timeout="180">
				-v "show amrp neighbor"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap3.wifi1.w4mac}\s+${ap3.mgt0.ip}\s+TWO-WAY" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>
		<step no="CheckAmrpNeighbour.2" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show MP amrp neighbor
			</desc>
			<log-file>show_mp_amrp_neighbor_${loop_check.idx}.log</log-file>
			<console target="ap3" timeout="180">
				-v "show amrp neighbor"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap1.wifi1.w4mac}\s+${ap1.mgt0.ip}\s+TWO-WAY" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<include prefix="1" file="subs/get_ap_if_mac.xml" args="3, 1" />

		<step no="CheckAP1RoamingNeighbor1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming neighbor 1 of ap1</desc>
			<log-file>show_roaming_neighbor1_ap1_${loop_check.idx}.log</log-file>
			<console target="ap1" timeout="180">
				-v "show roaming neighbor"
			</console>
			<log-match>-i "${ap2.mgt0.ip}" -i "${ap2.eth0.w4mac}" -p 4 -i "D" -c </log-match>
			<log-match>-i "${ap3.mgt0.ip}" -i "${ap3.eth0.w4mac}" -p 4 -i "D" -c </log-match>
		</step>
		<step no="CheckAP2RoamingNeighbor1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming neighbor 1 of ap2</desc>
			<log-file>show_roaming_neighbor1_ap2_${loop_check.idx}.log</log-file>
			<console target="ap2" timeout="180">
				-v "show roaming neighbor"
			</console>
			<log-match>-i "${ap1.mgt0.ip}" -i "${ap1.eth0.w4mac}" -p 4 -i "D" -c </log-match>
			<log-match>-i "${ap3.mgt0.ip}" -i "${ap3.eth0.w4mac}" -p 4 -i "D" -c </log-match>
		</step>
		
		<step no="CheckAP3RoamingNeighbor1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming neighbor 1 of ap3</desc>
			<log-file>show_roaming_neighbor1_ap3_${loop_check.idx}.log</log-file>
			<console target="ap3" timeout="180">
				-v "show roaming neighbor"
			</console>
			<log-match>-i "${ap1.mgt0.ip}" -i "${ap1.eth0.w4mac}" -p 4 -i "D" -c </log-match>
			<log-match>-i "${ap2.mgt0.ip}" -i "${ap2.eth0.w4mac}" -p 4 -i "D" -c </log-match>
		</step>
		
		<step no="SetUpAP3.3">
			<desc>Set up AP3</desc>
			<log-file>setup_eth1_1_ap3.log</log-file>
			<console target="ap3">
				-v "interface eth0 shutdown"
				-v "save config"
			</console>
		</step>

		<property name="conn1.ssid" value="${ssid.name}" />
		<property name="conn1.proto" value="wpa-tkip-psk" />
		<property name="conn1.psk" value="aerohive" />
		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn1, sta1, ap1" />


		<property name="conn2.ssid" value="${ssid.name}_3" />
		<property name="conn2.proto" value="wpa-tkip-psk" />
		<property name="conn2.psk" value="aerohive" />
		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn2, sta2, ap3" />

		<step no="CheckAP1RoamingCache1.1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming cache 1 of ap1</desc>
			<log-file>show_roaming_cache1_ap1_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show roaming cache"
			</console>
			<log-match>-i "${sta1.tif.mac}" -c -p 12 -i "YNNN"</log-match>
			<log-match>-i "${sta2.tif.mac}" -c -p 12 -i "YNNN"</log-match>
			<log-match>-i "Broadcast way" -i "access" -i "backhaul"</log-match>
		</step>
		<step no="ClearRoamingCacheAP1.1">
			<desc>
				clear roaming cache on ap1
			</desc>
			<log-file>clear_roaming_cache_ap1.log</log-file>
			<console target="ap1" timeout="180">
				-v "clear auth roaming-cache hive-nei"
			</console>
		</step>
		<step no="ClearRoamingCacheAP1.2" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show roaming cache on ap1
			</desc>
			<log-file>show_roaming_cache_ap1_1_${loop_check.idx}.log</log-file>
			<console target="ap1" timeout="180">
				-v "show roaming cache"
			</console>
			<log-match>-i "${sta2.tif.mac}" -c -p 12 -i "YNNN"</log-match>
			<log-match>-i "${sta1.tif.mac}" -c -p 12 -i "YNYN"</log-match>
		</step>
		<step no="ClearRoamingCacheAP1.3" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show roaming cache on ap2
			</desc>
			<log-file>show_roaming_cache_ap2_1_${loop_check.idx}.log</log-file>
			<console target="ap2" timeout="180">
				-v "show roaming cache"
			</console>
			<log-match>-i "${sta2.tif.mac}" -c -p 12 -i "YNNN"</log-match>
			<log-match>-i "${sta1.tif.mac}" -c -p 12 -i "YNYN"</log-match>
		</step>
		<step no="ClearRoamingCacheAP1.4" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show roaming cache on ap3
			</desc>
			<log-file>show_roaming_cache_ap3_1_${loop_check.idx}.log</log-file>
			<console target="ap3" timeout="180">
				-v "show roaming cache"
			</console>
			<log-match>-i "${sta2.tif.mac}" -c -p 12 -i "YNNN"</log-match>
			<log-match>-i "${sta1.tif.mac}" -c -p 12 -i "YNYN"</log-match>
		</step>

		<step no="ClearRoamingCacheAP3.1">
			<desc>
				clear roaming cache on ap3
			</desc>
			<log-file>clear_roaming_cache_ap3_3.log</log-file>
			<console target="ap3" timeout="180">
				-v "clear auth roaming-cache hive-nei"
			</console>
		</step>
		<step no="ClearRoamingCacheAP3.2" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show roaming cache on ap3
			</desc>
			<log-file>show_roaming_cache_ap3_4_${loop_check.idx}.log</log-file>
			<console target="ap3" timeout="180">
				-v "show roaming cache"
			</console>
			<log-match>-i "${sta2.tif.mac}" -c -p 12 -i "YNYN"</log-match>
			<log-match>-i "${sta1.tif.mac}" -c -p 12 -i "YNYN"</log-match>
		</step>
		<step no="ClearRoamingCacheAP3.3" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show roaming cache on ap1
			</desc>
			<log-file>show_roaming_cache_ap1_4_${loop_check.idx}.log</log-file>
			<console target="ap1" timeout="180">
				-v "show roaming cache"
			</console>
			<log-match>-i "${sta2.tif.mac}" -c -p 12 -i "YNYN"</log-match>
			<log-match>-i "${sta1.tif.mac}" -c -p 12 -i "YNYN"</log-match>
		</step>
		<step no="ClearRoamingCacheAP3.4" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show roaming cache on ap2
			</desc>
			<log-file>show_roaming_cache_ap2_4_${loop_check.idx}.log</log-file>
			<console target="ap2" timeout="180">
				-v "show roaming cache"
			</console>
			<log-match>-i "${sta2.tif.mac}" -c -p 12 -i "YNYN"</log-match>
			<log-match>-i "${sta1.tif.mac}" -c -p 12 -i "YNYN"</log-match>
		</step>

	</stage>
</testcase>


