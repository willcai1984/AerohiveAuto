<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Auto detect a roaming neighbour,user defined hive name and password</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-two APs,config the same hive name and password
		-two APs,they should be acsp neighbors
		-the two AP can ping each other successfully
		Test Procedure:
		-after booting up the APs, APs could become roaming neighbor, result 1
	</description>
	<numofap>3</numofap>
	<numofsta>0</numofsta>
	<tbtype>linux</tbtype>
	<stage>


		<step no="APProcess1.1">
			<desc>
				Modify AP vlan to vlan1, only this step use console, others are ssh, due to tty bug
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
			</console>
		</step>

		<include prefix="APProcess1.2" file="subs/ap_renew_ip.xml" obj-args="ap1" />

		<step no="APProcess2.1">
			<desc>
				Modify AP vlan to vlan2, only this step use console, others are ssh, due to tty bug
			</desc>
			<console target="ap2">
				-v "interface mgt0 vlan ${tb.vlan2}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
			</console>
		</step>

		<include prefix="APProcess2.2" file="subs/ap_renew_ip.xml" obj-args="ap2" />

		<step no="APProcess3.1">
			<desc>
				Modify AP vlan to vlan3, only this step use console, others are ssh, due to tty bug
			</desc>
			<console target="ap3">
				-v "interface mgt0 vlan ${tb.vlan3}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
			</console>
		</step>

		<include prefix="APProcess3.2" file="subs/ap_renew_ip.xml" obj-args="ap3" />

		<step no="SetUpAP.1">
			<desc>Set up Portal AP</desc>
			<log-file>setup_portal.log</log-file>
			<ssh target="ap1">
				-v "user-profile datapath qos-policy def-user-qos vlan-id ${tb.nvlan} attribute 1"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa2-tkip-8021x"
				-v "security-object autoap security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "_de auth info"
				-v "_de auth basic"
				-v "save config"
			</ssh>
		</step>

		<step no="SetUpAP.2">
			<desc>Set up AP2</desc>
			<log-file>setup_ap2.log</log-file>
			<ssh target="ap2">
				-v "user-profile datapath qos-policy def-user-qos vlan-id ${tb.vlan2} attribute 1"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa2-tkip-8021x"
				-v "security-object autoap security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "_de auth info"
				-v "_de auth basic"
				-v "save config"
			</ssh>
		</step>

		<step no="SetUpAP.3">
			<desc>Set up AP3</desc>
			<log-file>setup_ap3.log</log-file>
			<ssh target="ap3">
				-v "user-profile datapath qos-policy def-user-qos vlan-id ${tb.vlan3} attribute 1"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa2-tkip-8021x"
				-v "security-object autoap security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${hive.name}_1"
				-v "interface mgt0 hive ${hive.name}_1"
				-v "interface mgt0 vlan ${tb.vlan3}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
				-v "ssid ${ap3.name}"
				-v "ssid ${ap3.name} security-object autoap"
				-v "interface wifi0 ssid ${ap3.name}"
				-v "interface wifi0 radio channel 11"
				-v "_de auth info"
				-v "_de auth basic"
				-v "save config"
			</ssh>
		</step>

		<step no="GetAP1.MAC.1">
			<desc>show interface of Portal1</desc>
			<log-file>show_portal_interface.log</log-file>
			<ssh target="ap1">
				-v "show interface"
			</ssh>
		</step>

		<step no="GetAP1.MAC.2">
			<desc>get the eth0 mac address of portal</desc>
			<setvar name="ap1.eth0.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_portal_interface.log -k eth0 -p 2
			</setvar>
		</step>


		<step no="GetAP2.MAC.1">
			<desc>show interface of AP2</desc>
			<log-file>show_ap2_interface.log</log-file>
			<ssh target="ap2">
				-v "show interface"
			</ssh>
		</step>

		<step no="GetAP2.MAC.2">
			<desc>get the eth0 mac address of AP2</desc>
			<setvar name="ap2.eth0.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ap2_interface.log -k eth0 -p 2
			</setvar>
		</step>

		<step no="GetAP3.MAC.1">
			<desc>show interface of AP3</desc>
			<log-file>show_ap3_interface.log</log-file>
			<ssh target="ap3">
				-v "show interface"
			</ssh>
		</step>

		<step no="GetAP3.MAC.2">
			<desc>get the eth0 mac address of AP3</desc>
			<setvar name="ap3.eth0.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ap3_interface.log -k eth0 -p 2
			</setvar>
		</step>

		<step no="CheckAP1RoamingNeighbor1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming neighbor 1 of ap1</desc>
			<log-file>show_roaming_neighbor1_ap1_${loop_check.idx}.log</log-file>
			<ssh target="ap1">
				-v "show roaming neighbor"
			</ssh>
			<log-match>-i "${ap2.mgt0.ip}" -i "${ap2.eth0.w4mac}" -p 4 -i "D" -c </log-match>
			<log-match>-i "${ap3.mgt0.ip}" -i "${ap3.eth0.w4mac}" -c -n</log-match>
		</step>

		<step no="CheckAP2RoamingNeighbor1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming neighbor 1 of ap2</desc>
			<log-file>show_roaming_neighbor1_ap2_${loop_check.idx}.log</log-file>
			<ssh target="ap2">
				-v "show roaming neighbor"
			</ssh>
			<log-match>-i "${ap1.mgt0.ip}" -i "${ap1.eth0.w4mac}" -p 4 -i "D" -c </log-match>
			<log-match>-i "${ap3.mgt0.ip}" -i "${ap3.eth0.w4mac}" -c -n</log-match>
		</step>

		<step no="CheckAP3RoamingNeighbor1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming Neighbor 1 of ap3</desc>
			<log-file>show_roaming_Neighbor1_ap3_${loop_check.idx}.log</log-file>
			<ssh target="ap3">
				-v "show roaming neighbor"
			</ssh>
			<log-match>-i "${ap1.eth0.w4mac}" -c -n</log-match>
			<log-match>-i "${ap2.eth0.w4mac}" -c -n</log-match>
		</step>

	</stage>

</testcase>
