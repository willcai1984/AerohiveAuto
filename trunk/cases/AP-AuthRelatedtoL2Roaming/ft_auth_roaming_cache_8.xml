<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>clear roaming cache on local AP</brief>
	<priority>high</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-config two ssid on AP1
		-STA1 connects to ssid1, STA2 connects to ssid2
		Test Procedure:
		-check roaming cache on AP1, result 1
		-STA2 disconnected from ssid
		-clear roaming cache on AP1
		‘clear auth roaming-cache’
		-check roaming cache on AP1, result 2
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<property name="user1name" value="tester1" />
	<property name="user1Password" value="password1" />
	<property name="user2name" value="tester2" />
	<property name="user2Password" value="password2" />
	<property name="userGroup" value="auth" />

	<stage>

		<step no="SetUpAP1.1">
			<desc>Set up AP1</desc>
			<log-file>setup_1_ap1.log</log-file>
			<console target="ap1">
				-v "user ${user1name}"
				-v "user ${user2name}"
				-v "user ${user1name} password ${user1Password}"
				-v "user ${user2name} password ${user2Password}"
				-v "user-group ${userGroup}"
				-v "user ${user1name} group ${userGroup}"
				-v "user ${user2name} group ${userGroup}"
				-v "user-group ${userGroup} user-attribute 1"
				-v "user-group ${userGroup} vlan-id ${tb.vlan1}"
				-v "save config users"
			</console>
		</step>
		<step no="SetUpAP1.2">
			<desc>Set up AP1</desc>
			<log-file>setup_2_ap1.log</log-file>
			<console target="ap1">
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa-auto-psk ascii-key aerohive"
				-v "security-object autoap security private-psk"
				-v "security-object autoap security private-psk mac-binding-enable"
				-v "security-object autoap security private-psk default-psk-disabled"
				-v "security-object autoap security private-psk ppsk-server ${ap1.mgt0.ip}"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${ap.def.passwd}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
				-v "save config"
			</console>
		</step>
		<step no="SetUpAP1.3">
			<desc>Set up AP1</desc>
			<log-file>setup_2_ap1.log</log-file>
			<console target="ap1">
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "ssid ${ssid.name}_2"
				-v "ssid ${ssid.name}_2 security-object autoap"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}_2"
				-v "ssid ${ssid.name} user-group ${userGroup}"
				-v "ssid ${ssid.name}_2 user-group ${userGroup}"
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
				-v "_de auth info"
				-v "_de auth basic"
				-v "save config"
			</console>
		</step>
		<step no="GetAP1.MAC.1" delay="30">
			<desc>show interface of ap1</desc>
			<log-file>show_portal_interface.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
		</step>

		<step no="GetAP1.MAC.2">
			<desc>get the eth0 mac address of ap1</desc>
			<setvar name="ap1.eth0.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_portal_interface.log -k eth0 -p 2
			</setvar>
		</step>

	
		<include prefix="2.1" file="subs/wpa_supplicant_start.xml" args="sta1" />
		<step no="2.2" delay="30">
			<desc>
				config the laptop to apply the ssid profile,then start to associate
			</desc>
			<ssh target="sta1" prompt=">|.*#" timeout="30">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt WPA-PSK"
				-v "set_network 0 proto RSN"
				-v "set_network 0 pairwise TKIP"
				-v "set_network 0 group TKIP"
				-v "set_network 0 psk \"password1\""
				-v "set_network 0 priority 5"
				-v "select_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>
		<include prefix="2.3" file="subs/chk_conn_in_sta.xml" args="sta1" />
		<step no="2.4" delay="10">
			<desc>ifconfig to show the ip add</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>
		<step no="2.5">
			<desc>Get sta1's ip</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>
		<step no="2.6">
			<desc>Get sta1's mac</desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -m -width
			</setvar>
		</step>

		<include prefix="3.1" file="subs/wpa_supplicant_start.xml" args="sta2" />
		<step no="3.2" delay="30">
			<desc>
				config the laptop to apply the ssid profile,then start to associate
			</desc>
			<ssh target="sta2" prompt=">|.*#" timeout="30">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}_2\""
				-v "set_network 0 key_mgmt WPA-PSK"
				-v "set_network 0 proto RSN"
				-v "set_network 0 pairwise TKIP"
				-v "set_network 0 group TKIP"
				-v "set_network 0 psk \"password2\""
				-v "set_network 0 priority 5"
				-v "select_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>
		<include prefix="3.3" file="subs/chk_conn_in_sta.xml" args="sta2" />
		<step no="3.4" delay="10">
			<desc>ifconfig to show the ip add</desc>
			<log-file>ifconfig_sta2.log</log-file>
			<ssh target="sta2" timeout="80">
				-v "ifconfig ${sta2.tif.name}"
			</ssh>
		</step>
		<step no="3.5">
			<desc>Get sta2's ip</desc>
			<setvar name="sta2.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig_sta2.log -i ${sta2.tif.name} -nomask
			</setvar>
		</step>
		<step no="3.6">
			<desc>Get sta2's mac</desc>
			<setvar name="sta2.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig_sta2.log -i ${sta2.tif.name} -m -width
			</setvar>
		</step>
		<step no="CheckAP1RoamingCache1.1" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming cache 1 of ap1</desc>
			<log-file>show_roaming_cache1_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-i "${sta1.tif.mac}" -c -p 11 -i "0" -p 12 -i "YNNN"</log-match>
			<log-match>-i "${sta2.tif.mac}" -c -p 11 -i "0" -p 12 -i "YNNN"</log-match>
			<log-match>-i "Broadcast way" -i "access" -i "backhaul"</log-match>
		</step>

		<step no="4.1">
			<desc>
				config the laptop to apply the ssid profile,then start to associate
			</desc>
			<ssh target="sta2" prompt=">|.*#" timeout="30">
				-v "wpa_cli"
				-v "disc"
				-v "term"
				-v "quit"
			</ssh>
		</step>
		<step no="CheckAP1RoamingCache1.2" type="loop-check" loop-max-times="50" loop-interval="10">
			<desc>show roaming cache 1 of ap1</desc>
			<log-file>show_roaming_cache1_2_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-i "${sta1.tif.mac}" -c -p 11 -i "0" -p 12 -i "YNNN"</log-match>
			<log-match>-i "${sta2.tif.mac}" -c -p 11 -i "0" -p 12 -i "NNNN"</log-match>
			<log-match>-i "Broadcast way" -i "access" -i "backhaul"</log-match>
		</step>
		<step no="ClearRoamingCacheAP1.1">
			<desc>
				clear roaming cache on ap1
			</desc>
			<log-file>clear_roaming_cache_ap1.log</log-file>
			<telnet target="ap1" timeout="180">
				-v "clear auth roaming-cache"
				-v "show roaming cache"
			</telnet>
			<log-match>-i "${sta1.tif.mac}" -c -p 11 -i "0" -p 12 -i "YNNN" -n</log-match>
			<log-match>-i "${sta2.tif.mac}" -c -p 11 -i "0" -p 12 -i "NNNN" -n</log-match>
			<log-match>-i "Broadcast way" -i "access" -i "backhaul"</log-match>
		</step>

	</stage>
</testcase>


