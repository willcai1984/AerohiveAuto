<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>change the roaming port to customized one</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-AP1 and AP2 are acsp neighbors
		-the two APs have the same HIVE name and passwd
		-they can ping each other(route is reachable)
		Test Procedure:
		- we config a roaming port by self,it's 5000
		-check the two APs can be roaming neighbours,'sh roa nei' to make
		sure, and check the roaming port in output
		-client connected to AP1,check fe debug,which port is AP1 used to
		sending the message
	</description>
	<numofap>3</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<stage>

		<step no="SetUpAP.1-1-1">
			<desc>Set up Portal AP</desc>
			<log-file>setup_ap1.log</log-file>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
			</console>
		</step>
		
		<include prefix="SetUpAP.1-2" file="subs/ap_renew_ip.xml" obj-args="ap1" />
		<step no="SetUpAP.1-1-2">
			<desc>Set up Portal AP</desc>
			<log-file>setup_ap1.log</log-file>
			<ssh target="ap1">
				-v "user-profile datapath qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa2-tkip-8021x"
				-v "security-object autoap security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</ssh>
		</step>
		<step no="SetUpAP.1-3">
			<desc>Set up Portal AP</desc>
			<log-file>setup_ap1.log</log-file>
			<ssh target="ap1">
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "_kde fe basic"
				-v "save config"
			</ssh>
		</step>

		<step no="SetUpAP.2-1-1">
			<desc>Set up AP2</desc>
			<log-file>setup_ap2.log</log-file>
			<console target="ap2">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
			</console>
		</step>
		
		<include prefix="SetUpAP.2-2" file="subs/ap_renew_ip.xml" obj-args="ap2" />
		<step no="SetUpAP.2-1-2">
			<desc>Set up AP2</desc>
			<log-file>setup_ap2.log</log-file>
			<ssh target="ap2">
				-v "user-profile datapath qos-policy def-user-qos vlan-id ${tb.vlan2} attribute 1"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa2-tkip-8021x"
				-v "security-object autoap security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</ssh>
		</step>
		<step no="SetUpAP.2-3">
			<desc>Set up AP2</desc>
			<log-file>setup_ap2.log</log-file>
			<ssh target="ap2">
				-v "ssid ${ap2.name}"
				-v "ssid ${ap2.name} security-object autoap"
				-v "interface wifi0 ssid ${ap2.name}"
				-v "interface wifi0 radio channel 11"
				-v "_kde fe basic"
				-v "save config"
			</ssh>
		</step>

		<step no="SetUpAP.3-1-1">
			<desc>Set up AP3</desc>
			<log-file>setup_ap3.log</log-file>
			<console target="ap3">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
			</console>
		</step>
		
		<include prefix="SetUpAP.3-2" file="subs/ap_renew_ip.xml" obj-args="ap3" />
		<step no="SetUpAP.3-1-2">
			<desc>Set up AP3</desc>
			<log-file>setup_ap3.log</log-file>
			<console target="ap3">
				-v "user-profile datapath qos-policy def-user-qos vlan-id ${tb.vlan3} attribute 1"
				-v "roaming port 5000"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa2-tkip-8021x"
				-v "security-object autoap security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap default-user-profile-attr 1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
			</console>
		</step>
		<step no="SetUpAP.3-3">
			<desc>Set up AP3</desc>
			<log-file>setup_ap3.log</log-file>
			<ssh target="ap3">
				-v "ssid ${ap3.name}"
				-v "ssid ${ap3.name} security-object autoap"
				-v "interface wifi0 ssid ${ap3.name}"
				-v "interface wifi0 radio channel 11"
				-v "_kde fe basic"
				-v "save config"
			</ssh>
		</step>
		
		<step no="GetAP2.IP.1" delay="15">
			<desc>show mgt0's ip of mp</desc>
			<log-file>mp_mgt_info.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>
		<step no="GetAP2.IP.2">
			<desc>Get mp's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/mp_mgt_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
		<step no="GetAP3.IP.1">
			<desc>show mgt0's ip of ap3</desc>
			<log-file>ap3_mgt_info.log</log-file>
			<console target="ap3">
				-v "show interface mgt0"
			</console>
		</step>
		<step no="GetAP3.IP.2">
			<desc>Get ap3's ip</desc>
			<setvar name="ap3.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap3_mgt_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
		<step no="GetAP1.MAC.1" delay="15">
			<desc>show interface of ap1</desc>
			<log-file>show_ap1_interface.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
		</step>

		<step no="GetAP1.MAC.2">
			<desc>get the eth0 mac address of portal</desc>
			<setvar name="ap1.eth0.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ap1_interface.log -k eth0 -p 2
			</setvar>
		</step>

		<step no="GetAP2.MAC.1">
			<desc>show interface of AP2</desc>
			<log-file>show_ap2_interface.log</log-file>
			<console target="ap2">
				-v "show interface"
			</console>
		</step>

		<step no="GetAP2.MAC.2">
			<desc>get the eth0 mac address of AP2</desc>
			<setvar name="ap2.eth0.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ap2_interface.log -k eth0 -p 2
			</setvar>
		</step>

		<step no="GetAP3.MAC.1">
			<desc>show interface of AP3</desc>
			<log-file>show_ap3_interface.log</log-file>
			<console target="ap3">
				-v "show interface"
			</console>
		</step>

		<step no="GetAP3.MAC.2">
			<desc>get the eth0 mac address of AP3</desc>
			<setvar name="ap3.eth0.w4mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_ap3_interface.log -k eth0 -p 2
			</setvar>
		</step>

		<step no="CheckAP1RoamingNeighbor1" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>show roaming neighbor 1 of ap1</desc>
			<log-file>show_roaming_neighbor1_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap2.mgt0.ip}" -i "${ap2.eth0.w4mac}" -p 4 -i "D" -c </log-match>
			<log-match>-i "${ap3.mgt0.ip}" -i "${ap3.eth0.w4mac}" -p 4 -i "D" -c -n</log-match>
		</step>

		<step no="CheckAP2RoamingNeighbor1" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>show roaming neighbor 1 of ap2</desc>
			<log-file>show_roaming_neighbor1_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap1.mgt0.ip}" -i "${ap1.eth0.w4mac}" -p 4 -i "D" -c </log-match>
			<log-match>-i "${ap3.mgt0.ip}" -i "${ap3.eth0.w4mac}" -p 4 -i "D" -c -n</log-match>
		</step>

		<step no="CheckAP3RoamingNeighbor1" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>show roaming Neighbor 1 of ap3</desc>
			<log-file>show_roaming_neighbor1_ap3_${loop_check.idx}.log</log-file>
			<telnet target="ap3">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap1.eth0.w4mac}" -p 4 -i "D" -c -n</log-match>
			<log-match>-i "${ap2.eth0.w4mac}" -p 4 -i "D" -c -n</log-match>
		</step>

		<step no="ConfigRoamingPort5000AP.1">
			<desc>Set up AP1 roaming port</desc>
			<log-file>setup_roaming_port_ap1.log</log-file>
			<telnet target="ap1">
				-v "_ff id 1 dst-port 5000 bi"
				-v "clear log buffer"
				-v "roaming port 5000"
				-v "save config"
			</telnet>
		</step>

		<step no="ConfigRoamingPort5000AP.2">
			<desc>Set up AP2 roaming port</desc>
			<log-file>setup_roaming_port_ap2.log</log-file>
			<telnet target="ap2">
				-v "_ff id 1 dst-port 5000 bi"
				-v "clear log buffer"
				-v "roaming port 5000"
				-v "save config"
			</telnet>
		</step>

		<step no="CheckAP1RoamingNeighborPort5000" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>show roaming neighbor 2 of ap1</desc>
			<log-file>show_roaming_neighbor2_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap2.mgt0.ip}" -i "${ap2.eth0.w4mac}" -p 4 -i "D" -c </log-match>
			<log-match>-i "${ap3.mgt0.ip}" -i "${ap3.eth0.w4mac}" -p 4 -i "D" -c </log-match>
		</step>

		<step no="CheckAP2RoamingNeighborPort5000" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>show roaming neighbor 2 of ap2</desc>
			<log-file>show_roaming_neighbor2_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap1.mgt0.ip}" -i "${ap1.eth0.w4mac}" -p 4 -i "D" -c </log-match>
			<log-match>-i "${ap3.mgt0.ip}" -i "${ap3.eth0.w4mac}" -p 4 -i "D" -c </log-match>
		</step>

		<step no="CheckAP1LogBufferPort5000">
			<desc>show log buffer of ap1</desc>
			<log-file>show_log_buffer_ap1_port5000.log</log-file>
			<telnet target="ap1">
				-v "show log buffer"
			</telnet>
			<no-error-check />
			<log-match>-i "${ap1.mgt0.ip}->${ap2.mgt0.ip}" -i "->5000" </log-match>
			<log-match>-i "${ap1.mgt0.ip}->${ap3.mgt0.ip}" -i "->5000" </log-match>
		</step>

		<step no="ConfigRoamingPort1500AP.1">
			<desc>Set up AP1 roaming port</desc>
			<log-file>setup_roaming_port_1500_ap1.log</log-file>
			<telnet target="ap1">
				-v "_ff id 1 dst-port 1500 bi"
				-v "clear log buffer"
				-v "roaming port 1500"
				-v "clear auth roaming-cache"
				-v "save config"
			</telnet>
		</step>

		<step no="ConfigRoamingPort1500AP.2">
			<desc>Set up AP2 roaming port</desc>
			<log-file>setup_roaming_port_1500_ap2.log</log-file>
			<telnet target="ap2">
				-v "_ff id 1 dst-port 1500 bi"
				-v "clear log buffer"
				-v "roaming port 1500"
				-v "clear auth roaming-cache"
				-v "save config"
			</telnet>
		</step>

		<step no="CheckAP1RoamingNeighborPort1500" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>show roaming neighbor 3 of ap1</desc>
			<log-file>show_roaming_neighbor3_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap2.mgt0.ip}" -i "${ap2.eth0.w4mac}" -p 4 -i "D" -c </log-match>
			<log-match>-i "${ap3.mgt0.ip}" -i "${ap3.eth0.w4mac}" -p 4 -i "D" -c -n</log-match>
		</step>

		<step no="CheckAP1LogBufferPort1500">
			<desc>show log buffer of ap1</desc>
			<log-file>show_log_buffer1_port_1500_ap1.log</log-file>
			<telnet target="ap1">
				-v "show log buffer"
			</telnet>
			<no-error-check />
			<log-match>-i "${ap1.mgt0.ip}->${ap2.mgt0.ip}" -i "->1500" </log-match>
			<log-match>-i "${ap1.mgt0.ip}->${ap3.mgt0.ip}" -i "->1500" </log-match>
		</step>

		<step no="ConfigRoamingPort65000.1">
			<desc>Set up AP1 roaming port</desc>
			<log-file>setup_roaming_port_65000_ap1.log</log-file>
			<telnet target="ap1">
				-v "_ff id 1 dst-port 65000 bi"
				-v "clear log buffer"
				-v "roaming port 65000"
				-v "clear auth roaming-cache"
				-v "save config"
			</telnet>
		</step>

		<step no="ConfigRoamingPort65000.2">
			<desc>Set up AP2 roaming port</desc>
			<log-file>setup_roaming_port_65000_ap2.log</log-file>
			<telnet target="ap2">
				-v "_ff id 1 dst-port 65000 bi"
				-v "clear log buffer"
				-v "roaming port 65000"
				-v "clear auth roaming-cache"
				-v "save config"
			</telnet>
		</step>

		<step no="CheckAP1RoamingNeighborPort65000" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>show roaming neighbor 4 of ap1</desc>
			<log-file>show_roaming_neighbor4_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show roaming neighbor"
			</telnet>
			<log-match>-i "${ap2.mgt0.ip}" -i "${ap2.eth0.w4mac}" -p 4 -i "D" -c </log-match>
			<log-match>-i "${ap3.mgt0.ip}" -i "${ap3.eth0.w4mac}" -p 4 -i "D" -c -n</log-match>
		</step>

		<step no="CheckLogBufferPort65000">
			<desc>show log buffer1 of ap1</desc>
			<log-file>show_log_buffer1_port_65000_ap1.log</log-file>
			<telnet target="ap1">
				-v "show log buffer"
				-v "clear log buffer"
			</telnet>
			<no-error-check />
			<log-match>-i "${ap1.mgt0.ip}->${ap2.mgt0.ip}" -i "->65000" </log-match>
			<log-match>-i "${ap1.mgt0.ip}->${ap3.mgt0.ip}" -i "->65000" </log-match>
		</step>

		<step no="connectAP1">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=wpa2-tkip-8021x"
				echo "conn1.pif=wifi0"
				echo "conn1.username=${pub.radius1.username}"
				echo "conn1.passwd=${pub.radius1.passwd}"
			</multi-setvar>
		</step>

		<include prefix="connectAP1" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="CheckAP2RoamingCache1.1" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>show roaming cache 1 of ap2</desc>
			<log-file>show_roaming_cache1_ap2_${loop_check.idx}.log</log-file>
			<telnet target="ap2">
				-v "show roaming cache"
			</telnet>
			<log-match>-i "${sta1.tif.mac}" -c -p 11 -i "1" -p 12 -i "YNNN"</log-match>
		</step>

		<step no="CheckLogBufferPort65001">
			<desc>show log buffer1 of ap1</desc>
			<log-file>show_log_buffer1_port_65001_ap1.log</log-file>
			<telnet target="ap1">
				-v "show log buffer"
			</telnet>
			<no-error-check />
			<log-match>-i "${ap1.mgt0.ip}->${ap2.mgt0.ip}" -i "65001->65000" </log-match>
			<log-match>-i "${ap1.mgt0.ip}->${ap3.mgt0.ip}" -i "65001->65000" -n </log-match>
		</step>

	</stage>

</testcase>
