<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check the basic function of clear roaming cache in hive </brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-config a ssid with 802.1x auth on AP1,AP2 and AP3
		-AP1 ,AP2 and AP3 belongs to the same Hive
		-AP1 and AP3 are roaming neighbor, but they canâ€™t sync roaming cache to AP3 for some reason.
		Test Procedure:
		1. STA connects to AP3,roaming cache was generated normally on AP3.<!--check roaming cache-->
		2. STA leaves AP3, and connects to AP1
		3. clear the roaming cache on AP1, check the roaming cache on AP3 and AP2,result1:clear auth roaming-cache mac STA hive-all
        4. STA leaves AP1 and connects AP3,result2

	</description>
	<numofap>3</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<stage>
		<step no="1.1">
			<desc>Set up AP1</desc>
			<log-file>setup_ap1.log</log-file>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan2}"
			</console>
		</step>
		<include prefix="1.2" file="subs/ap_renew_ip.xml" obj-args="ap1" />
		<step no="1.3">
			<desc>Set up AP1</desc>
			<log-file>setup_ap1.log</log-file>
			<ssh target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${ssid.name}"
				-v "user-profile datapath qos-policy def-user-qos vlan-id ${tb.vlan2} attribute 1"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa2-aes-8021x"
				-v "security-object autoap security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap default-user-profile-attr 1"
				-v "ssid ${ssid.name} security-object autoap"
				-v "security-object autoap security aaa radius-server dynamic-auth-extension"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "_de auth info"
				-v "_de auth basic"
				-v "save config"
			</ssh>
		</step>
		<step no="2.1">
			<desc>Set up AP2</desc>
			<log-file>setup_ap2.log</log-file>
			<console target="ap2">
				-v "interface mgt0 vlan ${tb.vlan2}"
			</console>
		</step>
		<include prefix="2.2" file="subs/ap_renew_ip.xml" obj-args="ap2" />
		<step no="2.3">
			<desc>Set up AP2</desc>
			<log-file>setup_ap2.log</log-file>
			<ssh target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${ssid.name}"
				-v "user-profile datapath qos-policy def-user-qos vlan-id ${tb.vlan2} attribute 1"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa2-aes-8021x"
				-v "security-object autoap security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap default-user-profile-attr 1"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "_de auth info"
				-v "_de auth basic"
				-v "save config"
			</ssh>
		</step>
		<step no="3">
			<desc>Set up AP3</desc>
			<log-file>setup_ap3.log</log-file>
			<console target="ap3">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan 1"
				-v "interface mgt0 native-vlan 1"
			</console>
		</step>
		<step no="3.1">
			<desc>Set up AP3</desc>
			<log-file>setup_ap3.log</log-file>
			<ssh target="ap3">
				-v "user-profile datapath qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite wpa2-aes-8021x"
				-v "security-object autoap security aaa radius-server primary ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "security-object autoap default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "_de auth info"
				-v "_de auth basic"
				-v "save config"
			</ssh>
		</step>
		<step no="4" delay="30">
			<desc>get AP1's mac,show interface of ap1</desc>
			<log-file>show_portal_interface.log</log-file>
			<console target="ap1">
				-v "show interface"
			</console>
		</step>

		<step no="4.1">
			<desc>get the eth0 mac address of ap1</desc>
			<setvar name="ap1.eth0.mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_portal_interface.log -k eth0 -p 2
			</setvar>
		</step>
		<step no="5" delay="30">
			<desc>get AP2's mac,show interface of ap1</desc>
			<log-file>show_portal_interface.log</log-file>
			<console target="ap2">
				-v "show interface"
			</console>
		</step>

		<step no="5.1">
			<desc>get the eth0 mac address of ap1</desc>
			<setvar name="ap2.eth0.mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_portal_interface.log -k eth0 -p 2
			</setvar>
		</step>
		<step no="6" delay="30">
			<desc>get AP2's mac,show interface of ap1</desc>
			<log-file>show_portal_interface.log</log-file>
			<telnet target="ap3">
				-v "show interface"
			</telnet>
		</step>

		<step no="6.1">
			<desc>get the eth0 mac address of ap1</desc>
			<setvar name="ap3.eth0.mac">
				perl ${bin.dir}/getstring.pl -f ${log.dir}/show_portal_interface.log -k eth0 -p 2
			</setvar>
		</step>
		<step no="GetAP1.IP.1" delay="15"><!--renew-ip.xml-->
			<desc>show mgt0's ip of ap1</desc>
			<log-file>ap1_mgt_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>
		<step no="GetAP1.IP.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap1_mgt_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
		<step no="GetAP2.IP.1" delay="15">
			<desc>show mgt0's ip of ap2</desc>
			<log-file>ap2_mgt_info.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>
		<step no="GetAP2.IP.2">
			<desc>Get ap2's ip</desc>
			<setvar name="ap2.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap2_mgt_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
			<step no="GetAP3.IP.1" delay="15">
			<desc>show mgt0's ip of ap3</desc>
			<log-file>ap3_mgt_info.log</log-file>
			<console target="ap3">
				-v "show interface mgt0"
			</console>
		</step>
		<step no="GetAP3.IP.2">
			<desc>Get ap3's ip</desc>
			<setvar name="ap3.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap3_mgt_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
		<step no="ex1">
			<desc>exclude ap3 in ap1</desc>
			<console target="ap1">
			   -v "roaming neighbor exclude ip ${ap3.mgt0.ip}"
			</console>
		</step>
		<step no="ex2">
			<desc>exclude ap3 in ap2</desc>
			<console target="ap2">
			   -v "roaming neighbor exclude ip ${ap3.mgt0.ip}"
			</console>
		</step>
		<step no="ex3">
			<desc>exclude ap1,ap2 in ap3</desc>
			<console target="ap3">
			   -v "roaming neighbor exclude ip ${ap1.mgt0.ip}"
			   -v "roaming neighbor exclude ip ${ap2.mgt0.ip}"
			</console>
		</step>
		<step no="7" delay="20" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>show roaming neibour in AP1</desc>
			<log-file>step7_show_roaming_neibour.log</log-file>
			<console target="ap1">
				-v "show roaming nei"
			</console>
			<log-match>-c -i "${ap2.eth0.mac}\s+D" -re</log-match>
			<log-match>-c -i "${ap3.eth0.mac}\s+E\s+D" -re</log-match>
		</step>
		<step no="8">
			<desc>show roaming neibour in AP2</desc>
			<log-file>step8_show_roaming_neibour.log</log-file>
			<console target="ap2">
				-v "show roaming nei"
			</console>
			<log-match>-c -i "${ap1.eth0.mac}\s+D" -re</log-match>
			<log-match>-c -i "${ap3.eth0.mac}\s+E\s+D" -re</log-match>
		</step>
		<step no="9">
			<desc>shutdown AP1's ssid</desc>
			<console target="ap1">
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</console>
		</step>
		<step no="10">
			<desc>shutdown AP2's ssid</desc>
			<console target="ap2">
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</console>
		</step>
		<step no="11">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=wpa2-aes-8021x"
				echo "conn1.pif=wifi0"
				echo "conn1.username=${pub.radius1.username}"
				echo "conn1.passwd=${pub.radius1.passwd}"
			</multi-setvar>
		</step>
		<include prefix="11.1" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap3" />
		<step no="11.2">
			<desc>sh roa cac in ap1</desc>
			<log-file>step11.2_show_roaming_cache.log</log-file>
			<console target="ap3">
				-v "show roaming cache"
			</console>
			<log-match>-c -i "${sta1.tif.mac}" -i "0\s+YNNN" -re</log-match>
		</step>
		<step no="12">
			<desc>no shutdown ssid in ap1</desc>
			<console target="ap1">
				-v "no int wifi0 ssid ${ssid.name} shutdown"
			</console>
		</step>
		<step no="13" delay="30">
			<desc>client disconnect ap3,and connect ap1</desc>
			<console target="ap3">
				-v "int wifi0 ssid ${ssid.name} shutdown"
			</console>
		</step>
		<include prefix="14" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />
		<step no="15">
			<desc>sh roa cac in ap1</desc>
			<log-file>step15_show_roaming_cache.log</log-file>
			<console target="ap1">
				-v "show roaming cache"
			</console>
			<log-match>-c -i "${sta1.tif.mac}" -i "0\s+YNNN" -re</log-match>
		</step>
		<step no="16">
			<desc>sh roa cac in ap2</desc>
			<log-file>step16_show_roaming_cache.log</log-file>
			<console target="ap2">
				-v "show roaming cache"
			</console>
			<log-match>-c -i "${sta1.tif.mac}" -i "1\s+YNNN" -re</log-match>
		</step>
		<step no="16.1">
			<desc>clear roa cac in ap3</desc>
			<console target="ap3">
				-v "clear auth roaming-cache"
			</console>
		</step>
		<step no="17">
			<desc>get mac from client with five dash</desc>
			<setvar name="sta1.tif.mac_5dash">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m -dash -uppercase
			</setvar>
		</step>
		
		<step no="18">
			<desc>show intface on wifi0</desc>
			<log-file>show_interface.log</log-file>
			<console target="ap1">
				-v "show interface wifi0.1"
			</console>
		</step>
		
		<step no="19">
			<desc>get mac from bssid of wifi0.1</desc>
			<setvar name="ssid.wifi0.bssid">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_interface.log -o aero -i wifi0.1 -m -dash -uppercase
			</setvar>
		</step>
		
		<step no="20">
			<desc>enable auth debug to check COA</desc>
			<console target="ap1">
				-v "_debug auth all"
				-v "clear log buffered"
			</console>
		</step>
		<step no="set_connect_count">
 			 <ssh target="sta1">
  			 -v "wpa_cli sta_autoconnect 0"
			 </ssh>
		</step>
		<step no="21">
			<desc>send CoA packet from radius</desc>
			<log-file>step21_coa.log</log-file>
			<ssh host="${pub.radius1.ip}" prompt=".*#" user="root" password="aerohive">
				-v 'echo -e "Calling-Station-Id=${sta1.tif.mac_5dash}\nCalled-Station-Id=${ssid.wifi0.bssid}:${ssid.name}\n" | radclient -x ${ap1.mgt0.ip}:3799 disconnect aerohive'
			</ssh>
			<log-match>-e "Admin-Reset"</log-match>
		</step>
		<step no="22">
			<desc>check roaming cache in ap1</desc>
			<log-file>step22_show_roaming_cache.log</log-file>
			<console target="ap1">
				-v "show roaming cache"
			</console>
			<log-match>-c -i "${sta1.tif.mac}" -i "NNYN" -re</log-match>
		</step>
		<step no="23">
			<desc>check roaming cache in ap2</desc>
			<log-file>step23_show_roaming_cache.log</log-file>
			<console target="ap2">
				-v "show roaming cache"
			</console>
			<log-match>-c -i "${sta1.tif.mac}" -i "NNYN" -re</log-match>
		</step>
		<step no="24">
			<desc>check roaming cache in ap3</desc>
			<log-file>step24_show_roaming_cache.log</log-file>
			<ssh target="ap3">
				-v "show roaming cache"
			</ssh>
			<log-match>-n -i "${sta1.tif.mac}" -i "NNNN" -re</log-match>
		</step>
		<step no="25">
			<desc>clear roaming cache in all hive</desc>
			<console target="ap1">
				-v "clear auth roaming-cache mac ${sta1.tif.mac} hive-all "
			</console>
		</step>
		<step no="26">
			<desc>check roaming cache in ap3</desc>
			<log-file>step26_show_roaming_cache.log</log-file>
			<ssh target="ap3">
				-v "show roaming cache"
			</ssh>
			<log-match>-c -i "${sta1.tif.mac}" -i "NNYN" -re</log-match>
		</step>
		<step no="27">
			<console target="ap3">
				-v "no int wifi0 ssid ${ssid.name} shutdown"
			</console>
		</step>
		<step no="28" delay="30">
			<desc>no shutdown ssid in ap1</desc>
			<console target="ap1">
				-v "int wifi0 ssid ${ssid.name} shutdown"
			</console>
		</step>
		<include prefix="29" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap3" />
		<step no="30">
			<desc>check roaming cache in ap3</desc>
			<log-file>step31_show_roaming_cache.log</log-file>
			<ssh target="ap3">
				-v "show roaming cache"
			</ssh>
			<log-match>-c -i "${sta1.tif.mac}" -i "YNNN" -re</log-match>
		</step>
	</stage>
</testcase>
