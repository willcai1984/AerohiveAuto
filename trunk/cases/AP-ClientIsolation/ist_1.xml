<testcase>
	<brief>Unicast from laptop1 to laptop2 on same ssid.</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>
	<description>
		Description:
		Unicast from laptop1 to laptop2 on same ssid
		Pre-condition:
		-laptop1 and laptop2 connect with ssid1 on AP, pass authentication
		-PC connect with switch
		-all laptops and PC are in same vlan
		-inter-station-traffic is disabled on ssid1.
		Test procedure:
		-disable IST on AP
		AH-000120#no ssid ssid1 inter-station-traffic
		-laptop1 sends unicast like ping etc, to laptop2. Result 1
		-laptop1 sends unicast like ping etc, to PC. Result 2
		Expect result:
		Result 1: this unicast be dropped based on dst-mac lookup.
		Result 2: bypassed this unicast based on dst-mac lookup
		Test result:
		Result1:
		2010-06-24 02:17:34 debug [fe]: (i) wifi0.1 001d:e02a:be91->ffff:ffff:ffff arp 192.168.11.123(001d:e02a:be91)->192.168.11.107(0000:0000:0000) 28 bytes
		2010-06-24 02:17:34 debug [fe]: MAC session (id [5]) found
		2010-06-24 02:17:34 debug [fe]: proxy-ARP, reinject ARP reply pak back to flow
		2010-06-24 02:17:34 debug [fe]: (r) wifi0.1 0014:a5b1:5fbb->001d:e02a:be91 arp
		192.168.11.107(0014:a5b1:5fbb)->192.168.11.123(001d:e02a:be91) 28
		bytes
		2010-06-24 02:17:34 debug [fe]: no MAC sess found
		2010-06-24 02:17:34 debug [fe]: dst route lookup 001d:e02a:be91: GET_ROUTE dev(wifi0.1) nhop(0019:7703:f5c0) mp (0019:7703:f5c0) flag (0x1c03) upid (2)
		2010-06-24 02:17:34 debug [fe]: dst route lookup 0014:a5b1:5fbb: GET_ROUTE dev(wifi0.1) nhop(0019:7703:f5c0) mp (0019:7703:f5c0) flag (0x1c03) upid (2)
		2010-06-24 02:17:34 debug [fe]: inter station traffic not allowed on wifi0.1, drop pkt
		2010-06-24 02:17:34 debug [fe]: (!) wifi0.1 0014:a5b1:5fbb->001d:e02a:be91 arp 192.168.11.107(0014:a5b1:5fbb)->192.168.11.123(001d:e02a :be91) 28 bytes
		Result2:
		AH-0e5300#2000-01-01 02:59:29 debug [fe,ah_kafe_pkt.c,295]: (i) wifi0.1 10.155.30.26->10.155.30.47(5925) ttl(128) icmp-echo-req 60 bytes
		2000-01-01 02:59:29 debug [fe,ah_mac_sess.c,2873]: MAC session (id [25]) found
		2000-01-01 02:59:29 debug [fe,ah_qos_main.c,199]: QoS: ingress pkt fwd(wifi0.1) profile=0 qos=2
		2000-01-01 02:59:29
		debug [fe,ah_kafe.h,436]: eth0 Tx 001d:e02a:be91 -> 0019:e002:2be0
		type 0x0800 74 bytes
		2000-01-01 02:59:29 debug [fe,ah_kafe_pkt.c,295]: (o) eth0 10.155.30.26->10.155.30.47(5925) ttl(128) icmp-echo-req 74 bytes
		2000-01-01 02:59:29 debug [fe,ah_qos_main.c,243]: QoS: pkt forwarded
		2000-01-01 02:59:29 debug [fe,ah_kafe_pkt.c,295]: (i) eth0 10.155.30.47->10.155.30.26(26081) ttl(128) icmp-echo-reply 60 bytes
		2000-01-01 02:59:29 debug [fe,ah_mac_sess.c,2873]: MAC session (id [25]) found
		2000-01-01 02:59:29 debug [fe,ah_qos_main.c,199]: QoS: ingress pkt fwd(eth0) profile=0 qos=2
		2000-01-01 02:59:29 debug [fe,ah_kafe.h,436]: wifi0.1 Tx 0019:e002:2be0 -> 001d:e02a:be91 type 0x0800 74 bytes
		2000-01-01 02:59:29 debug [fe,ah_kafe_pkt.c,295]: (o) wifi0.1 10.155.30.47->10.155.30.26(26081) ttl(128) icmp-echo-reply 74 bytes
		2000-01-01 02:59:29 debug [fe,ah_qos_main.c,238]: QoS: pkt queued
		2000-01-01 02:59:29 debug [fe,ah_qos_queue.c,697]: Tx:wifi0.1:0> 0019:e002:2be0->001d:e02a:be91 profile idx=0 pkt_len=74
		q_len=0 QoS buf=0
	</description>

	<stage>

		<step no="1">
			<desc>Set SSID for DUT1 via ssh to</desc>
			<ssh target="ap1">
				-v "ssid ${ssid.name}"
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} security protocol-suite open"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
				-v "user-profile fw qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "save config"
			</ssh>
		</step>

		<step no="2.1.1">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>
		<include prefix="2.1.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />


		<step no="2.2.1">
			<multi-setvar>
				echo "conn2.ssid=${ssid.name}"
				echo "conn2.proto=open"
				echo "conn2.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>
		<include prefix="2.2.2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta2, ap1" />

		<include prefix="3" file="subs/sta_ping.xml" args="sta1,${sta2.tif.ip}, 4" />

		<step no="4.1">
			<desc>Set SSID for DUT1 via ssh to</desc>
			<ssh target="ap1">
				-v "no ssid ${ssid.name} inter-station-traffic"
				-v "clear forwarding-engine mac-sessions"
				-v "clear log buffered"
			</ssh>
		</step>

		<step no="4.2">
			<desc>Set the ff and clear log all on AP</desc>
			<ssh target="ap1">
				-v "_ff id 1 src-mac ${sta1.tif.mac} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log all"
				-v "save config"
			</ssh>
			<no-error-check />
		</step>

		<include prefix="5" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 4,negative" />

		<step no="6">
			<desc>check_log_buffered</desc>
			<log-file>logbuffer.log</log-file>
			<ssh target="ap1">
				-v "show logging buffered | in \"inter station traffic\""
			</ssh>
			<log-match>-i "inter station traffic not allowed on ${ssid_bind_interface}.1" -e "drop pkt" -c</log-match>
		</step>
	</stage>
</testcase>