<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Default auth type is open</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>1</numofap>
	<tbtype>linux</tbtype>

	<description>
		Topology to use
		Description
		Default auth type is open
		Pre-condition
		Test procedure
		-create a new ssid,check the auth method,bind it to wifi0
		-client connects to it
		-client ping the gateway for 10 min
		Expect result
		1.'sh ssid xxx', 'sh ssid xxx se pro' to check the auth mode
		2.check the debug info, _kde wifi-driver wifix.y assoc [auth],_de auth all
		3.'sh roa ca',the roaming cache adding is correct,_de auth info to check
		4.Check the client state by 'sh ssid xxx st', all parameters should be checked
		5.Client can connect to the ssid successfully
		6.Client can get the ip by dhcp,default vlan 1 is assigned
		7.Client ping gateway,traffic should not broken
	</description>

	<property name="conn.proto" value="open" />

	<stage>
		<step no="config_ap">
			<desc>config AP1</desc>
			<telnet target="ap1">
				-v "clear log buff"
				-v "security-object autoap"
				-v "security-object autoap security protocol-suite ${conn.proto}"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface ${ssid_bind_interface} mode access"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
				-v "save config"
			</telnet>
		</step>
		
		<step no="show_ssid" delay="20">
			<desc>show ssid on AP1</desc>
			<telnet target="ap1">
				-v "show ssid ${ssid.name}"
			</telnet>
			<log-match>-e "autoap"</log-match>
		</step>
		<step no="check_proto">
			<desc>check protocol-suite</desc>
			<telnet target="ap1">
				-v "show security- autoap security protocol-suite"
			</telnet>
			<log-match>-e "Method=${conn.proto}"</log-match>
		</step>
		
		<step no="connect_wifi">
			<log-file>connect_wifi.log</log-file>
			<ssh target="sta1" timeout="3600">
				-v "/usr/local/auto/bin/connect_wifi.pl
				'{
				\"target\"      : \"sta1\",
				\"ifname\"      : \"${sta1.tif.name}\",
				\"bind\"        : \"${ssid_bind_interface}\",
				\"ssid\"        : \"${ssid.name}\",
				\"proto\"       : \"${conn.proto}\"
				}'"
			</ssh>
			<log-match>-e "&gt;&gt;&gt;&gt; Pass &lt;&lt;&lt;&lt;"</log-match>
		</step>
		<step no="get_sta_ip_mac">
			<desc>parse station IP and MAC from connect wifi log file</desc>
			<multi-setvar>
				grep "^&lt;&lt;&lt;&lt;" ${log.dir}/connect_wifi.log | \
				sed -e 's/^&lt;&lt;&lt;&lt;//g'
			</multi-setvar>
		</step>
		
		<step no="check_ping_to_sta">
			<desc>ping from AP to station</desc>
			<telnet target="ap1">
				-v "ping ${sta1.tif.ip} count 10"
			</telnet>
			<log-match>-c -i " from " -i " ttl="</log-match>
		</step>
		
		<step no="check_auth_info">
			<desc>check auth info</desc>
			<telnet target="ap1">
				-v "show auth"
			</telnet>
			<log-match>-i "${sta1.tif.mac}" -p 7 -i "open" -c</log-match>
		</step>
		<step no="check_conn_info">
			<desc>check station connection info</desc>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-i "${sta1.tif.mac}" -p 11 -i "Yes" -c</log-match>
			<log-match>-i "${sta1.tif.mac}" -p 7 -i "${conn.proto}" -c</log-match>
			<log-match>-i "${sta1.tif.mac}" -p 8 -i "none" -c</log-match>
			<log-match>-i "${sta1.tif.mac}" -p 2 -i "${sta1.tif.ip}" -c</log-match>
		</step>
		<step no="check_roaming_check_info">
			<desc>check check roaming cache info</desc>
			<telnet target="ap1">
				-v "show roaming cache"
			</telnet>
			<log-match>-i "${sta1.tif.mac}" -p 12 -i "YNNN" -c</log-match>
		</step>
	</stage>
</testcase>
