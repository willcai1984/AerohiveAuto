<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>(IxPort: CoF=3) LLDP packets cannot transmit through the switch.</brief>
	<priority>Middle</priority>
	<automated>yes</automated>
	<description>
		Test Produce:
		We can see the lldp packets from H3C and aerohive
		can be captured by interface ethX
		processed by AP and not sent out again

	</description>

	<numofsw>1</numofsw>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<!-- self defined steps -->
		</stage>
		<include file="include/sw_default_pre_process.xml" />
	</pre-process>


	<property name="tx_port1" value="${sw1.port1.ixia_port}" />
	<property name="tx_port1.phytype" value="${sw1.port1.ixia_port.phytype}" />
	<property name="tx_port2" value="${sw1.port2.ixia_port}" />
	<property name="tx_port2.phytype" value="${sw1.port2.ixia_port.phytype}" />
	<property name="tx_port3" value="${sw1.port3.ixia_port}" />
	<property name="tx_port3.phytype" value="${sw1.port3.ixia_port.phytype}" />
	<property name="correct_vlan" value="101" />

	<stage>

		<!--enable -->
		<step no="1.1">
			<desc>
				Enable LLDP on swith
			</desc>
			<telnet target="sw1">
				-v "lldp enable"
				-v "show running-config"
				-v "show lldp"
			</telnet>
			<no-error-check />
		</step>

		<step no="1.2">
			<desc>Check LLDP is enable </desc>
			<telnet target="sw1">
				-v "show lldp"
			</telnet>
			<no-error-check />
			<log-match>-e "Enabled: yes"</log-match>
		</step>


		<step no="1.3">
			<desc>
				Enable lldp packet log debug
			</desc>
			<log-file>step1.3_lldp_packet.log</log-file>
			<telnet target="sw1">
				-v "clear log buffered"
				-v "_debug dcd lldp_adjacency"
				-v ""
			</telnet>
		</step>

		<!---capture -->
		<step no="2.1">
			<desc>
				Connect to Ixia, Ixia port3 capture packets
			</desc>
			<log-file>step_ixia_capture_packets2.1.log</log-file>
			<!-- here is new -->
			<ssh host="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-new="${job.user}-${job.sid}-1">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v ""
				-v "ah_ixia_connect -def disable -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${tx_port2},${tx_port3} -phyList ${tx_port1.phytype},${tx_port2.phytype},${tx_port3.phytype}"
				-v ""

				<!-- port3 start capture -->
				-v "start_capture -portList ${tx_port3}"
				-v ""

			</ssh>
		</step>


		<!-- <step no="3.1"> <desc>check the mroute table added the entry</desc> <telnet target="sw1"> -v "sh ip igmp snooping mrouters" </telnet> <log-match>-e "${tb.vlan1}\s*${sw1.port1}\s*v2"</log-match> </step> -->


		<!--send -->
		<step no="2.2">
			<desc>
				port1 sends LLDP packet of H3C
			</desc>
			<log-file>2.2.log</log-file>
			<!-- here is get -->
			<ssh host="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-get="${job.user}-${job.sid}-1">
				<!-- port1 -->
				-v ""
				-v "stream_import -onePort ${tx_port1} -fileName ${case.dir}/conf/lldp-h3c.str"
				-v "stream_maintance -onePort ${tx_port1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${tx_port1} -streamId 1 -maintanceOp enable"
				-v ""
				-v ""
				<!-- port1 start transmit -->
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v "start_transmit -portList ${tx_port1} -firstTryFlag false"
				-v ""
				-v "wait_time -second 1"
				-v ""
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v ""
			</ssh>
		</step>

		<step no="2.3">
			<desc>
				port2 sends LLDP packet of Aerohive
			</desc>
			<log-file>2.3.log</log-file>
			<ssh host="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-get="${job.user}-${job.sid}-1">
				<!-- port2 -->
				-v ""
				-v "stream_import -onePort ${tx_port2} -fileName ${case.dir}/conf/lldp-aerohive.str"
				-v "stream_maintance -onePort ${tx_port2} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${tx_port2} -streamId 1 -maintanceOp enable"
				-v ""
				-v ""
				<!-- port2 start transmit -->
				-v "stop_transmit -portList ${tx_port2}"
				-v ""
				-v "start_transmit -portList ${tx_port2} -firstTryFlag false"
				-v ""
				-v "wait_time -second 1"
				-v ""
				-v "stop_transmit -portList ${tx_port2}"
				-v ""
				-v ""
			</ssh>
		</step>

		<!--check -->
		<step no="2.3a">
			<desc>
				Show lldp neighbor to confirm lldp neighbor establishment.
			</desc>
			<log-file>2.3a.log</log-file>
			<telnet target="sw1">
				-v "show lldp neighbor"
			</telnet>
			<log-match>-i 'Incoming Port:' -i '${sw1.port1}'</log-match>
			<log-match>-i 'Incoming Port:' -i '${sw1.port2}'</log-match>
		</step>


		<step no="2.4">
			<desc>
				Connect to Ixia, Ixia port3 stop capturing packets
			</desc>
			<log-file>2.4.log</log-file>
			<ssh host="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-get="${job.user}-${job.sid}-1">
				-v ""
				-v "wait_time -second 30"
				-v ""
				<!-- stop port3 capture -->
				-v "stop_capture -portList ${tx_port3}"
				-v ""
				<!-- save port1 capture -->
				-v "save_capture -onePort ${tx_port3} -fileName ${job.id}_packet.enc"
				-v "ctrl-c"

			</ssh>
		</step>

		<step no="2.5">
			<desc>Tftp the capture file to MPC</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180">
				-v "tftp -4 ${mpc.mif.ip} -c put ${job.id}_packet.enc"
				-v "rm -f ${job.id}_packet.enc"
			</ssh>
		</step>
		<step no="2.6">
			<desc>Move the capture file to log dir</desc>
			<script>
				mv /tftpboot/${job.id}_packet.enc ${log.dir}
			</script>
		</step>

		<step no="2.7">
			<desc>Check the captured packet </desc>
			<!-- 1 fail;0 pass -->
			<script>
				if [ "`tshark -r ${log.dir}/${job.id}_packet.enc 2>/dev/null \
				-R '(lldp.chassis.id.mac == 08:ea:44:87:24:80) || (lldp.chassis.id.mac == 0c:da:41:37:11:01)' | wc -l`" -gt "0" ]
				then
				exit 1
				elif [ "`tshark -r ${log.dir}/${job.id}_packet.enc 2>/dev/null \
				| grep -E "Chassis Id = 08:ea:44:87:24:80 Port Id = eth1/7|Chassis Id = 0c:da:41:37:11:01 Port Id = Ethernet1/0/14" -c`" -gt "0" ]
				then
				exit 1
				fi
			</script>
		</step>

		<step no="2.8">
			<desc>Show log buf</desc>
			<log-file>check_2.log</log-file>
			<telnet target="sw1">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="2.9">
			<desc>Close Ixia session</desc>
			<ssh timeout="180" host="${pub.tclclient1.ip}" prompt="%.*|root@.*#" session-close="${job.user}-${job.sid}-1">
				-v ""
			</ssh>
		</step>
		<!--disable -->

		<step no="3.1">
			<desc>
				Disable LLDP on swith
			</desc>
			<telnet target="sw1">
				-v "no lldp enable"
				-v "show running-config"
				-v "show lldp"
			</telnet>
			<no-error-check />
		</step>

		<step no="3.2">
			<desc>Check LLDP is enable </desc>
			<telnet target="sw1">
				-v "show lldp"
			</telnet>
			<no-error-check />
			<log-match>-e "Enabled: no"</log-match>
		</step>


		<step no="3.3">
			<desc>
				Enable lldp packet log debug
			</desc>
			<log-file>step1.3_lldp_packet.log</log-file>
			<telnet target="sw1">
				-v "clear log buffered"
				-v "_debug dcd lldp_adjacency"
				-v ""
			</telnet>
		</step>

		<!---capture -->
		<step no="4.1">
			<desc>
				Connect to Ixia, Ixia port3 capture packets
			</desc>
			<log-file>step_ixia_capture_packets2.1.log</log-file>
			<ssh host="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-new="${job.user}-${job.sid}-1">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v ""
				-v "ah_ixia_connect -def disable -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${tx_port2},${tx_port3} -phyList ${tx_port1.phytype},${tx_port2.phytype},${tx_port3.phytype}"
				-v ""

				<!-- port3 start capture -->
				-v "start_capture -portList ${tx_port3}"
				-v ""

			</ssh>
		</step>


		<!-- <step no="3.1"> <desc>check the mroute table added the entry</desc> <telnet target="sw1"> -v "sh ip igmp snooping mrouters" </telnet> <log-match>-e "${tb.vlan1}\s*${sw1.port1}\s*v2"</log-match> </step> -->


		<!--send -->
		<step no="4.2">
			<desc>
				port1 sends LLDP packet of H3C
			</desc>
			<log-file>4.2.log</log-file>
			<ssh host="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-get="${job.user}-${job.sid}-1">
				<!-- port1 -->
				-v ""
				-v "stream_import -onePort ${tx_port1} -fileName ${case.dir}/conf/lldp-h3c.str"
				-v "stream_maintance -onePort ${tx_port1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${tx_port1} -streamId 1 -maintanceOp enable"
				-v ""
				-v ""
				<!-- port1 start transmit -->
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v "start_transmit -portList ${tx_port1} -firstTryFlag false"
				-v ""
				-v "wait_time -second 1"
				-v ""
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v ""
			</ssh>
		</step>

		<step no="4.3">
			<desc>
				port2 sends LLDP packet of Aerohive
			</desc>
			<log-file>2.3.log</log-file>
			<ssh host="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-get="${job.user}-${job.sid}-1">
				<!-- port2 -->
				-v ""
				-v "stream_import -onePort ${tx_port2} -fileName ${case.dir}/conf/lldp-aerohive.str"
				-v "stream_maintance -onePort ${tx_port2} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${tx_port2} -streamId 1 -maintanceOp enable"
				-v ""
				-v ""
				<!-- port2 start transmit -->
				-v "stop_transmit -portList ${tx_port2}"
				-v ""
				-v "start_transmit -portList ${tx_port2} -firstTryFlag false"
				-v ""
				-v "wait_time -second 1"
				-v ""
				-v "stop_transmit -portList ${tx_port2}"
				-v ""
				-v ""
			</ssh>
		</step>

		<step no="4.4">
			<desc>
				Connect to Ixia, Ixia port3 stop capturing packets
			</desc>
			<log-file>step_ixia_capture_packets2.1.log</log-file>
			<ssh host="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200" session-get="${job.user}-${job.sid}-1">

				-v ""
				-v "wait_time -second 30"
				-v ""
				<!-- stop port3 capture -->
				-v "stop_capture -portList ${tx_port3}"
				-v ""
				<!-- save port1 capture -->
				-v "save_capture -onePort ${tx_port3} -fileName ${job.id}_packet.enc"

				-v "ctrl-c"

			</ssh>
		</step>

		<step no="4.5">
			<desc>Tftp the capture file to MPC</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="180">
				-v "tftp -4 ${mpc.mif.ip} -c put ${job.id}_packet.enc"
				-v "rm -f ${job.id}_packet.enc"
			</ssh>
		</step>
		<step no="4.6">
			<desc>Move the capture file to log dir</desc>
			<script>
				mv /tftpboot/${job.id}_packet.enc ${log.dir}
			</script>
		</step>

		<step no="4.7">
			<desc>Check the captured packet </desc>
			<!-- 1 fail;0 pass -->
			<script>
				if [ "`tshark -r ${log.dir}/${job.id}_packet.enc 2>/dev/null \
				-R '(lldp.chassis.id.mac == 08:ea:44:87:24:80) || (lldp.chassis.id.mac == 0c:da:41:37:11:01)' | wc -l`" -gt "0" ]
				then
				exit 1
				elif [ "`tshark -r ${log.dir}/${job.id}_packet.enc 2>/dev/null \
				| grep -E "Chassis Id = 08:ea:44:87:24:80 Port Id = eth1/7|Chassis Id = 0c:da:41:37:11:01 Port Id = Ethernet1/0/14" -c`" -gt "0" ]
				then
				exit 1
				fi
			</script>
		</step>

		<step no="4.8">
			<desc>Show log buf</desc>
			<log-file>check_2.log</log-file>
			<telnet target="sw1">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
			<no-error-check />
		</step>

	</stage>

	<post-process>
		<stage>
			<!--//////////////////////Ixia session-close////////////////////////// -->
			<step no="1">
				<ssh timeout="180" host="${pub.tclclient1.ip}" prompt="%.*|root@.*#" session-close="${job.user}-${job.sid}-1">
					-v ""
				</ssh>
			</step>
			<!-- self defined steps, no need script now -->
		</stage>
		<include file="include/sw_default_post_process.xml" />
	</post-process>
</testcase>
