<?xml version="1.0" encoding="UTF-8"?>
<testcase>

	<brief>(IxPort: CoF=3) LLDP hold time test.</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		Test Produce:
		Open LLDP debug switch and capture the LLDP packets on AP
		LLDP hold time can be modified correctly

	</description>

	<numofsw>1</numofsw>

	<tbtype>winlin</tbtype>

	<pre-process>

		<stage>
			<!-- self defined steps -->
		</stage>
		<include file="include/sw_default_pre_process.xml" />

	</pre-process>

	<!--parameter set -->
	<property name="tx_port1" value="${sw1.port1.ixia_port}" />
	<property name="tx_port1.phytype" value="${sw1.port1.ixia_port.phytype}" />
	<property name="tx_port2" value="${sw1.port2.ixia_port}" />
	<property name="tx_port2.phytype" value="${sw1.port2.ixia_port.phytype}" />
	<property name="tx_port3" value="${sw1.port3.ixia_port}" />
	<property name="tx_port3.phytype" value="${sw1.port3.ixia_port.phytype}" />
	<property name="correct_vlan" value="101" />

	<property name="min_time" value="0" />
	<property name="mid_time" value="120" />
	<property name="max_time" value="65535" />

	<!--Stage start -->
	<stage>
		<step no="1.1">
			<desc>
				Enable LLDP on swith
			</desc>
			<telnet target="sw1">
				-v "lldp enable"
				-v "lldp timer 5"
				-v "show running-config"
				-v "show lldp"
			</telnet>
			<no-error-check />
		</step>

		<step no="1.2">
			<desc>Check LLDP is enable </desc>
			<telnet target="sw1">
				-v "show lldp"
			</telnet>
			<no-error-check />
			<log-match>-e "Enabled: yes"</log-match>
		</step>



		<step no="1.3">
			<desc>
				Set lldp holdtime to be min on swith
			</desc>
			<telnet target="sw1">
				-v ""
				-v "lldp holdtime ${min_time}"
				-v "show running-config"
				-v "show lldp"
			</telnet>
			<no-error-check />
		</step>

		<step no="1.4">
			<desc>Check LLDP holdtime is min </desc>
			<telnet target="sw1">
				-v "show lldp"
			</telnet>
			<no-error-check />
			<log-match>-e "Sending a holdtime value (seconds): ${min_time}"</log-match>
		</step>


		<step no="1.5">
			<desc>
				Enable lldp packet log
			</desc>
			<log-file>step1.5_lldp_packet.log</log-file>
			<telnet target="sw1">
				-v "clear log buffered"
				-v "_debug dcd lldp_adjacency"
				-v "_debug dcd lldp_error"
				-v "_debug dcd lldp_packet"
				-v "debug consol"
			</telnet>
		</step>


		<step no="2.1">
			<desc>
				Connect to ixia, capture packets
			</desc>
			<log-file>step2.1_ixia_capture_packets.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|.*root@.*#" timeout="900">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -def disable -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${tx_port2},${tx_port3} -phyList ${tx_port1.phytype},${tx_port2.phytype},${tx_port3.phytype}"
				-v ""
				-v ""
				<!-- start transmit -->

				<!-- stop transmit -->


				<!-- port1 start capture -->
				-v "start_capture -portList ${tx_port1}"
				-v ""
				-v "wait_time -second 30"
				-v ""
				<!-- stop port1 capture -->
				-v "stop_capture -portList ${tx_port1}"
				-v ""
				<!-- save port1 capture -->
				-v "save_capture -onePort ${tx_port1} -fileName ${job.id}_packet2.1.enc"
			</ssh>
			<no-error-check />
		</step>
		<!--Tftp Ixia captured packet -->
		<step no="2.2">
			<desc>Tftp the capture file to MPC</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|.*root@.*#" timeout="900">
				-v "tftp -4 ${mpc.mif.ip} -c put ${job.id}_packet2.1.enc"
				-v "rm -f ${job.id}_packet2.1.enc"
			</ssh>
		</step>
		<step no="2.3">
			<desc>Move the capture file to log dir</desc>
			<script>
				mv /tftpboot/${job.id}_packet2.1.enc ${log.dir}
			</script>
		</step>
		<step no="2.4">
			<desc>Check the captured packet </desc>
			<!-- 1 fail;0 pass -->
			<script>
				if [ "`tshark -r ${log.dir}/${job.id}_packet2.1.enc 2>/dev/null \
				-R 'lldp.time_to_live == ${min_time}' | wc -l`" -lt "5" ]
				then
				exit 1
				elif [ "`tshark -r ${log.dir}/${job.id}_packet2.1.enc 2>/dev/null \
				| grep "LLDP_Multicast" -c`" -lt "5" ]
				then
				exit 1
				fi
			</script>
		</step>


		<!--show log -->
		<step no="3">
			<desc>Check LLDP packet send log</desc>
			<log-file>check_3.log</log-file>
			<telnet target="sw1">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
			<no-error-check />
		</step>



		<step no="4.1">
			<desc>
				Set lldp holdtime to be max on swith
			</desc>
			<telnet target="sw1">
				-v ""
				-v "lldp holdtime ${max_time}"
				-v "show running-config"
				-v "show lldp"
			</telnet>
			<no-error-check />
		</step>

		<step no="4.2">
			<desc>Check LLDP holdtime is max </desc>
			<telnet target="sw1">
				-v "show lldp"
			</telnet>
			<no-error-check />
			<log-match>-e "Sending a holdtime value (seconds): ${max_time}"</log-match>
		</step>


		<step no="4.3">
			<desc>
				Enable lldp packet log
			</desc>
			<log-file>step4.3_lldp_packet.log</log-file>
			<telnet target="sw1">
				-v "clear log buffered"
				-v "_debug dcd lldp_adjacency"
				-v "_debug dcd lldp_error"
				-v "_debug dcd lldp_packet"
				-v "debug consol"
			</telnet>
		</step>

		<step no="5.1">
			<desc>
				Connect to ixia, capture packets
			</desc>
			<log-file>step5.1_ixia_capture_packets.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|.*root@.*#" timeout="900">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -def disable -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${tx_port2},${tx_port3} -phyList ${tx_port1.phytype},${tx_port2.phytype},${tx_port3.phytype}"
				-v ""
				-v ""
				<!-- start transmit -->

				<!-- stop transmit -->


				<!-- port1 start capture -->
				-v "start_capture -portList ${tx_port1}"
				-v ""
				-v "wait_time -second 30"
				-v ""
				<!-- stop port1 capture -->
				-v "stop_capture -portList ${tx_port1}"
				-v ""
				<!-- save port1 capture -->
				-v "save_capture -onePort ${tx_port1} -fileName ${job.id}_packet5.1.enc"
			</ssh>
			<no-error-check />
		</step>
		<!--Tftp Ixia captured packet -->
		<step no="5.2">
			<desc>Tftp the capture file to MPC</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|.*root@.*#" timeout="900">
				-v "tftp -4 ${mpc.mif.ip} -c put ${job.id}_packet5.1.enc"
				-v "rm -f ${job.id}_packet5.1.enc"
			</ssh>
		</step>
		<!--Move Ixia captured packet -->
		<step no="5.3">
			<desc>Move the capture file to log dir</desc>
			<script>
				mv /tftpboot/${job.id}_packet5.1.enc ${log.dir}
			</script>
		</step>
		<!--Analyse Ixia captured packet -->
		<step no="5.4">
			<desc>Check the captured packet </desc>
			<!-- 1 fail;0 pass -->
			<script>
				if [ "`tshark -r ${log.dir}/${job.id}_packet5.1.enc 2>/dev/null \
				-R 'lldp.time_to_live == ${max_time}' | wc -l`" -lt "5" ]
				then
				exit 1
				elif [ "`tshark -r ${log.dir}/${job.id}_packet5.1.enc 2>/dev/null \
				| grep "LLDP_Multicast" -c`" -lt "5" ]
				then
				exit 1
				fi
			</script>
		</step>


		<step no="6">
			<desc>Check LLDP packet send log</desc>
			<log-file>check_6.log</log-file>
			<telnet target="sw1">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
			<no-error-check />
		</step>



		<step no="7.1">
			<desc>
				Set lldp holdtime to be mid on swith
			</desc>
			<telnet target="sw1">
				-v ""
				-v "lldp holdtime ${mid_time}"
				-v "show running-config"
				-v "show lldp"
			</telnet>
			<no-error-check />
		</step>

		<step no="7.2">
			<desc>Check LLDP holdtime is mid </desc>
			<telnet target="sw1">
				-v "show lldp"
			</telnet>
			<no-error-check />
			<log-match>-e "Sending a holdtime value (seconds): ${mid_time}"</log-match>
		</step>


		<step no="7.3">
			<desc>
				Enable lldp packet log
			</desc>
			<log-file>step7.3_lldp_packet.log</log-file>
			<telnet target="sw1">
				-v "clear log buffered"
				-v "_debug dcd lldp_adjacency"
				-v "_debug dcd lldp_error"
				-v "_debug dcd lldp_packet"
				-v "debug consol"
			</telnet>
		</step>


		<step no="8.1">
			<desc>
				Connect to ixia, capture packets
			</desc>
			<log-file>step8.1_ixia_capture_packets.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|.*root@.*#" timeout="900">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -def disable -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${tx_port2},${tx_port3} -phyList ${tx_port1.phytype},${tx_port2.phytype},${tx_port3.phytype}"
				-v ""
				-v ""
				<!-- start transmit -->

				<!-- stop transmit -->


				<!-- port1 start capture -->
				-v "start_capture -portList ${tx_port1}"
				-v ""
				-v "wait_time -second 30"
				-v ""
				<!-- stop port1 capture -->
				-v "stop_capture -portList ${tx_port1}"
				-v ""
				<!-- save port1 capture -->
				-v "save_capture -onePort ${tx_port1} -fileName ${job.id}_packet8.1.enc"
			</ssh>
			<no-error-check />
		</step>
		<step no="8.2">
			<desc>Tftp the capture file to MPC</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|.*root@.*#" timeout="900">
				-v "tftp -4 ${mpc.mif.ip} -c put ${job.id}_packet8.1.enc"
				-v "rm -f ${job.id}_packet8.1.enc"
			</ssh>
		</step>
		<!--Move Ixia captured packet -->
		<step no="8.3">
			<desc>Move the capture file to log dir</desc>
			<script>
				mv /tftpboot/${job.id}_packet8.1.enc ${log.dir}
			</script>
		</step>
		<step no="8.4">
			<desc>Check the captured packet </desc>
			<!-- 1 fail;0 pass -->
			<script>
				if [ "`tshark -r ${log.dir}/${job.id}_packet8.1.enc 2>/dev/null \
				-R 'lldp.time_to_live == ${mid_time}' | wc -l`" -lt "5" ]
				then
				exit 1
				elif [ "`tshark -r ${log.dir}/${job.id}_packet8.1.enc 2>/dev/null \
				| grep "LLDP_Multicast" -c`" -lt "5" ]
				then
				exit 1
				fi
			</script>
		</step>


		<step no="9">
			<desc>Check LLDP packet send log</desc>
			<log-file>check_9.log</log-file>
			<telnet target="sw1">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
			<no-error-check />
		</step>



		<step no="10.1">
			<desc>
				Set lldp holdtime to be mid on swith
			</desc>
			<telnet target="sw1">
				-v ""
				-v "no lldp holdtime "
				-v "show running-config"
				-v "show lldp"
			</telnet>
			<no-error-check />
		</step>


		<step no="10.2">
			<desc>
				Check LLDP holdtime is def
			</desc>
			<log-file>step10.2.log</log-file>
			<telnet target="sw1">
				-v "show lldp"
			</telnet>
			<no-error-check />
			<log-match>-e "Sending a holdtime value (seconds):"</log-match>
		</step>
		<step no="10.3">
			<desc>Get def lldp holdtime value </desc>
			<setvar name="x">
				<!-- Sending a holdtime value (seconds): 90 -->
				echo $(${bin.dir}/getbyrexp.py -f ${log.dir}/step10.2.log -p 'Sending a holdtime value \(seconds\): (\d+)' -t str)
			</setvar>
		</step>

		<step no="10.4">
			<desc>
				Enable lldp packet log
			</desc>
			<log-file>step10.4_lldp_packet.log</log-file>
			<telnet target="sw1">
				-v "clear log buffered"
				-v "_debug dcd lldp_adjacency"
				-v "_debug dcd lldp_error"
				-v "_debug dcd lldp_packet"
				-v "debug consol"
			</telnet>
		</step>


		<step no="11.1">
			<desc>
				Connect to ixia, capture packets
			</desc>
			<log-file>step8.1_ixia_capture_packets.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|.*root@.*#" timeout="900">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -def disable -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${tx_port2},${tx_port3} -phyList ${tx_port1.phytype},${tx_port2.phytype},${tx_port3.phytype}"
				-v ""
				-v ""
				<!-- start transmit -->

				<!-- stop transmit -->


				<!-- port1 start capture -->
				-v "start_capture -portList ${tx_port1}"
				-v ""
				-v "wait_time -second 30"
				-v ""
				<!-- stop port1 capture -->
				-v "stop_capture -portList ${tx_port1}"
				-v ""
				<!-- save port1 capture -->
				-v "save_capture -onePort ${tx_port1} -fileName ${job.id}_packet11.1.enc"
			</ssh>
			<no-error-check />
		</step>
		<!--Tftp Ixia captured packet -->
		<step no="11.2">
			<desc>Tftp the capture file to MPC</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|.*root@.*#" timeout="900">
				-v "tftp -4 ${mpc.mif.ip} -c put ${job.id}_packet11.1.enc"
				-v "rm -f ${job.id}_packet11.1.enc"
			</ssh>
		</step>
		<!--Move Ixia captured packet -->
		<step no="11.3">
			<desc>Move the capture file to log dir</desc>
			<script>
				mv /tftpboot/${job.id}_packet11.1.enc ${log.dir}
			</script>
		</step>
		<!--Analyse Ixia captured packet -->
		<step no="11.4">
			<desc>Check the captured packet </desc>
			<!-- 1 fail;0 pass -->
			<script>
				if [ "`tshark -r ${log.dir}/${job.id}_packet11.1.enc 2>/dev/null \
				-R 'lldp.time_to_live == ${x}' | wc -l`" -lt "5" ]
				then
				exit 1
				elif [ "`tshark -r ${log.dir}/${job.id}_packet11.1.enc 2>/dev/null \
				| grep "LLDP_Multicast" -c`" -lt "5" ]
				then
				exit 1
				fi
			</script>
		</step>


		<!--show log -->
		<step no="12">
			<desc>Check LLDP packet send log</desc>
			<log-file>check_9.log</log-file>
			<telnet target="sw1">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
			<no-error-check />
		</step>


		<!--Stage end -->
	</stage>

	<post-process>
		<stage>
			<!-- self defined steps, no need script now -->
		</stage>
		<include file="include/sw_default_post_process.xml" />
	</post-process>
</testcase>
