<?xml version="1.0" encoding="UTF-8"?>
<testcase>

	<brief>(IxPort: CoF=3) LLDP receive-only test.</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<description>
		Test Produce:
		1. Show lldp neighbors’ status on AP1
		2. Show lldp neighbors’ status on H3C
		3.Modify LLDP to receive-only on AP2
		“lldp receive-only”
		4. After hold time(90s),Show lldp neighbors’ status on AP1
		5. Show lldp neighbors’ status on H3C
		6.Recover
		“no lldp receive-only”
		7.Show lldp neighbors’ status on AP1
		8. Show lldp neighbors’ status on H3C

	</description>

	<numofsw>1</numofsw>

	<tbtype>winlin</tbtype>

	<pre-process>

		<stage>
			<!-- self defined steps -->
		</stage>
		<include file="include/sw_default_pre_process.xml" />

	</pre-process>


	<property name="tx_port1" value="${sw1.port1.ixia_port}" />
	<property name="tx_port1.phytype" value="${sw1.port1.ixia_port.phytype}" />
	<property name="tx_port2" value="${sw1.port2.ixia_port}" />
	<property name="tx_port2.phytype" value="${sw1.port2.ixia_port.phytype}" />
	<property name="tx_port3" value="${sw1.port3.ixia_port}" />
	<property name="tx_port3.phytype" value="${sw1.port3.ixia_port.phytype}" />
	<property name="correct_vlan" value="101" />

	<stage>
		<step no="1.1">
			<desc>
				Enable LLDP on swith
			</desc>
			<telnet target="sw1">
				-v "lldp enable"
				-v "lldp timer 5"
				-v "show running-config"
				-v "show lldp"
			</telnet>
			<no-error-check />
		</step>

		<step no="1.2">
			<desc>Check LLDP is enable </desc>
			<telnet target="sw1">
				-v "show lldp"
			</telnet>
			<no-error-check />
			<log-match>-e "Enabled: yes"</log-match>
		</step>

		<!--lldp debug -->
		<step no="1.3">
			<desc>
				Enable lldp packet log
			</desc>
			<log-file>step1.3_lldp_packet.log</log-file>
			<telnet target="sw1">
				-v "clear log buffered"
				-v "_debug dcd lldp_adjacency"
				-v "_debug dcd lldp_error"
				-v "_debug dcd lldp_packet"
			</telnet>
		</step>

		<!--Ixia capture packet -->
		<step no="2.1">
			<desc>
				Connect to ixia, capture packets
			</desc>
			<log-file>step_ixia_capture_packets.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|.*root@.*#" timeout="900">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -def disable -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${tx_port2},${tx_port3} -phyList ${tx_port1.phytype},${tx_port2.phytype},${tx_port3.phytype}"
				-v ""
				-v ""
				<!-- start transmit -->

				<!-- stop transmit -->


				<!-- port1 start capture -->
				-v "start_capture -portList ${tx_port1}"
				-v ""
				-v "wait_time -second 30"
				-v ""
				<!-- stop port1 capture -->
				-v "stop_capture -portList ${tx_port1}"
				-v ""
				<!-- save port1 capture -->
				-v "save_capture -onePort ${tx_port1} -fileName ${job.id}_packet.enc"
			</ssh>
			<no-error-check />
		</step>
		<step no="2.2">
			<desc>Tftp the capture file to MPC</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|.*root@.*#" timeout="900">
				-v "tftp -4 ${mpc.mif.ip} -c put ${job.id}_packet.enc"
				-v "rm -f ${job.id}_packet.enc"
			</ssh>
		</step>
		<step no="2.3">
			<desc>Move the capture file to log dir</desc>
			<script>
				mv /tftpboot/${job.id}_packet.enc ${log.dir}
			</script>
		</step>
		<step no="2.4">
			<desc>Check the captured packet </desc>
			<script>
				if [ "`tshark -r ${log.dir}/${job.id}_packet.enc 2>/dev/null \
				-R '(lldp ) &amp;&amp; (eth.dst == 01:80:c2:00:00:0e)' | wc -l`" -lt "5" ]
				then
				exit 1
				elif [ "`tshark -r ${log.dir}/${job.id}_packet.enc 2>/dev/null \
				| grep "LLDP_Multicast" -c`" -lt "5" ]
				then
				exit 1
				fi
			</script>
		</step>

		<!--show log -->
		<step no="3.1">
			<desc>Check LLDP packet send log</desc>
			<log-file>3.1.log</log-file>
			<telnet target="sw1">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
			<no-error-check />
		</step>
		<!-- receive-only test -->
		<step no="4.1">
			<desc>
				Config LLDP receive-only on swith
			</desc>
			<telnet target="sw1">
				-v "no interface ${sw1.port1} link-discovery lldp transmit enable"
				-v "show running-config"
				-v "show lldp"
				-v "show interface link-discovery lldp"
			</telnet>
			<no-error-check />
		</step>

		<step no="4.2">
			<desc>Check LLDP port1 is receive-only </desc>
			<telnet target="sw1">
				-v "show interface link-discovery lldp"
			</telnet>
			<no-error-check />
			<log-match>-re -e "${sw1.port1}\s+Rx only"</log-match>
		</step>

		<!--lldp debug -->
		<step no="4.3">
			<desc>
				Enable lldp packet log
			</desc>
			<log-file>step1.3_lldp_packet.log</log-file>
			<telnet target="sw1">
				-v "clear log buffered"
				-v "_debug dcd lldp_adjacency"
				-v "_debug dcd lldp_error"
				-v "_debug dcd lldp_packet"
			</telnet>
		</step>

		<!--Ixia capture packet -->
		<step no="5.1">
			<desc>
				Connect to ixia, capture packets
			</desc>
			<log-file>step_ixia_capture_packets.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="320">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -def disable -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${tx_port2},${tx_port3} -phyList ${tx_port1.phytype},${tx_port2.phytype},${tx_port3.phytype}"
				-v ""
				-v ""
				<!-- start transmit -->

				<!-- stop transmit -->


				<!-- port1 start capture -->
				-v "start_capture -portList ${tx_port1}"
				-v ""
				-v "wait_time -second 300"
				-v ""
				<!-- stop port1 capture -->
				-v "stop_capture -portList ${tx_port1}"
				-v ""
				<!-- save port1 capture -->
				-v "save_capture -onePort ${tx_port1} -fileName ${job.id}_packet.enc"
			</ssh>
			<no-error-check />
		</step>
		<step no="5.2">
			<desc>Tftp the capture file to MPC</desc>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|.*root@.*#" timeout="900">
				-v "tftp -4 ${mpc.mif.ip} -c put ${job.id}_packet.enc"
				-v "rm -f ${job.id}_packet.enc"
			</ssh>
		</step>
		<step no="5.3">
			<desc>Move the capture file to log dir</desc>
			<script>
				mv /tftpboot/${job.id}_packet.enc ${log.dir}
			</script>
		</step>
		<step no="5.4">
			<desc>Check the captured packet </desc>
			<!-- 1 fail;0 pass -->
			<script>
				if [ "`tshark -r ${log.dir}/${job.id}_packet.enc 2>/dev/null \
				-R '(lldp ) &amp;&amp; (eth.dst == 01:80:c2:00:00:0e)' | wc -l`" -gt "0" ]
				then
				exit 1
				elif [ "`tshark -r ${log.dir}/${job.id}_packet.enc 2>/dev/null \
				| grep "LLDP_Multicast" -c`" -gt "0" ]
				then
				exit 1
				fi
			</script>
		</step>

		<!--show log -->
		<step no="6.1">
			<desc>Check LLDP packet send log</desc>
			<log-file>6.1.log</log-file>
			<telnet target="sw1">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
			<no-error-check />
		</step>




	</stage>

	<post-process>
		<stage>
			<!-- self defined steps, no need script now -->
		</stage>
		<include file="include/sw_default_post_process.xml" />
	</post-process>
</testcase>
