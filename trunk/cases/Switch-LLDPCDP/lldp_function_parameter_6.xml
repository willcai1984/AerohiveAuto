<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>(IxPort: CoF=3) LLDP is received via Ethx when Ethx enable lldp and Switch enable lldp.</brief>
	<priority>Middle</priority>
	<automated>yes</automated>
	<description>
		Test Produce:
		1.Enable lldp on AP1/AP2
		“lldp”
		2.Open lldp debug switch to look up logs and show lldp neighbors’ status on AP1
		“_debug dcd lldp_packet”
		“debug console”
		“show lldp neighbor”
		3.Disable ethX lldp
		“no interface ethX link-discovery lldp”
		4.Look up logs and show lldp neighbors’ status on AP1
		“show lldp neighbor”
		5.Recover
		6. Look up logs and show lldp neighbors’ status on AP1
		“show lldp neighbor”
		7.Modify inter ethX’ mode to access
		8. Look up logs and show lldp neighbors’ status on AP1
		“show lldp neighbor”


	</description>

	<numofsw>1</numofsw>
	<tbtype>winlin</tbtype>

	<pre-process>
		<stage>
			<!-- self defined steps -->
		</stage>
		<include file="include/sw_default_pre_process.xml" />
	</pre-process>


	<property name="tx_port1" value="${sw1.port1.ixia_port}" />
	<property name="tx_port1.phytype" value="${sw1.port1.ixia_port.phytype}" />
	<property name="tx_port2" value="${sw1.port2.ixia_port}" />
	<property name="tx_port2.phytype" value="${sw1.port2.ixia_port.phytype}" />
	<property name="tx_port3" value="${sw1.port3.ixia_port}" />
	<property name="tx_port3.phytype" value="${sw1.port3.ixia_port.phytype}" />
	<property name="correct_vlan" value="101" />

	<stage>
		<step no="1.1">
			<desc>
				Enable LLDP on swith
			</desc>
			<telnet target="sw1">
				-v "lldp enable"
				-v "show running-config"
				-v "show lldp"
			</telnet>
			<no-error-check />
		</step>

		<step no="1.2">
			<desc>Check LLDP is enable </desc>
			<telnet target="sw1">
				-v "show lldp"
			</telnet>
			<no-error-check />
			<log-match>-e "Enabled: yes"</log-match>
		</step>


		<step no="1.3">
			<desc>
				Enable lldp packet log debug
			</desc>
			<log-file>step1.3_lldp_packet.log</log-file>
			<telnet target="sw1">
				-v "clear log buffered"
				-v "_debug dcd lldp_adjacency"
				-v ""
			</telnet>
		</step>


		<step no="2.1">
			<desc>
				Port1 sends LLDP packet of aerohive
			</desc>
			<log-file>step2.1-Ixia-send-lldp.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -def disable -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${tx_port2},${tx_port3} -phyList ${tx_port1.phytype},${tx_port2.phytype},${tx_port3.phytype}"
				-v ""
				-v "stream_import -onePort ${tx_port1} -fileName ${case.dir}/conf/lldp-aerohive.str"
				-v "stream_maintance -onePort ${tx_port1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${tx_port1} -streamId 1 -maintanceOp enable"
				-v ""
				-v ""
				<!-- port1 start transmit -->
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v "start_transmit -portList ${tx_port1} -firstTryFlag false"
				-v ""
				-v "wait_time -second 1"
				-v ""
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v ""
				-v "ctrl-c"
			</ssh>
			<no-error-check />
		</step>



		<step no="2.log">
			<desc>Show log buf</desc>
			<log-file>check_2.log</log-file>
			<telnet target="sw1">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="2.2">
			<desc>
				Show lldp neighbor to confirm lldp neighbor establishment.
			</desc>
			<log-file>step2.2-show-lldp-neighbor.log</log-file>
			<telnet target="sw1">
				-v "show lldp neighbor"
			</telnet>
			<log-match>-i 'Incoming Port:' -i '${sw1.port1}'</log-match>
		</step>

		<step no="2.3">
			<desc>
				Show lldp neighbor to check neighbor info.
			</desc>
			<log-file>step2.3-show-lldp-neighbor.log</log-file>
			<telnet target="sw1">
				-v "show lldp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/mlinesearch.pl">
				-l 'Incoming Port: ${sw1.port1}' \
				-l 'Chassis ID\(mac address\): 08ea:4487:2480' \
				-l 'Port ID\(interface name\): eth1/7' \
				-f ${log.dir}/${log.file} \
			</log-match>
		</step>



		<step no="2.4">
			<desc>
				Enable lldp packet log debug
			</desc>
			<log-file>step1.3_lldp_packet.log</log-file>
			<telnet target="sw1">
				-v "clear log buffered"
				-v "_debug dcd lldp_adjacency"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				Port2 sends LLDP packet of H3C
			</desc>
			<log-file>step3.1-Ixia-send-lldp.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -def disable -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${tx_port2},${tx_port3} -phyList ${tx_port1.phytype},${tx_port2.phytype},${tx_port3.phytype}"
				-v ""
				-v "stream_import -onePort ${tx_port2} -fileName ${case.dir}/conf/lldp-h3c.str"
				-v "stream_maintance -onePort ${tx_port2} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${tx_port2} -streamId 1 -maintanceOp enable"
				-v ""
				-v ""
				<!-- port2 start transmit -->
				-v "stop_transmit -portList ${tx_port2}"
				-v ""
				-v "start_transmit -portList ${tx_port2} -firstTryFlag false"
				-v ""
				-v "wait_time -second 1"
				-v ""
				-v "stop_transmit -portList ${tx_port2}"
				-v ""
				-v ""
				-v "ctrl-c"
			</ssh>
			<no-error-check />
		</step>

		<step no="3.log">
			<desc>Show log buf</desc>
			<log-file>check_3.log</log-file>
			<telnet target="sw1">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="3.2">
			<desc>
				Show lldp neighbor to confirm lldp neighbor establishment.
			</desc>
			<log-file>step3.2-show-lldp-neighbor.log</log-file>
			<telnet target="sw1">
				-v "show lldp neighbor"
			</telnet>
			<log-match>-i 'Incoming Port:' -i '${sw1.port2}'</log-match>
		</step>


		<step no="3.3">
			<desc>
				Show lldp neighbor to check neighbor info.
			</desc>
			<log-file>step2.3-show-lldp-neighbor.log</log-file>
			<telnet target="sw1">
				-v "show lldp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/mlinesearch.pl">
				-l 'Incoming Port: ${sw1.port2}' \
				-l 'Chassis ID\(mac address\): 0cda:4137:1101' \
				-l 'Port ID\(interface name\): Ethernet1/0/14' \
				-f ${log.dir}/${log.file} \
			</log-match>
		</step>

		<!--disable LLDP -->
		<step no="4.1">
			<desc>
				Disable LLDP on swith
			</desc>
			<telnet target="sw1">
				-v "no lldp enable"
				-v "show running-config"
				-v "show lldp"
			</telnet>
			<no-error-check />
		</step>

		<step no="4.2">
			<desc>Check LLDP is disable </desc>
			<telnet target="sw1">
				-v "show lldp"
			</telnet>
			<no-error-check />
			<log-match>-e "Enabled: no"</log-match>
		</step>


		<step no="4.3">
			<desc>
				Enable lldp packet log debug
			</desc>
			<log-file>step1.3_lldp_packet.log</log-file>
			<telnet target="sw1">
				-v "clear log buffered"
				-v "_debug dcd lldp_adjacency"
				-v "_debug dcd lldp_adjacency"
				-v "_debug dcd lldp_error"
				-v "_debug dcd lldp_packet"
			</telnet>
		</step>


		<step no="5.1">
			<desc>
				Port1 sends LLDP packet of aerohive
			</desc>
			<log-file>step2.1-Ixia-send-lldp.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -def disable -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${tx_port2},${tx_port3} -phyList ${tx_port1.phytype},${tx_port2.phytype},${tx_port3.phytype}"
				-v ""
				-v "stream_import -onePort ${tx_port1} -fileName ${case.dir}/conf/lldp-aerohive.str"
				-v "stream_maintance -onePort ${tx_port1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${tx_port1} -streamId 1 -maintanceOp enable"
				-v ""
				-v ""
				<!-- port1 start transmit -->
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v "start_transmit -portList ${tx_port1} -firstTryFlag false"
				-v ""
				-v "wait_time -second 1"
				-v ""
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v ""
				-v "ctrl-c"
			</ssh>
			<no-error-check />
		</step>

		<step no="5.2">
			<desc>Show log buf</desc>
			<log-file>check_2.log</log-file>
			<telnet target="sw1">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="5.3">
			<desc>
				Show lldp neighbor to confirm no neighbor establishment.
			</desc>
			<log-file>step5.2-show-lldp-neighbor.log</log-file>
			<telnet target="sw1">
				-v "show lldp neighbor"
			</telnet>
			<log-match>-i 'Incoming Port:' -n</log-match>
		</step>


		<step no="5.4">
			<desc>
				Enable lldp packet log debug
			</desc>
			<log-file>step1.3_lldp_packet.log</log-file>
			<telnet target="sw1">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="6.1">
			<desc>
				Port2 sends LLDP packet of H3C
			</desc>
			<log-file>step3.1-Ixia-send-lldp.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -def disable -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${tx_port2},${tx_port3} -phyList ${tx_port1.phytype},${tx_port2.phytype},${tx_port3.phytype}"
				-v ""
				-v "stream_import -onePort ${tx_port2} -fileName ${case.dir}/conf/lldp-h3c.str"
				-v "stream_maintance -onePort ${tx_port2} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${tx_port2} -streamId 1 -maintanceOp enable"
				-v ""
				-v ""
				<!-- port2 start transmit -->
				-v "stop_transmit -portList ${tx_port2}"
				-v ""
				-v "start_transmit -portList ${tx_port2} -firstTryFlag false"
				-v ""
				-v "wait_time -second 1"
				-v ""
				-v "stop_transmit -portList ${tx_port2}"
				-v ""
				-v ""
				-v "ctrl-c"
			</ssh>
			<no-error-check />
		</step>


		<step no="6.2">
			<desc>Show log buf</desc>
			<log-file>check_6.log</log-file>
			<telnet target="sw1">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="6.3">
			<desc>
				Show lldp neighbor to confirm no neighbor establishment.
			</desc>
			<log-file>step3.2-show-lldp-neighbor.log</log-file>
			<telnet target="sw1">
				-v "show lldp neighbor"
			</telnet>
			<log-match>-i 'Incoming Port:' -n </log-match>
		</step>


		<!---enable LLDP -->

		<step no="7.1">
			<desc>
				Enable LLDP on swith
			</desc>
			<telnet target="sw1">
				-v "lldp enable"
				-v "show running-config"
				-v "show lldp"
			</telnet>
			<no-error-check />
		</step>

		<step no="7.2">
			<desc>Check LLDP is enable </desc>
			<telnet target="sw1">
				-v "show lldp"
			</telnet>
			<no-error-check />
			<log-match>-e "Enabled: yes"</log-match>
		</step>


		<step no="7.3">
			<desc>
				Enable lldp packet log debug
			</desc>
			<log-file>step1.3_lldp_packet.log</log-file>
			<telnet target="sw1">
				-v "clear log buffered"
				-v "_debug dcd lldp_adjacency"
				-v ""
			</telnet>
		</step>


		<step no="8.1">
			<desc>
				Port1 sends LLDP packet of aerohive
			</desc>
			<log-file>step2.1-Ixia-send-lldp.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -def disable -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${tx_port2},${tx_port3} -phyList ${tx_port1.phytype},${tx_port2.phytype},${tx_port3.phytype}"
				-v ""
				-v "stream_import -onePort ${tx_port1} -fileName ${case.dir}/conf/lldp-aerohive.str"
				-v "stream_maintance -onePort ${tx_port1} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${tx_port1} -streamId 1 -maintanceOp enable"
				-v ""
				-v ""
				<!-- port1 start transmit -->
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v "start_transmit -portList ${tx_port1} -firstTryFlag false"
				-v ""
				-v "wait_time -second 1"
				-v ""
				-v "stop_transmit -portList ${tx_port1}"
				-v ""
				-v ""
				-v "ctrl-c"
			</ssh>
			<no-error-check />
		</step>



		<step no="8.log">
			<desc>Show log buf</desc>
			<log-file>check_8.log</log-file>
			<telnet target="sw1">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="8.2">
			<desc>
				Show lldp neighbor to confirm lldp neighbor establishment.
			</desc>
			<log-file>step8.2-show-lldp-neighbor.log</log-file>
			<telnet target="sw1">
				-v "show lldp neighbor"
			</telnet>
			<log-match>-i 'Incoming Port:' -i '${sw1.port1}'</log-match>
		</step>

		<step no="8.3">
			<desc>
				Show lldp neighbor to check neighbor info.
			</desc>
			<log-file>step2.3-show-lldp-neighbor.log</log-file>
			<telnet target="sw1">
				-v "show lldp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/mlinesearch.pl">
				-l 'Incoming Port: ${sw1.port1}' \
				-l 'Chassis ID\(mac address\): 08ea:4487:2480' \
				-l 'Port ID\(interface name\): eth1/7' \
				-f ${log.dir}/${log.file} \
			</log-match>
		</step>



		<step no="8.4">
			<desc>
				Enable lldp packet log debug
			</desc>
			<log-file>step1.3_lldp_packet.log</log-file>
			<telnet target="sw1">
				-v "clear log buffered"
				-v "_debug dcd lldp_adjacency"
			</telnet>
		</step>

		<step no="9.1">
			<desc>
				Port2 sends LLDP packet of H3C
			</desc>
			<log-file>step3.1-Ixia-send-lldp.log</log-file>
			<ssh target="${pub.tclclient1.ip}" prompt="%.*|root@.*#" timeout="200">
				<!-- ixia initialize -->
				-v "tclsh8.5"
				-v "package req ixia"
				-v ""
				-v "ah_ixia_connect -def disable -chassisIP ${pub.chassis1.ip} -tclServerIP ${pub.tclserver1.ip} -userName ${job.user}${job.sid} -portList ${tx_port1},${tx_port2},${tx_port3} -phyList ${tx_port1.phytype},${tx_port2.phytype},${tx_port3.phytype}"
				-v ""
				-v "stream_import -onePort ${tx_port2} -fileName ${case.dir}/conf/lldp-h3c.str"
				-v "stream_maintance -onePort ${tx_port2} -streamId all -maintanceOp disable"
				-v "stream_maintance -onePort ${tx_port2} -streamId 1 -maintanceOp enable"
				-v ""
				-v ""
				<!-- port2 start transmit -->
				-v "stop_transmit -portList ${tx_port2}"
				-v ""
				-v "start_transmit -portList ${tx_port2} -firstTryFlag false"
				-v ""
				-v "wait_time -second 1"
				-v ""
				-v "stop_transmit -portList ${tx_port2}"
				-v ""
				-v ""
				-v "ctrl-c"
			</ssh>
			<no-error-check />
		</step>

		<step no="9.log">
			<desc>Show log buf</desc>
			<log-file>check_9.log</log-file>
			<telnet target="sw1">
				-v "show log buffered"
				-v "clear log buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="9.2">
			<desc>
				Show lldp neighbor to confirm lldp neighbor establishment.
			</desc>
			<log-file>step3.2-show-lldp-neighbor.log</log-file>
			<telnet target="sw1">
				-v "show lldp neighbor"
			</telnet>
			<log-match>-i 'Incoming Port:' -i '${sw1.port2}'</log-match>
		</step>


		<step no="9.3">
			<desc>
				Show lldp neighbor to check neighbor info.
			</desc>
			<log-file>step2.3-show-lldp-neighbor.log</log-file>
			<telnet target="sw1">
				-v "show lldp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/mlinesearch.pl">
				-l 'Incoming Port: ${sw1.port2}' \
				-l 'Chassis ID\(mac address\): 0cda:4137:1101' \
				-l 'Port ID\(interface name\): Ethernet1/0/14' \
				-f ${log.dir}/${log.file} \
			</log-match>
		</step>




	</stage>

	<post-process>
		<stage>
			<!-- self defined steps, no need script now -->
		</stage>
		<include file="include/sw_default_post_process.xml" />
	</post-process>
</testcase>
