<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Status of LED when track invalid ip and usbmodem is primary wan</brief>
	<priority>Middle</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		1) WAN is available by usbmodem
		2) capwap connection works well by usbmodem WAN
		3) Unplug eth0
		zhxu-8c66c0#sh ru | in track
		track QS-IP-Track-Router default-gateway
		track QS-IP-Track-Router ip 206.80.44.205
		track QS-IP-Track-Router ip 206.80.44.206
		track QS-IP-Track-Router interval 30
		track QS-IP-Track-Router timeout 5
		track QS-IP-Track-Router multi-dst-logic and
		track QS-IP-Track-Router use-for-wan-testing

		Test Procedure:
		1) Set the mode of USB modem as primary-wan in BR
		zhxu-8c66c0#sh usbm | in mode:
		Mode: primary-wan
		2) Track invalid ip
		track QS-IP-Track-Router ip 1.1.1.1
		3) Check the state of WAN and LED
	</description>
	<numofbr>1</numofbr>
	<numofcvg>0</numofcvg>
	<tbtype>winlin</tbtype>

	<property name="apn.name" value="3gnet" />
	<property name="des.addr" value="0.0.0.0" />
	<property name="gw.addr" value="192.168.10.254" />
	<property name="invalid.ip" value="1.1.1.1" />
	<property name="public.network.ip" value="8.8.8.8" />

	<stage>
		<step no="0" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				show usbmodem info
			</desc>
			<log-file>step0_show_usbmodem_info_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show usbmodem info"
			</telnet>
			<log-match>-c -i "Manufacturer"</log-match>
			<log-match>-c -i "Model:"</log-match>
		</step>

		<step no="0.1">
			<desc>
				show usbmodem info
			</desc>
			<log-file>step0.1_show_usbmodem_info.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show usbmodem info"
			</telnet>
			<log-match>-c -i "Manufacturer"</log-match>
			<log-match>-c -i "Model:"</log-match>
		</step>

		<step no="0.2">
			<desc>
				get dns server tshark process
			</desc>
			<setvar name="modem.name_1">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step0.1_show_usbmodem_info.log -p "Manufacturer:\s+(\w+)" -t str
			</setvar>
		</step>

		<step no="0.3">
			<desc>
				get dns server tshark process
			</desc>
			<setvar name="modem.name_2">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step0.1_show_usbmodem_info.log -p "Model:\s+(\S+)" -t str
			</setvar>
		</step>

		<step no="0.4">
			<desc>
				get dns server tshark process
			</desc>
			<setvar name="modem.name">
				echo "${modem.name_1}_${modem.name_2}" | tr "A-Z" "a-z"
			</setvar>
		</step>

		<step no="1">
			<desc>
				show lan port-config
			</desc>
			<log-file>step1_check_vlan.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show lan port-config"
			</telnet>
			<log-match>-p 1 -i "eth1" -p 4 -i "port-based" -p 5 -i "1"</log-match>
			<log-match>-p 1 -i "eth2" -p 4 -i "port-based" -p 5 -i "1"</log-match>
			<log-match>-p 1 -i "eth3" -p 4 -i "port-based" -p 5 -i "1"</log-match>
			<log-match>-p 1 -i "eth4" -p 4 -i "port-based" -p 5 -i "1"</log-match>
		</step>

		<step no="2">
			<desc>
				show lan vlan-table
			</desc>
			<log-file>step2_check_vlan.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show lan vlan-table"
			</telnet>
			<log-match>-i "eth1 *eth2 *eth3 *eth4 *1"</log-match>
		</step>

		<step no="3">
			<desc>
				Config parameters for usbmodem (mode, apn)
				Config track ip parameters for wan failover test
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "capwap client enable"
				-v "capwap client server name ${pub.hm1.ip}"
				-v "no track-wan use-for-wan-eth0 ip ${gw.addr}"
				-v "no track-wan use-for-wan-usbnet0 ip ${gw.addr}"
				-v "track-wan use-for-wan-eth0 default-gateway"
				-v "track-wan use-for-wan-usbnet0 default-gateway"
				-v "usbmodem mode primary-wan"
				-v "usbmodem modem-id ${modem.name} apn ${apn.name}"
				-v "usbmodem enable"
				-v "show running-config"
			</telnet>
		</step>
		
		<step no="3.1">
			<desc>
				shutdown eth0
			</desc>
			<console target="br1.br">
				-v "interface eth0 shutdown"
			</console>
		</step>
		
		<step no="3.2">
			<desc>
				BR ping 8.8.8.8
			</desc>
			<log-file>step3.2_check_ping.log</log-file>
			<console target="br1.br">
				-v "ping ${public.network.ip}"
			</console>
			<log-match>-c -i "from ${public.network.ip}" -i "ttl="</log-match>
		</step>

		<step no="4" delay="10">
			<desc>
				Check the usbmodem status while WAN is eth0 by default
			</desc>
			<log-file>step4_check_default_usbmodem.log</log-file>
			<console target="br1.br">
				-v "show usbmodem modem-id ${modem.name}"
			</console>
			<log-match>-c -i "Mode: primary-wan"</log-match>
			<log-match>-c -i "APN: *3gnet"</log-match>
		</step>

		<step no="4.1" type="loop-check" loop-max-times="40" loop-interval="10">
			<desc>
				Check the usbmodem status
			</desc>
			<log-file>step4.1_check_usbmodem_status_${loop_check.idx}.log</log-file>
			<console target="br1.br" timeout="300">
				-v "show usbmodem status"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)PPP Interface Status:" -ps p "(?i)State: up" -e "(?i)Connection closed" -f ${log.dir}/${log.file}</log-match>
			<failed>next</failed>
		</step>

		<step no="4.2">
			<desc>
				show wan interface
			</desc>
			<log-file>step4.2_show_wan_interface.log</log-file>
			<console target="br1.br">
				-v "show wan interface"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "ifname: eth0" -ps p "(?i)kifname: eth0" p "priority: 1" p "is_wan: 1" p "is_default_wan: 0" -e "ifname: usbnet0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "ifname: usbnet0" -ps p "(?i)kifname: ppp0" p "(?i)priority: 0" p "is_wan: 1" p "is_default_wan: 1" -e "Connection closed" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.3">
			<desc>
				show wan failover
			</desc>
			<log-file>step4.3_show_wan_failover.log</log-file>
			<console target="br1.br">
				-v "show wan failover"
			</console>
			<log-match>-c -i "curr_state: CONNECTED"</log-match>
		</step>

		<step no="4.4">
			<desc>
				show l3 interface
			</desc>
			<log-file>step4.4_show_l3_interface.log</log-file>
			<console target="br1.br">
				-v "show l3 interface"
			</console>
			<log-match>-c -p 1 -i "ppp0" -p 3 -i "wan" -p 6 -i "U"</log-match>
		</step>

		<step no="4.5">
			<desc>
				show ip route
			</desc>
			<log-file>step4.5_show_ip_route.log</log-file>
			<console target="br1.br">
				-v "show ip route"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "${des.addr}" p "0" p "ppp0" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.6">
			<desc>
				show capwap client
			</desc>
			<log-file>step4.6_show_capwap_client.log</log-file>
			<console target="br1.br">
				-v "show capwap client"
			</console>
			<log-match>-c -i "RUN state: Connected securely to the CAPWAP server"</log-match>
		</step>

		<step no="4.7">
			<desc>
				show system led
			</desc>
			<log-file>step4.7_show_system_led.log</log-file>
			<console target="br1.br">
				-v "show system led"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "1\s+Power\s+Off\s+No\s+blinking" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "2\s+Status\s+White\s+No\s+blinking" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5">
			<desc>
				track-wan use-for-wan-usbnet0 ip 1.1.1.1
			</desc>
			<console target="br1.br">
				-v "track-wan use-for-wan-usbnet0 ip ${invalid.ip}"
			</console>
		</step>

		<step no="5.1" delay="10">
			<desc>
				show lan port-config
			</desc>
			<log-file>step5.1_check_vlan.log</log-file>
			<console target="br1.br">
				-v "show lan port-config"
			</console>
			<log-match>-p 1 -i "eth1" -p 4 -i "port-based" -p 5 -i "1"</log-match>
			<log-match>-p 1 -i "eth2" -p 4 -i "port-based" -p 5 -i "1"</log-match>
			<log-match>-p 1 -i "eth3" -p 4 -i "port-based" -p 5 -i "1"</log-match>
			<log-match>-p 1 -i "eth4" -p 4 -i "port-based" -p 5 -i "1"</log-match>
		</step>

		<step no="6">
			<desc>
				show lan vlan-table
			</desc>
			<log-file>step6_check_vlan.log</log-file>
			<console target="br1.br">
				-v "show lan vlan-table"
			</console>
			<log-match>-i "eth1 *eth2 *eth3 *eth4 *1"</log-match>
		</step>

		<step no="6.1" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>
				Check the usbmodem status
			</desc>
			<log-file>step6.1_check_usbmodem_status_${loop_check.idx}.log</log-file>
			<console target="br1.br" timeout="300">
				-v "show usbmodem status"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)PPP Interface Status:" -ps p "(?i)State: up" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6.2">
			<desc>
				show wan interface
			</desc>
			<log-file>step6.2_show_wan_interface.log</log-file>
			<console target="br1.br" timeout="300">
				-v "show wan interface"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "ifname: eth0" -ps p "(?i)kifname: eth0" p "priority: 1" p "is_wan: 1" p "is_default_wan: 1" -e "ifname: usbnet0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "ifname: usbnet0" -ps p "(?i)kifname: ppp0" p "(?i)priority: 0" p "is_wan: 1" p "is_default_wan: 0" -e "nat_policy_id" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6.3">
			<desc>
				show wan failover
			</desc>
			<log-file>step6.3_show_wan_failover.log</log-file>
			<console target="br1.br" timeout="300">
				-v "show wan failover"
			</console>
			<log-match>-c -i "curr_state: FAILOVER"</log-match>
		</step>

		<step no="6.4">
			<desc>
				show l3 interface
			</desc>
			<log-file>step6.4_show_l3_interface.log</log-file>
			<console target="br1.br" timeout="300">
				-v "show l3 interface"
			</console>
			<log-match>-c -p 1 -i "eth0" -p 3 -i "wan" -p 6 -i "U"</log-match>
			<log-match>-c -p 1 -i "ppp0" -p 3 -i "wan" -p 6 -i "U"</log-match>
		</step>

		<step no="6.5">
			<desc>
				show ip route
			</desc>
			<log-file>step6.5_show_ip_route.log</log-file>
			<console target="br1.br" timeout="300">
				-v "show ip route"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "${des.addr}" p "1" p "eth0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "${des.addr}" p "10000" p "ppp0" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6.6">
			<desc>
				show capwap client
			</desc>
			<log-file>step6.6_show_capwap_client.log</log-file>
			<console target="br1.br">
				-v "show capwap client"
			</console>
			<log-match>-c -i "RUN state: Connected securely to the CAPWAP server"</log-match>
		</step>

		<step no="6.7">
			<desc>
				show system led
			</desc>
			<log-file>step6.7_show_system_led.log</log-file>
			<console target="br1.br">
				-v "show system led"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "1\s+Power\s+Off\s+No\s+blinking" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-ps p "2\s+Status\s+White\s+Slow\s+blinking" -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>
</testcase>
