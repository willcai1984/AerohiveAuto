<testcase>
	<brief>(IxPort: CoF=0)Maximum interface sessions per Chesapeake is 4</brief>
	<priority>low</priority>
	<automated>yes</automated>
	<numofsw>1</numofsw>
	<tbtype>winlin</tbtype>
	<description>
		Maximum interface sessions per Chesapeake is 4
	</description>
	<comment>
		Test procedure
		1. Configure source is interface 1, direction is ingress, destination is interface 5
		2. Configure source is interface 2, direction is egress, destination is interface 6
		3. Configure source is interface 3, direction is both, destination is interface 7
		4. Configure source is interface 4, direction is ingress, destination is interface 8
		5. IXIA port1-4 send broadcast/multicast/unicast pkts, capture pkts on IXIA port 4, result 1
		6. Configure one more interface session and enable, result 2
		Expect result
		Result 1: Can capture pkts correctly
		Result 2: Cannot enable and may show error info
	</comment>
	<property name="sw1.port1" value="eth1/3" />
	<property name="sw1.port2" value="eth1/4" />
	<property name="sw1.port3" value="eth1/5" />
	<property name="sw1.port4" value="eth1/6" />
	<property name="sw1.port5" value="eth1/7" />
	<property name="sw1.port6" value="eth1/8" />
	<property name="sw1.port7" value="eth1/9" />
	<property name="sw1.port8" value="eth1/10" />
	<stage>
		<step no="1.0.1">
			<desc>
				Show interface mgt0 to get ip address
			</desc>
			<log-file>step1.0.1_mgt0_ip_info.log</log-file>
			<console target="sw1">
				-v 'show interface mgt0'
			</console>
		</step>


		<step no="1.0.2">
			<desc>
				Get mgt0's ip address
			</desc>
			<setvar name="sw1.ip">
				python ${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -f ${log.dir}/step1.0.1_mgt0_ip_info.log -t str
			</setvar>
		</step>

		<step no="1.1">
			<desc>
				Configure 4 monitor session
			</desc>
			<log-file>step1.1_config.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'monitor session 1'
				-v 'monitor session 1 source interface ${sw1.port1} ingress'
				-v 'monitor session 1 destination interface ${sw1.port2}'
				-v 'monitor session 1 enable'
				-v 'monitor session 2'
				-v 'monitor session 2 source interface ${sw1.port3} ingress'
				-v 'monitor session 2 destination interface ${sw1.port4}'
				-v 'monitor session 2 enable'
				-v 'monitor session 3'
				-v 'monitor session 3 source interface ${sw1.port5} ingress'
				-v 'monitor session 3 destination interface ${sw1.port6}'
				-v 'monitor session 3 enable'
				-v 'monitor session 4'
				-v 'monitor session 4 source interface ${sw1.port7} ingress'
				-v 'monitor session 4 destination interface ${sw1.port8}'
				-v 'monitor session 4 enable'
			</ssh>
		</step>

		<step no="1.2">
			<desc>
				show running config to confirm
			</desc>
			<log-file>step1.2_show_config.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'show running-config'
			</ssh>
		</step>

		<step no="1.3">
			<desc>
				Add one more session
			</desc>
			<log-file>step1.3_config.log</log-file>
			<ssh target="${sw1.ip}" user="${sw1.user}" password="${sw1.passwd}">
				-v 'monitor session 5'
			</ssh>
			<!-- need no error check -->
			<no-error-check />
			<log-match>-e 'reaches maximum monitor session number 4!'</log-match>
		</step>

	</stage>
</testcase>