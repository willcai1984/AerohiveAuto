<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>When loading, device should load bootloader first, then load application.</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		All settings are default setting.

		Test Procedure:
		1. Boot up MPP1
		2. Ping tftp server IP is ok
		box17#ping 10.155.3.3
		PING 10.155.3.3 (10.155.3.3) 56(84) bytes of data.
		64 bytes from 10.155.3.3: icmp_seq=1 ttl=64 time=1.17 ms
		64 bytes from 10.155.3.3: icmp_seq=2 ttl=64 time=0.242 ms
		3. Save image from tftp server via TFTP
		save image tftp://10.155.3.3:hiveap20-1_0_0_0-012207.img
		4. Verify device if load bootloader first ,then load application
		getting from 10.155.3.3:hiveap20-1_0_0_0-012207.img to /tmp/aeros.img [octet]
		Received bytes: 7062 KB
		Received 7232499 bytes in 6.0 seconds [9576377 bit/s]
		Bootloader image is already same to current image.
		Programming application ...
		Unlocking blocks: 55/55 (100%)
		Erasing blocks: 55/55 (100%)
		Writing data: 6912k/6912k (100%)
		Verifying data: 6912k/6912k (100%)
		Locking blocks: 55/55 (100%)
		Program application finished.
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<include prefix="0" file="subs/setvar_for_stable_img.xml" args="${img.prodtype}, ${branch}" />

		<step no="1" delay="30">
			<desc>
				2. Ping tftp server IP is ok
				box17#ping 10.155.3.3
				PING 10.155.3.3 (10.155.3.3) 56(84) bytes of data.
				64 bytes from 10.155.3.3: icmp_seq=1 ttl=64 time=1.17 ms
				64 bytes from 10.155.3.3: icmp_seq=2 ttl=64 time=0.242 ms
			</desc>
			<log-file>step1_ping_tftp.log</log-file>
			<telnet target="ap1">
				-v "ping ${pub.img_server1.ip} count 5"
			</telnet>
			<log-match>-c -i "from ${pub.img_server1.ip}" -i "ttl"</log-match>
		</step>

		<step no="2">
			<desc>
				3 Save image from tftp server via TFTP
			</desc>
			<log-file>step2_update_image_info.log</log-file>
			<telnet target="ap1">
				-v "save image tftp://${pub.img_server1.ip}:${stable_img}"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "(?i)bootloader" -p "Programming application" -e "Program application finished." -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "Programming application" -p "(?i)bootloader" -e "Program application finished." -f ${log.dir}/${log.file} -c 0</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-b "Program application finished." -p "(?i)bootloader" -f ${log.dir}/${log.file} -c 0</log-match>
		</step>
	</stage>
</testcase>