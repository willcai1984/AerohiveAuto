<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Session setup for http/https traffic</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Configure AP1
		"security-object FWtest"
		"security-object FWtest default-user-profile-attr 1"
		"ssid FWtest"
		"ssid FWtest security-object FWtest"
		"interface wifi0 ssid FWtest"
		"interface wifi1 ssid FWtest"
		"user-profile FW qos-policy def-user-qos vlan-id &lt;mgt0 vlan&gt; attribute 1"
		-Laptop has been associated with AP1 and assigned an ip address
		-Laptop uses user-profile "FW"

		Test Procedure:
		1) Config the ip-policy that permit http/https traffic between Laptop and Server
		"ip-policy FW-0"
		"ip-policy FW-0 service [http/https] [from/to] &lt;Laptop ip addr&gt; action permit"
		"user-profile FW security ip-policy from-access FW"
		2) Using Server as a http/https Server, Laptop accesses Server by http/https
		3) Show the ip-session
		"show forwarding-engine ip-sessions"
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<stage>
		<step no="1">
			<desc>
				-Configure AP1
				"security-object FWtest"
				"security-object FWtest default-user-profile-attr 1"
				"ssid FWtest"
				"ssid FWtest security-object FWtest"
				"interface wifi0 ssid FWtest"
				"interface wifi1 ssid FWtest"
				"user-profile FW qos-policy def-user-qos vlan-id &lt;mgt0 vlan&gt; attribute 1"
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "interface eth0 native-vlan ${tb.vlan1}"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 1"
				-v "ssid ${ssid.name}-tf"
				-v "ssid ${ssid.name}-tf security-object FWtest"
				-v "interface wifi0 ssid ${ssid.name}-tf"
				-v "user-profile FW qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
			</console>
		</step>

		<include prefix="2" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="3">
			<desc>
				sta connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}-tf\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<include prefix="3.1" file="subs/chk_conn_in_sta.xml" args="sta1" />

		<step no="3.2" delay="10">
			<desc>ifconfig to show the ip add</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="3.3">
			<desc>Get laptop1's ip</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="4">
			<desc>
				1) Config the ip-policy that permit http/https traffic between Laptop and Server
				"ip-policy FW"
				"ip-policy FW service [http/https] [from/to] &lt;Laptop ip addr&gt; action permit"
				"user-profile FW security ip-policy from-access FW"
			</desc>
			<console target="ap1">
				-v "ip-policy FW"
				-v "ip-policy FW from ${sta1.tif.ip} to ${pub.http_server.ip} service http action permit"
				-v "user-profile FW security ip-policy from-access FW"
			</console>
		</step>

		<step no="4.1">
			<desc>
				open the switch of debug
			</desc>
			<console target="ap1">
				-v "_ff src-ip ${sta1.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
				-v "clear forwarding-engine ip-sessions"
			</console>
		</step>

		<step no="5">
			<desc>
				2) Using Server as a http Server, Laptop accesses Server by http
			</desc>
			<log-file>show_curl_id.log</log-file>
			<ssh target="sta1">
				-v "nohup curl http://${pub.http_server.ip}/test -o /tmp/test123.log --limit-rate 1k &amp;"
			</ssh>
		</step>

		<step no="5.1">
			<desc>
				3) check the curl is still running in background
			</desc>
			<log-file>show_process_id.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep curl"
			</ssh>
		</step>

		<step no="6">
			<desc>
				4) Show the ip-session
				"show forwarding-engine ip-sessions"
			</desc>
			<log-file>show_forwarding_engine_ip_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine ip-sessions"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}.*?-&gt;.*?${pub.http_server.ip}" -c 1 -f ${log.dir}/show_forwarding_engine_ip_sessions.log</log-match>
		</step>

		<include prefix="6.1" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step6.1_show_logging_buffered.log" />

		<step no="7">
			<desc>
				get server curl id
			</desc>
			<setvar name="sta.curl.id">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_curl_id.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="8">
			<desc>
				kill sta curl process
			</desc>
			<ssh target="sta1">
				-v "kill ${sta.curl.id}"
			</ssh>
		</step>

		<step no="9">
			<desc>
				Clear ip sessions
			</desc>
			<console target="ap1">
				-v "no ip-policy FW"
				-v "ip-policy FW"
				-v "ip-policy FW from ${sta1.tif.ip} to ${pub.http_server.ip} service https action permit"
				-v "user-profile FW security ip-policy from-access FW"
				-v "clear forwarding-engine ip-sessions"
				-v "clear log buffered"
			</console>
		</step>

		<step no="9.1">
			<desc>
				2) Using Server as a https Server, Laptop accesses Server by https
			</desc>
			<log-file>show_curl_id_https.log</log-file>
			<ssh target="sta1">
				-v "nohup curl https://${pub.http_server.ip}/test -o /tmp/test456.log --limit-rate 1k -k &amp;"
			</ssh>
		</step>

		<step no="9.2">
			<desc>
				3) check the curl is still running in background
			</desc>
			<log-file>show_process_id_https.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep curl"
			</ssh>
		</step>

		<step no="9.3">
			<desc>
				4) Show the ip-session
				"show forwarding-engine ip-sessions"
			</desc>
			<log-file>show_forwarding_engine_ip_sessions_https.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine ip-sessions"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}.*?-&gt;.*?${pub.http_server.ip}" -c 1 -f ${log.dir}/show_forwarding_engine_ip_sessions.log</log-match>
		</step>

		<include prefix="9.4" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step9.4_show_logging_buffered.log" />

		<step no="10">
			<desc>
				get server curl id
			</desc>
			<setvar name="sta.curl.id.https">
				${bin.dir}/getbyrexp.py -f ${log.dir}/show_curl_id_https.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="11">
			<desc>
				kill sta curl process
			</desc>
			<ssh target="sta1">
				-v "kill ${sta.curl.id.https}"
			</ssh>
		</step>
	</stage>
</testcase>
