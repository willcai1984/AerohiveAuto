<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Mac-session correlative mgt0 test(change mgt0's vlan).</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Laptop has been associated with AP1 and assigned an ip address
		-Laptop uses user-profile "FW"

		Test Procedure:
		1) Laptop ping AP1
		2) Check the mac-session table on AP1
		3) Change the mgt0's vlan attribute
		"intface mtg0 vlan [num]"
		4) Check the mac-session table on AP1
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>winlin</tbtype>

	<property name="user_id" value="FW" />
	<property name="conn1.ssid" value="${ssid.name}" />

	<stage>
		<step no="0">
			<desc>
				-Config ap1's vlan and native-vlan
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="0.1" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step0.1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="0.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="0.3">
			<desc>
				get ap1's mgt0's mac address
			</desc>
			<setvar name="ap1.mgt0.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step0.1_show_interface_mgt0_info.log -i mgt0 -o aero -m -width
			</setvar>
		</step>

		<step no="1">
			<desc>
				-Laptop uses user-profile "FW"
			</desc>
			<telnet target="ap1">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "user-profile ${user_id} qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
			</telnet>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="open.debug">
			<desc>
				-open debug mode
			</desc>
			<telnet target="ap1">
				-v "_ff id 1 src-mac ${sta1.tif.mac} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
				-v "clear forwarding-engine mac-sessions"
			</telnet>
		</step>

		<include prefix="3" file="subs/sta_ping.xml" args="sta1, ${ap1.mgt0.ip}, 5" />

		<step no="4">
			<desc>
				Laptop ping AP1 in background
			</desc>
			<log-file>step4_sta1_start_ping.log</log-file>
			<ssh target="sta1">
				-v "nohup ping ${ap1.mgt0.ip} &amp;"
			</ssh>
		</step>

		<step no="4.1">
			<desc>
				get ping id
			</desc>
			<setvar name="ping.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4_sta1_start_ping.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="5" delay="10">
			<desc>
				3) Check the mac-session table on AP1
			</desc>
			<log-file>step5_show_mac_sessions.log</log-file>
			<telnet target="ap1">
				-v "show forwarding-engine mac-sessions"
			</telnet>
			<log-match>-c -i "${sta1.tif.mac}-&gt;${ap1.mgt0.mac}"</log-match>
			<log-match>-c -i "${ap1.mgt0.mac}-&gt;${sta1.tif.mac}"</log-match>
		</step>

		<step no="5.1">
			<desc>
				-Config ap1's vlan
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan2}"
			</console>
		</step>

		<step no="6" delay="50">
			<desc>
				show running-config
			</desc>
			<log-file>step6_show_run.log</log-file>
			<console target="ap1">
				-v "show running-config"
			</console>
		</step>

		<step no="7" delay="100" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				Check the mac-session table on AP1
			</desc>
			<log-file>step7_show_forwarding_engine_mac_sessions_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine mac-sessions"
			</console>
			<log-match>-n -c -i "${sta1.tif.mac}-&gt;${ap1.mgt0.mac}"</log-match>
			<log-match>-n -c -i "${ap1.mgt0.mac}-&gt;${sta1.tif.mac}"</log-match>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					clear local file
				</desc>
				<ssh target="sta1">
					-v "kill ${ping.pid}"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>