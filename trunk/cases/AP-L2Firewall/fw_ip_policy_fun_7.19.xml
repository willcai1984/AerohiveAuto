<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Add/Delete policy while traffic is on-going(from-access permit, through MP)</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Laptops has been associated with AP1 and assigned an ip address

		Test Procedure:
		1) Laptop2 and Laptop1 ping each other continuance
		2) Configure a ip-policy on MP and bind it to FW:
		"ip-policy FW"
		"ip-policy FW from &lt;Laptop1 ip addr&gt; action permit"
		"user-profile FW security ip-policy from-access FW"
		"ssid &lt;ssid_name&gt; default-user-profile-attr [num]"
		3) Check the ping pkt
		4) Delete the policy config
		"no user-profile FW security ip-policy from-access"
		"no ip-policy FW id [num]"
		5) Check the ping pkt
	</description>
	<numofap>2</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>

	<property name="user_id" value="FWtest" />
	<property name="conn1.ssid" value="${ssid.name}-1" />
	<property name="conn2.ssid" value="${ssid.name}-2" />

	<stage>
		<if>"${ap1.wifi1.existed}" == "true" &amp;&amp; "${ap2.wifi1.existed}" == "true"</if>

		<step no="0">
			<desc>
				shutdown interface eth1
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<console target="ap1">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="1">
			<desc>
				Configure AP
			</desc>
			<telnet target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${conn1.ssid}"
				-v "ssid ${conn1.ssid} security-object ${ssid.name}"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "user-profile ${user_id} qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "interface wifi1 radio channel 36"
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
				-v "clear forwarding-engine ip-sessions"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				Configure MP
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${conn2.ssid}"
				-v "ssid ${conn2.ssid} security-object ${ssid.name}"
				-v "interface wifi0 ssid ${conn2.ssid}"
				-v "user-profile ${user_id} qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "interface wifi1 radio channel 36"
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
				-v "clear forwarding-engine ip-sessions"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				check wifi1
			</desc>
			<log-file>step1.2_check_wifi1.log</log-file>
			<telnet target="ap2">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				Get wifi1 mac
			</desc>
			<setvar name="ap2_wifi1_mac">
				${bin.dir}/getbyrexp.py -p "MAC addr=(\S+);" -f ${log.dir}/step1.2_check_wifi1.log -t str
			</setvar>
		</step>

		<step no="1.4" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				check amrp neighbor
			</desc>
			<log-file>step1.4_check_amrp_neighbor_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show amrp neighbor"
			</telnet>
			<log-match>-c -i "${ap2_wifi1_mac}" -i "${ap2.mgt0.ip}" -i "TWO-WAY"</log-match>
		</step>

		<step no="1.5">
			<desc>
				shutdown interface eth0
			</desc>
			<console target="ap1">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta2, ap2" />

		<step no="open.debug">
			<desc>
				open debug
			</desc>
			<console target="ap1">
				-v "_ff id 1 src-ip ${sta1.tif.ip} bidirectional"
				-v "_ff id 2 src-ip ${sta2.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
			</console>
		</step>

		<include prefix="4" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5" />

		<include prefix="5" file="subs/sta_ping.xml" args="sta2, ${sta1.tif.ip}, 5" />

		<step no="6">
			<desc>
				- Configure a ip-policy and bind it to FW:
				"ip-policy FW"
				"ip-policy FW from &lt;Laptop ip addr&gt; action permit"
				"user-profile FW security ip-policy from-access FW to-access FW"
			</desc>
			<console target="ap1">
				-v "ip-policy ${user_id}"
				-v "ip-policy ${user_id} id 1 from ${sta1.tif.ip} action permit"
				-v "user-profile ${user_id} security ip-policy from-access ${user_id} to-access ${user_id}"
				-v "clear log all"
				-v "clear forwarding-engine ip-sessions"
				-v "clear arp-cache"
				-v "no forwarding-engine proxy-arp enable"
			</console>
		</step>

		<include prefix="7" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5" />

		<step no="7.1" delay="20">
			<desc>
				show logging buffered
			</desc>
			<log-file>step7.1_show_loging_buffered.log</log-file>
			<console target="ap1" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear forwarding-engine ip-sessions"
				-v "clear log all"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(o\) wifi0.1 ${sta1.tif.ip}-&gt;${sta2.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[egress \(to-air\)\] group \[${user_id}\] id \[\d+\] \[permit\]" -e "\(i\) wifi1.1 ${sta1.tif.ip}-&gt;${sta2.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<include prefix="8" file="subs/sta_ping.xml" args="sta2, ${sta1.tif.ip}, 5, negative" />

		<step no="8.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step8.1_show_loging_buffered.log</log-file>
			<console target="ap1" timeout="600">
				-v "show logging buffered"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(\!\) wifi0.1 ${sta2.tif.ip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[ingress \(from-air\)\] upid default action \[deny\]" -e "\(i\) wifi0.1 ${sta2.tif.ip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="9">
			<desc>
				config arp on sta1
			</desc>
			<ssh target="sta1" timeout="120">
				-v "arp -s ${sta2.tif.ip} ${sta2.tif.mac}"
			</ssh>
		</step>

		<step no="9.1">
			<desc>
				config arp on sta2
			</desc>
			<ssh target="sta2" timeout="120">
				-v "arp -s ${sta1.tif.ip} ${sta1.tif.mac}"
			</ssh>
		</step>

		<step no="10">
			<desc>
				Delete the policy config
				"no ip-policy FW id 1"
			</desc>
			<console target="ap1">
				-v "no ip-policy ${user_id} id 1"
				-v "clear forwarding-engine ip-sessions"
				-v "clear log all"
			</console>
		</step>

		<include prefix="11" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5, negative" />

		<step no="11.1" delay="20">
			<desc>
				show logging buffered
			</desc>
			<log-file>step11.1_show_loging_buffered.log</log-file>
			<console target="ap1" timeout="600">
				-v "show logging buffered"
				-v ""
				-v "clear forwarding-engine ip-sessions"
				-v "clear log all"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(\!\) wifi1.1 ${sta1.tif.ip}-&gt;${sta2.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[egress \(to-air\)\] upid default action \[deny\]" -e "\(i\) wifi1.1 ${sta1.tif.ip}-&gt;${sta2.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<include prefix="12" file="subs/sta_ping.xml" args="sta2, ${sta1.tif.ip}, 5, negative" />

		<step no="12.1">
			<desc>
				show logging buffered
			</desc>
			<log-file>step12.1_show_loging_buffered.log</log-file>
			<console target="ap1" timeout="600">
				-v "show logging buffered"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(\!\) wifi0.1 ${sta2.tif.ip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[ingress \(from-air\)\] upid default action \[deny\]" -e "\(i\) wifi0.1 ${sta2.tif.ip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					delete arp on sta1
				</desc>
				<ssh target="sta1" timeout="120">
					-v "arp -d ${sta2.tif.ip}"
				</ssh>
			</step>

			<step no="0.1">
				<desc>
					delete arp on sta2
				</desc>
				<ssh target="sta2" timeout="120">
					-v "arp -d ${sta1.tif.ip}"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>
