<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>IP-session parameters(Proto) test.</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Laptop has been associated with AP1 and assigned an ip address
		-Laptop uses user-profile "FW"

		Test Procedure:
		1) Config ip-policy which permit Laptop's ip_address
		"ip-policy FW"
		"ip-policy FW from/to &lt;Laptop ip addr&gt; action permit"
		"user-profile FW security ip-policy from/to-access FW"
		"ssid &lt;ssid_name&gt; default-user-profile-attr [num]"
		2) Laptop ping AP1
		3) Check the ip-session table on AP1
		4) Laptop telnet Server
		5) Check the ip-session table on AP1
		6) Laptop get a file from Server by tftp
		7) Check the ip-session table on AP1
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="user_id" value="FW" />
	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="ftp_test_file_local_dir" value="/tmp" />

	<stage>
		<step no="0">
			<desc>
				-Config ap1's vlan and native-vlan
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="0.1" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step0.1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="0.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="1">
			<desc>
				-config ssid and bind to interface
				-Laptop uses user-profile "FW"
			</desc>
			<telnet target="ap1">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "user-profile ${user_id} qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
			</telnet>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="open.debug">
			<desc>
				open debug mode and clear log all
			</desc>
			<telnet target="ap1">
				-v "_ff id 1 dst-ip ${sta1.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
				-v "clear forwarding-engine ip-sessions"
			</telnet>
		</step>

		<step no="3">
			<desc>
				-Config ip-policy which permit Laptop's ip_address
			</desc>
			<telnet target="ap1">
				-v "ip-policy ${user_id}"
				-v "ip-policy ${user_id} id 1 from ${sta1.tif.ip} action permit"
				-v "user-profile ${user_id} security ip-policy from-access ${user_id}"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				clear local file
			</desc>
			<ssh target="sta1">
				-v "rm -f /${ftp_test_file_local_dir}/${job.id}ping.log"
				-v "rm -f ${ftp_test_file_local_dir}/${tb.ftp.file3_small}"
			</ssh>
		</step>

		<step no="4.1">
			<desc>
				Laptop ping AP1 in background
			</desc>
			<log-file>step4.1_sta1_start_ping.log</log-file>
			<ssh target="sta1">
				-v "nohup ping ${ap1.mgt0.ip} &gt; /${ftp_test_file_local_dir}/${job.id}ping.log &amp;"
			</ssh>
		</step>

		<step no="4.2">
			<desc>
				get ping id
			</desc>
			<setvar name="ping.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step4.1_sta1_start_ping.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="4.3" delay="60">
			<desc>
				check ping result
			</desc>
			<log-file>step4.3_check_ping_result.log</log-file>
			<ssh target="sta1">
				-v "tail ${ftp_test_file_local_dir}/${job.id}ping.log"
			</ssh>
			<log-match>-c -i "from ${ap1.mgt0.ip}: " -i "ttl="</log-match>
		</step>

		<step no="5">
			<desc>
				3) Check the ip-session table on AP1
			</desc>
			<log-file>step5_show_ip_sessions.log</log-file>
			<telnet target="ap1">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match>-c -i "${ap1.mgt0.ip}" -i "${sta1.tif.ip}" -i "Proto 1;"</log-match>
		</step>

		<step no="6">
			<desc>
				kill ping process
			</desc>
			<ssh target="sta1">
				-v "kill ${ping.pid}"
				-v 'rm -rf /root/.ssh/known_hosts'
			</ssh>
		</step>

		<step no="6.1">
			<desc>
				-clear log all
			</desc>
			<telnet target="ap1">
				-v "clear forwarding-engine ip-sessions"
				-v "clear log all"
			</telnet>
		</step>

		<step no="7">
			<desc>
				-Laptop telnet Server
			</desc>
			<log-file>step7_sta1_start_telnet.log</log-file>
			<ssh target="sta1" timeout="300">
				-v "nohup clicfg.pl -i 23 -o 900 -d ${pub.telnet_server1.ip} -u ${pub.telnet_server1.username} -p ${pub.telnet_server1.passwd} -n -z step5_ssh_ap1.log -l ${ftp_test_file_local_dir}/ -v \"ping ${sta1.tif.ip} -c 15\" &amp;" ; exit 0
			</ssh>
			<no-error-check />
		</step>

		<step no="7.1" delay="5">
			<desc>
				"show forwarding-engine ip-sessions"
			</desc>
			<log-file>step7.1_show_forwarding_ip_sessions.log</log-file>
			<telnet target="ap1">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+\s*-&gt;.*?${pub.telnet_server1.ip}/23; Proto 6" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${pub.telnet_server1.ip}/23\s*-&gt;.*?${sta1.tif.ip}/\d+; Proto 6" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7.2">
			<desc>
				get telnet id
			</desc>
			<setvar name="telnet.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step7_sta1_start_telnet.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="7.3">
			<desc>
				kill telnet process
			</desc>
			<ssh target="sta1">
				-v "kill ${telnet.pid}"
			</ssh>
		</step>

		<step no="8">
			<desc>
				-clear log all
			</desc>
			<telnet target="ap1">
				-v "clear forwarding-engine ip-sessions"
				-v "clear log all"
			</telnet>
		</step>

		<step no="8.1">
			<desc>
				get file from ftp server
			</desc>
			<log-file>step8.1_start_tftp.log</log-file>
			<ssh target="sta1">
				-v "nohup tftp ${tb.tftp} -c get ${tb.ftp.file3_small} &amp;"
			</ssh>
		</step>

		<step no="8.2" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				check ping process
			</desc>
			<log-file>step8.2_check_tftp_process_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep tftp"
			</ssh>
			<log-match>-i "${tb.tftp}"</log-match>
		</step>

		<step no="9">
			<desc>
				"show forwarding-engine ip-sessions"
			</desc>
			<log-file>step9_show_forwarding_ip_sessions.log</log-file>
			<telnet target="ap1">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+\s*-&gt;.*?${tb.ftp}/69; Proto 17" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/69\s*-&gt;.*?${sta1.tif.ip}/\d+; Proto 17" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="9.1">
			<desc>
				get pid
			</desc>
			<setvar name="tftp.get.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step8.1_start_tftp.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="9.2" type="loop-check" loop-max-times="20" loop-interval="10">
			<desc>
				check ping process
			</desc>
			<log-file>step9.2_check_tftp_process_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep tftp"
			</ssh>
			<log-match>-n -i "${tb.tftp}"</log-match>
		</step>

		<step no="10">
			<desc>
				local file should exist
			</desc>
			<log-file>step10_local_file_chk.log</log-file>
			<ssh target="sta1">
				-v "ls"
			</ssh>
			<log-match>-i "${tb.ftp.file3_small}"</log-match>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					-kill background process
					-clear local file
				</desc>
				<ssh target="sta1">
					-v "killall -q clicfg.pl"
					-v "killall -q tftp"
					-v "rm -f /${ftp_test_file_local_dir}/${job.id}ping.log"
					-v "rm -f ${tb.ftp.file3_small}"
					-v "rm -f ${ftp_test_file_local_dir}/step5_ssh_ap1.log"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>