<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>IP-session correlative L3 roaming test.</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Configure AP1
		security-object cw-330-1
		security-object cw-330-1 default-user-profile-attr 1
		ssid cw-330-1
		ssid cw-330-1 security-object cw-330-1
		hive caiw
		interface mgt0 hive caiw
		interface mgt0 vlan 27
		interface wifi0 ssid cw-330-1
		interface wifi1 ssid cw-330-1
		mobility-policy roaming dnxp
		user-profile cw-330-1 qos-policy def-user-qos vlan-id 27 mobility-policy roaming attribute 1
		ip-policy fw
		ip-policy fw id 1 action permit
		user-profile cw-330-1 security ip-policy from-access fw to-access fw
		-Configure AP2
		security-object cw-330-1
		security-object cw-330-1 default-user-profile-attr 1
		ssid cw-330-1
		ssid cw-330-1 security-object cw-330-1
		hive caiw
		interface mgt0 hive caiw
		interface mgt0 vlan 28
		interface wifi0 ssid cw-330-1
		interface wifi1 ssid cw-330-1
		mobility-policy roaming dnxp
		user-profile cw-330-1 qos-policy def-user-qos vlan-id 28 mobility-policy roaming attribute 1
		ip-policy fw
		ip-policy fw id 1 action permit
		user-profile cw-330-1 security ip-policy from-access fw to-access fw

		Test Procedure:
		1.Confirm station state on AP1
		“show station”
		2.Turn on debug on AP1/AP2,Clear session
		“_kdebug fe sync”
		“clear forwarding-engine ip-sessions”
		3.Laptop ssh to server
		4.Check the ip-session table on AP1 and AP2
		“show forwarding-engine ip-sessions”
		5.Shutdown SSID on AP1
		“interface wifi0 ssid cw-330-1 shutdown”
		“interface wifi1 ssid cw-330-1 shutdown”
		6.Check the ip-session table on AP1 and AP2, look up logs
		“show forwarding-engine ip-sessions”
		7.Use laptop ssh server to ping ap1 or any other reachable IPaddr
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<property name="ftp_test_file_local_dir" value="/tmp" />

	<stage>
		<step no="0">
			<desc>
				Delete some file
			</desc>
			<ssh target="sta1" timeout="100">
				-v "rm -f /tmp/${tb.ftp.file3_small}"
				-v "rm -f /tmp/result.log"
			</ssh>
		</step>

		<step no="0.1">
			<desc>
				shutdown interface eth1
			</desc>
			<if>"${ap.eth1.existed}" == "true"</if>
			<console target="ap1" timeout="100">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="0.2">
			<desc>
				shutdown interface eth1
			</desc>
			<if>"${ap.eth1.existed}" == "true"</if>
			<console target="ap2" timeout="100">
				-v "interface eth1 shutdown"
			</console>
		</step>

		<step no="1">
			<desc>
				-AP1 is in the different vlan
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<console target="ap1" timeout="100">
				-v "security-object cw-330-1"
				-v "security-object cw-330-1 default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object cw-330-1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi1 radio channel 165"
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
				-v "mobility-policy roaming dnxp"
				-v "user-profile cw-330-1 qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy roaming attribute 1"
				-v "ip-policy fw"
				-v "ip-policy fw id 1 action permit"
				-v "user-profile cw-330-1 security ip-policy from-access fw to-access fw"
				-v "interface wifi0 radio power 20"
			</console>
		</step>
		
		<step no="1_0">
			<desc>
				-AP1 is in the different vlan
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<console target="ap1" timeout="100">
				-v "security-object cw-330-1"
				-v "security-object cw-330-1 default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object cw-330-1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "no interface mgt0 dhcp-server enable"
				-v "no interface mgt0 ip"
				-v "interface mgt0 dhcp client"
				-v "interface eth0 mode backhaul"
				-v "interface eth0 mac-learning enable" 
				-v "interface wifi0 mode dual"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi0 hive ${hive.name} shutdown"
				-v "no interface wifi0 hive ${hive.name} shutdown"
				-v "mobility-policy roaming dnxp"
				-v "user-profile cw-330-1 qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy roaming attribute 1"
				-v "ip-policy fw"
				-v "ip-policy fw id 1 action permit"
				-v "user-profile cw-330-1 security ip-policy from-access fw to-access fw"
				-v "interface wifi0 radio power 20"
			</console>
		</step>		
		
		<step no="0.2" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step0.2_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="0.3">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.2_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
		
		<include prefix="2.1" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="2.2">
			<desc>
				Config the laptop to apply the ssid profile,then start to associate
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<include prefix="2.3" file="subs/chk_conn_in_sta.xml" args="sta1" />

		<step no="2.4" delay="10">
			<desc>ifconfig to show the ip add</desc>
			<log-file>step2.4_ifconfig.log</log-file>
			<ssh target="sta1" timeout="100">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="2.5">
			<desc>Get laptop1's ip</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step2.4_ifconfig.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="3">
			<desc>
				Confirm station state on AP1
			</desc>
			<log-file>step3_show_station_info.log</log-file>
			<telnet target="ap1" timeout="100">
				-v "show station"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				-AP2 is are in the different vlan
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<console target="ap2" timeout="100">
				-v "security-object cw-330-1"
				-v "security-object cw-330-1 default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object cw-330-1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan2}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi1 radio channel 165"
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
				-v "mobility-policy roaming dnxp"
				-v "user-profile cw-330-1 qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy roaming attribute 1"
				-v "ip-policy fw"
				-v "ip-policy fw id 1 action permit"
				-v "user-profile cw-330-1 security ip-policy from-access fw to-access fw"
				-v "interface wifi0 radio power 5"
			</console>
		</step>
		
		<step no="3.1_0">
			<desc>
				-AP2 is are in the different vlan
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<console target="ap2" timeout="100">
				-v "security-object cw-330-1"
				-v "security-object cw-330-1 default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object cw-330-1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface mgt0 vlan ${tb.vlan2}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "no interface mgt0 dhcp-server enable"
				-v "no interface mgt0 ip"
				-v "interface mgt0 dhcp client"
				-v "interface eth0 mode backhaul"
				-v "interface eth0 mac-learning enable" 
				-v "interface wifi0 mode dual"				
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface wifi0 hive ${hive.name} shutdown"
				-v "no interface wifi0 hive ${hive.name} shutdown"
				-v "mobility-policy roaming dnxp"
				-v "user-profile cw-330-1 qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy roaming attribute 1"
				-v "ip-policy fw"
				-v "ip-policy fw id 1 action permit"
				-v "user-profile cw-330-1 security ip-policy from-access fw to-access fw"
				-v "interface wifi0 radio power 5"
			</console>
		</step>

		<step no="3.1.1">
			<desc>
				close dhcp client
			</desc>
			<console target="ap2" timeout="100">
				-v "no interface mgt0 dhcp client"
			</console>
		</step>

		<step no="3.1.2">
			<desc>
				open dhcp client
			</desc>
			<console target="ap2" timeout="100">
				-v "interface mgt0 dhcp client"
			</console>
		</step>

		<step no="3.2">
			<desc>
				show ap1's interface
			</desc>
			<log-file>step3.2_show_ap2_interface_info.log</log-file>
			<console target="ap2" timeout="100">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="3.3">
			<desc>
				gain ap2's mgt0's mac address
			</desc>
			<setvar name="ap2_mgt0_mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step3.2_show_ap2_interface_info.log -i mgt0 -o aero -m -width 2
			</setvar>
		</step>

		<step no="3.4">
			<desc>Get ap2's ip</desc>
			<setvar name="ap2.mgt0.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step3.2_show_ap2_interface_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="3.4.1">
			<desc>
				show ap1's interface
			</desc>
			<log-file>step3.4.1_show_ap2_interface_info.log</log-file>
			<console target="ap2" timeout="100">
				-v "show interface eth0"
			</console>
		</step>

		<step no="3.4.2">
			<desc>
				gain ap2's mgt0's mac address
			</desc>
			<setvar name="ap2_eth0_mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step3.4.1_show_ap2_interface_info.log -i eth0 -o aero -m -width 2
			</setvar>
		</step>

		<step no="3.4.3">
			<desc>
				show ap1's interface
			</desc>
			<log-file>step3.4.3_show_ap1_interface_info.log</log-file>
			<console target="ap1" timeout="100">
				-v "show interface eth0"
			</console>
		</step>

		<step no="3.4.4">
			<desc>
				gain ap1's mgt0's mac address
			</desc>
			<setvar name="ap1_eth0_mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step3.4.3_show_ap1_interface_info.log -i eth0 -o aero -m -width 2
			</setvar>
		</step>

		<step no="3.4.5">
			<desc>
				show ap1's interface
			</desc>
			<log-file>step_3.4.5_show_ap1_interface_info.log</log-file>
			<console target="ap1" timeout="100">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="3.4.6">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step_3.4.5_show_ap1_interface_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="3.5" delay="100">
			<desc>
				Show roaming cache
			</desc>
			<log-file>step3.5_show_roaming_cache.log</log-file>
			<console target="ap1" timeout="100">
				-v "show roaming cache"
			</console>
		</step>

		<step no="3.6">
			<desc>
				show amrp dnxp neighbor
			</desc>
			<log-file>step3.6_show_amrp_dnxp_neighbor.log</log-file>
			<console target="ap1" timeout="100">
				-v "show amrp dnxp neighbor"
			</console>
			<log-match>-e "${ap2_eth0_mac} ${ap2.mgt0.ip}"</log-match>
		</step>

		<step no="3.6.1">
			<desc>
				show amrp dnxp neighbor
			</desc>
			<log-file>step3.6.1_show_amrp_dnxp_neighbor.log</log-file>
			<console target="ap2" timeout="100">
				-v "show amrp dnxp neighbor"
			</console>
			<log-match>-e "${ap1_eth0_mac} ${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="4">
			<desc>
				Turn on debug on AP1,Clear session
			</desc>
			<telnet target="ap1" timeout="100">
				-v "clear log all"
				-v "_kdebug fe sync"
				-v "_kdebug fe session"
				-v "clear forwarding-engine ip-sessions"
			</telnet>
		</step>

		<step no="4.1">
			<desc>
				Turn on debug on AP2,Clear session
			</desc>
			<telnet target="ap2" timeout="100">
				-v "clear log all"
				-v "_kdebug fe sync"
				-v "_kdebug fe session"
				-v "clear forwarding-engine ip-sessions"
			</telnet>
		</step>

		<step no="5.2">
			<desc>
				Laptop ftp Server
			</desc>
			<log-file>5.2_curl_pid.log</log-file>
			<ssh target="sta1" timeout="100">
				-v "nohup curl -u ${tb.ftp.user}:${tb.ftp.passwd} ftp://${tb.ftp}/${tb.ftp.file3_small} -o ${ftp_test_file_local_dir}/${tb.ftp.file3_small} --limit-rate 1k --connect-timeout 150 -P ${sta1.tif.ip} > ${ftp_test_file_local_dir}/5.2_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="5.3">
			<desc>
				Check process of python
			</desc>
			<log-file>ps_aux_grep3.log</log-file>
			<ssh target="sta1" timeout="100">
				-v "ps aux | grep curl"
			</ssh>
			<log-match>-e "ftp"</log-match>
		</step>

		<step no="6">
			<desc>
				Check the ip-session table on AP1
			</desc>
			<log-file>show_ap1_ip_sessions.log</log-file>
			<telnet target="ap1" timeout="100">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}\/\d+\s*-&gt;\s*${tb.ftp}\/\d+;\s*Proto 6" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}\/\d+\s*-&gt;\s*${sta1.tif.ip}\/\d+;\s*Proto 6" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="6.1">
			<desc>
				Check the ip-session table on AP2
			</desc>
			<log-file>show_ap2_ip_sessions.log</log-file>
			<telnet target="ap2" timeout="100">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}\/\d+\s*-&gt;\s*${tb.ftp}\/\d+;\s*Proto 6" -c 0 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}\/\d+\s*-&gt;\s*${sta1.tif.ip}\/\d+;\s*Proto 6" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="7">
			<desc>
				Shutdown SSID on AP1
			</desc>
			<telnet target="ap1" timeout="100">
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="7.0.1" delay="20">
			<desc>
				test roaming
			</desc>
			<log-file>step7.0.1_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="300">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
		</step>

		<step no="7.0.2">
			<desc>
				test roaming
			</desc>
			<log-file>step7.0.2_show_logging_buffered.log</log-file>
			<telnet target="ap2" timeout="300">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
		</step>

		<step no="7.1" delay="180">
			<desc>
				show route
			</desc>
			<log-file>step7.1_show_route.log</log-file>
			<console target="ap1" timeout="100">
				-v "show route" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "mgt0" -i "LTO"</log-match>
		</step>

		<step no="7.2">
			<desc>
				show route
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<log-file>step7.2_show_route.log</log-file>
			<console target="ap2" timeout="100">
				-v "show route" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "wifi0.1" -i "LTO"</log-match>
		</step>
		
		<step no="7.2_0">
			<desc>
				show route
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<log-file>step7.2_show_route.log</log-file>
			<console target="ap2" timeout="100">
				-v "show route" ; exit 0
			</console>
			<no-error-check />
			<log-match>-e "wifi0.2" -i "LTO"</log-match>
		</step>

		<step no="8">
			<desc>
				Check the ip-session table on AP1 and AP2, look up logs
			</desc>
			<log-file>show_ap1_ip_sessions_after_ssid_shutdown.log</log-file>
			<telnet target="ap1" timeout="100">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}\/\d+\s*-&gt;\s*${tb.ftp}\/\d+;\s*Proto 6" -c 0 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}\/\d+\s*-&gt;\s*${sta1.tif.ip}\/\d+;\s*Proto 6" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="8.2">
			<desc>
				Check the ip-session table on AP2, look up logs
			</desc>
			<log-file>show_ap2_ip_sessions_after_ssid_shutdown.log</log-file>
			<telnet target="ap2" timeout="100">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}\/\d+\s*-&gt;\s*${tb.ftp}\/\d+;\s*Proto 6" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}\/\d+\s*-&gt;\s*${sta1.tif.ip}\/\d+;\s*Proto 6" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="8.3">
			<desc>
				Show logging buffered on ap1
			</desc>
			<log-file>step8.3_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="300">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "send ip-session\s+\(id\s+\d+\)\s+${sta1.tif.ip}\/\d+\s*&lt;-&gt;\s*${tb.ftp}\/21, proto 6 qos 2, mac-sess dir \(reverse\).*flag 0x0" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "send sess sync"  -f ${log.dir}/${log.file}</log-match>
		<!--	<log-match>-e -re "${sta1.tif.ip}\/\d+\s*&lt;-&gt;\s*${tb.ftp}\/21, proto 6 qos 2, mac sess dir \(reverse\)" -f ${log.dir}/${log.file}</log-match>   -->
		</step>

		<step no="8.4">
			<desc>
				Show logging buffered on ap2
			</desc>
			<log-file>step8.4_show_logging_buffered.log</log-file>
			<telnet target="ap2" timeout="300">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "receive ip session from sync\s+${sta1.tif.ip}.*?&lt;-&gt;\s*${tb.ftp}\/21, 6, mac sess dir \(reverse\).*flag 0x0" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="9" delay="10">
			<desc>
				Break ftp connection
			</desc>
			<log-file>show_touch_file.log</log-file>
			<ssh target="sta1" timeout="100">
				-v "ps aux | grep python"
				-v "killall curl"
				-v "killall nohup"
			</ssh>
		</step>

		<step no="9.1">
			<desc>
				Recover AP1
			</desc>
			<telnet target="ap1" timeout="100">
				-v "no interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="10">
			<desc>
				Recover AP2
			</desc>
			<telnet target="ap2" timeout="100">
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<include prefix="11.1" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="11.2">
			<desc>
				Config the laptop to apply the ssid profile,then start to associate
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<include prefix="11.3" file="subs/chk_conn_in_sta.xml" args="sta1" />

		<step no="11.3.1">
			<desc>get ip address</desc>
			<ssh target="sta1" timeout="80">
				-v "dhclient ${sta1.tif.name} -r"
				-v "dhclient ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="11.4" delay="10">
			<desc>ifconfig to show the ip add</desc>
			<log-file>step11.4_ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="11.5">
			<desc>Get laptop1's ip</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step11.4_ifconfig.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="12">
			<desc>
				Confirm station state on AP1
			</desc>
			<log-file>step12_show_station_info.log</log-file>
			<telnet target="ap1" timeout="100">
				-v "show station"
			</telnet>
		</step>

		<step no="12.1">
			<desc>
				Recover AP2
			</desc>
			<telnet target="ap2" timeout="100">
				-v "no interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="13" delay="30">
			<desc>
				show amrp dnxp neighbor
			</desc>
			<log-file>step13_show_amrp_dnxp_neighbor.log</log-file>
			<console target="ap1" timeout="100">
				-v "show amrp dnxp neighbor"
			</console>
		</step>

		<step no="14">
			<desc>
				Turn on debug on AP1,Clear session
			</desc>
			<telnet target="ap1" timeout="100">
				-v "_ff src-ip ${tb.ftp} protocol 6 bidirectional"
				-v "_kdebug fe sync"
				-v "_kdebug fe detail"
				-v "_kdebug fe basic"
				-v "clear log all"
				-v "clear forwarding-engine ip-sessions"
			</telnet>
		</step>

		<step no="14.1">
			<desc>
				Turn on debug on AP2,Clear session
			</desc>
			<telnet target="ap2" timeout="100">
				-v "_ff src-ip ${tb.ftp} protocol 6 bidirectional"
				-v "_kdebug fe sync"
				-v "_kdebug fe detail"
				-v "_kdebug fe basic"
				-v "clear log all"
				-v "clear forwarding-engine ip-sessions"
			</telnet>
		</step>

		<step no="15">
			<desc>
				Laptop ftp Server
			</desc>
			<log-file>15_curl_pid.log</log-file>
			<ssh target="sta1" timeout="100">
				-v "rm -f ${ftp_test_file_local_dir}/${tb.ftp.file3_small}"
				-v "nohup curl -u ${tb.ftp.user}:${tb.ftp.passwd} ftp://${tb.ftp}/${tb.ftp.file3_small} -o ${ftp_test_file_local_dir}/${tb.ftp.file3_small} --limit-rate 10k --connect-timeout 150 -P ${sta1.tif.ip} > ${ftp_test_file_local_dir}/15_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="15.1">
			<desc>
				Check ACL
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<log-file>step15.1_show_logging_buffered</log-file>
			<telnet target="ap1" timeout="300">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(o\) eth0 ${sta1.tif.ip}-&gt;${tb.ftp}.* TCP" -ps p "ACL: matched upid \[\d+\] dir \[ingress \(from-air\)\] group \[fw\] id \[1\] \[permit\]" p "create new IP session" -e "\(i\) wifi0.1 ${sta1.tif.ip}-&gt;${tb.ftp}.* TCP" -f ${log.dir}/${log.file}</log-match>
		</step>
		
		<step no="15.1_0">
			<desc>
				Check ACL
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<log-file>step15.1_show_logging_buffered</log-file>
			<telnet target="ap1" timeout="300">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(o\) eth0 ${sta1.tif.ip}-&gt;${tb.ftp}.* TCP" -ps p "ACL: matched upid \[\d+\] dir \[ingress \(from-air\)\] group \[fw\] id \[1\] \[permit\]" p "create new IP session" -e "\(i\) wifi0.2 ${sta1.tif.ip}-&gt;${tb.ftp}.* TCP" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="15.2">
			<desc>
				Laptop ftp Server
			</desc>
			<log-file>step15.0.1_test_process.log</log-file>
			<ssh target="sta1" timeout="100">
				-v "ps aux | grep curl"
			</ssh>
			<log-match>-e "ftp"</log-match>
		</step>

		<step no="16">
			<desc>
				Check the ip-session table on AP1
			</desc>
			<log-file>step16_show_ap1_ip_sessions.log</log-file>
			<telnet target="ap1" timeout="100">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}\/\d+\s*-&gt;\s*${tb.ftp}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="16.1">
			<desc>
				Check the ip-session table on AP2
			</desc>
			<log-file>step16.1_show_ap2_ip_sessions.log</log-file>
			<telnet target="ap2" timeout="100">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}\/\d+\s*-&gt;\s*${tb.ftp}" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="17">
			<desc>
				Shutdown SSID on AP1
			</desc>
			<telnet target="ap1" timeout="100">
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="17.1" delay="180">
			<desc>
				show route
			</desc>
			<log-file>step17.1_show_route.log</log-file>
			<console target="ap1" timeout="100">
				-v "show route"
			</console>
			<log-match>-e "mgt0" -i "LTO"</log-match>
		</step>

		<step no="18">
			<desc>
				Check the ip-session table on AP1 and AP2, look up logs
			</desc>
			<log-file>step18_show_ap1_ip_sessions_after_ssid_shutdown.log</log-file>
			<telnet target="ap1" timeout="100">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}\/\d+\s*-&gt;\s*${tb.ftp}" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="18.1">
			<desc>
				Check the ip-session table on AP2, look up logs
			</desc>
			<log-file>step18.1_show_ap2_ip_sessions_after_ssid_shutdown.log</log-file>
			<telnet target="ap2" timeout="100">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}\/\d+\s*-&gt;\s*${tb.ftp}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="19" delay="30">
			<desc>
				Show logging buffered on ap1
			</desc>
			<log-file>step19_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="300">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(i\) mgt0 ${ap1.mgt0.ip}-&gt;${ap2.mgt0.ip}" -ps p0 "create new IP session" -e "\(i\) eth0 ${tb.ftp}-&gt;${sta1.tif.ip}.* TCP" -f ${log.dir}/${log.file} -nb -ne</log-match>
		</step>

		<step no="19.1" delay="30">
			<desc>
				Show logging buffered on ap2
			</desc>
			<if> "${ap.is_aptbbr}" != "true" &amp;&amp; "${ap.is_br}" != "true" </if>
			<log-file>step19.1_show_logging_buffered.log</log-file>
			<telnet target="ap2" timeout="300">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(i\) mgt0 ${ap2.mgt0.ip}-&gt;${ap1.mgt0.ip}" -ps p0 "create new IP session" -e "\(i\) wifi0.1 ${sta1.tif.ip}-&gt;${tb.ftp}.* TCP" -f ${log.dir}/${log.file} -nb -ne</log-match>
		</step>
		
		<step no="19.1_0" delay="30">
			<desc>
				Show logging buffered on ap2
			</desc>
			<if> "${ap.is_aptbbr}" == "true" || "${ap.is_br}" == "true" </if>
			<log-file>step19.1_show_logging_buffered.log</log-file>
			<telnet target="ap2" timeout="300">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(i\) mgt0 ${ap2.mgt0.ip}-&gt;${ap1.mgt0.ip}" -ps p0 "create new IP session" -e "\(i\) wifi0.2 ${sta1.tif.ip}-&gt;${tb.ftp}.* TCP" -f ${log.dir}/${log.file} -nb -ne</log-match>
		</step>

		<step no="20" delay="300">
			<desc>
				check "curl get" result
			</desc>
			<log-file>step20_show_result.log</log-file>
			<ssh target="sta1" timeout="100">
				-v "cat ${ftp_test_file_local_dir}/15_stdout.log"
			</ssh>
			<log-match>-n -e "curl" -i "Connection time-out"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "100\s+\d+\w\s+100" -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>
</testcase>