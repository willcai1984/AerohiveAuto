<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Add/Delete policy while traffic is on-going(from-access permit+deny, two Laptops)</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Laptops has been associated with AP1 and assigned an ip address

		Test Procedure:
		1) Laptop2 and Laptop1 ping each other continuance
		2) Configure a L2 policy and bind it to FW:
		"mac-policy FW"
		"mac-policy FW from &lt;Laptop1 mac addr&gt; action permit"
		"user-profile FW security mac-policy from-access FW"
		"ssid &lt;ssid_name&gt; default-user-profile-attr [num]"
		3) Check the ping pkt
		4) Add the deny policy
		"mac-policy FW to &lt;Laptop1 mac addr&gt; action deny"
		5) Check the ping pkt
		6) Delete the permit policy
		"no user-profile FW security mac-policy from-access"
		"no mac-policy FW id [num=permit policy num]"
		7) Check the ping pkt
		8) Delete the deny policy
		"no user-profile FW security mac-policy from-access"
		"no mac-policy FW id [num=deny policy num]"
		9) Check the ping pkt
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>

	<property name="user_id" value="FWtest" />
	<property name="conn1.ssid" value="${ssid.name}" />

	<stage>
		<step no="0">
			<desc>
				Configure AP1
			</desc>
			<telnet target="ap1">
				-v "security-object ${conn1.ssid}"
				-v "security-object ${conn1.ssid} default-user-profile-attr 1"
				-v "ssid ${conn1.ssid}"
				-v "ssid ${conn1.ssid} security-object ${conn1.ssid}"
				-v "interface wifi0 ssid ${conn1.ssid}"
				-v "user-profile ${user_id} qos-policy def-user-qos vlan-id 1 attribute 1"
			</telnet>
		</step>

		<include prefix="1" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta2, ap1" />

		<step no="open.debug">
			<desc>
				open debug switch
			</desc>
			<telnet target="ap1" timeout="60">
				-v "_ff id 1 src-ip ${sta1.tif.ip} bidirectional"
				-v "_ff id 2 src-ip ${sta2.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
			</telnet>
		</step>

		<include prefix="3" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5" />

		<include prefix="4" file="subs/sta_ping.xml" args="sta2, ${sta1.tif.ip}, 5" />

		<step no="5">
			<desc>
				- Configure a mac-policy and bind it to FW:
				"mac-policy FW"
				"mac-policy FW from &lt;Laptop mac addr&gt; action permit"
				"user-profile FW security mac-policy from-access FW"
			</desc>
			<telnet target="ap1">
				-v "mac-policy ${user_id}"
				-v "mac-policy ${user_id} id 1 from ${sta1.tif.mac} action permit"
				-v "user-profile ${user_id} security mac-policy from-access ${user_id}"
			</telnet>
		</step>

		<step no="5.1" delay="30">
			<desc>
				clear log all
			</desc>
			<telnet target="ap1">
				-v "clear forwarding-engine mac-sessions"
				-v "clear log all"
			</telnet>
		</step>

		<include prefix="6" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5, negative" />

		<include prefix="7" file="subs/sta_ping.xml" args="sta2, ${sta1.tif.ip}, 5, negative" />

		<step no="8">
			<desc>
				show logging buffered
			</desc>
			<log-file>step8_show_loging_buffered.log</log-file>
			<telnet target="ap1" timeout="600">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(\!\) wifi0.1 ${sta1.tif.ip}-&gt;${sta2.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[egress \(to-air\)\] upid default action \[deny\]" -e "\(i\) wifi0.1 ${sta1.tif.ip}-&gt;${sta2.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(\!\) wifi0.1 ${sta2.tif.ip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[ingress \(from-air\)\] upid default action \[deny\]" -e "\(i\) wifi0.1 ${sta2.tif.ip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="9">
			<desc>
				Add the deny policy
				“mac-policy FW to &lt;Laptop mac addr&gt; action deny”
			</desc>
			<telnet target="ap1">
				-v "mac-policy ${user_id} id 2 to ${sta1.tif.mac} action deny"
				-v "clear log all"
				-v "clear forwarding-engine mac-sessions"
			</telnet>
		</step>

		<include prefix="10" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5, negative" />

		<include prefix="11" file="subs/sta_ping.xml" args="sta2, ${sta1.tif.ip}, 5, negative" />

		<step no="12" delay="10">
			<desc>
				show logging buffered
			</desc>
			<log-file>step12_show_loging_buffered.log</log-file>
			<telnet target="ap1" timeout="600">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="13">
			<desc>
				- Delete the policy config
				"no mac-policy FW id [num]"
			</desc>
			<telnet target="ap1">
				-v "no mac-policy ${user_id} id 1"
				-v "clear forwarding-engine mac-sessions"
				-v "clear log all"
			</telnet>
		</step>

		<include prefix="14" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5, negative" />

		<include prefix="15" file="subs/sta_ping.xml" args="sta2, ${sta1.tif.ip}, 5, negative" />

		<step no="16" delay="20">
			<desc>
				show logging buffered
			</desc>
			<log-file>step16_show_loging_buffered.log</log-file>
			<telnet target="ap1" timeout="600">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
		</step>

		<step no="16.1">
			<desc>
				config arp on sta1
			</desc>
			<ssh target="sta1" timeout="120">
				-v "arp -s ${sta2.tif.ip} ${sta2.tif.mac}"
			</ssh>
		</step>

		<step no="16.2">
			<desc>
				config arp on sta2
			</desc>
			<ssh target="sta2" timeout="120">
				-v "arp -s ${sta1.tif.ip} ${sta1.tif.mac}"
			</ssh>
		</step>

		<step no="17">
			<desc>
				Delete the policy config
				"no mac-policy FW id [num]"
			</desc>
			<telnet target="ap1">
				-v "no mac-policy ${user_id} id 2"
				-v "clear forwarding-engine mac-sessions"
				-v "clear log all"
			</telnet>
		</step>

		<include prefix="18" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5, negative" />

		<include prefix="19" file="subs/sta_ping.xml" args="sta2, ${sta1.tif.ip}, 5, negative" />

		<step no="20" delay="20">
			<desc>
				show logging buffered
			</desc>
			<log-file>step20_show_loging_buffered.log</log-file>
			<telnet target="ap1" timeout="600">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(\!\) wifi0.1 ${sta1.tif.ip}-&gt;${sta2.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[ingress \(from-air\)\] upid default action \[deny\]" -e "\(i\) wifi0.1 ${sta1.tif.ip}-&gt;${sta2.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(\!\) wifi0.1 ${sta2.tif.ip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[ingress \(from-air\)\] upid default action \[deny\]" -e "\(i\) wifi0.1 ${sta2.tif.ip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="9">
				<desc>
					delete arp on sta1
				</desc>
				<ssh target="sta1" timeout="120">
					-v "arp -d ${sta2.tif.ip}"
				</ssh>
			</step>

			<step no="9.1">
				<desc>
					delete arp on sta2
				</desc>
				<ssh target="sta2" timeout="120">
					-v "arp -d ${sta1.tif.ip}"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>
