<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>IP-session sync with application (ftp/alg) do L3 roaming</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Topology to use
		Laptop-------AP1 ------ SW ------ Server
		|
		AP2

		Objective
		IP-session correlative L2 roaming test.
		Pre-condition
		-AP1 and AP2 are in the same vlan
		-Laptop uses user-profile “FW”
		Test procedure
		1) Make sure AP1 and AP2 with same configures, configure ip-policy permit laptop “from” direction but deny “to” direction
		2) Change the radio power max on AP1
		“intface wifi[num] radio power 20”
		3) Laptop ping Server
		4) Check the ip-session table on AP1 and AP2
		5) Change the wifi radio power down on AP1, and Change the radio power max on AP1
		“intface wifi[num] radio power [num]”
		6) Check the ip-session table on AP1 and AP2

		Expect result
		- Laptop ping successfully on step 3)
		- There is an ip-session between server and Laptop on AP1 on step 4)
		- The ip-session is deleted on AP1, and there is a ip-session between server and Laptop on AP2 on step 6), and make sure it is not a new create session but sync from AP1, through CLI _kdebug fe sync to see it
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>
	<property name="ftp_test_file_local_dir" value="/tmp" />
	<stage>
		<step no="1.1">
			<desc>
				-Configure AP1 via console
			</desc>
			<console target="ap1">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${ap.def.passwd}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "mobility-policy l3roaming dnxp"
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy l3roaming attribute 1"
				-v "ip-policy fw"
				-v "ip-policy fw service ftp action permit"
				-v "ip-policy fw service dhcp-server action permit"
				-v "ip-policy fw service dhcp-client action permit"
				-v "user-profile ${ssid.name} security ip-policy from-access fw to-access fw"
				-v "alg ftp enable"
			</console>
		</step>
		
		<step no="2" delay="10">
			<desc>show interface mgt0 of AP-1</desc>
			<log-file>ap_ip.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>
		
		<step no="3">
			<desc>Get the ip of AP1</desc>
			<setvar name="ap1.mgt0.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/ap_ip.log -i mgt0 -o aero -nomask
			</setvar>
		</step>
		
		<step no="1.2">
			<desc>
				-Show ap1's interface
			</desc>
			<log-file>step1.2_ap1_interface_info.log</log-file>
			<telnet target="ap1">
				-v "show interface"
			</telnet>
		</step>

		<step no="1.3">
			<desc>
				-Gain ap1's eth0's mac address
			</desc>
			<setvar name="ap1_eth0_mac">
				${bin.dir}/getstring.pl -k "Eth0" -p 2 -f ${log.dir}/step1.2_ap1_interface_info.log
			</setvar>
		</step>

		<step no="2.1">
			<desc>
				-Laptop1 has been associated with AP1 and assigned an ip addres
				-Create config file of wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "echo \"ctrl_interface=/var/run/wpa_supplicant\" > /tmp/wpa_supplicant.cfg"
				-v "ifconfig ${sta1.tif.name} down"
				-v "ifconfig ${sta1.tif.name} up"
			</ssh>
		</step>

		<step no="2.2" delay="5">
			<desc>
				-Start wpa_supplicant
			</desc>
			<ssh target="sta1">
				-v "killall wpa_supplicant"
				-v "wpa_supplicant -i ${sta1.tif.name} ${sta1.wpa_flag} -c /tmp/wpa_supplicant.cfg -B"
			</ssh>
		</step>

		<step no="2.3">
			<desc>
				-Laptop connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<step no="2.4" delay="10" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				-Check if the client was associated successfully
			</desc>
			<log-file>step2.3_wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="2.5">
			<desc>
				-Client gets IP by dhclient
			</desc>
			<ssh target="sta1">
				-v "dhclient ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="2.6" delay="10">
			<desc>
				-Ifconfig to show the ip address
			</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="2.7">
			<desc>
				-Get laptop1's ip
			</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.8">
			<desc>
				-Get laptop1's mac
			</desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -m -width
			</setvar>
		</step>

		<step no="3.1">
			<desc>
				-Configure ap2 via console
			</desc>
			<console target="ap2">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${ap.def.passwd}"
				-v "interface mgt0 hive ${hive.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "interface mgt0 vlan ${tb.vlan2}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "mobility-policy l3roaming dnxp"
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${tb.vlan1} mobility-policy l3roaming attribute 1"
				-v "ip-policy fw"
				-v "ip-policy fw service ftp action permit"
				-v "ip-policy fw service dhcp-server action permit"
				-v "ip-policy fw service dhcp-client action permit"
				-v "user-profile ${ssid.name} security ip-policy from-access fw to-access fw"
				-v "alg ftp enable"
			</console>
		</step>

		<step no="3.2">
			<desc>
				-Renew ap2's mgt0 IPaddr
			</desc>
			<console target="ap2">
				-v "no interface mgt0 dhcp client"
				-v "interface mgt0 dhcp client"
			</console>
		</step>

		<step no="3.3">
			<desc>
				-Show ap2's mgt0
			</desc>
			<log-file>step3.3_show_ap2_mgt0.log</log-file>
			<console target="ap2">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="3.4">
			<desc>
				-Get ap2's mgt0
			</desc>
			<setvar name="ap2.mgt0.ip">
				${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -t str -f ${log.dir}/step3.3_show_ap2_mgt0.log
			</setvar>
		</step>

		<step no="3.5">
			<desc>
				-Show ap2's interface
			</desc>
			<log-file>step3.5_ap2_interface_info.log</log-file>
			<console target="ap2">
				-v "show interface"
			</console>
		</step>

		<step no="3.6">
			<desc>
				-Gain ap2's eth0's mac address
			</desc>
			<setvar name="ap2_eth0_mac">
				${bin.dir}/getstring.pl -k "Eth0" -p 2 -f ${log.dir}/step3.5_ap2_interface_info.log
			</setvar>
		</step>

		<step no="3.7" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				-Check amrp neighbor status on ap1
			</desc>
			<log-file>step.3.7_amrp_dnxp_neighbor_ap1_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show amrp dnxp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2_eth0_mac}\s+${ap2.mgt0.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.8" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				-Check amrp dnxp neighbor status on ap2
			</desc>
			<log-file>step.3.8_amrp_dnxp_neighbor_ap2_${loop_check.idx}.log</log-file>
			<console target="ap2">
				-v "show amrp dnxp neighbor"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap1_eth0_mac}\s+${ap1.mgt0.ip}" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.1">
			<desc>
				-Confirm station state on ap1
			</desc>
			<log-file>step.ap1.roaming.ap2.1_show_station.log</log-file>
			<telnet target="ap1">
				-v "show station"
			</telnet>
			<log-match>-e "${sta1.tif.ip}"</log-match>
		</step>

		<step no="ap1.roaming.ap2.2.1">
			<desc>
				-Open debug switch on ap1 and clear log buffer
			</desc>
			<telnet target="ap1">
				-v "_kdebug fe sync"
				-v "_kdebug fe session"
				-v "clear log buffered "
			</telnet>
		</step>

		<step no="ap1.roaming.ap2.2.2">
			<desc>
				-Open debug switch on ap2 and clear log buffer
			</desc>
			<console target="ap2">
				-v "_kdebug fe sync"
				-v "_kdebug fe session"
				-v "clear log buffered "
			</console>
		</step>

		<step no="ap1.roaming.ap2.3.1">
			<desc>
				-Laptop connect to server and download files (PORT/PASV/EPRT/EPSV) through ap1
				-Clear local file
			</desc>
			<ssh target="sta1">
				-v "rm -f ${ftp_test_file_local_dir}/${tb.ftp.file3_small}"
				-v "rm -f ${ftp_test_file_local_dir}/ap1.roaming.ap2.3.2_stdout.log"
			</ssh>
		</step>

		<step no="ap1.roaming.ap2.3.2">
			<desc>
				-Get file from ftp server
			</desc>
			<log-file>step.ap1.roaming.ap2.3.2_curl_pid.log</log-file>
			<ssh target="sta1">
				-v "nohup curl -u ${tb.ftp.user}:${tb.ftp.passwd} ftp://${tb.ftp}/${tb.ftp.file3_small} -o ${ftp_test_file_local_dir}/${tb.ftp.file3_small} --limit-rate 10k --connect-timeout 50 > ${ftp_test_file_local_dir}/ap1.roaming.ap2.3.2_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="ap1.roaming.ap2.3.3" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				-Check "curl get" alive
			</desc>
			<log-file>step.ap1.roaming.ap2.3.3_curl_pid_chk_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep curl"
			</ssh>
			<log-match>-e "ftp"</log-match>
		</step>

		<step no="ap1.roaming.ap2.3.4">
			<desc>
				-Show forwarding-engine ip-sessions
			</desc>
			<log-file>step.ap1.roaming.ap2.3.4_show_forwarding_ip_sessions.log</log-file>
			<telnet target="ap1">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.3.5">
			<desc>
				-Get pid of "curl get""
			</desc>
			<setvar name="alg.curl.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step.ap1.roaming.ap2.3.2_curl_pid.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="ap1.roaming.ap2.4">
			<desc>
				-Shutdown ssid on ap1
			</desc>
			<telnet target="ap1">
				-v "interface wifi0 ssid ${ssid.name} shutdown"
			</telnet>
		</step>

		<step no="ap1.roaming.ap2.5.1" delay="5">
			<desc>
				-Look up log info on ap1
			</desc>
			<log-file>step.ap1.roaming.ap2.5.1_ap1_log.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "send ip-session.*${sta1.tif.ip}/\d+ &lt;-&gt; ${tb.ftp}/21," -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "send ip-session.*${sta1.tif.ip}/\d+ &lt;-&gt; ${tb.ftp}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.5.2">
			<desc>
				-Look up log info on ap2
			</desc>
			<log-file>step.ap1.roaming.ap2.5.2_ap2_log.log</log-file>
			<console target="ap2">
				-v "show logging buffered"
			</console>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "receive ip session from sync ${sta1.tif.ip}/\d+\s+&lt;-&gt; ${tb.ftp}/21," -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "receive ip data session from sync ${sta1.tif.ip}/\d+ &lt;-&gt; ${tb.ftp}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.5.3" delay="30">
			<desc>
				-Look up ip-sessions on ap1
			</desc>
			<log-file>step.ap1.roaming.ap2.5.3_ap1_ip_session.log</log-file>
			<telnet target="ap1">
				-v "show forwarding-engine ip-sessions"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 0 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 0 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 0 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.5.4">
			<desc>
				-Look up ip-sessions on ap2
			</desc>
			<log-file>step.ap1.roaming.ap2.5.4_ap2_ip_session.log</log-file>
			<console target="ap2">
				-v "show forwarding-engine ip-sessions"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/21 -> ${sta1.tif.ip}/\d+" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/\d+ -> ${tb.ftp}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${tb.ftp}/\d+ -> ${sta1.tif.ip}/\d+" -c 2 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="ap1.roaming.ap2.5.5">
			<desc>
				-Check l3 roaming status on ap1
			</desc>
			<log-file>step.ap1.roaming.ap2.5.5_ap1_log.log</log-file>
			<telnet target="ap1">
				-v "show route"
			</telnet>
			<log-match>-i "mgt0" -i "LTO" </log-match>
		</step>

		<step no="ap1.roaming.ap2.5.6">
			<desc>
				-Check l3 roaming status on ap2
			</desc>
			<log-file>step.ap1.roaming.ap2.5.6_ap2_log.log</log-file>
			<console target="ap2">
				-v "show route"
			</console>
			<log-match>-i "wifi0.1" -i "LTO"</log-match>
		</step>


		<step no="parent.ip.session.check.ap1.roaming.ap2.1">
			<desc>
				-Get control session id info1
			</desc>
			<log-file>parent.ip.session.check.1.ap1.roaming.ap2.log</log-file>
			<console target="ap2">
				-v "show forwarding-engine ip-sessions"
			</console>
		</step>

		<step no="parent.ip.session.check.ap1.roaming.ap2.2">
			<desc>
				-Get control session id info2
			</desc>
			<log-file>parent.ip.session.control.session.ap1.roaming.ap2.log</log-file>
			<script>
				grep "${tb.ftp}/21 " -B 2 ${log.dir}/parent.ip.session.check.1.ap1.roaming.ap2.log > ${log.dir}/${log.file}
			</script>
		</step>

		<step no="parent.ip.session.check.ap1.roaming.ap2.3">
			<desc>
				-Get control session id
			</desc>
			<setvar name="ap1.roaming.ap2.control_session_id">
				${bin.dir}/getbyrexp.py -p "Id:(\d+); Ageout" -f ${log.dir}/parent.ip.session.control.session.ap1.roaming.ap2.log
			</setvar>
		</step>

		<step no="parent.ip.session.check.ap1.roaming.ap2.4">
			<desc>
				-Remove control session
			</desc>
			<log-file>parent.ip.session.remove.control.session.ap1.roaming.ap2.log</log-file>
			<script>
				grep -v "${tb.ftp}/21 " ${log.dir}/parent.ip.session.check.1.ap1.roaming.ap2.log | grep -v "${tb.ftp}/21;" | grep -v "Id:${ap1.roaming.ap2.control_session_id};" > ${log.dir}/${log.file}
			</script>
		</step>

		<step no="parent.ip.session.check.ap1.roaming.ap2.5">
			<desc>
				-Get data session and check
			</desc>
			<log-file>parent.ip.session.check.5.ap1.roaming.ap2.log</log-file>
			<script>
				grep "${tb.ftp}" -B 1 ${log.dir}/parent.ip.session.remove.control.session.ap1.roaming.ap2.log > ${log.dir}/${log.file}
			</script>
			<log-match>-e "Parent-IP-Sess:${ap1.roaming.ap2.control_session_id}"</log-match>
		</step>

		<step no="5.1" delay="30">
			<desc>
				-Wait for process end.
			</desc>
			<log-file>5.1_curl_end_check.log</log-file>
			<ssh target="sta1">
			    -v "kill -9 ${alg.curl.pid}"
				-v "ps aux | grep ${alg.curl.pid}"
			</ssh>
			<log-match>-n -e "curl"</log-match>
		</step>

		<step no="5.2">
			<desc>
				-Check "curl get" result
			</desc>
			<log-file>5.2_curl_get_check_file.log</log-file>
			<ssh target="sta1">
				-v "cat ${ftp_test_file_local_dir}/ap1.roaming.ap2.3.2_stdout.log"
			</ssh>
			<log-match>-n -e "Timeout"</log-match>
		<!-- 	<log-match bin="${bin.dir}/searchbyrexp.py">-p "100\s+\d+\w\s+100" -f ${log.dir}/${log.file}</log-match>  -->
		</step>

		<step no="5.3">
			<desc>
				-Local file should exist
			</desc>
			<log-file>5.3_local_file_check.log</log-file>
			<ssh target="sta1">
				-v "ls ${ftp_test_file_local_dir}"
			</ssh>
			<log-match>-e "${tb.ftp.file3_small}"</log-match>
		</step>

	</stage>

</testcase>
