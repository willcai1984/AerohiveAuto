<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Mac-session parameters test.(upid, Laptop1 with Laptop2)</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Laptops has been associated with AP1 and assigned an ip address
		-Laptops uses user-profile "FW"

		Test Procedure:
		1) Config two mac-policy, binding them to different user-profiles, and config two
		different upid
		"mac-policy MAC-0"
		"mac-policy MAC-0 [from/to] &lt;Laptop1 mac_addr&gt; action permit"
		"user-profile FW1"
		"user-profile FW1 security mac-policy from-access MAC-0 to-access MAC-0"
		"ssid &lt;ssid1_name&gt; default-user-profile-attr [num1]"
		"mac-policy MAC-1"
		"mac-policy MAC-1 [from/to] &lt;Laptop2 mac_addr&gt; action permit"
		"user-profile FW2"
		"user-profile FW2 security mac-policy from-access MAC-1 to-access MAC-1"
		"ssid &lt;ssid2_name&gt; default-user-profile-attr [num2]"
		2) Laptop1 ping Laptop2
		3) Check the mac-session table on AP1
		4) Clear the mac-session
		5) Laptop1 ping Laptop2
		6) Check the mac-session table on AP1
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>

	<property name="user_id" value="FW" />
	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn2.ssid" value="2_${ssid.name}" />

	<stage>
		<step no="0">
			<desc>
				-Config ap1's vlan and native-vlan
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
			</console>
		</step>

		<step no="0.1" delay="30">
			<desc>
				show interface mgt0 info
			</desc>
			<log-file>step0.1_show_interface_mgt0_info.log</log-file>
			<console target="ap1">
				-v "show interface mgt0"
			</console>
		</step>

		<step no="0.2">
			<desc>Get ap1's ip</desc>
			<setvar name="ap1.mgt0.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/step0.1_show_interface_mgt0_info.log -i mgt0 -o aero -nomask
			</setvar>
		</step>

		<step no="1">
			<desc>
				-Laptop uses user-profile "FW"
			</desc>
			<telnet target="ap1">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "security-object 2_${ssid.name}"
				-v "security-object 2_${ssid.name} default-user-profile-attr 2"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "ssid 2_${ssid.name}"
				-v "ssid 2_${ssid.name} security-object 2_${ssid.name}"
				-v "interface wifi0 ssid 2_${ssid.name}"
				-v "interface wifi0 radio channel 1"
				-v "user-profile ${user_id}1 qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
				-v "user-profile ${user_id}2 qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 2"
			</telnet>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta2, ap1" />

		<step no="open.debug">
			<desc>
				-open debug mode
			</desc>
			<telnet target="ap1">
				-v "_ff id 1 src-mac ${sta1.tif.mac} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
				-v "clear forwarding-engine mac-sessions"
			</telnet>
		</step>

		<step no="4">
			<desc>
				1) Config two mac-policy, binding them to different user-profiles, and config two different upid
			</desc>
			<telnet target="ap1">
				-v "mac-policy ${user_id}1"
				-v "mac-policy ${user_id}1 id 1 from ${sta1.tif.mac} action permit"
				-v "mac-policy ${user_id}1 id 2 to ${sta1.tif.mac} action permit"
				-v "user-profile ${user_id}1 security mac-policy from-access ${user_id}1 to-access ${user_id}1"
				-v "mac-policy ${user_id}2"
				-v "mac-policy ${user_id}2 id 3 from ${sta2.tif.mac} action permit"
				-v "mac-policy ${user_id}2 id 4 to ${sta2.tif.mac} action permit"
				-v "user-profile ${user_id}2 security mac-policy from-access ${user_id}2 to-access ${user_id}2"
			</telnet>
		</step>

		<include prefix="5" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5" />

		<step no="6">
			<desc>
				Laptop1 ping Laptop2 in background
			</desc>
			<log-file>step6_sta1_start_ping.log</log-file>
			<ssh target="sta1">
				-v "nohup ping ${sta2.tif.ip} &amp;"
			</ssh>
		</step>

		<step no="7">
			<desc>
				-Check the mac-session table on AP1
			</desc>
			<log-file>step7_show_mac_sessions.log</log-file>
			<telnet target="ap1">
				-v "show forwarding-engine mac-sessions"
			</telnet>
		</step>

		<step no="7.1">
			<desc>Get the mac-session number of sta1 to sta2</desc>
			<setvar name="sta1.id.number">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step7_show_mac_sessions.log -p "Id:(\d+)" -e "(?i)${sta2.tif.mac}-&gt;${sta1.tif.mac}" -t str -g-1 -s none
			</setvar>
		</step>

		<step no="8">
			<desc>
				-Check the mac-session table on AP1
			</desc>
			<log-file>step8_show_mac_sessions.log</log-file>
			<telnet target="ap1">
				-v "show forwarding-engine mac-sessions id ${sta1.id.number}"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)Src MAC=${sta2.tif.mac};\s*Dst MAC=${sta1.tif.mac}" -ps p "UPID=1" -e "(?i)Src MAC=${sta1.tif.mac};\s*Dst MAC=${sta2.tif.mac}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)Src MAC=${sta1.tif.mac};\s*Dst MAC=${sta2.tif.mac}" -ps p "UPID=2" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="8.1">
			<desc>
				-kill process
			</desc>
			<ssh target="sta1">
				-v "killall -q ping"
			</ssh>
		</step>

		<step no="8.2">
			<desc>
				-clear the mac-session table on AP1
			</desc>
			<telnet target="ap1">
				-v "clear forwarding-engine mac-sessions"
			</telnet>
		</step>

		<include prefix="9" file="subs/sta_ping.xml" args="sta2, ${sta1.tif.ip}, 5" />

		<step no="10">
			<desc>
				Laptop2 ping Laptop1 in background
			</desc>
			<log-file>step10_sta2_start_ping.log</log-file>
			<ssh target="sta2">
				-v "nohup ping ${sta1.tif.ip} &amp;"
			</ssh>
		</step>

		<step no="11">
			<desc>
				-Check the mac-session table on AP1
			</desc>
			<log-file>step11_show_mac_sessions.log</log-file>
			<telnet target="ap1">
				-v "show forwarding-engine mac-sessions"
			</telnet>
		</step>

		<step no="11.1">
			<desc>Get the mac-session number of sta2 to sta1</desc>
			<setvar name="sta2.id.number">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step11_show_mac_sessions.log -p "Id:(\d+)" -e "(?i)${sta2.tif.mac}-&gt;${sta1.tif.mac}" -t str -g-1 -s none
			</setvar>
		</step>

		<step no="12">
			<desc>
				-Check the mac-session table on AP1
			</desc>
			<log-file>step12_show_mac_sessions.log</log-file>
			<telnet target="ap1">
				-v "show forwarding-engine mac-sessions id ${sta2.id.number}"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)Src MAC=${sta2.tif.mac};\s*Dst MAC=${sta1.tif.mac}" -ps p "UPID=1" -e "(?i)Src MAC=${sta1.tif.mac};\s*Dst MAC=${sta2.tif.mac}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)Src MAC=${sta1.tif.mac};\s*Dst MAC=${sta2.tif.mac}" -ps p "UPID=2" -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					-kill process
				</desc>
				<ssh target="sta1">
					-v "killall -q ping"
				</ssh>
			</step>

			<step no="1">
				<desc>
					-kill process
				</desc>
				<ssh target="sta2">
					-v "killall -q ping"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>