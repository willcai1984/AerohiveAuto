<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Config "from to" simultaneous policy(permit)</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Configure AP1
		"security-object FWtest"
		"security-object FWtest default-user-profile-attr 1"
		"ssid FWtest"
		"ssid FWtest security-object FWtest"
		"interface wifi0 ssid FWtest"
		"interface wifi1 ssid FWtest"
		"user-profile FW qos-policy def-user-qos vlan-id lt;mgt0 vlangt; attribute 1"
		-Laptop has been associated with AP1 and assigned an ip address
		-Laptop uses user-profile "FW"

		Test Procedure:
		1) Laptop and gateway of SW ping each other through AP1
		2) Laptop and Server ping each other through AP1
		3) Laptop and AP1 ping each other
		4) Configure a ip-policy and bind it to FW:
		"ip-policy FW"
		"ip-policy FW from lt;Laptop ip addrgt; action permit"
		"ip-policy FW to lt;Laptop ip addrgt; action permit"
		"user-profile FW security ip-policy from-access FW to-access FW
		"clear forwarding-engine ip-sessions"
		5) Repeat step 1-3
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<stage>
		<step no="1">
			<desc>
				Configure AP1
				security-object FWtest
				security-object FWtest default-user-profile-attr 1
				ssid FWtest
				ssid FWtest security-object FWtest
				interface wifi0 ssid FWtest
				interface wifi1 ssid FWtest
				user-profile FW qos-policy def-user-qos vlan-id ;mgt0 vlan; attribute 1
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "interface eth0 native-vlan ${tb.vlan1}"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 1"
				-v "security-object FWtest security protocol-suite open"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object FWtest"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
				-v "user-profile FW qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
			</console>
		</step>

		<include prefix="2.1" file="subs/ap_renew_ip.xml" obj-args="ap1" />

		<step no="2.2">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=${ssid_bind_interface}"
			</multi-setvar>
		</step>

		<include prefix="2.3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />


		<!-- <step no="2"> -->
		<!-- <desc> -->
		<!-- Laptop has been associated with AP1 and assigned an ip address -->
		<!-- create config file of wpa_supplicant -->
		<!-- </desc> -->
		<!-- <ssh target="sta1"> -->
		<!-- -v "echo \"ctrl_interface=/var/run/wpa_supplicant\" > /tmp/wpa_supplicant.cfg" -->
		<!-- -v "ifconfig ${sta1.tif.name} down" -->
		<!-- -v "ifconfig ${sta1.tif.name} up" -->
		<!-- </ssh> -->
		<!-- </step> -->

		<!-- <step no="2.1" delay="5"> -->
		<!-- <desc> -->
		<!-- start wpa_supplicant -->
		<!-- </desc> -->
		<!-- <ssh target="sta1"> -->
		<!-- -v "killall wpa_supplicant" -->
		<!-- -v "wpa_supplicant -i ${sta1.tif.name} ${sta1.wpa_flag} -c /tmp/wpa_supplicant.cfg -B" -->
		<!-- </ssh> -->
		<!-- </step> -->

		<!-- <step no="2.2"> -->
		<!-- <desc> -->
		<!-- pc connect ap -->
		<!-- </desc> -->
		<!-- <ssh target="sta1" prompt=">|.*#"> -->
		<!-- -v "wpa_cli" -->
		<!-- -v "reconfig" -->
		<!-- -v "add_network" -->
		<!-- -v "set_network 0 ssid \"${ssid.name}\"" -->
		<!-- -v "set_network 0 key_mgmt NONE" -->
		<!-- -v "enable_network 0" -->
		<!-- -v "quit" -->
		<!-- </ssh> -->
		<!-- </step> -->

		<!-- <step no="2.3" delay="10" type="loop-check" loop-max-times="10" loop-interval="5"> -->
		<!-- <desc>check if the client was associated successfully</desc> -->
		<!-- <log-file>step2.3_wpa_stat_tmp_${loop_check.idx}.log</log-file> -->
		<!-- <ssh target="sta1" prompt=">|.*#"> -->
		<!-- -v "wpa_cli" -->
		<!-- -v "stat" -->
		<!-- -v "quit" -->
		<!-- </ssh> -->
		<!-- <log-match>-e "wpa_state=COMPLETED"</log-match> -->
		<!-- </step> -->

		<!-- <step no="2.4"> -->
		<!-- <desc>client gets IP by dhclient</desc> -->
		<!-- <ssh target="sta1"> -->
		<!-- -v "dhclient ${sta1.tif.name}" -->
		<!-- </ssh> -->
		<!-- </step> -->

		<!-- <step no="2.5" delay="10"> -->
		<!-- <desc>ifconfig to show the ip adrr</desc> -->
		<!-- <log-file>step2.5_ifconfig.log</log-file> -->
		<!-- <ssh target="sta1"> -->
		<!-- -v "ifconfig ${sta1.tif.name}" -->
		<!-- </ssh> -->
		<!-- <log-match> -e "inet addr"</log-match> -->
		<!-- </step> -->

		<!-- <step no="2.6" delay="10"> -->
		<!-- <desc>ifconfig to show the ip add</desc> -->
		<!-- <log-file>ifconfig.log</log-file> -->
		<!-- <ssh target="sta1" timeout="80"> -->
		<!-- -v "ifconfig ${sta1.tif.name}" -->
		<!-- </ssh> -->
		<!-- </step> -->

		<!-- <step no="2.7"> -->
		<!-- <desc>Get laptop1's ip</desc> -->
		<!-- <setvar name="sta1.tif.ip"> -->
		<!-- perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -nomask -->
		<!-- </setvar> -->
		<!-- </step> -->

		<!-- <step no="2.8"> -->
		<!-- <desc>Get laptop1's mac</desc> -->
		<!-- <setvar name="sta1.tif.mac"> -->
		<!-- perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -m -width -->
		<!-- </setvar> -->
		<!-- </step> -->

		<!-- <step no="2.9" delay="10"> -->
		<!-- <desc>show mgt0's ip of ap1</desc> -->
		<!-- <log-file>ap1_info.log</log-file> -->
		<!-- <console target="ap1" timeout="80"> -->
		<!-- -v "show interface mgt0" -->
		<!-- </console> -->
		<!-- </step> -->

		<!-- <step no="2.10"> -->
		<!-- <desc>Get ap1's ip</desc> -->
		<!-- <setvar name="ap1.mgt0.ip"> -->
		<!-- perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ap1_info.log -i mgt0 -o aero -nomask -->
		<!-- </setvar> -->
		<!-- </step> -->



		<step no="2.11">
			<desc>
				"_ff id 1 src-ip Laptop's IPaddr bidirectional"
				"_kdebug fe basic"
				"_kdebug fe detail"
				"clear log buffered"
			</desc>
			<ssh target="ap1">
				-v "_ff id 1 src-ip ${sta1.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
			</ssh>
		</step>

		<step no="3">
			<desc>
				2) Laptop and Server ping each other through AP1
				laptop ping server
			</desc>
			<log-file>step3_laptop_ping_server.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ping ${pub.tftp1.tip} -I ${sta1.tif.name} -c 5"
			</ssh>
			<log-match>-e "from ${pub.tftp1.tip}"</log-match>
		</step>

		<step no="3.1">
			<desc>
				2) Laptop and Server ping each other through AP1
				server ping laptop
			</desc>
			<log-file>step3.1_server_ping_laptop.log</log-file>
			<ssh host="${pub.tftp1.ip}">
				-v "ping ${sta1.tif.ip} -c 5"
			</ssh>
			<log-match>-e "from ${sta1.tif.ip}"</log-match>
		</step>

		<step no="3.2">
			<desc>
				"show log buf"
			</desc>
			<log-file>step3.2_show_logging_buffered.log</log-file>
			<ssh target="ap1">
				-v "show log buffered"
			</ssh>
		</step>

		<!-- <include prefix="3.2" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step3.2_show_logging_buffered.log" /> -->

		<step no="4">
			<desc>
				3) Laptop and AP1 ping each other
				laptop ping ap1
			</desc>
			<log-file>step4_laptop_ping_ap1.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ping ${ap1.mgt0.ip} -I ${sta1.tif.name} -c 5"
			</ssh>
			<log-match>-e "from ${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="4.1">
			<desc>
				3) Laptop and AP1 ping each other
				ap1 ping laptop
			</desc>
			<log-file>step4.1_ap1_ping_laptop.log</log-file>
			<ssh target="ap1" timeout="80">
				-v "ping ${sta1.tif.ip}"
			</ssh>
			<log-match>-e "from ${sta1.tif.ip}"</log-match>
		</step>

		<step no="4.2">
			<desc>
				"show log buf"
			</desc>
			<log-file>step4.2_show_logging_buffered.log</log-file>
			<ssh target="ap1">
				-v "show log buffered"
			</ssh>
		</step>

		<!-- <include prefix="4.2" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step4.2_show_logging_buffered.log" /> -->

		<step no="5">
			<desc>
				4) Configure a ip-policy and bind it to FW:
				"ip-policy FW"
				"ip-policy FW from lt;Laptop ip addrgt; action permit"
				"ip-policy FW to lt;Laptop ip addrgt; action permit"
				"user-profile FW security ip-policy from-access FW to-access FW"
				"clear forwarding-engine ip-sessions"
				"clear log buffered"
			</desc>
			<ssh target="ap1">
				-v "ip-policy FW"
				-v "ip-policy FW from ${sta1.tif.ip} action permit"
				-v "ip-policy FW to ${sta1.tif.ip} action permit"
				-v "user-profile FW security ip-policy from-access FW to-access FW"
				-v "clear forwarding-engine ip-sessions"
				-v "clear log buffered"
			</ssh>
		</step>

		<step no="6">
			<desc>
				laptop ping server
			</desc>
			<log-file>step6_laptop_ping_server.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ping ${pub.tftp1.tip} -I ${sta1.tif.name} -c 5"
			</ssh>
			<log-match>-e "from ${pub.tftp1.tip}"</log-match>
		</step>

		<step no="6.0.1">
			<desc>
				"show log buf"
			</desc>
			<log-file>step6.0.1_show_logging_buffered.log</log-file>
			<ssh target="ap1">
				-v "show log buffered"
			</ssh>
		</step>

		<!-- <include prefix="6.0.1" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step6.0.1_show_logging_buffered.log" /> -->

		<step no="6.0.2">
			<desc>
				clear log buffered
				"clear forwarding-engine ip-sessions"
			</desc>
			<console target="ap1">
				-v "clear log buffered"
				-v "clear forwarding-engine ip-sessions"
			</console>
		</step>

		<step no="6.1">
			<desc>
				server ping laptop
			</desc>
			<log-file>step6.1_server_ping_laptop.log</log-file>
			<ssh host="${pub.tftp1.ip}">
				-v "ping ${sta1.tif.ip} -c 5"
			</ssh>
			<log-match>-e "from ${sta1.tif.ip}"</log-match>
		</step>

		<step no="6.1.1">
			<desc>
				"show log buf"
			</desc>
			<log-file>step6.1.1_show_logging_buffered.log</log-file>
			<ssh target="ap1">
				-v "show log buffered"
			</ssh>
		</step>

		<!-- <include prefix="6.1.1" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step6.1.1_show_logging_buffered.log" /> -->

		<step no="6.1.2">
			<desc>
				clear log buffered
				"clear forwarding-engine ip-sessions"
			</desc>
			<console target="ap1">
				-v "clear log buffered"
				-v "clear forwarding-engine ip-sessions"
			</console>
		</step>

		<step no="6.2">
			<desc>
				laptop ping ap1
			</desc>
			<log-file>step6.2_laptop_ping_ap1.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ping ${ap1.mgt0.ip} -I ${sta1.tif.name} -c 5"
			</ssh>
			<log-match>-e "from ${ap1.mgt0.ip}"</log-match>
		</step>

		<step no="6.2.1">
			<desc>
				"show log buf"
			</desc>
			<log-file>step6.2.1_show_logging_buffered.log</log-file>
			<ssh target="ap1">
				-v "show log buffered"
			</ssh>
		</step>

		<!-- <include prefix="6.2.1" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step6.2.1_show_logging_buffered.log" /> -->

		<step no="6.2.2">
			<desc>
				clear log buffered
				"clear forwarding-engine ip-sessions"
			</desc>
			<console target="ap1">
				-v "clear log buffered"
				-v "clear forwarding-engine ip-sessions"
			</console>
		</step>

		<step no="6.3">
			<desc>
				ap1 ping latop
			</desc>
			<log-file>step6.3_ap1_ping_laptop.log</log-file>
			<console target="ap1" timeout="80">
				-v "ping ${sta1.tif.ip}"
			</console>
			<log-match>-e "from ${sta1.tif.ip}"</log-match>
		</step>

		<step no="6.3.1">
			<desc>
				"show log buf"
			</desc>
			<log-file>step6.3.1_show_logging_buffered.log</log-file>
			<ssh target="ap1">
				-v "show log buffered"
			</ssh>
		</step>

		<!-- <include prefix="6.3.1" file="subs/save_ap_log.xml" args="show logging buffered, ap1, step6.3.1_show_logging_buffered.log" /> -->
	</stage>
</testcase>
