<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Mac-session parameters test.(upid, through MP)</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Laptops has been associated with AP1 and assigned an ip address
		-Laptops uses user-profile "FW"

		Test Procedure:
		1) Config two mac-policy, binding them to different user-profiles, and config two
		different upid on AP1 and MP
		"mac-policy MAC-0"
		"mac-policy MAC-0 [from/to] &lt;Laptop1 mac_addr&gt; action permit"
		"user-profile FW1"
		"user-profile FW1 security mac-policy from-access MAC-0 to-access MAC-0"
		"ssid &lt;ssid1_name&gt; default-user-profile-attr [num1]"
		"mac-policy MAC-1"
		"mac-policy MAC-1 [from/to] &lt;Laptop2 mac_addr&gt; action permit"
		"user-profile FW2"
		"user-profile FW2 security mac-policy from-access MAC-1 to-access MAC-1"
		"ssid &lt;ssid2_name&gt; default-user-profile-attr [num2]"
		2) Laptop1 ping Laptop2
		3) Check the mac-session table on AP1, MP
		4) Clear the mac-session
		5) Laptop2 ping Laptop1
		6) Check the mac-session table on AP1, MP
	</description>
	<numofap>2</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>

	<property name="user_id" value="FW" />
	<property name="hive.passwd" value="12345678" />
	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn2.ssid" value="ap2-${ssid.name}" />

	<stage>
		<if>"${ap.wifi1.existed}" == "true"</if>
		<step no="shutdown.eth1">
			<desc>
				shutdown interface eth1
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<telnet target="ap1">
				-v "interface eth1 shutdown"
			</telnet>
		</step>

		<step no="0">
			<desc>
				-Config ap1
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${hive.passwd}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="0.1">
			<desc>
				-Config ap2
			</desc>
			<telnet target="ap2">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${hive.passwd}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="1">
			<desc>
				-config ssid and bind to interface
				-Laptop uses user-profile "FW"
			</desc>
			<telnet target="ap1">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 1"
				-v "user-profile ${user_id}1 qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "no bonjour-gateway enable"
			</telnet>
		</step>

		<step no="3">
			<desc>
				-config ssid and bind to interface
				-Laptop uses user-profile "FW"
			</desc>
			<telnet target="ap2">
				-v "security-object ap2-${ssid.name}"
				-v "security-object ap2-${ssid.name} default-user-profile-attr 2"
				-v "ssid ap2-${ssid.name}"
				-v "ssid ap2-${ssid.name} security-object ap2-${ssid.name}"
				-v "interface wifi0 ssid ap2-${ssid.name}"
				-v "interface wifi0 radio channel 1"
				-v "user-profile ${user_id}2 qos-policy def-user-qos vlan-id 1 attribute 2"
				-v "interface wifi1 radio channel 36"
				-v "no bonjour-gateway enable"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				show ap2's interface wifi1 info
			</desc>
			<log-file>step3.1_show_ap2_interface_info.log</log-file>
			<telnet target="ap2">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="3.2">
			<desc>
				get ap2's wifi1's mac address
			</desc>
			<setvar name="ap2.wifi1.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step3.1_show_ap2_interface_info.log -i wifi1 -o aero -m -width
			</setvar>
		</step>

		<step no="3.3">
			<desc>shutdown interface wifi1 and then up it (it's aimed to clear wifi1's neighbor list)</desc>
			<telnet target="ap1">
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
				-v "interface wifi1 radio channel 36"
			</telnet>
		</step>

		<step no="4" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show acsp neighbor to make sure ap1 is ap2's acsp neighbor
			</desc>
			<log-file>step4_show_acsp_neighbor_${loop_check.idx}.log</log-file>
			<telnet target="ap1" timeout="180">
				-v "show acsp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2.wifi1.mac}\s+Backhaul\s+${hive.name}" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.1">
			<desc>
				-shutdown interface eth0
			</desc>
			<console target="ap1">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<step no="5" delay="35" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show amrp neighbor
			</desc>
			<log-file>step5_show_amrp_neighbor_${loop_check.idx}.log</log-file>
			<console target="ap1" timeout="180">
				-v "show amrp neighbor"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2.wifi1.mac}\s+${ap2.mgt0.ip}\s+TWO-WAY" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<include prefix="6" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta2, ap2" />

		<include prefix="7" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="8">
			<desc>
				-Config mac-policy, binding to user-profiles
			</desc>
			<console target="ap1">
				-v "mac-policy ${user_id}1"
				-v "mac-policy ${user_id}1 id 1 from ${sta1.tif.mac} action permit"
				-v "mac-policy ${user_id}1 id 2 to ${sta1.tif.mac} action permit"
				-v "mac-policy ${user_id}2"
				-v "mac-policy ${user_id}2 id 3 from ${sta2.tif.mac} action permit"
				-v "mac-policy ${user_id}2 id 4 to ${sta2.tif.mac} action permit"
				-v "user-profile ${user_id}1 security mac-policy from-access ${user_id}2 to-access ${user_id}2"
				-v "user-profile ${user_id}1 security mac-policy from-access ${user_id}1 to-access ${user_id}1"
			</console>
		</step>

		<step no="8.1">
			<desc>
				-Config mac-policy, binding to user-profiles
			</desc>
			<telnet target="ap2">
				-v "mac-policy ${user_id}2"
				-v "mac-policy ${user_id}2 id 1 from ${sta2.tif.mac} action permit"
				-v "mac-policy ${user_id}2 id 2 to ${sta2.tif.mac} action permit"
				-v "mac-policy ${user_id}1"
				-v "mac-policy ${user_id}1 id 3 from ${sta1.tif.mac} action permit"
				-v "mac-policy ${user_id}1 id 4 to ${sta1.tif.mac} action permit"
				-v "user-profile ${user_id}2 security mac-policy from-access ${user_id}1 to-access ${user_id}1"
				-v "user-profile ${user_id}2 security mac-policy from-access ${user_id}2 to-access ${user_id}2"
			</telnet>
		</step>

		<include prefix="9" file="subs/sta_ping.xml" args="sta2, ${sta1.tif.ip}, 5" />

		<step no="10">
			<desc>
				Laptop2 ping sta1 in background
			</desc>
			<log-file>step10_sta2_start_ping.log</log-file>
			<ssh target="sta2">
				-v "nohup ping ${sta1.tif.ip} &amp;"
			</ssh>
		</step>

		<step no="10.1">
			<desc>Get the mac-session number of sta1 to sta2</desc>
			<setvar name="sta2.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step10_sta2_start_ping.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="11">
			<desc>
				-Check the mac-session table on AP1
			</desc>
			<log-file>step11_show_mac_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine mac-sessions"
			</console>
		</step>

		<step no="11.1">
			<desc>Get the mac-session number of sta2 to sta1(MP)</desc>
			<setvar name="sta2.id.number.mp">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step11_show_mac_sessions.log -p "Id:(\d+)" -e "(?i)${sta2.tif.mac}-&gt;${sta1.tif.mac}" -t str -g-1 -s none
			</setvar>
		</step>

		<step no="12">
			<desc>
				-Check the mac-session table on AP1
			</desc>
			<log-file>step12_show_mac_sessions.log</log-file>
			<telnet target="ap2">
				-v "show forwarding-engine mac-sessions"
			</telnet>
		</step>

		<step no="12.1">
			<desc>Get the mac-session number of sta2 to sta1(AP)</desc>
			<setvar name="sta2.id.number.ap">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step12_show_mac_sessions.log -p "Id:(\d+)" -e "(?i)${sta2.tif.mac}-&gt;${sta1.tif.mac}" -t str -g-1 -s none
			</setvar>
		</step>

		<step no="13">
			<desc>
				-Check the mac-session table on MP
			</desc>
			<log-file>step13_show_mac_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine mac-sessions id ${sta2.id.number.mp}"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)Src MAC=${sta1.tif.mac};\s*Dst MAC=${sta2.tif.mac}" -ps p "UPID=2" -e "(?i)Src MAC=${sta2.tif.mac};\s*Dst MAC=${sta1.tif.mac}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)Src MAC=${sta2.tif.mac};\s*Dst MAC=${sta1.tif.mac}" -ps p "UPID=1" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="13.1">
			<desc>
				-Check the mac-session table on AP
			</desc>
			<log-file>step13.1_show_mac_sessions.log</log-file>
			<telnet target="ap2">
				-v "show forwarding-engine mac-sessions id ${sta2.id.number.ap}"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)Src MAC=${sta1.tif.mac};\s*Dst MAC=${sta2.tif.mac}" -ps p "UPID=2" -e "(?i)Src MAC=${sta2.tif.mac};\s*Dst MAC=${sta1.tif.mac}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)Src MAC=${sta2.tif.mac};\s*Dst MAC=${sta1.tif.mac}" -ps p "UPID=1" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="13.2">
			<desc>
				kill process
			</desc>
			<ssh target="sta2">
				-v "kill ${sta2.pid}"
			</ssh>
		</step>

		<step no="13.3">
			<desc>
				-clear the mac-session table on MP
			</desc>
			<console target="ap1">
				-v "clear forwarding-engine mac-sessions"
			</console>
		</step>

		<step no="13.4">
			<desc>
				-clear the mac-session table on AP
			</desc>
			<telnet target="ap2">
				-v "clear forwarding-engine mac-sessions"
			</telnet>
		</step>

		<include prefix="14" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5" />

		<step no="15">
			<desc>
				Laptop1 ping Laptop2 in background
			</desc>
			<log-file>step15_sta1_start_ping.log</log-file>
			<ssh target="sta1">
				-v "nohup ping ${sta2.tif.ip} &amp;"
			</ssh>
		</step>

		<step no="15.1">
			<desc>Get the mac-session number of sta1 to sta2</desc>
			<setvar name="sta1.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step15_sta1_start_ping.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="16">
			<desc>
				-Check the mac-session table on MP
			</desc>
			<log-file>step16_show_mac_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine mac-sessions"
			</console>
		</step>

		<step no="16.1">
			<desc>Get the mac-session number of sta1 to sta2(MP)</desc>
			<setvar name="sta1.id.number.mp">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step16_show_mac_sessions.log -p "Id:(\d+)" -e "(?i)${sta2.tif.mac}-&gt;${sta1.tif.mac}" -t str -g-1 -s none
			</setvar>
		</step>

		<step no="17">
			<desc>
				-Check the mac-session table on AP
			</desc>
			<log-file>step17_show_mac_sessions.log</log-file>
			<telnet target="ap2">
				-v "show forwarding-engine mac-sessions"
			</telnet>
		</step>

		<step no="17.1">
			<desc>Get the mac-session number of sta1 to sta2(AP)</desc>
			<setvar name="sta1.id.number.ap">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step17_show_mac_sessions.log -p "Id:(\d+)" -e "(?i)${sta2.tif.mac}-&gt;${sta1.tif.mac}" -t str -g-1 -s none
			</setvar>
		</step>

		<step no="18">
			<desc>
				-Check the mac-session table on AP1
			</desc>
			<log-file>step18_show_mac_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine mac-sessions id ${sta1.id.number.mp}"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)Src MAC=${sta1.tif.mac};\s*Dst MAC=${sta2.tif.mac}" -ps p "UPID=2" -e "(?i)Src MAC=${sta2.tif.mac};\s*Dst MAC=${sta1.tif.mac}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)Src MAC=${sta2.tif.mac};\s*Dst MAC=${sta1.tif.mac}" -ps p "UPID=1" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="18.1">
			<desc>
				-Check the mac-session table on AP1
			</desc>
			<log-file>step18.1_show_mac_sessions.log</log-file>
			<telnet target="ap2">
				-v "show forwarding-engine mac-sessions id ${sta1.id.number.ap}"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)Src MAC=${sta1.tif.mac};\s*Dst MAC=${sta2.tif.mac}" -ps p "UPID=2" -e "(?i)Src MAC=${sta2.tif.mac};\s*Dst MAC=${sta1.tif.mac}" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "(?i)Src MAC=${sta2.tif.mac};\s*Dst MAC=${sta1.tif.mac}" -ps p "UPID=1" -f ${log.dir}/${log.file}</log-match>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					-kill process
				</desc>
				<ssh target="sta1">
					-v "kill ${sta1.pid}"
				</ssh>
			</step>

			<step no="1">
				<desc>
					-kill process
				</desc>
				<ssh target="sta2">
					-v "kill ${sta2.pid}"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>