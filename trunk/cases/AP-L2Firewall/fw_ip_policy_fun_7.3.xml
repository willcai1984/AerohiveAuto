<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Add/Delete policy while traffic is on-going(from-access permit+deny)</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Laptop has been associated with AP1 and assigned an ip address
		-Laptop uses user-profile "FW"

		Test Procedure:
		1) Laptop and gateway of SW ping each other continuance
		2) Configure a ip-policy and bind it to FW:
		"ip-policy FW"
		"ip-policy FW from &lt;Laptop ip addr&gt; action permit"
		"user-profile FW security ip-policy from-access FW"
		"ssid &lt;ssid_name&gt; default-user-profile-attr [num]"
		3) Check the ping pkt
		4) Add the deny policy
		"ip-policy FW from &lt;Laptop ip addr&gt; action deny"
		5) Check the ping pkt
		6) Delete the permit policy
		"no user-profile FW security ip-policy from-access"
		"no ip-policy FW id [num=permit policy num]"
		7) Check the ping pkt
		8) Delete the deny policy
		"no user-profile FW security ip-policy from-access"
		"no ip-policy FW id [num=deny policy num]"
		9) Check the ping pkt
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="user_id" value="FWtest" />
	<property name="conn1.ssid" value="${ssid.name}" />

	<stage>
		<step no="0">
			<desc>
				Configure AP1
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "user-profile ${user_id} qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
			</console>
		</step>

		<include prefix="1" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="open.debug">
			<desc>
				open debug
			</desc>
			<telnet target="ap1">
				-v "_ff id 1 dst-ip ${sta1.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="2.1">
			<desc>
				Server ping Laptop in background
			</desc>
			<log-file>step2.1_server_start_ping.log</log-file>
			<ssh host="${pub.tftp1.ip}">
				-v "nohup ping ${sta1.tif.ip} &gt; /tmp/${job.id}ping.log &amp;"
			</ssh>
		</step>

		<step no="2.2">
			<desc>
				get server ping id
			</desc>
			<setvar name="server.pingid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step2.1_server_start_ping.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="2.3" delay="60">
			<desc>
				check server ping result
			</desc>
			<log-file>step2.3_check_server_ping_result.log</log-file>
			<ssh host="${pub.tftp1.ip}">
				-v "tail /tmp/${job.id}ping.log"
			</ssh>
			<log-match>-c -i "from ${sta1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="3.1">
			<desc>
				Laptop ping Server in background
			</desc>
			<log-file>step3.1_laptop_start_ping.log</log-file>
			<ssh target="sta1">
				-v "nohup ping ${pub.tftp1.tip} &gt; /tmp/${job.id}ping_2.log &amp;"
			</ssh>
		</step>

		<step no="3.2">
			<desc>
				get Laptop ping id
			</desc>
			<setvar name="laptop.pingid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step3.1_laptop_start_ping.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="3.3">
			<desc>
				check sta ping result
			</desc>
			<log-file>step3.3_check_sta_ping_result.log</log-file>
			<ssh target="sta1">
				-v "tail /tmp/${job.id}ping_2.log"
			</ssh>
			<log-match>-c -i "from ${pub.tftp1.tip}: " -i "ttl="</log-match>
		</step>

		<step no="4">
			<desc>
				- Configure a ip-policy and bind it to FW:
				"ip-policy FW"
				"ip-policy FW from &lt;Laptop ip addr&gt; action permit"
				"user-profile FW security ip-policy from-access FW"
			</desc>
			<telnet target="ap1">
				-v "ip-policy ${user_id}"
				-v "ip-policy ${user_id} id 1 from ${sta1.tif.ip} action permit"
				-v "user-profile ${user_id} security ip-policy from-access ${user_id}"
				-v "clear log all"
				-v "clear forwarding-engine ip-sessions"
				-v "clear arp-cache"
				-v "no forwarding-engine proxy-arp enable"
			</telnet>
		</step>

		<step no="5" delay="30">
			<desc>
				clear log on sta
			</desc>
			<ssh target="sta1">
				-v "echo aerohive &gt; /tmp/${job.id}ping_2.log"
			</ssh>
		</step>

		<step no="5.1">
			<desc>
				clear log on server
			</desc>
			<ssh host="${pub.tftp1.ip}">
				-v "echo aerohive &gt; /tmp/${job.id}ping.log"
			</ssh>
		</step>

		<step no="5.2" delay="60">
			<desc>
				check server ping result
			</desc>
			<log-file>step5.2_check_server_ping_result.log</log-file>
			<ssh host="${pub.tftp1.ip}">
				-v "tail /tmp/${job.id}ping.log"
			</ssh>
			<log-match>-n -c -i "from ${sta1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="5.3" delay="10">
			<desc>
				show logging buffered
			</desc>
			<log-file>step5.3_show_loging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(\!\) eth0 ${pub.tftp1.tip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[egress \(to-air\)\] upid default action \[deny\]" -e "\(i\) eth0 ${pub.tftp1.tip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="5.4">
			<desc>
				clear forwarding-engine ip-sessions
				clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
				-v "clear forwarding-engine ip-sessions"
				-v "clear arp-cache"
				-v "no forwarding-engine proxy-arp enable"
			</telnet>
		</step>

		<step no="5.5" delay="20">
			<desc>
				check sta ping result: successful
			</desc>
			<log-file>step5.5_check_sta_ping_result.log</log-file>
			<ssh target="sta1">
				-v "tail /tmp/${job.id}ping_2.log"
			</ssh>
			<log-match>-c -i "from ${pub.tftp1.tip}: " -i "ttl="</log-match>
		</step>

		<step no="5.6" delay="10">
			<desc>
				show logging buffered
			</desc>
			<log-file>step5.6_show_loging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(o\) eth0 ${sta1.tif.ip}-&gt;${pub.tftp1.tip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[ingress \(from-air\)\] group \[${user_id}\] id \[\d+\] \[permit\]" -e "\(i\) wifi0.1 ${sta1.tif.ip}-&gt;${pub.tftp1.tip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="6">
			<desc>
				- Add the deny policy
				"ip-policy FW from &lt;Laptop ip addr&gt; action deny"
			</desc>
			<telnet target="ap1">
				-v "ip-policy ${user_id} id 2 from ${sta1.tif.ip} action deny"
				-v "clear log all"
				-v "clear forwarding-engine ip-sessions"
				-v "clear arp-cache"
				-v "no forwarding-engine proxy-arp enable"
			</telnet>
		</step>

		<step no="7" delay="30">
			<desc>
				clear log on sta
			</desc>
			<ssh target="sta1">
				-v "echo aerohive &gt; /tmp/${job.id}ping_2.log"
			</ssh>
		</step>

		<step no="7.1">
			<desc>
				clear log on server
			</desc>
			<ssh host="${pub.tftp1.ip}">
				-v "echo aerohive &gt; /tmp/${job.id}ping.log"
			</ssh>
		</step>

		<step no="7.2" delay="60">
			<desc>
				check server ping result
			</desc>
			<log-file>step7.2_check_server_ping_result.log</log-file>
			<ssh host="${pub.tftp1.ip}">
				-v "tail /tmp/${job.id}ping.log"
			</ssh>
			<log-match>-n -c -i "from ${sta1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="7.3" delay="10">
			<desc>
				show logging buffered
			</desc>
			<log-file>step7.3_show_loging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(\!\) eth0 ${pub.tftp1.tip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[egress \(to-air\)\] upid default action \[deny\]" -e "\(i\) eth0 ${pub.tftp1.tip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="7.4">
			<desc>
				clear forwarding-engine ip-sessions
				clear log all
			</desc>
			<telnet target="ap1">
				-v "clear log all"
				-v "clear forwarding-engine ip-sessions"
				-v "clear arp-cache"
				-v "no forwarding-engine proxy-arp enable"
			</telnet>
		</step>

		<step no="7.5" delay="20">
			<desc>
				check sta ping result: unsuccessful
			</desc>
			<log-file>step7.5_check_sta_ping_result.log</log-file>
			<ssh target="sta1">
				-v "ping ${pub.dnstest.ip1} -c 2"
			</ssh>
			<log-match>-c -i "from ${pub.dnstest.ip1}: " -i "ttl="</log-match>
		</step>

		<step no="7.6" delay="10">
			<desc>
				show logging buffered
			</desc>
			<log-file>step7.6_show_loging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(o\) eth0 ${sta1.tif.ip}-&gt;${pub.dnstest.ip1}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[ingress \(from-air\)\] group \[${user_id}\] id \[\d+\] \[permit\]" -e "\(i\) wifi0.1 ${sta1.tif.ip}-&gt;${pub.dnstest.ip1}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="8">
			<desc>
				- Delete the permit policy
				"no ip-policy FW id [num=permit policy num]"
			</desc>
			<telnet target="ap1">
				-v "no ip-policy ${user_id} id 1"
				-v "clear forwarding-engine ip-sessions"
				-v "clear log all"
			</telnet>
		</step>

		<step no="9" delay="30">
			<desc>
				clear log on sta
			</desc>
			<ssh target="sta1">
				-v "echo aerohive &gt; /tmp/${job.id}ping_2.log"
			</ssh>
		</step>

		<step no="9.1">
			<desc>
				clear log on server
			</desc>
			<ssh host="${pub.tftp1.ip}">
				-v "echo aerohive &gt; /tmp/${job.id}ping.log"
			</ssh>
		</step>

		<step no="9.2" delay="60">
			<desc>
				check server ping result
			</desc>
			<log-file>step9.2_check_server_ping_result.log</log-file>
			<ssh host="${pub.tftp1.ip}">
				-v "tail /tmp/${job.id}ping.log"
			</ssh>
			<log-match>-n -c -i "from ${sta1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="9.3" delay="10">
			<desc>
				show logging buffered
			</desc>
			<log-file>step9.3_show_loging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(\!\) eth0 ${pub.tftp1.tip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[egress \(to-air\)\] upid default action \[deny\]" -e "\(i\) eth0 ${pub.tftp1.tip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="9.4">
			<desc>
				clear forwarding-engine ip-sessions
				clear log all
			</desc>
			<telnet target="ap1">
				-v "clear forwarding-engine ip-sessions"
				-v "clear log all"
			</telnet>
		</step>

		<step no="9.5" delay="20">
			<desc>
				check sta ping result: unsuccessful
			</desc>
			<log-file>step9.5_check_sta_ping_result.log</log-file>
			<ssh target="sta1">
				-v "tail /tmp/${job.id}ping_2.log"
			</ssh>
			<log-match>-n -c -i "from ${pub.tftp1.tip}: " -i "ttl="</log-match>
		</step>

		<step no="9.6" delay="10">
			<desc>
				show logging buffered
			</desc>
			<log-file>step9.6_show_loging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(\!\) wifi0.1 ${sta1.tif.ip}-&gt;${pub.tftp1.tip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[ingress \(from-air\)\] group \[FWtest\] id \[\d+\] \[deny\]" -e "\(i\) wifi0.1 ${sta1.tif.ip}-&gt;${pub.tftp1.tip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="10">
			<desc>
				- Delete the deny policy
				"no ip-policy FW id [num=deny policy num]"
			</desc>
			<telnet target="ap1">
				-v "no ip-policy ${user_id} id 2"
				-v "clear forwarding-engine ip-sessions"
				-v "clear log all"
			</telnet>
		</step>

		<step no="11" delay="30">
			<desc>
				clear log on sta
			</desc>
			<ssh target="sta1">
				-v "echo aerohive &gt; /tmp/${job.id}ping_2.log"
			</ssh>
		</step>

		<step no="11.1">
			<desc>
				clear log on server
			</desc>
			<ssh host="${pub.tftp1.ip}">
				-v "echo aerohive &gt; /tmp/${job.id}ping.log"
			</ssh>
		</step>

		<step no="11.2" delay="60">
			<desc>
				check server ping result
			</desc>
			<log-file>step11.2_check_server_ping_result.log</log-file>
			<ssh host="${pub.tftp1.ip}">
				-v "tail /tmp/${job.id}ping.log"
			</ssh>
			<log-match>-n -c -i "from ${sta1.tif.ip}: " -i "ttl="</log-match>
		</step>

		<step no="11.3" delay="10">
			<desc>
				show logging buffered
			</desc>
			<log-file>step11.3_show_loging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(\!\) eth0 ${pub.tftp1.tip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[egress \(to-air\)\] upid default action \[deny\]" -e "\(i\) eth0 ${pub.tftp1.tip}-&gt;${sta1.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="11.4">
			<desc>
				check sta ping result
			</desc>
			<log-file>step11.4_check_sta_ping_result.log</log-file>
			<ssh target="sta1">
				-v "tail /tmp/${job.id}ping_2.log"
			</ssh>
			<log-match>-n -c -i "from ${pub.tftp1.tip}: " -i "ttl="</log-match>
		</step>

		<step no="11.5" delay="10">
			<desc>
				show logging buffered
			</desc>
			<log-file>step11.5_show_loging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(\!\) wifi0.1 ${sta1.tif.ip}-&gt;${pub.tftp1.tip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "ACL: matched upid \[\d+\] dir \[ingress \(from-air\)\] upid default action \[deny\]" -e "\(i\) wifi0.1 ${sta1.tif.ip}-&gt;${pub.tftp1.tip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="1">
				<desc>
					kill server ping process
				</desc>
				<ssh host="${pub.tftp1.ip}">
					-v "kill ${server.pingid}"
				</ssh>
			</step>

			<step no="2">
				<desc>
					kill laptop ping process
				</desc>
				<ssh target="sta1">
					-v "kill ${laptop.pingid}"
				</ssh>
			</step>

			<step no="3" delay="30">
				<desc>
					delete tmp file on sta
				</desc>
				<ssh target="sta1">
					-v "rm -f /tmp/${job.id}ping_2.log"
				</ssh>
			</step>

			<step no="4">
				<desc>
					delete tmp file on server
				</desc>
				<ssh host="${pub.tftp1.ip}">
					-v "rm -f /tmp/${job.id}ping.log"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>