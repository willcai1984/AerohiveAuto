<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Mac-session setup/delete.(through MP)</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Laptop2 has been associated with AP1 and assigned an ip address

		Test Procedure:
		1) Laptop1 ping Laptop2
		2) Check the mac-session table on MP
		3) Shutdown the wifi backhoul of AP1
		"intface wifi[num] shutdown"
		4) Check the mac-session table on MP
		5) Up the wifi backhaul of AP1, repeat step 1
		6) Check the mac-session table on MP
		7) Shutdown the wifi backhaul of MP
		"intface wifi[num] shutdown"
		8) Check the mac-session table on MP
		9) Up the wifi backhoul of MP, repeat step 1
		10) Check the mac-session table on MP
		11) Change the wifi backhaul to access on AP1
		"intface wifi[num] mode access"
		12) Check the mac-session table on MP
		13) Change the wifi to backhaul on AP1, repeat step 1
		14) Check the mac-session table on MP
		15) Change the wifi backhaul to access on MP
		"intface wifi[num] mode access"
		16) Check the mac-session table on MP
	</description>
	<numofap>2</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>

	<property name="hive.passwd" value="12345678" />
	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn2.ssid" value="ap2-${ssid.name}" />

	<stage>
		<if>"${ap.wifi1.existed}" == "true"</if>
		<step no="shutdown.eth1">
			<desc>
				shutdown interface eth1
			</desc>
			<if>"${ap1.eth1.existed}" == "true"</if>
			<telnet target="ap1">
				-v "interface eth1 shutdown"
			</telnet>
		</step>

		<step no="0">
			<desc>
				-Config ap1
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${hive.passwd}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="0.1">
			<desc>
				-Config ap2
			</desc>
			<telnet target="ap2">
				-v "hive ${hive.name}"
				-v "hive ${hive.name} password ${hive.passwd}"
				-v "interface mgt0 hive ${hive.name}"
			</telnet>
		</step>

		<step no="1">
			<desc>
				-config ssid and bind to interface
				-Laptop uses user-profile "FW"
			</desc>
			<telnet target="ap1">
				-v "security-object ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 1"
				-v "user-profile ttt qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "802.1x-mac-table expire-time 60"
				-v "no bonjour-gateway enable"
			</telnet>
		</step>

		<step no="3">
			<desc>
				-config ssid and bind to interface
				-Laptop uses user-profile "FW"
			</desc>
			<telnet target="ap2">
				-v "security-object ap2-${ssid.name}"
				-v "security-object ap2-${ssid.name} default-user-profile-attr 1"
				-v "ssid ap2-${ssid.name}"
				-v "ssid ap2-${ssid.name} security-object ap2-${ssid.name}"
				-v "interface wifi0 ssid ap2-${ssid.name}"
				-v "interface wifi0 radio channel 1"
				-v "user-profile sss qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "interface wifi1 radio channel 36"
				-v "802.1x-mac-table expire-time 60"
				-v "no bonjour-gateway enable"
			</telnet>
		</step>

		<step no="3.1">
			<desc>
				show ap2's interface wifi1 info
			</desc>
			<log-file>step3.1_show_ap2_interface_info.log</log-file>
			<telnet target="ap2">
				-v "show interface wifi1"
			</telnet>
		</step>

		<step no="3.2">
			<desc>
				get ap2's wifi1's mac address
			</desc>
			<setvar name="ap2.wifi1.mac">
				${bin.dir}/getrmtip.pl -f ${log.dir}/step3.1_show_ap2_interface_info.log -i wifi1 -o aero -m -width
			</setvar>
		</step>

		<step no="3.3">
			<desc>shutdown interface wifi1 and then up it (it's aimed to clear wifi1's neighbor list)</desc>
			<telnet target="ap1">
				-v "interface wifi1 hive ${hive.name} shutdown"
				-v "no interface wifi1 hive ${hive.name} shutdown"
				-v "interface wifi1 radio channel 36"
			</telnet>
		</step>

		<step no="4" type="loop-check" loop-max-times="25" loop-interval="5">
			<desc>
				show acsp neighbor to make sure ap1 is ap2's acsp neighbor
			</desc>
			<log-file>step4_show_acsp_neighbor_${loop_check.idx}.log</log-file>
			<telnet target="ap1" timeout="180">
				-v "show acsp neighbor"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2.wifi1.mac}\s+Backhaul\s+${hive.name}" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.1">
			<desc>
				-shutdown interface eth0
			</desc>
			<console target="ap1">
				-v "interface eth0 shutdown"
			</console>
		</step>

		<step no="5" delay="35" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show amrp neighbor
			</desc>
			<log-file>step5_show_amrp_neighbor_${loop_check.idx}.log</log-file>
			<console target="ap1" timeout="180">
				-v "show amrp neighbor"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2.wifi1.mac}\s+${ap2.mgt0.ip}\s+TWO-WAY" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<include prefix="6" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta2, ap2" />

		<include prefix="7" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<include prefix="8" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5" />

		<step no="9">
			<desc>
				Laptop1 ping Laptop2 in background
			</desc>
			<log-file>step9_sta1_start_ping.log</log-file>
			<ssh target="sta1">
				-v "nohup ping ${sta2.tif.ip} &amp;"
			</ssh>
		</step>

		<step no="10">
			<desc>
				-Check the mac-session table on MP
			</desc>
			<log-file>step10_show_mac_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine mac-sessions"
			</console>
			<log-match>-c -i "${sta1.tif.mac}-&gt;${sta2.tif.mac}"</log-match>
			<log-match>-c -i "${sta2.tif.mac}-&gt;${sta1.tif.mac}"</log-match>
		</step>

		<step no="10.1">
			<desc>
				4) Shutdown the wifi backhoul of AP
				"intface wifi[num] shutdown"
			</desc>
			<telnet target="ap2">
				-v "interface wifi1 hive ${hive.name} shutdown"
			</telnet>
		</step>

		<step no="10.2" delay="60">
			<desc>
				-show running-config
			</desc>
			<log-file>step10.2_show_running_config.log</log-file>
			<telnet target="ap2">
				-v "show running-config"
			</telnet>
		</step>

		<include prefix="10.3" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5, negative" />

		<step no="11" delay="65" type="loop-check" loop-max-times="15" loop-interval="5">
			<desc>
				-Check the mac-session table on MP
			</desc>
			<log-file>step11_show_mac_sessions_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine mac-sessions"
			</console>
			<log-match>-n -c -i "${sta1.tif.mac}-&gt;${sta2.tif.mac}"</log-match>
			<log-match>-n -c -i "${sta2.tif.mac}-&gt;${sta1.tif.mac}"</log-match>
		</step>

		<step no="11.1">
			<desc>
				-up the wifi backhoul of AP
				"no intface wifi[num] shutdown"
			</desc>
			<telnet target="ap2">
				-v "no interface wifi1 hive ${hive.name} shutdown"
			</telnet>
		</step>

		<step no="11.2" delay="10" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show amrp neighbor
			</desc>
			<log-file>step11.2_show_amrp_neighbor_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show amrp neighbor"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2.wifi1.mac}\s+${ap2.mgt0.ip}\s+TWO-WAY" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="11.3" delay="60">
			<desc>
				-show running-config
			</desc>
			<log-file>step11.3_show_running_config.log</log-file>
			<telnet target="ap2">
				-v "show running-config"
			</telnet>
		</step>

		<include prefix="11.4" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5" />

		<step no="12">
			<desc>
				-Check the mac-session table on MP
			</desc>
			<log-file>step12_show_mac_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine mac-sessions"
			</console>
			<log-match>-c -i "${sta1.tif.mac}-&gt;${sta2.tif.mac}"</log-match>
			<log-match>-c -i "${sta2.tif.mac}-&gt;${sta1.tif.mac}"</log-match>
		</step>

		<step no="12.1">
			<desc>
				4) Shutdown the wifi backhoul of MP
				"intface wifi[num] shutdown"
			</desc>
			<console target="ap1">
				-v "interface wifi1 hive ${hive.name} shutdown"
			</console>
		</step>

		<step no="12.2" delay="60">
			<desc>
				-show running-config
			</desc>
			<log-file>step12.2_show_running_config.log</log-file>
			<telnet target="ap2">
				-v "show running-config"
			</telnet>
		</step>

		<include prefix="12.3" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5, negative" />

		<step no="13" delay="65" type="loop-check" loop-max-times="15" loop-interval="5">
			<desc>
				-Check the mac-session table on MP
			</desc>
			<log-file>step13_show_mac_sessions_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine mac-sessions"
			</console>
			<log-match>-n -c -i "${sta1.tif.mac}-&gt;${sta2.tif.mac}"</log-match>
			<log-match>-n -c -i "${sta2.tif.mac}-&gt;${sta1.tif.mac}"</log-match>
		</step>

		<step no="13.1">
			<desc>
				-up the wifi backhoul of MP
				"no intface wifi[num] shutdown"
			</desc>
			<console target="ap1">
				-v "no interface wifi1 hive ${hive.name} shutdown"
			</console>
		</step>

		<step no="13.2" delay="10" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show amrp neighbor
			</desc>
			<log-file>step13.2_show_amrp_neighbor_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show amrp neighbor"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2.wifi1.mac}\s+${ap2.mgt0.ip}\s+TWO-WAY" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="13.3" delay="60">
			<desc>
				-show running-config
			</desc>
			<log-file>step13.3_show_running_config.log</log-file>
			<telnet target="ap2">
				-v "show running-config"
			</telnet>
		</step>

		<include prefix="13.4" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5" />

		<step no="14">
			<desc>
				-Check the mac-session table on MP
			</desc>
			<log-file>step14_show_mac_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine mac-sessions"
			</console>
			<log-match>-c -i "${sta1.tif.mac}-&gt;${sta2.tif.mac}"</log-match>
			<log-match>-c -i "${sta2.tif.mac}-&gt;${sta1.tif.mac}"</log-match>
		</step>

		<step no="14.1">
			<desc>
				-Change the wifi backhaul to access on AP
				"intface wifi[num] mode access"
			</desc>
			<telnet target="ap2">
				-v "interface wifi1 mode access"
			</telnet>
		</step>

		<step no="14.2" delay="60">
			<desc>
				-show running-config
			</desc>
			<log-file>step14.2_show_running_config.log</log-file>
			<telnet target="ap2">
				-v "show running-config"
			</telnet>
		</step>

		<include prefix="14.3" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5, negative" />

		<step no="15" delay="65" type="loop-check" loop-max-times="15" loop-interval="5">
			<desc>
				-Check the mac-session table on MP
			</desc>
			<log-file>step15_show_mac_sessions_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine mac-sessions"
			</console>
			<log-match>-n -c -i "${sta1.tif.mac}-&gt;${sta2.tif.mac}"</log-match>
			<log-match>-n -c -i "${sta2.tif.mac}-&gt;${sta1.tif.mac}"</log-match>
		</step>

		<step no="15.1">
			<desc>
				-Change the wifi to backhaul on AP
			</desc>
			<telnet target="ap2">
				-v "interface wifi1 mode backhaul"
			</telnet>
		</step>

		<step no="15.2" delay="10" type="loop-check" loop-max-times="50" loop-interval="5">
			<desc>
				show amrp neighbor
			</desc>
			<log-file>step15.2_show_amrp_neighbor_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show amrp neighbor"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${ap2.wifi1.mac}\s+${ap2.mgt0.ip}\s+TWO-WAY" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="15.3" delay="60">
			<desc>
				-show running-config
			</desc>
			<log-file>step15.3_show_running_config.log</log-file>
			<telnet target="ap2">
				-v "show running-config"
			</telnet>
		</step>

		<include prefix="15.4" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5" />

		<step no="16">
			<desc>
				-Check the mac-session table on MP
			</desc>
			<log-file>step16_show_mac_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine mac-sessions"
			</console>
			<log-match>-c -i "${sta1.tif.mac}-&gt;${sta2.tif.mac}"</log-match>
			<log-match>-c -i "${sta2.tif.mac}-&gt;${sta1.tif.mac}"</log-match>
		</step>

		<step no="16.1">
			<desc>
				-Change the wifi backhaul to access on mp
				"intface wifi[num] mode access"
			</desc>
			<console target="ap1">
				-v "interface wifi1 mode access"
			</console>
		</step>

		<step no="16.2" delay="60">
			<desc>
				-show running-config
			</desc>
			<log-file>step16.2_show_running_config.log</log-file>
			<telnet target="ap2">
				-v "show running-config"
			</telnet>
		</step>

		<include prefix="16.3" file="subs/sta_ping.xml" args="sta1, ${sta2.tif.ip}, 5, negative" />

		<step no="17" delay="65" type="loop-check" loop-max-times="15" loop-interval="5">
			<desc>
				-Check the mac-session table on MP
			</desc>
			<log-file>step17_show_mac_sessions_${loop_check.idx}.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine mac-sessions"
			</console>
			<log-match>-n -c -i "${sta1.tif.mac}-&gt;${sta2.tif.mac}"</log-match>
			<log-match>-n -c -i "${sta2.tif.mac}-&gt;${sta1.tif.mac}"</log-match>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					clear local file
				</desc>
				<ssh target="sta1">
					-v "killall -q ping"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>