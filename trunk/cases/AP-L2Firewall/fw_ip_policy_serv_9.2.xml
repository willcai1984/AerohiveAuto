<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Session setup for ftp/ftp-data traffic</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-Configure AP1
		"security-object FWtest"
		"security-object FWtest default-user-profile-attr 1"
		"ssid FWtest"
		"ssid FWtest security-object FWtest"
		"interface wifi0 ssid FWtest"
		"interface wifi1 ssid FWtest"
		"user-profile FW qos-policy def-user-qos vlan-id &lt;mgt0 vlan&gt; attribute 1"
		-Laptop has been associated with AP1 and assigned an ip address
		-Laptop uses user-profile "FW"

		Test Procedure:
		1) Config the ip-policy that permit ftp/ftp-data traffic between Laptop and Server
		"ip-policy FW"
		"ip-policy FW service [ftp/ftp-data] from &lt;Laptop ip addr&gt; action permit"
		"user-profile FW security ip-policy from-access FW"
		2) Laptop uses ftp to connect Server, and download/upload files, check the result
		3) Show the ip-session
		"show forwarding-engine ip-sessions"
		4) Config the ip-policy that deny ftp/ftp-data traffic between Laptop and Server
		"ip-policy FW"
		"ip-policy FW service [ftp/ftp-data] from &lt;Laptop ip addr&gt; action deny"
		"user-profile FW security ip-policy from-access FW"
		5) Laptop uses ftp to connect Server, and download/upload files, check the result
		6) Show the ip-session
		"show forwarding-engine ip-sessions"
	</description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="ftp_test_file" value="ftp_test_file" />
	<property name="ftp_upload_file" value="ftp_upload_file" />
	<property name="ftp_test_file_local_dir" value="/tmp" />
	<property name="ftp_test_file_remote_dir" value="/home/logger" />

	<stage>
		<step no="1">
			<desc>
				-Configure AP1
				"security-object FWtest"
				"security-object FWtest default-user-profile-attr 1"
				"ssid FWtest"
				"ssid FWtest security-object FWtest"
				"interface wifi0 ssid FWtest"
				"interface wifi1 ssid FWtest"
				"user-profile FW qos-policy def-user-qos vlan-id &lt;mgt0 vlan&gt; attribute 1"
			</desc>
			<console target="ap1">
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.vlan1}"
				-v "interface eth0 native-vlan ${tb.vlan1}"
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 1"
				-v "ssid ${ssid.name}11"
				-v "ssid ${ssid.name}11 security-object FWtest"
				-v "interface wifi0 ssid ${ssid.name}11"
				-v "user-profile FW qos-policy def-user-qos vlan-id ${tb.vlan1} attribute 1"
			</console>
		</step>

		<include prefix="2" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="2.1">
			<desc>
				pc connect ap
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}11\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "quit"
			</ssh>
		</step>

		<include prefix="2.2" file="subs/chk_conn_in_sta.xml" args="sta1" />

		<step no="3">
			<desc>Get laptop1's ip</desc>
			<setvar name="sta1.tif.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig_sta1.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="4">
			<desc>
				1) Config the ip-policy that permit ftp/ftp-data traffic between Laptop and Server
				"ip-policy FW"
				"ip-policy FW service [ftp/ftp-data] from &lt;Laptop ip addr&gt; action permit"
			</desc>
			<console target="ap1">
				-v "ip-policy FW"
				-v "ip-policy FW id 1 service ftp action permit"
				-v "user-profile FW security ip-policy from-access FW"
			</console>
		</step>

		<step no="4.1">
			<desc>
				open debug mode
			</desc>
			<console target="ap1">
				-v "_ff dst-ip ${pub.ftp1.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
			</console>
		</step>

		<step no="permit.get.0">
			<desc>
				clear local file
			</desc>
			<ssh target="sta1">
				-v "rm -f ${ftp_test_file_local_dir}/${ftp_test_file}"
				-v "rm -f ${ftp_test_file_local_dir}/${ftp_upload_file}"
				-v "rm -f ${ftp_test_file_local_dir}/permit.get.2_stdout.log"
				-v "rm -f ${ftp_test_file_local_dir}/permit.put.2_stdout.log"
				-v "rm -f ${ftp_test_file_local_dir}/permit.enable.get.2_stdout.log"
				-v "rm -f ${ftp_test_file_local_dir}/permit.enable.put.2_stdout.log"
				-v "rm -f ${ftp_test_file_local_dir}/permit.disable.get.2_stdout.log"
				-v "rm -f ${ftp_test_file_local_dir}/permit.disable.put.2_stdout.log"
				-v "rm -f ${ftp_test_file_local_dir}/deny.get.2_stdout.log"
				-v "rm -f ${ftp_test_file_local_dir}/deny.put.2_stdout.log"
			</ssh>
		</step>

		<step no="permit.get.1">
			<desc>
				"clear forwarding-engine ip-sessions"
			</desc>
			<console target="ap1">
				-v "clear forwarding-engine ip-sessions"
			</console>
		</step>

		<step no="permit.get.2">
			<desc>
				get file from ftp server
			</desc>
			<log-file>permit.get.2_curl_pid.log</log-file>
			<ssh target="sta1">
				-v "nohup curl -u ${pub.ftp1.username}:${pub.ftp1.passwd} ftp://${pub.ftp1.ip}/${ftp_test_file} -o ${ftp_test_file_local_dir}/${ftp_test_file} --limit-rate 20k --connect-timeout 100 > ${ftp_test_file_local_dir}/permit.get.2_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<include prefix="permit.get.2.1" file="subs/save_ap_log.xml" args="show logging buffered, ap1, permit.get.2.1_show_logging_buffered.log" />

		<step no="permit.get.3" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				check "curl get" alive
			</desc>
			<log-file>permit.get.3_curl_pid_chk_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep curl"
			</ssh>
			<log-match>-e "curl" -i "ftp"</log-match>
			<failed>next</failed>
		</step>

		<step no="permit.get.4">
			<desc>
				"show forwarding-engine ip-sessions"
			</desc>
			<log-file>permit.get.4_show_forwarding_ip_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine ip-sessions"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/.*?-&gt;.*?${pub.ftp1.ip}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${pub.ftp1.ip}/21\s+-&gt;.*?${sta1.tif.ip}/.*?" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="permit.get.5">
			<desc>
				get pid of "curl get""
			</desc>
			<setvar name="permit.get.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/permit.get.2_curl_pid.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="permit.get.6" delay="100">
			<desc>
				wait for process end.
			</desc>
			<log-file>permit.get.6_curl_pid_chk.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep ${permit.get.pid}"
			</ssh>
			<log-match>-n -e "curl"</log-match>
		</step>

		<step no="permit.get.7">
			<desc>
				check "curl get" result
			</desc>
			<log-file>permit.get.7_check_file.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/permit.get.2_stdout.log"
			</ssh>
			<log-match>-e "curl: (28) Connection time-out" -e "curl: (28) connect() timed out"</log-match>
		</step>

		<step no="permit.get.8">
			<desc>
				local file should not exist
			</desc>
			<log-file>permit.get.8_local_file_chk.log</log-file>
			<ssh target="sta1" timeout="200">
				-v "ls ${ftp_test_file_local_dir}"
			</ssh>
			<log-match>-n -e "${ftp_test_file}"</log-match>
		</step>

		<step no="permit.put.0">
			<desc>
				clear remote file
			</desc>
			<ssh host="${pub.ftp1.ip}" timeout="180" user="logger" password="aerohive" prompt="logger@.*$">
				-v "rm -f ${ftp_test_file_remote_dir}/${ftp_upload_file}"
			</ssh>
		</step>

		<step no="permit.put.1">
			<desc>
				touch a file in order to upload it
			</desc>
			<ssh target="sta1">
				-v "touch ${ftp_test_file_local_dir}/${ftp_upload_file}"
				-v "echo \"this is a test file in order to upload.\" > ${ftp_test_file_local_dir}/${ftp_upload_file}"
			</ssh>
		</step>

		<step no="permit.put.2">
			<desc>
				"clear forwarding-engine ip-sessions"
			</desc>
			<console target="ap1">
				-v "clear forwarding-engine ip-sessions"
				-v "clear log buffered"
			</console>
		</step>

		<step no="permit.put.3">
			<desc>
				put file to ftp server
			</desc>
			<log-file>permit.put.2_curl_pid.log</log-file>
			<ssh target="sta1">
				-v "nohup curl -u ${pub.ftp1.username}:${pub.ftp1.passwd} ftp://${pub.ftp1.ip} -T ${ftp_test_file_local_dir}/${ftp_upload_file} --limit-rate 1k --connect-timeout 100 > ${ftp_test_file_local_dir}/permit.put.2_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<include prefix="permit.put.3.1" file="subs/save_ap_log.xml" args="show logging buffered, ap1, permit.put.3.1_show_logging_buffered.log" />

		<step no="permit.put.4" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				check "curl put" alive
			</desc>
			<log-file>permit.put.3_curl_pid_chk_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep curl"
			</ssh>
			<log-match>-e "curl" -i "ftp"</log-match>
		</step>

		<step no="permit.put.5">
			<desc>
				"show forwarding-engine ip-sessions"
			</desc>
			<log-file>permit.put.4_show_forwarding_ip_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine ip-sessions"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/.*?-&gt;.*?${pub.ftp1.ip}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${pub.ftp1.ip}/21\s+-&gt;.*?${sta1.tif.ip}/.*?" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="permit.put.6">
			<desc>
				get pid of "curl put""
			</desc>
			<setvar name="permit.put.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/permit.put.2_curl_pid.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="permit.put.7" delay="100">
			<desc>
				wait for process end.
			</desc>
			<log-file>permit.put.7_curl_pid_chk.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep ${permit.put.pid}"
			</ssh>
			<log-match>-n -e "curl"</log-match>
		</step>

		<step no="permit.put.8">
			<desc>
				check "curl put" result
			</desc>
			<log-file>permit.put.7_check_file.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/permit.put.2_stdout.log"
			</ssh>
			<log-match>-e "curl: (28) Connection time-out" -e "curl: (28) connect() timed out"</log-match>
		</step>

		<step no="permit.put.9">
			<desc>
				remote file should not exist
			</desc>
			<log-file>permit.put.9_remote_file_chk.log</log-file>
			<ssh host="${pub.ftp1.ip}" timeout="60" user="logger" password="aerohive" prompt="logger@.*$">
				-v "ls ${ftp_test_file_remote_dir}"
			</ssh>
			<log-match>-n -e "${ftp_upload_file}"</log-match>
		</step>

		<step no="permit.enable.get.0">
			<desc>
				Enable FTP-alg
				"alg ftp enable"
				"no user-profile FW security ip-policy from-access"
			</desc>
			<console target="ap1">
				-v "alg ftp enable"
				-v "no user-profile FW security ip-policy from-access"
			</console>
		</step>

		<step no="permit.enable.get.0.1" type="loop-check" loop-max-times="3" loop-interval="5">
			<desc>
				release ip address,then get ip address
			</desc>
			<log-file>permit.enable.get.0.1_ip_address_${loop-check.idx}.log</log-file>
			<ssh target="sta1">
				-v "dhclient ${sta.tif.name} -r"
				-v "dhclient ${sta.tif.name}"
				-v "ifconfig ${sta.tif.name}"
			</ssh>
			<no-error-check />
			<log-match>-e "inet addr" -i "192.168.${tb.vlan1}."</log-match>
		</step>

		<step no="permit.enable.get.0.2">
			<desc>
				let "user-profile FW security ip-policy from-access FW" usable.
			</desc>
			<console target="ap1">
				-v "ip-policy FW from 0.0.0.0 to 255.255.255.255 ac permit"
				-v "user-profile FW security ip-policy from-access FW"
			</console>
		</step>

		<step no="permit.enable.get.1">
			<desc>
				clear local file
			</desc>
			<ssh target="sta1">
				-v "rm -f ${ftp_test_file_local_dir}/${ftp_test_file}"
			</ssh>
		</step>

		<step no="permit.enable.get.1.1">
			<desc>
				"clear forwarding-engine ip-sessions"
				"clear log buffered"
			</desc>
			<console target="ap1">
				-v "clear forwarding-engine ip-sessions"
				-v "clear log buffered"
			</console>
		</step>

		<step no="permit.enable.get.2">
			<desc>
				get file from ftp server
			</desc>
			<log-file>permit.enable.get.2_curl_pid.log</log-file>
			<ssh target="sta1">
				-v "nohup curl -u ${pub.ftp1.username}:${pub.ftp1.passwd} ftp://${pub.ftp1.ip}/test -o ${ftp_test_file_local_dir}/${ftp_test_file} --limit-rate 20k --connect-timeout 100 > ${ftp_test_file_local_dir}/permit.enable.get.2_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<include prefix="permit.enable.get.2.1" file="subs/save_ap_log.xml" args="show logging buffered, ap1, permit.enable.get.2.1_show_logging_buffered.log" />

		<step no="permit.enable.get.3" type="loop-check" loop-max-times="10" loop-interval="3">
			<desc>
				check "curl get" alive
			</desc>
			<log-file>permit.enable.get.3_curl_pid_chk_${loop_check.idx}.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep curl"
			</ssh>
			<log-match>-e "curl" -i "ftp"</log-match>
		</step>
		
		<include prefix="21" file="subs/sta_dhcp_check.xml" obj-args="sta1" />

		<step no="permit.enable.get.4">
			<desc>
				"show forwarding-engine ip-sessions"
			</desc>
			<log-file>permit.enable.get.4_show_forwarding_ip_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine ip-sessions"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/.*?-&gt;.*?${pub.ftp1.ip}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${pub.ftp1.ip}/21\s+-&gt;.*?${sta1.tif.ip}/.*?" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="permit.enable.get.5">
			<desc>
				get pid of "curl get""
			</desc>
			<setvar name="permit.enable.get.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/permit.enable.get.2_curl_pid.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="permit.enable.get.6" delay="100" type="loop-check" loop-max-times="10" loop-interval="10">
			<desc>
				wait for process end.
			</desc>
			<log-file>permit.enable.get.6_curl_pid_chk_${loop_check.idx}.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
				-v "ps aux | grep ${permit.enable.get.pid}"
			</ssh>
			<log-match>-n -e "curl"</log-match>
		</step>

		<step no="permit.enable.get.7">
			<desc>
				check "curl get" result
			</desc>
			<log-file>permit.enable.get.7_check_file.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/permit.enable.get.2_stdout.log"
			</ssh>
			<log-match>-n -e "curl" -i "Connection time-out"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\d*\s+\d*k\s+\d*\s+\d*k.*0:\d*:\d*\s+--:--:--" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="permit.enable.get.8">
			<desc>
				local file should exist
			</desc>
			<log-file>permit.enable.get.8_local_file_chk.log</log-file>
			<ssh target="sta1">
				-v "ls ${ftp_test_file_local_dir}"
			</ssh>
			<log-match>-e "${ftp_test_file}"</log-match>
		</step>

		<step no="permit.enable.put.0">
			<desc>
				clear remote file
			</desc>
			<ssh host="${pub.ftp1.ip}" user="logger" password="aerohive" prompt="logger@.*$">
				-v "rm -f ${ftp_test_file_remote_dir}/${ftp_test_file}"
			</ssh>
		</step>

		<step no="permit.enable.put.1">
			<desc>
				"clear forwarding-engine ip-sessions"
			</desc>
			<console target="ap1">
				-v "clear forwarding-engine ip-sessions"
				-v "clear log buffered"
			</console>
		</step>

		<step no="permit.enable.put.2">
			<desc>
				put file to ftp server
			</desc>
			<log-file>permit.enable.put.2_curl_pid.log</log-file>
			<ssh target="sta1">
				-v "nohup curl -u ${pub.ftp1.username}:${pub.ftp1.passwd} ftp://${pub.ftp1.ip} -T ${ftp_test_file_local_dir}/${ftp_test_file} --limit-rate 10k --connect-timeout 100 > ${ftp_test_file_local_dir}/permit.enable.put.2_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<include prefix="permit.enable.put.2.1" file="subs/save_ap_log.xml" args="show logging buffered, ap1, permit.enable.put.2.1_show_logging_buffered.log" />

		<step no="permit.enable.put.3" type="loop-check" loop-max-times="10" loop-interval="3">
			<desc>
				check "curl put" alive
			</desc>
			<log-file>permit.enable.put.3_curl_pid_chk.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep curl"
			</ssh>
			<log-match>-e "curl" -i "ftp"</log-match>
		</step>

		<step no="permit.enable.put.4">
			<desc>
				"show forwarding-engine ip-sessions"
			</desc>
			<log-file>permit.enable.put.4_show_forwarding_ip_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine ip-sessions"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/.*?-&gt;.*?${pub.ftp1.ip}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${pub.ftp1.ip}/21\s+-&gt;.*?${sta1.tif.ip}/.*?" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="permit.enable.put.5">
			<desc>
				get pid of "curl put""
			</desc>
			<setvar name="permit.enable.put.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/permit.enable.put.2_curl_pid.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="permit.enable.put.6" delay="150">
			<desc>
				wait for process end.
			</desc>
			<log-file>permit.enable.put.6_curl_pid_chk.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep ${permit.enable.put.pid}"
			</ssh>
			<log-match>-n -e "curl"</log-match>
		</step>

		<step no="permit.enable.put.7">
			<desc>
				check "curl put" result
			</desc>
			<log-file>permit.enable.put.7_check_file.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/permit.enable.put.2_stdout.log"
			</ssh>
			<log-match>-n -e "curl" -i "Connection time-out"</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "100\s+\d*k+\s+0+\s+0+\s+100" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="permit.enable.put.8">
			<desc>
				remote file should exist
			</desc>
			<log-file>permit.enable.put.8_remote_file_chk.log</log-file>
			<ssh host="${pub.ftp1.ip}" timeout="60" user="logger" password="aerohive" prompt="logger@.*$">
				-v "ls ${ftp_test_file_remote_dir}"
			</ssh>
			<log-match>-e "${ftp_test_file}"</log-match>
		</step>

		<step no="permit.disable.get.0">
			<desc>
				clear clg config
				"no alg ftp enable"
				config the ip-policy ftp/ftpdata permit
				"ip-policy FW service ftp action permit"
				"ip-policy FW service ftp-data action permit"
				"user-profile FW security ip-policy from-access FW to-access FW"
			</desc>
			<console target="ap1">
				-v "no alg ftp enable"
				-v "no user-profile FW security ip-policy from-access"
				-v "ip-policy FW id 1 service ftp action permit"
				-v "ip-policy FW id 2 service ftp-data action permit"
			</console>
		</step>

		<step no="permit.disable.get.0.1" type="loop-check" loop-max-times="3" loop-interval="5">
			<desc>
				release ip address,then get ip address
			</desc>
			<log-file>permit.disable.get.0.1_ip_address_${loop-check.idx}.log</log-file>
			<ssh target="sta1">
				-v "dhclient ${sta.tif.name} -r"
				-v "dhclient ${sta.tif.name}"
				-v "ifconfig ${sta.tif.name}"
			</ssh>
			<log-match>-e "inet addr" -i "192.168.${tb.vlan1}."</log-match>
		</step>

		<step no="permit.disable.get.0.2">
			<desc>
				let "user-profile FW security ip-policy from-access FW to-access FW" usable.
			</desc>
			<console target="ap1">
				-v "user-profile FW security ip-policy from-access FW to-access FW"
			</console>
		</step>

		<step no="permit.disable.get.1">
			<desc>
				clear local file
			</desc>
			<ssh target="sta1">
				-v "rm -f ${ftp_test_file_local_dir}/${ftp_test_file}"
			</ssh>
		</step>

		<step no="permit.disable.get.1.1">
			<desc>
				"clear forwarding-engine ip-sessions"
				"clear log buffered"
			</desc>
			<console target="ap1">
				-v "clear forwarding-engine ip-sessions"
				-v "clear log buffered"
			</console>
		</step>

		<step no="permit.disable.get.2">
			<desc>
				get file from ftp server
			</desc>
			<log-file>permit.disable.get.2_curl_pid.log</log-file>
			<ssh target="sta1">
				-v "nohup curl -u ${pub.ftp1.username}:${pub.ftp1.passwd} ftp://${pub.ftp1.ip}/test -o ${ftp_test_file_local_dir}/${ftp_test_file} --limit-rate 10k --connect-timeout 100 > ${ftp_test_file_local_dir}/permit.disable.get.2_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<include prefix="permit.disable.get.2.1" file="subs/save_ap_log.xml" args="show logging buffered, ap1, permit.disable.get.2.1_show_logging_buffered.log" />

		<step no="permit.disable.get.3" type="loop-check" loop-max-times="10" loop-interval="3">
			<desc>
				check "curl get" alive
			</desc>
			<log-file>permit.disable.get.3_curl_pid_chk.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep curl"
			</ssh>
			<log-match>-e "curl" -i "ftp"</log-match>
		</step>

		<step no="permit.disable.get.4">
			<desc>
				"show forwarding-engine ip-sessions"
			</desc>
			<log-file>permit.disable.get.4_show_forwarding_ip_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine ip-sessions"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/.*?-&gt;.*?${pub.ftp1.ip}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${pub.ftp1.ip}/21\s+-&gt;.*?${sta1.tif.ip}/.*?" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="permit.disable.get.5">
			<desc>
				get pid of "curl get""
			</desc>
			<setvar name="permit.disable.get.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/permit.disable.get.2_curl_pid.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="permit.disable.get.6" delay="100">
			<desc>
				wait for process end.
			</desc>
			<log-file>permit.disable.get.6_curl_pid_chk.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep ${permit.disable.get.pid}"
			</ssh>
			<log-match>-n -e "curl"</log-match>
		</step>

		<step no="permit.disable.get.7">
			<desc>
				check "curl get" result
			</desc>
			<log-file>permit.disable.get.7_check_file.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/permit.disable.get.2_stdout.log"
			</ssh>
			<log-match>-e "curl: (28) Connection time-out" -e "curl: (28) connect() timed out"</log-match>
		</step>

		<step no="permit.disable.get.8">
			<desc>
				local file should not exist
			</desc>
			<log-file>permit.disable.get.8_local_file_chk.log</log-file>
			<ssh target="sta1">
				-v "ls ${ftp_test_file_local_dir}"
			</ssh>
			<log-match>-n -e "${ftp_test_file}"</log-match>
		</step>

		<step no="permit.disable.put.0">
			<desc>
				clear remote file
			</desc>
			<ssh host="${pub.ftp1.ip}" user="logger" password="aerohive" prompt="logger@.*$">
				-v "rm -f ${ftp_test_file_remote_dir}/${ftp_upload_file}"
			</ssh>
		</step>

		<step no="permit.disable.put.1">
			<desc>
				"clear forwarding-engine ip-sessions"
			</desc>
			<console target="ap1">
				-v "clear forwarding-engine ip-sessions"
				-v "clear log buffered"
			</console>
		</step>

		<step no="permit.disable.put.2">
			<desc>
				put file to ftp server
			</desc>
			<log-file>permit.disable.put.2_curl_pid.log</log-file>
			<ssh target="sta1">
				-v "nohup curl -u ${pub.ftp1.username}:${pub.ftp1.passwd} ftp://${pub.ftp1.ip}/${ftp_test_file_remote_dir} -T ${ftp_test_file_local_dir}/${ftp_upload_file} --limit-rate 1k --connect-timeout 100 > ${ftp_test_file_local_dir}/permit.disable.put.2_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<include prefix="permit.disable.put.2.1" file="subs/save_ap_log.xml" args="show logging buffered, ap1, permit.disable.put.2.1_show_logging_buffered.log" />

		<step no="permit.disable.put.3" type="loop-check" loop-max-times="10" loop-interval="3">
			<desc>
				check "curl put" alive
			</desc>
			<log-file>permit.disable.put.3_curl_pid_chk.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep curl"
			</ssh>
			<log-match>-e "curl" -i "ftp"</log-match>
		</step>

		<step no="permit.disable.put.4">
			<desc>
				"show forwarding-engine ip-sessions"
			</desc>
			<log-file>permit.disable.put.4_show_forwarding_ip_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine ip-sessions"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/.*?-&gt;.*?${pub.ftp1.ip}/21;" -c 1 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${pub.ftp1.ip}/21\s+-&gt;.*?${sta1.tif.ip}/.*?" -c 1 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="permit.disable.put.5">
			<desc>
				get pid of "curl put""
			</desc>
			<setvar name="permit.disable.put.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/permit.disable.put.2_curl_pid.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="permit.disable.put.6" delay="100">
			<desc>
				wait for process end.
			</desc>
			<log-file>permit.disable.put.6_curl_pid_chk.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep ${permit.disable.put.pid}"
			</ssh>
			<log-match>-n -e "curl"</log-match>
		</step>

		<step no="permit.disable.put.7">
			<desc>
				check "curl put" result
			</desc>
			<log-file>permit.disable.put.7_check_file.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/permit.disable.put.2_stdout.log"
			</ssh>
			<log-match>-e "curl: (28) Connection time-out" -e "curl: (28) connect() timed out"</log-match>
		</step>

		<step no="permit.disable.put.8">
			<desc>
				remote file should not exist
			</desc>
			<log-file>permit.disable.put.8_remote_file_chk.log</log-file>
			<ssh host="${pub.ftp1.ip}" timeout="60" user="logger" password="aerohive" prompt="logger@.*$">
				-v "ls ${ftp_test_file_remote_dir}"
			</ssh>
			<log-match>-n -e "${ftp_upload_file}"</log-match>
		</step>

		<step no="5">
			<desc>
				5) Config the ip-policy that deny ftp/ftp-data traffic between Laptop and Server
				"ip-policy FW"
				"ip-policy FW service [ftp/ftp-data] from &lt;Laptop ip addr&gt; action deny"
				"user-profile FW security ip-policy from-access FW"
			</desc>
			<console target="ap1">
				-v "no ip-policy FW id 1"
				-v "no ip-policy FW id 2"
				-v "no user-profile FW security ip-policy from-access"
				-v "no user-profile FW security ip-policy to-access"
				-v "ip-policy FW id 1 service ftp action deny"
				-v "ip-policy FW id 2 service ftp-data action deny"
				-v "ip-policy FW id 3 action permit"
			</console>
		</step>

		<step no="deny.get.0" type="loop-check" loop-max-times="3" loop-interval="5">
			<desc>
				release ip address,then get ip address
			</desc>
			<log-file>permit.disable.get.0.1_ip_address_${loop-check.idx}.log</log-file>
			<ssh target="sta1">
				-v "dhclient ${sta.tif.name} -r"
				-v "dhclient ${sta.tif.name}"
				-v "ifconfig"
			</ssh>
			<log-match>-e "inet addr" -i "192.168.${tb.vlan1}."</log-match>
		</step>

		<step no="deny.get.0.1">
			<desc>
				let "user-profile FW security ip-policy from-access FW to-access FW" usable.
			</desc>
			<console target="ap1">
				-v "user-profile FW security ip-policy from-access FW to-access FW"
			</console>
		</step>

		<step no="deny.get.1">
			<desc>
				clear local file
			</desc>
			<ssh target="sta1">
				-v "rm -f ${ftp_test_file_local_dir}/${ftp_test_file}"
			</ssh>
		</step>

		<step no="deny.get.1.1">
			<desc>
				"clear forwarding-engine ip-sessions"
				"clear log buffered"
			</desc>
			<console target="ap1">
				-v "clear forwarding-engine ip-sessions"
				-v "clear log buffered"
			</console>
		</step>

		<step no="deny.get.2">
			<desc>
				get file from ftp server
			</desc>
			<log-file>deny.get.2_curl_pid.log</log-file>
			<ssh target="sta1">
				-v "nohup curl -u ${pub.ftp1.username}:${pub.ftp1.passwd} ftp://${pub.ftp1.ip}/test -o ${ftp_test_file_local_dir}/${ftp_test_file} --limit-rate 10k --connect-timeout 100 > ${ftp_test_file_local_dir}/deny.get.2_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<include prefix="deny.get.2.1" file="subs/save_ap_log.xml" args="show logging buffered, ap1, deny.get.2.1_show_logging_buffered.log" />

		<step no="deny.get.3" delay="10">
			<desc>
				"show forwarding-engine ip-sessions"
			</desc>
			<log-file>deny.get.3_show_forwarding_ip_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine ip-sessions"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/.*?-&gt;.*?${pub.ftp1.ip}/21;" -c 0 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${pub.ftp1.ip}/21\s+-&gt;\s+{sta1.tif.ip}/.*?" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="deny.get.4">
			<desc>
				get pid of "curl get""
			</desc>
			<setvar name="deny.get.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/deny.get.2_curl_pid.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="deny.get.5" delay="100">
			<desc>
				wait for process end.
			</desc>
			<log-file>deny.get.5_curl_pid_chk.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep ${deny.get.pid}"
			</ssh>
			<log-match>-n -e "curl"</log-match>
		</step>

		<step no="deny.get.6">
			<desc>
				check "curl put" result
			</desc>
			<log-file>deny.get.6_check_file.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/deny.get.2_stdout.log"
			</ssh>
			<log-match>-e "curl: (7) couldn't connect to host" -e "curl: (28) Connection time-out" -e "curl: (28) connect() timed out"</log-match>
		</step>

		<step no="deny.get.7">
			<desc>
				local file should not exist
			</desc>
			<log-file>deny.get.7_local_file_chk.log</log-file>
			<ssh target="sta1">
				-v "ls ${ftp_test_file_local_dir}"
			</ssh>
			<log-match>-n -e "${ftp_test_file}"</log-match>
		</step>

		<step no="deny.put.0">
			<desc>
				clear remote file
			</desc>
			<ssh host="${pub.ftp1.ip}" user="logger" password="aerohive" prompt="logger@.*$">
				-v "rm -f ${ftp_test_file_remote_dir}/${ftp_upload_file}"
				-v "rm -f ${ftp_test_file_remote_dir}/${ftp_test_file}"
			</ssh>
		</step>

		<step no="deny.put.1">
			<desc>
				"clear forwarding-engine ip-sessions"
			</desc>
			<console target="ap1">
				-v "clear forwarding-engine ip-sessions"
				-v "clear log buffered"
			</console>
		</step>

		<step no="deny.put.2">
			<desc>
				put file to ftp server
			</desc>
			<log-file>deny.put.2_curl_pid.log</log-file>
			<ssh target="sta1">
				-v "nohup curl -u ${pub.ftp1.username}:${pub.ftp1.passwd} ftp://${pub.ftp1.ip} -T ${ftp_test_file_local_dir}/${ftp_upload_file} --limit-rate 1k --connect-timeout 100 > ${ftp_test_file_local_dir}/deny.put.2_stdout.log 2>&amp;1 &amp;"
			</ssh>
		</step>

		<include prefix="deny.put.2.1" file="subs/save_ap_log.xml" args="show logging buffered, ap1, deny.put.2.1_show_logging_buffered.log" />

		<step no="deny.put.3" delay="10">
			<desc>
				"show forwarding-engine ip-sessions"
			</desc>
			<log-file>deny.put.3_show_forwarding_ip_sessions.log</log-file>
			<console target="ap1">
				-v "show forwarding-engine ip-sessions"
			</console>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${sta1.tif.ip}/.*?-&gt;.*?${pub.ftp1.ip}/21;" -c 0 -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "${pub.ftp1.ip}/21\s+-&gt;.*{sta1.tif.ip}/.*?" -c 0 -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="deny.put.4">
			<desc>
				get pid of "curl put"
			</desc>
			<setvar name="deny.put.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/deny.put.2_curl_pid.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="deny.put.5" delay="100">
			<desc>
				wait for process end.
			</desc>
			<log-file>deny.put.6_curl_pid_chk.log</log-file>
			<ssh target="sta1">
				-v "ps aux | grep ${deny.put.pid}"
			</ssh>
			<log-match>-n -e "curl"</log-match>
		</step>

		<step no="deny.put.6">
			<desc>
				check "curl put" result
			</desc>
			<log-file>deny.put.6_check_file.log</log-file>
			<ssh target="sta1">
				-v "cat /tmp/deny.put.2_stdout.log"
			</ssh>
			<log-match>-e "curl: (28) Connection time-out" -e "curl: (28) connect() timed out"</log-match>
		</step>

		<step no="deny.put.7">
			<desc>
				remote file should not exist
			</desc>
			<log-file>deny.put.7_remote_file_chk.log</log-file>
			<ssh host="${pub.ftp1.ip}" timeout="60" user="logger" password="aerohive" prompt="logger@.*$">
				-v "ls ${ftp_test_file_remote_dir}"
			</ssh>
			<log-match>-n -e "${ftp_upload_file}"</log-match>
		</step>

		<step no="deny.put.8">
			<desc>
				clear local file
			</desc>
			<ssh target="sta1">
				-v "rm -f ${ftp_test_file_local_dir}/${ftp_upload_file}"
			</ssh>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					clear local file
				</desc>
				<ssh target="sta1">
					-v "rm -f ${ftp_test_file_local_dir}/${ftp_test_file}"
					-v "rm -f ${ftp_test_file_local_dir}/${ftp_upload_file}"
					-v "rm -f ${ftp_test_file_local_dir}/permit.get.2_stdout.log"
					-v "rm -f ${ftp_test_file_local_dir}/permit.put.2_stdout.log"
					-v "rm -f ${ftp_test_file_local_dir}/permit.enable.get.2_stdout.log"
					-v "rm -f ${ftp_test_file_local_dir}/permit.enable.put.2_stdout.log"
					-v "rm -f ${ftp_test_file_local_dir}/permit.disable.get.2_stdout.log"
					-v "rm -f ${ftp_test_file_local_dir}/permit.disable.put.2_stdout.log"
					-v "rm -f ${ftp_test_file_local_dir}/deny.get.2_stdout.log"
					-v "rm -f ${ftp_test_file_local_dir}/deny.put.2_stdout.log"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>