<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Egressing pkt with other vlan is send to eth0</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		Test Procedure:

		1. Add one route vlan in eth1
		2. Pkt from wifi access to eth backhaul, if does not match the two cfg vlan,
		result 1
		3. Set a rang route vlan in eth1
		4. Pkt from wifi access to eth backhaul, if does not match the cfg vlan, result 1
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>winlin</tbtype>

	<property name="conn1.ssid" value="${ssid.name}" />
	<property name="conn2.ssid" value="${ssid.name}_2" />

	<stage>
		<if>"${ap1.eth1.existed}" == "true"</if>

		<step no="pre1">
			<desc>
				config ssid
			</desc>
			<telnet target="ap1">
				-v "security-object aero"
				-v "security-object aero default-user-profile-attr 1"
				-v "user-profile user attribute 1"
				-v "user-profile user vlan-id ${tb.vlan2}"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object aero"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="pre2">
			<desc>
				config ssid2
			</desc>
			<telnet target="ap1">
				-v "security-object aero2"
				-v "security-object aero2 default-user-profile-attr 2"
				-v "user-profile user2 attribute 2"
				-v "user-profile user2 vlan-id ${tb.vlan3}"
				-v "ssid ${ssid.name}_2"
				-v "ssid ${ssid.name}_2 security-object aero2"
				-v "interface wifi0 ssid ${ssid.name}_2"
			</telnet>
		</step>

		<include prefix="pre3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<include prefix="pre4" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn2, sta2, ap1" />

		<step no="open.debug">
			<desc>
				"_ff id 1 src-ip Laptop's IPaddr bidirectional"
				"_kdebug fe basic"
				"_kdebug fe detail"
				"clear log buffered"
			</desc>
			<telnet target="ap1">
				-v "_ff id 1 src-ip ${sta1.tif.ip} bidirectional"
				-v "_ff id 2 src-ip ${sta2.tif.ip} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "clear log buffered"
			</telnet>
		</step>

		<step no="1">
			<desc>
				1. Set a vlan in eth1
			</desc>
			<telnet target="ap1">
				-v "forwarding-engine l2-default-route interface eth1 vlan ${tb.vlan2}"
				-v "clear log all"
				-v "clear forwarding-engine ip-sessions"
				-v "clear forwarding-engine mac-sessions"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				check eth1 default-route-vlan
			</desc>
			<telnet target="ap1">
				-v "show interface eth1 default-route-vlan"
			</telnet>
			<log-match>-c -i "L2 default route VLANs on eth1:"</log-match>
			<log-match>-c -i "${tb.vlan2}"</log-match>
		</step>

		<include prefix="2" file="subs/sta_ping.xml" args="sta2, ${mpc.tif.ip}, 5" />

		<step no="3">
			<desc>
				2. Pkt from wifi access to eth backhaul, if does not match the two cfg vlan,
				result 1
			</desc>
			<log-file>show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="300">
				-v "show logging buffered"
			</telnet>
			<log-match>-n -c -i "(o) eth1 ${sta2.tif.ip}-&gt;${mpc.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(o\) eth0 ${sta2.tif.ip}-&gt;${mpc.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "QoS: ingress pkt fwd\(wifi0.2\)" -e "\(i\) wifi0.2 ${sta2.tif.ip}-&gt;${mpc.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="4">
			<desc>
				Set a rang route vlan in eth1
			</desc>
			<telnet target="ap1">
				-v "forwarding-engine l2-default-route interface eth1 vlan ${tb.vlan3} - ${tb.vlan4}"
				-v "no forwarding-engine l2-default-route interface eth1 vlan ${tb.vlan2}"
				-v "clear log all"
				-v "clear forwarding-engine ip-sessions"
				-v "clear forwarding-engine mac-sessions"
			</telnet>
		</step>

		<include prefix="5" file="subs/sta_ping.xml" args="sta1, ${mpc.tif.ip}, 5" />

		<step no="6">
			<desc>
				4. Pkt from wifi access to eth backhaul, if does not match the cfg vlan, result 1
			</desc>
			<log-file>show_logging_buffered2.log</log-file>
			<telnet target="ap1" timeout="300">
				-v "show logging buffered"
			</telnet>
			<log-match>-n -c -i "(o) eth1 ${sta2.tif.ip}-&gt;${mpc.tif.ip}" -i "icmp-echo-req"</log-match>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(o\) eth0 ${sta1.tif.ip}-&gt;${mpc.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "QoS: ingress pkt fwd\(wifi0.1\)" -e "\(i\) wifi0.1 ${sta1.tif.ip}-&gt;${mpc.tif.ip}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
	</stage>
</testcase>