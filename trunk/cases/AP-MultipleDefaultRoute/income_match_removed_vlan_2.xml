<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Incoming pkt match the rang vlan(removed vlan) then it is forwarded when pass through eth</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		Test Procedure:

		1. Add some route vlan in eth1
		2. Remove one vlan from eth1
		3. Pkt from backhaul eth0 to wifi access, if match the removed cfg vlan, result 1
		4. Remove a rang route vlan in eth1
		5. Pkt from backhaul eth0 to wifi access, if match the removed cfg vlan, result 1
	</description>
	<numofap>2</numofap>
	<numofsta>1</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<if>"${ap1.eth1.existed}" == "true"</if>

		<step no="pre.1">
			<desc>
				config ap1
			</desc>
			<telnet target="ap1">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="pre.2">
			<desc>
				config ap2
			</desc>
			<telnet target="ap2">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<include prefix="pre.3" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, sta1, ap1" />

		<step no="open.debug">
			<desc>
				"_ff id 1 src-ip Laptop's IPaddr bidirectional"
				"_kdebug fe basic"
				"_kdebug fe detail"
			</desc>
			<telnet target="ap1">
				-v "_ff id 1 src-ip ${tb.server1} bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
			</telnet>
		</step>

		<step no="test.amrp">
			<desc>
				test.amrp
			</desc>
			<telnet target="ap2">
				-v "ping ${ap1.mgt0.ip}"
				-v "show amrp neighbor "
			</telnet>
		</step>

		<include prefix="cfg.l2sw.1" file="subs/l2swcfg_port_vlan.xml" args="${ap1.eth0.swport}, ${tb.vlan4}, ${tb.vlan1}\,${tb.vlan2}" />

		<include prefix="cfg.l2sw.2" file="subs/l2swcfg_port_vlan.xml" args="${ap2.eth0.swport}, ${tb.vlan2}, ${tb.vlan1}\,${tb.vlan2}" />

		<step no="1">
			<desc>
				1. Add some route vlan in eth1
			</desc>
			<console target="ap1">
				-v "forwarding-engine l2-default-route interface eth1 vlan ${tb.vlan1} - ${tb.vlan3}"
				-v "clear log all"
				-v "clear forwarding-engine ip-sessions"
				-v "clear forwarding-engine mac-sessions"
			</console>
		</step>

		<include prefix="1.1" file="subs/sta_ping.xml" args="sta1, ${tb.server1}, 5" />

		<step no="1.2">
			<desc>
				3. Pkt from backhaul eth1 to wifi access, if match the removed cfg vlan, result 1
			</desc>
			<log-file>step1.2_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="300">
				-v "show logging buffered"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(o\) wifi0.1 ${sta1.tif.ip}-&gt;${tb.server1}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "QoS: ingress pkt fwd\(eth0\)" -e "\(\i\) eth1 ${sta1.tif.ip}-&gt;${tb.server1}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
			<failed>next</failed>
		</step>

		<step no="2">
			<desc>
				2. Remove one vlan from eth1
			</desc>
			<console target="ap1">
				-v "no forwarding-engine l2-default-route interface eth1 vlan ${tb.vlan1}"
				-v "clear log all"
			</console>
		</step>

		<include prefix="3" file="subs/sta_ping.xml" args="sta1, ${tb.server1}, 5" />

		<step no="3.1">
			<desc>
				3. Pkt from backhaul eth1 to wifi access, if match the removed cfg vlan, result 1
			</desc>
			<log-file>step3.1_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="300">
				-v "show logging buffered"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(o\) wifi0.1 ${sta1.tif.ip}-&gt;${tb.server1}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "QoS: ingress pkt fwd\(eth0\)" -e "\(\i\) eth0 ${sta1.tif.ip}-&gt;${tb.server1}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="3.2">
			<desc>
				-clear log all
			</desc>
			<console target="ap1">
				-v "clear log all"
				-v "clear forwarding-engine ip-sessions"
				-v "clear forwarding-engine mac-sessions"
			</console>
		</step>

		<include prefix="4" file="subs/sta_ping.xml" args="sta1, ${tb.vlan2.gw}, 5" />

		<step no="4.1">
			<desc>
				3. Pkt from backhaul eth1 to wifi access, if match the removed cfg vlan, result 1
			</desc>
			<log-file>step4.1_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="300">
				-v "show logging buffered"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(o\) wifi0.1 ${sta1.tif.ip}-&gt;${tb.server1}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "QoS: ingress pkt fwd\(eth0\)" -e "\(\i\) eth0 ${sta1.tif.ip}-&gt;${tb.server1}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
			<failed>next</failed>
		</step>

		<step no="5">
			<desc>
				4. Remove a rang route vlan in eth1
			</desc>
			<console target="ap1">
				-v "no forwarding-engine l2-default-route interface eth1 vlan ${tb.vlan2} - ${tb.vlan3}"
				-v "clear log all"
				-v "clear forwarding-engine ip-sessions"
				-v "clear forwarding-engine mac-sessions"
			</console>
		</step>

		<include prefix="5.1" file="subs/sta_ping.xml" args="sta1, ${tb.vlan2.gw}, 5" />

		<step no="5.2">
			<desc>
				3. Pkt from backhaul eth1 to wifi access, if match the removed cfg vlan, result 1
			</desc>
			<log-file>step5.2_show_logging_buffered.log</log-file>
			<console target="ap1" timeout="300">
				-v "show logging buffered"
			</console>
			<log-match bin="${bin.dir}/searchblocks.py">-b "\(o\) wifi0.1 ${sta1.tif.ip}-&gt;${tb.server1}\(\d+\) ttl\(\d+\) icmp-echo-req" -ps p "QoS: ingress pkt fwd\(eth0\)" -e "\(\i\) eth0 ${sta1.tif.ip}-&gt;${tb.server1}\(\d+\) ttl\(\d+\) icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
	</stage>

	<post-process>
		<stage>

			<include prefix="reset.cfg.l2sw" file="subs/l2swcfg_port_vlan.xml" args="${ap1.eth0.swport}, ${tb.vlan1}, ${tb.vlan1}\,${tb.vlan2}\,${tb.vlan3}" />

			<include prefix="reset.cfg.l2sw.2" file="subs/l2swcfg_port_vlan.xml" args="${ap2.eth0.swport}, ${tb.vlan1}, ${tb.vlan1}\,${tb.vlan2}\,${tb.vlan3}" />

		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>