<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>check interface noise floor</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-create ssid and bind it to wifi0
		-AP connect to HM
		Test Procedure:
		1. terminate all RF ports of Ap340
		2. after one minutes, check interface noise floor
		3. remove all terminator on RF ports and add antenna
		4. after one minutes, check interface noise floor, should be higher
		than before value
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>
	<stage>
		<step no="1">
			<desc>
				-create ssid and bind it to wifi0
			</desc>
			<log-file>save_ap_config_1.log</log-file>
			<telnet target="ap1">
				-v "ssid ${ssid.name}1"
				-v "ssid ${ssid.name}2"
				-v "interface wifi0 ssid ${ssid.name}1"
				-v "radio profile ng"
				-v "radio profile ng phymode 11ng"
				-v "radio profile ng interference-map enable"
				-v "interface wifi0 radio profile ng"
				-v "interface wifi0 radio channel 1"
				-v "save config"
			</telnet>
		</step>
		<step no="1.0">
		  <if>"${ap1.wifi1.existed}" =="true"</if>
			<desc>
				-create ssid and bind it to wifi0
			</desc>
			<log-file>save_ap_config_1.0.log</log-file>
			<telnet target="ap1">
				-v "interface wifi1 ssid ${ssid.name}2"	
				-v "radio profile na"
				-v "radio profile na phymode 11na"
				-v "radio profile na interference-map enable"
				-v "interface wifi1 radio profile na"
				-v "interface wifi1 radio channel 149"
				-v "save config"
			</telnet>
		</step>

		<step no="2" delay="600">
			<desc>
				2. after 10 minutes, check interface noise floor
			</desc>
			<log-file>show_snapshot_noisefloor.log</log-file>
			<console target="ap1">
				-v "_show report snapshot interface"
			</console>
		</step>

		<step no="3">
			<desc>
				parse the log
			</desc>
			<log-file>parse_log_wifi0.log</log-file>
			<setvar name="find.result.wifi0">
				${bin.dir}/find_kwds -f ${log.dir}/show_snapshot_noisefloor.log -i "wifi0" -a 30 -k "Noise floor:" -m v
			</setvar>
		</step>
		<step no="4">
			<desc>
				check the result
			</desc>
			<log-file>check_result_wifi0.log</log-file>
			<script>if [ ${find.result.wifi0} -gt -80 ] ; then exit 1; fi</script>
		</step>
	
		<step no="5">
		  <if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				parse the log
			</desc>
			<log-file>parse_log_wifi1.log</log-file>
			<setvar name="find.result.wifi1">
				${bin.dir}/find_kwds -f ${log.dir}/show_snapshot_noisefloor.log -i "wifi1" -a 30 -k "Noise floor:" -m v
			</setvar>
		</step>
		<step no="6">
		  <if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>
				check the result
			</desc>
			<log-file>check_result_wifi1.log</log-file>
			<script>if [ ${find.result.wifi1} -gt -80 ] ; then exit 1; fi</script>
		</step>
	</stage>
</testcase>
