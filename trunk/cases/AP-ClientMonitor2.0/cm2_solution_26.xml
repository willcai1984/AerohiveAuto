<?xml version="1.0" encoding="UTF-8"?>

<testcase>
	<brief>Static IP Configuration</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		1. config client-monitor policy xxx, and problem type is networking
		2. trigger problem
    </description>
	<numofap>1</numofap>
	<numofsta>1</numofsta>
	<tbtype>linux</tbtype>

	<property name="cmp.name" value="xxx" />
	<property name="security.object" value="zhxu-open" />
	<property name="user.profile" value="zhxu-up"/>
	<property name="user.profile.attr" value="10"/>
	<property name="user.group" value="zhxu-test"/>
	<property name="user.group.attr" value="10"/>
	<property name="problem.id" value="0x00020002"/>
	
	<stage>
		<step no="0.1">
			<desc>config capwap</desc>
			<ssh target="ap1">
				-v "capwap client server name ${pub.hm1.ip}"
				-v "capwap client enable"
			</ssh>
		</step>
		
		<step no="0.2" delay="10" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>check the capwap connection is success</desc>
			<log-file>capwap_conn_check_${loop_check.idx}.log</log-file>
			<telnet target="ap1">
				-v "show capwap client"
			</telnet>
			<log-match>-i "RUN state: Connected securely to the CAPWAP server"</log-match>
		</step>
		
		<step no="1.1">
			<desc>config security paras</desc>
			<log-file>step1.1.log</log-file>
			<ssh target="ap1">
				-v "interface mgt0 ip ${ap1.mgt0.ip} 255.255.255.0"
				-v ""
				-v "no interface mgt0 dhcp client"
				-v ""
				-v "user-profile ${user.profile}"
				-v ""
				-v "user-profile ${user.profile} attribute ${user.profile.attr}"
				-v ""
				-v "user-profile ${user.profile} vlan-id 1"
				-v ""
				-v "security-object ${security.object}"
				-v ""
				-v "ssid ${ssid.name}"
				-v ""
				-v "ssid ${ssid.name} security-object ${security.object}"
				-v ""
				-v "in w0 ssid ${ssid.name}"
				-v ""
				-v "client-monitor policy ${cmp.name} problem-type authentication"
				-v ""
				-v "client-monitor policy ${cmp.name} problem-type association"
				-v ""
				-v "client-monitor policy ${cmp.name} problem-type networking"
				-v ""
				-v "ssid ${ssid.name} client-monitor-policy ${cmp.name}"
				-v ""
			</ssh>
		</step>

		<step no="1.2">
			<desc>check config</desc>
			<log-file>step1.2.log</log-file>
			<ssh target="ap1">
				-v "sh ru"
			</ssh>
			<log-match>-e "user-profile ${user.profile} qos-policy def-user-qos vlan-id 1 attribute ${user.profile.attr}"</log-match>
			<log-match>-e "security-object ${security.object}"</log-match>
			<log-match>-e "ssid ${ssid.name}"</log-match>
			<log-match>-e "ssid ${ssid.name} security-object ${security.object}"</log-match>
			<log-match>-e "interface wifi0 ssid ${ssid.name}"</log-match>
			<log-match>-e "client-monitor policy ${cmp.name} problem-type association"</log-match>
			<log-match>-e "client-monitor policy ${cmp.name} problem-type authentication"</log-match>
			<log-match>-e "client-monitor policy ${cmp.name} problem-type networking"</log-match>
			<log-match>-e "ssid ${ssid.name} client-monitor-policy ${cmp.name}"</log-match>			
		</step>
		
		<step no="2.1">
			<desc>STA up wifi interface</desc>
			<ssh target="sta1" prompt=">|.*#">
			-v "ifconfig ${sta1.tif.name} up"
			</ssh>
		</step>
		
		<step no="2.2">
			<desc>get mac of sta1's sta1.tif.name</desc>
			<setvar name="sta1.tif.mac">
				${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m -width
			</setvar>
		</step>	
		
		<step no="3.1">
			<multi-setvar>
				echo "conn1.ssid=${ssid.name}"
				echo "conn1.proto=open"
				echo "conn1.pif=wifi0"
				echo "ssid_bind_interface=wifi0"
			</multi-setvar>
		</step>

		<include prefix="3.2" file="subs/sta_wifi_connect_${tb.os}_new.xml" obj-args="conn1, sta1, ap1"/>
		
		<step no="3.3" delay="5">
			<desc>check the STA connection status</desc>
			<log-file>step3.3.log</log-file>
			<ssh target="ap1">
				-v "sh st"
			</ssh>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.ip}"</log-match>
		</step>			
		
		<step no="4.1">
			<desc>static ip</desc>
			<setvar name="sta1.tif.static">
				echo "${mpc.tif.ip}" | sed 's/${tb.vlan1}/${tb.vlan2}/g'
			</setvar>
		</step>			
		
		<step no="4.2">
			<desc>config static ip for station</desc>
			<ssh target="sta1" prompt=">|.*#">
			-v "ifconfig ${sta1.tif.name} ${sta1.tif.static}/24 up"
			</ssh>
		</step>
		
		<step no="4.3">
			<desc>check ip of station</desc>
			<log-file>step4.3.log</log-file>
			<ssh target="sta1" prompt=">|.*#" timeout="120">
			-v "ifconfig ${sta1.tif.name}"
			</ssh>
			<log-match>-c -e "${sta1.tif.static}"</log-match>	
			<no-error-check />
		</step>	
		
		<step no="5_debug_cli">
			<desc>run debug cli</desc>
			<ssh target="ap1">
				-v "_debug auth cmlib"
				-v "_debug radiusd cmlib"
				-v "_debug capwap cmlib"
				-v "_debug capwap itk"
				-v "cle log all"
			</ssh>
			<no-error-check />
		</step>

		<step no="5_ping">
			<desc>ping mpc from station</desc>
			<log-file>step5_ping.log</log-file>
			<ssh target="sta1" prompt=">|.*#" timeout="120">
			-v "nohup ping ${tb.vlan2.dhcp_start} &amp;"
			</ssh>
			<no-error-check />
		</step>

		<step no="6.1" delay="5">
			<desc>check the STA connection status</desc>
			<log-file>step6.1.log</log-file>
			<ssh target="ap1">
				-v "sh st"
			</ssh>
			<log-match>-c -i "${sta1.tif.mac}" -i "${sta1.tif.static}"</log-match>
		</step>	
			
		<step no="6.2" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>check if there is problem log</desc>
			<log-file>step6.2_${loop_check.idx}.log</log-file>
			<ssh target="ap1">
				-v "show logging buffered"
			</ssh>
			<log-match>-c -i "check rule for sta ${sta1.tif.mac}" -i "problem id ${problem.id}"</log-match>
			<log-match>-c -i "Send CM2.0 problem" -i "problem id=${problem.id}" -re</log-match>
			<no-error-check />
		</step>
	
		<step no="7.1">
			<desc>clear log</desc>
			<log-file>step7.1.log</log-file>
			<ssh target="ap1">
				-v "cle log all"
			</ssh>
			<no-error-check />
		</step>	
		
		<step no="7.2">
			<desc>kill ping on station</desc>
			<log-file>step2.7.log</log-file>
			<ssh target="sta1" prompt=">|.*#">
			-v "killall ping"
			</ssh>
			<no-error-check />
		</step>

	</stage>
	
<failed-process>
	 <stage>
        <step no="fp_1">
			<desc>
				shutdown wlan interface on sta
			</desc>
			<log-file>fp_1.log</log-file>
			<ssh target="sta1" prompt=".*#">
            -v "ifconfig ${sta1.tif.name} down"
			</ssh>
		</step>
		
		<step no="fp_2">
			<desc>
				shutdown wlan interface on sta
			</desc>
			<log-file>fp_2.log</log-file>
			<ssh target="sta2" prompt=".*#">
            -v "ifconfig ${sta2.tif.name} down"
			</ssh>
		</step>
		</stage>
    </failed-process>
	
</testcase>