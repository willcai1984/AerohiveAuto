<testcase>
	<brief>Forwarding radius auth packet to remote server,match a certain valid realm</brief>
	<priority>accept</priority>
	<automated>yes</automated>
	<numofap>2</numofap>
	<numofsta>3</numofsta>
	<tbtype>linux</tbtype>
	<description>
		Pre-condition
		-config a remote radius server
		-config local AP as radius forwarding server(proxy),based on the user realm
		-config a valid proxy realm on the AP
		-apply the radius proxy server to a security-object
		Test procedure
		-client connects to the ssid,using the account in the right realm to do auth,so AP will forward the access-request to remote server
		Expect result
		1. Check the config is correct,sh run,sh aaa radius-server proxy to make sure
		2. Auth will success If the username and passwrod is correct
		3. Check the attributes retrived from remote server are correct
		4. If the username password is wrong,then return reject
	</description>
	<stage>
		<step no="0.1">
			<desc>set vlan for mgt0</desc>
			<console target="ap1" timeout="10">	
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
			</console>
		</step>
		<step no="0.2">
			<desc>set vlan for mgt0</desc>
			<console target="ap2" timeout="10">	
				-v "interface mgt0 vlan ${tb.vlan1}"
				-v "interface mgt0 native-vlan ${tb.nvlan}"
			</console>
		</step>
		<step no="0.3" delay="5">
			<desc>show mgt0's ip of AP1</desc>
			<log-file>AP1_int_info.log</log-file>
			<console target="ap1">
				-v "show interface ${ap1.forward.int}"
			</console>
		</step>
		<step no="0.4">
			 <desc>get IP of mgt0 on AP1</desc>
       <setvar name="ap1.forward.ip">
				 ${bin.dir}/getrmtip.pl -f ${log.dir}/AP1_int_info.log -i ${ap1.forward.int} -o aero -nomask
       </setvar>
		</step>
		<step no="0.5">
			<desc>show mgt0's ip of AP2</desc>
			<log-file>AP2_int_info.log</log-file>
			<console target="ap2">
				-v "show interface ${ap2.forward.int}"
			</console>
		</step>
		<step no="0.6">
			 <desc>get IP of mgt0 on AP2</desc>
       <setvar name="ap2.forward.ip">
				 ${bin.dir}/getrmtip.pl -f ${log.dir}/AP2_int_info.log -i ${ap2.forward.int} -o aero -nomask
       </setvar>
		</step>
		<step no="0.7">
			<desc>set user2's name</desc>
			<setvar name="pub.ad2.username">
				echo "auto"
			</setvar>
		</step>
		<step no="1">
			<desc>Set up ap1</desc>
			<console target="ap1" timeout="10">
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "security-object autoap"
			</console>
		</step>
		<step no="5">
			<desc>Set SSID for ${ap1.forward.ip}</desc>
			<ssh target="ap1" timeout="10">
				-v "user-profile aaa qos-policy def-user-qos vlan-id ${tb.nvlan} attribute 1"
				-v "ssid ${ssid.name}"
				-v "security-object autoap security protocol-suite wpa-aes-8021x"
				-v "security-object autoap security aaa radius primary ${ap2.forward.ip} shared-secret aerohive"
				-v "security-object autoap default-user-profile-attr 1"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "interface wifi1 ssid ${ssid.name}"
				-v "interface wifi0 radio channel 11"
				-v "save config"
			</ssh>
		</step>
		<step no="5.1">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>Set wifi1 for ${ap1.forward.ip}</desc>
			<console target="ap1" timeout="10">
				-v "interface wifi1 radio channel 165"
				-v "save config"
			</console>
		</step>

		<step no="pre5.2">
			<desc>
				-show interface of mgt0 on AP1
			</desc>
			<log-file>show_ap1_int_mgt0_5.2.log</log-file>
			<console target="ap1">
				-v "show interface ${ap1.forward.int}"
			</console>
		</step>

		<step no="pre5.4">
			<desc>
				-get IP of mgt0 on AP1
			</desc>
			<setvar name="ap1.forward.ip">
				${bin.dir}/getrmtip.pl -f ${log.dir}/show_ap1_int_mgt0_5.2.log -i ${ap1.forward.int} -o aero -nomask
			</setvar>
		</step>
		<step no="6">
			<desc>Set SSID for ${ap2.forward.ip}</desc>
			<ssh target="ap2" timeout="10">
				-v "user-profile aaa qos-policy def-user-qos vlan-id 1 attribute 1"
				-v "hive ${hive.name}"
				-v "interface mgt0 hive ${hive.name}"
				-v "security-object autoap"
				-v "ssid ${ap2.name}"
				-v "security-object autoap security protocol-suite wpa-aes-8021x"
				-v "security-object autoap security aaa radius primary ${ap2.forward.ip} shared-secret aerohive"
				-v "security-object autoap default-user-profile-attr 1"
				-v "ssid ${ap2.name} security-object autoap"
				-v "interface wifi0 ssid ${ap2.name}"
				-v "interface wifi0 radio channel 11"
			</ssh>
		</step>

		<step no="7">
			<desc>Set radius service for ${ap2.forward.ip}</desc>
			<ssh target="ap2" timeout="10">
				-v "aaa radius-server name server1 server ${pub.radius2.ip} shared-secret ${pub.radius2.sharesecret}"
				-v "aaa radius-server name server2 server ${pub.radius1.ip} shared-secret ${pub.radius1.sharesecret}"
				-v "aaa radius-server name server3 server ${pub.radius3.ip} shared-secret ${pub.radius3.sharesecret}"
				-v "aaa radius-server name server3 auth-port ${pub.radius3.authport}"
				-v "aaa radius-server name server3 acct-port ${pub.radius3.acctport}"
				-v "aaa radius-server proxy realm ${pub.ad1.realm} primary server1"
				-v "aaa radius-server proxy realm NULL primary server2"
				-v "aaa radius-server proxy realm DEFAULT primary server1"
				-v "aaa radius-server local enable"
				-v "aaa radius-server local nas ${ap1.forward.ip} shared-key aerohive"
				-v "save config"
			</ssh>
		</step>
		<step no="7.1" delay="5">
			<desc>Setup radius server</desc>
			<console target="ap1">
				-v "_debug radiusd excessive"
			</console>
		</step>
		<step no="7.2">
			<if>"${ap1.wifi1.existed}" == "true"</if>
			<desc>Set wifi1 for ${ap2.forward.ip}</desc>
			<console target="ap2" timeout="10">
				-v "interface wifi1 radio channel 165"
				-v "save config"
			</console>
		</step>
		<step no="8">
			<desc>show running config on AP1</desc>
			<log-file>show_run_ap1.log</log-file>
			<telnet target="ap1" timeout="10">
				-v "show run"
			</telnet>
			<log-match>-i "security-object autoap security protocol-suite wpa-aes-8021x"</log-match>
			<log-match>-i "security-object autoap security aaa radius-server primary ${ap2.forward.ip}"</log-match>
		</step>
		<step no="8.1">
			<desc>show running config on AP2</desc>
			<log-file>show_run_ap2.log</log-file>
			<telnet target="ap2" timeout="10">
				-v "show run"
			</telnet>
			<log-match>-i "aaa radius-server proxy realm ${pub.ad1.realm} primary server1"</log-match>
			<log-match>-i "aaa radius-server proxy realm NULL primary server2"</log-match>
			<log-match>-i "aaa radius-server local enable"</log-match>
		</step>
		<step no="8.2">
			<desc>show radius proxy config on AP2</desc>
			<log-file>show_radius_proxy_ap2.log</log-file>
			<telnet target="ap2" timeout="10">
				-v "show aaa radius-server proxy"
			</telnet>
			<log-match>-i "Realm format" -i "NAI" -i "user@real"</log-match>
			<log-match>-i "Status" -i "Enabled"</log-match>
			<log-match>-i "1st realm" -i "${pub.ad1.realm}"</log-match>
			<log-match>-i "2nd realm" -i "NULL"</log-match>
			<log-match>-i "3rd realm" -i "DEFAULT"</log-match>
		</step>
		<step no="9">
			<desc>show status of the radius server</desc>
			<log-file>show_rad_srv.log</log-file>
			<telnet target="ap2" timeout="10">
				-v "show aaa radius-server"
			</telnet>
			<log-match>-e "Enabled" -i "Local RADIUS" -p 3</log-match>
			<log-match>-e "Enabled" -i "Proxy:" -p 2</log-match>
		</step>
		<step no="10">
			<desc>show ssid</desc>
			<log-file>show_ssid.log</log-file>
			<telnet target="ap1" timeout="10">
				-v "show ssid ${ssid.name}"
			</telnet>
			<log-match>-e "autoap"</log-match>
		</step>
		<step no="setLogFilter">
			<desc>set log filter</desc>
			<log-file>set_log_filter.log</log-file>
			<telnet target="ap2" timeout="10">
				-v "show log buf"
				-v "clear log buf"
				-v "_debug radius excessive"
			</telnet>
			<no-error-check />
		</step>
		<step no="11">
			<desc>transport a ssid profile to client</desc>
			<ssh target="sta1" timeout="10">
				-v "echo \"ctrl_interface=/var/run/wpa_supplicant\">/tmp/wpa_supplicant.cfg"
				-v "ifconfig ${sta1.tif.name} down"
			</ssh>
		</step>
		<step no="12">
			<desc>start the tif on client side</desc>
			<ssh target="sta1" timeout="10">
				-v "ifconfig ${sta1.tif.name} up"
			</ssh>
		</step>
		<step no="13" delay="5">
			<desc>start the wpa_supplicant on client side</desc>
			<ssh target="sta1" timeout="10">
				-v "killall wpa_supplicant"
				-v "wpa_supplicant -i ${sta1.tif.name} ${sta1.wpa_flag} -c /tmp/wpa_supplicant.cfg -B"
			</ssh>
		</step>
		<step no="14">
			<desc>config the laptop to apply the ssid profile,then start to associate</desc>
			<ssh target="sta1" timeout="10" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt WPA-EAP"
				-v "set_network 0 proto WPA"
				-v "set_network 0 pairwise CCMP"
				-v "set_network 0 group CCMP"
				-v "set_network 0 eap PEAP"
				-v "set_network 0 identity \"${pub.radius1.username}\""
				-v "set_network 0 phase2 \"autheap=MSCHAPV2\""
				-v "set_network 0 password \"${pub.radius1.passwd}\""
				-v "set_network 0 priority 1000"
				-v "select_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>
		<step no="15" type="loop-check" loop-max-times="20" loop-interval="30">
			<desc>check wpa status</desc>
			<log-file>wpa_stat_sta1_${loop_check.idx}.log</log-file>
			<ssh target="sta1" timeout="10" prompt=">|.*#">
				-v "wpa_cli"
				-v "status"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>
		<step no="16">
			<desc>client gets IP by dhclient</desc>
			<ssh target="sta1" timeout="30">
				-v "dhclient ${sta1.tif.name}"
			</ssh>
		</step>
		<step no="17" delay="10">
			<desc>ifconfig to show the ip adrr</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="10">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
			<log-match>-e "inet addr"</log-match>
		</step>
		<step no="18">
			<desc>get mac from client</desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -d ${sta1.mif.ip} -u ${sta1.user} -p ${sta1.passwd} -i ${sta1.tif.name} -m -width 2
			</setvar>
		</step>
		<step no="18.1">
			<desc>show log buffer on AP2 after sta1 connected</desc>
			<log-file>show_log_buf_ap2_sta1.log</log-file>
			<telnet target="ap2" timeout="10">
				-v "show log buf"
			</telnet>
			<no-error-check />
			<log-match> -i "rad_recv: Access-Request packet from host" -i "${ap1.forward.ip}" </log-match>
			<log-match> -i "No '@' in User-Name" -i "${pub.radius1.username}" -i "looking up realm NULL" </log-match>
			<log-match> -i "Adding Stripped-User-Name" -i "${pub.radius1.username}" </log-match>
			<log-match> -i "Proxying request from user" -i "${pub.radius1.username}" -i "to realm NULL" </log-match>
			<log-match> -i "proxy: allocating destination" -i "${pub.radius1.ip}" -i "port ${pub.radius1.authport}" </log-match>
			<log-match> -i "Sending Access-Request" -i "to ${pub.radius1.ip}" -i "port ${pub.radius1.authport}" </log-match>
			<log-match> -i "rad_recv: Access-Challenge packet" -i "from host ${pub.radius1.ip}" -i "port ${pub.radius1.authport}" </log-match>
		</step>
		<step no="18.2">
			<desc>clear log buffer on AP2 </desc>
			<telnet target="ap2" timeout="10">
				-v "clear log buf"
			</telnet>
		</step>

		<step no="19">
			<desc>transport a ssid profile to client</desc>
			<ssh target="sta2" timeout="10">
				-v "echo \"ctrl_interface=/var/run/wpa_supplicant\">/tmp/wpa_supplicant.cfg"
				-v "ifconfig ${sta2.tif.name} down"
			</ssh>
		</step>
		<step no="20">
			<desc>start the tif on client side</desc>
			<ssh target="sta2" timeout="10">
				-v "ifconfig ${sta2.tif.name} up"
			</ssh>
		</step>
		<step no="21" delay="5">
			<desc>start the wpa_supplicant on client side</desc>
			<ssh target="sta2" timeout="10">
				-v "killall wpa_supplicant"
				-v "wpa_supplicant -i ${sta2.tif.name} ${sta2.wpa_flag} -c /tmp/wpa_supplicant.cfg -B"
			</ssh>
		</step>
		<step no="22">
			<desc>config the laptop to apply the ssid profile,then start to associate</desc>
			<ssh target="sta2" timeout="10" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt WPA-EAP"
				-v "set_network 0 proto WPA"
				-v "set_network 0 pairwise CCMP"
				-v "set_network 0 group CCMP"
				-v "set_network 0 eap PEAP"
				-v "set_network 0 identity \"${pub.ad1.username}@${pub.ad1.realm}\""
				-v "set_network 0 phase2 \"autheap=MSCHAPV2\""
				-v "set_network 0 password \"${pub.ad1.passwd}\""
				-v "set_network 0 priority 1000"
				-v "select_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>
		<step no="23" type="loop-check" loop-max-times="5" loop-interval="60">
			<desc>check wpa status</desc>
			<log-file>wpa_stat_sta2_${loop_check.idx}.log</log-file>
			<ssh target="sta2" timeout="10" prompt=">|.*#">
				-v "wpa_cli"
				-v "status"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>
		<step no="24">
			<desc>client gets IP by dhclient</desc>
			<ssh target="sta2" timeout="30">
				-v "dhclient ${sta2.tif.name}"
			</ssh>
		</step>
		<step no="25" delay="10">
			<desc>ifconfig to show the ip adrr</desc>
			<log-file>sta2_ifconfig.log</log-file>
			<ssh target="sta2" timeout="10">
				-v "ifconfig ${sta2.tif.name}"
			</ssh>
			<log-match>-e "inet addr"</log-match>
		</step>
		<step no="26">
			<desc>get mac from client</desc>
			<setvar name="sta2.tif.mac">
				perl ${bin.dir}/getrmtip.pl -d ${sta2.mif.ip} -u ${sta2.user} -p ${sta2.passwd} -i ${sta2.tif.name} -m -width 2
			</setvar>
		</step>
		<step no="26.1">
			<desc>show log buffer on AP2 after sta2 connected</desc>
			<log-file>show_log_buf_ap2_sta2.log</log-file>
			<telnet target="ap2" timeout="10">
				-v "show log buf"
			</telnet>
			<no-error-check />
			<log-match> -i "rad_recv: Access-Request packet from host" -i "${ap1.forward.ip}" </log-match>
			<log-match> -i "Looking up realm" -i "${pub.ad1.realm}" -i "for User-Name" -i "${pub.ad1.username}@${pub.ad1.realm}" </log-match>
			<log-match> -i "Adding Stripped-User-Name" -i "${pub.ad1.username}" </log-match>
			<log-match> -i "Proxying request from user" -i "${pub.ad1.username}" -i "to realm ${pub.ad1.realm}" </log-match>
			<log-match> -i "proxy: allocating destination" -i "${pub.radius2.ip}" -i "port ${pub.radius2.authport}" </log-match>
			<log-match> -i "Sending Access-Request" -i "to ${pub.radius2.ip}" -i "port ${pub.radius2.authport}" </log-match>
			<log-match> -i "rad_recv: Access-Challenge packet" -i "from host ${pub.radius2.ip}" -i "port ${pub.radius2.authport}" </log-match>
		</step>
		<step no="26.2">
			<desc>clear log buffer on AP2 </desc>
			<telnet target="ap2" timeout="10">
				-v "clear log buf"
			</telnet>
		</step>

		<step no="27">
			<desc>transport a ssid profile to client</desc>
			<ssh target="sta3" timeout="10">
				-v "echo \"ctrl_interface=/var/run/wpa_supplicant\">/tmp/wpa_supplicant.cfg"
				-v "ifconfig ${sta3.tif.name} down"
			</ssh>
		</step>
		<step no="28">
			<desc>start the tif on client side</desc>
			<ssh target="sta3" timeout="10">
				-v "ifconfig ${sta3.tif.name} up"
			</ssh>
		</step>
		<step no="29" delay="5">
			<desc>start the wpa_supplicant on client side</desc>
			<ssh target="sta3" timeout="10">
				-v "killall wpa_supplicant"
				-v "wpa_supplicant -i ${sta3.tif.name} ${sta3.wpa_flag} -c /tmp/wpa_supplicant.cfg -B"
			</ssh>
		</step>
		<step no="29.1">
		<ssh target="ap2" timeout="10">
				-v "no aaa radius-server proxy realm ${pub.ad1.realm} primary"
				-v "save config"
			</ssh>
		</step>
		<step no="30">
			<desc>config the laptop to apply the ssid profile,then start to associate</desc>
			<ssh target="sta3" timeout="10" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt WPA-EAP"
				-v "set_network 0 proto WPA"
				-v "set_network 0 pairwise CCMP"
				-v "set_network 0 group CCMP"
				-v "set_network 0 eap PEAP"
				-v "set_network 0 identity \"${pub.ad2.username}@${pub.ad1.realm}\""
				-v "set_network 0 phase2 \"autheap=MSCHAPV2\""
				-v "set_network 0 password \"${pub.ad2.passwd}\""
				-v "set_network 0 priority 1000"
				-v "select_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>
		<step no="31" type="loop-check" loop-max-times="5" loop-interval="60">
			<desc>check wpa status</desc>
			<log-file>wpa_stat_sta3_${loop_check.idx}.log</log-file>
			<ssh target="sta3" timeout="10" prompt=">|.*#">
				-v "wpa_cli"
				-v "status"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>
		<step no="32">
			<desc>client gets IP by dhclient</desc>
			<ssh target="sta3" timeout="30">
				-v "dhclient ${sta3.tif.name}"
			</ssh>
		</step>
		<step no="33" delay="10">
			<desc>ifconfig to show the ip adrr</desc>
			<log-file>sta2_ifconfig.log</log-file>
			<ssh target="sta3" timeout="10">
				-v "ifconfig ${sta3.tif.name}"
			</ssh>
			<log-match>-e "inet addr"</log-match>
		</step>
		<step no="34">
			<desc>get mac from client</desc>
			<setvar name="sta3.tif.mac">
				perl ${bin.dir}/getrmtip.pl -d ${sta3.mif.ip} -u ${sta3.user} -p ${sta3.passwd} -i ${sta3.tif.name} -m -width 2
			</setvar>
		</step>
		<step no="34.1">
			<desc>show log buffer on AP2 after sta3 connected</desc>
			<log-file>show_log_buf_ap2_sta3.log</log-file>
			<telnet target="ap2" timeout="10">
				-v "show log buf"
			</telnet>
			<no-error-check />
			<log-match> -i "rad_recv: Access-Request packet from host" -i "${ap1.forward.ip}" </log-match>
			<log-match> -i "Looking up realm" -i "${pub.ad1.realm}" -i "User-Name" -i "${pub.ad2.username}@${pub.ad1.realm}" </log-match>
			<log-match> -i "Adding Stripped-User-Name" -i "${pub.ad2.username}" </log-match>
			<log-match> -i "Proxying request from user" -i "${pub.ad2.username}" -i "to realm DEFAULT" </log-match>
			<log-match> -i "proxy: allocating destination" -i "${pub.radius2.ip}" -i "port 1812" </log-match>
			<log-match> -i "Sending Access-Request" -i "to ${pub.radius2.ip}" -i "port 1812" </log-match>
			<log-match> -i "rad_recv: Access-Challenge packet" -i "from host ${pub.radius2.ip}" -i "port 1812" </log-match>
		</step>
		<step no="34.2">
			<desc>clear log buffer on AP2 </desc>
			<telnet target="ap2" timeout="10">
				-v "clear log buf"
			</telnet>
		</step>
		<step no="35">
			<desc>show auth on AP1</desc>
			<log-file>show_auth.log</log-file>
			<telnet target="ap1" timeout="10">
				-v "show auth"
			</telnet>
			<log-match> -i "done" -i "${sta1.tif.mac}" -i "WPA/CCMP" -i "${pub.radius1.username}" -p 7 -c</log-match>
			<log-match> -i "done" -i "${sta2.tif.mac}" -i "WPA/CCMP" -i "${pub.ad1.username}@" -p 7 -c</log-match>
			<log-match> -i "done" -i "${sta3.tif.mac}" -i "WPA/CCMP" -i "${pub.ad2.username}@" -p 7 -c</log-match>
		</step>
		<step no="36">
			<desc>show station on AP1</desc>
			<log-file>show_station.log</log-file>
			<telnet target="ap1" timeout="10">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-i "${tb.vlan1}" -i "${sta1.tif.mac}" -p 11 -c</log-match>
			<log-match>-i "Yes" -i "wpa-8021x" -i "aes" -i "${sta1.tif.mac}" -p 12 -c</log-match>
			<log-match>-i "1" -i "${sta1.tif.mac}" -p 13 -c</log-match>
			<log-match>-i "${tb.vlan1}" -i "${sta2.tif.mac}" -p 11 -c</log-match>
			<log-match>-i "Yes" -i "wpa-8021x" -i "aes" -i "${sta2.tif.mac}" -p 12 -c</log-match>
			<log-match>-i "1" -i "${sta2.tif.mac}" -p 13 -c</log-match>
			<log-match>-i "${tb.vlan1}" -i "${sta3.tif.mac}" -p 11 -c</log-match>
			<log-match>-i "Yes" -i "wpa-8021x" -i "aes" -i "${sta3.tif.mac}" -p 12 -c</log-match>
			<log-match>-i "1" -i "${sta3.tif.mac}" -p 13 -c</log-match>
		</step>
		<step no="37">
			<desc>show roaming cache on AP1</desc>
			<log-file>show_roaming_cache.log</log-file>
			<telnet target="ap1" timeout="10">
				-v "show roaming cache"
			</telnet>
			<log-match>-i "YNNN" -i "${sta1.tif.mac}" -p 12 -c</log-match>
			<log-match>-i "YNNN" -i "${sta2.tif.mac}" -p 12 -c</log-match>
			<log-match>-i "YNNN" -i "${sta3.tif.mac}" -p 12 -c</log-match>
		</step>
		<step no="38">
			<desc>Ping from remote host ${sta1.tif.ip} to master Server</desc>
			<log-file>ping_gateway_${sta1.tif.ip}.log</log-file>
			<ssh target="sta1" timeout="10">
				-v "ping ${tb.vlan1.gw} -c 4"
			</ssh>
			<log-match>-n -e "(100\% loss)"</log-match>
		</step>
		<step no="39">
			<desc>Ping from remote host ${sta2.tif.ip} to master Server</desc>
			<log-file>ping_gateway_${sta2.tif.ip}.log</log-file>
			<ssh target="sta2" timeout="10">
				-v "ping ${tb.vlan1.gw} -c 4"
			</ssh>
			<log-match>-n -e "(100\% loss)"</log-match>
		</step>
		<step no="40">
			<desc>Ping from remote host ${sta3.tif.ip} to master Server</desc>
			<log-file>ping_gateway_${sta3.tif.ip}.log</log-file>
			<ssh target="sta3" timeout="10">
				-v "ping ${tb.vlan1.gw} -c 4"
			</ssh>
			<log-match>-n -e "(100\% loss)"</log-match>
		</step>
	</stage>

</testcase>
