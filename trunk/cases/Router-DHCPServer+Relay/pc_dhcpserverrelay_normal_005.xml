<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify that DHCP request and dhcp ack.</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Test procedure
		1. DHCP server will send unicast dhcp ack packet when dhcp client
		only send dhcp request and ciaddr is 0.0.0.0.
		2. DHCP server will send broadcast dhcp ack packet when dhcp client
		will set flag as 1.
		3. DHCP server will send NAK to DHCP client when dhcp client ip
		address is not in ip-pool.

		Test Procedure:
	</description>
	<numofbr>1</numofbr>
	<tbtype>linux</tbtype>

	<property name="sta1.ssid" value="${ssid.name}" />
	<property name="mgt0.1_ip" value="192.168.254.5" />
	<property name="dhcp_start" value="192.168.254.10" />
	<property name="dhcp_start_2" value="192.168.254.15" />
	<property name="dhcp_end" value="192.168.254.20" />
	<property name="def_gw_id" value="192.168.254.254" />
	<property name="ssid.name" value="ssid05" />

	<stage>
		<!--<include prefix="0" file="subs/l2swcfg_port_newvlan.xml" args="${ap1.eth0.swport}, ${br1.vlan4}" />-->

		<step no="0">
			<desc>
				Config mgt0.1
			</desc>
			<log-file>step0_config_mgt0.1.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vlan4}"
				-v "interface mgt0.1 ip ${mgt0.1_ip}/24"
				-v "interface mgt0.1 dhcp-server ip-pool ${dhcp_start} ${dhcp_end}"
				-v "interface mgt0.1 dhcp-server enable"
				-v "interface mgt0.1 dhcp-server options default-gateway ${def_gw_id}"
				-v "interface mgt0.1 dhcp-server options lease-time 120"
				-v "ssid ${ssid.name}"
				-v "security-object ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "user-profile ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${br1.vlan4} attribute 1"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="0.1">
			<desc>
				clear arp-cache
				clear log all
				_ff id 1 dst-port 67 bidirectional
				_kdebug fe basic
				_kdebug fe detail
				_debug dhcpd basic
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear arp-cache"
				-v "clear log all"
				-v "_ff id 1 dst-port 67 bidirectional"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_debug dhcpd basic"
			</telnet>
		</step>
		
		<step no="1">
            <multi-setvar>
                echo "conn1.ssid=${ssid.name}"
                echo "conn1.proto=open"
                echo "conn1.pif=${ssid_bind_interface}"
            </multi-setvar>
        </step> 
        <include prefix="1.1" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, br1.sta1, br1.br" />
	
		<step no="2" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				AP1 show logging buffered
				DHCP server will send unicast dhcp ack packet when dhcp client
				only send dhcp request and ciaddr is 0.0.0.0.
			</desc>
			<log-file>step2_show_logging_buffered_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) wifi0.1 0.0.0.0-&gt;255.255.255.255\(\d+\) ttl\(\d+\) UDP 68-&gt;67 DHCP Request" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) eth1 0.0.0.0-&gt;255.255.255.255\(\d+\) ttl\(\d+\) UDP 68-&gt;67 DHCP Request" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(u\) mgt0.1 0.0.0.0-&gt;255.255.255.255\(\d+\) ttl\(\d+\) UDP 68-&gt;67 DHCP Request" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) mgt0.1 ${mgt0.1_ip}-&gt;${br1.sta1.tif.ip}\(\d+\) ttl\(\d+\) UDP 67-&gt;68 DHCP Ack" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) wifi0.1 ${mgt0.1_ip}-&gt;${br1.sta1.tif.ip}\(\d+\) ttl\(\d+\) UDP 67-&gt;68 DHCP Ack" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="2.1">
			<desc>
				clear log all
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear log all"
			</telnet>
		</step>

		<step no="2.2">
			<desc>
				After connect to SSID, disconnect and connect again
			</desc>
			<ssh target="br1.sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "disc"
				-v "ter"
				-v "quit"
			</ssh>
		</step>

		<step no="2.3" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				Check ip address
			</desc>
			<log-file>step2.3_ifconfig_wlan0_${loop_check.idx}.log</log-file>
			<ssh target="br1.sta1" timeout="120">
				-v "ifconfig ${br1.sta1.tif.name}"
			</ssh>
			<log-match>-n -e "inet addr"</log-match>
		</step>
		
		<step no="3">
            <multi-setvar>
                echo "conn1.ssid=${ssid.name}"
                echo "conn1.proto=open"
                echo "conn1.pif=${ssid_bind_interface}"
            </multi-setvar>
        </step> 
        <include prefix="3.1" file="subs/sta_wifi_connect_${tb.os}.xml" obj-args="conn1, br1.sta1, br1.br" />

		<step no="4" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				client send a broadcast request packet, dhcp server reply broadcast ACK packet
			</desc>
			<log-file>step4_show_logging_buffered_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(u\) mgt0.1 0.0.0.0-&gt;255.255.255.255\(\d+\) ttl\(\d+\) UDP 68-&gt;67 DHCP Request" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) eth1 0.0.0.0-&gt;255.255.255.255\(\d+\) ttl\(\d+\) UDP 68-&gt;67 DHCP Request" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) wifi0.1 0.0.0.0-&gt;255.255.255.255\(\d+\) ttl\(\d+\) UDP 68-&gt;67 DHCP Request" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) mgt0.1 ${mgt0.1_ip}-&gt;${br1.sta1.tif.ip}\(\d+\) ttl\(\d+\) UDP 67-&gt;68 DHCP Ack" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) wifi0.1 ${mgt0.1_ip}-&gt;${br1.sta1.tif.ip}\(\d+\) ttl\(\d+\) UDP 67-&gt;68 DHCP Ack" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>

		<step no="4.1">
			<desc>
				clear log all
			</desc>
			<telnet target="${br1.br.wan.ip}">
				-v "clear log all"
			</telnet>
		</step>

		<step no="5">
			<desc>
				Change ip-pool of dhcp server
			</desc>
			<log-file>step5_Change_ip_pool.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "no interface mgt0.1 dhcp-server enable"
				-v "no interface mgt0.1 dhcp-server ip-pool ${dhcp_start} ${dhcp_end}"
				-v "interface mgt0.1 dhcp-server ip-pool ${dhcp_start_2} ${dhcp_end}"
				-v "interface mgt0.1 dhcp-server enable"
			</telnet>
		</step>

		<step no="5.1" type="loop-check" loop-max-times="10" loop-interval="5">
			<desc>
				DHCP server will send NAK to DHCP client when dhcp client ip address is not in ip-pool.
			</desc>
			<log-file>step5.1_show_logging_buffered_${loop_check.idx}.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show logging buffered"
			</telnet>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) wifi0.1 ${br1.sta1.tif.ip}-&gt;${mgt0.1_ip}\(\d+\) ttl\(\d+\) UDP 68-&gt;67 DHCP Request" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(u\) mgt0.1 ${br1.sta1.tif.ip}-&gt;${mgt0.1_ip}\(\d+\) ttl\(\d+\) UDP 68-&gt;67 DHCP Request" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(i\) mgt0.1 ${mgt0.1_ip}-&gt;${br1.sta1.tif.ip}\(\d+\) ttl\(\d+\) UDP 67-&gt;68 DHCP Nak" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\(o\) wifi0.1 ${mgt0.1_ip}-&gt;${br1.sta1.tif.ip}\(\d+\) ttl\(\d+\) UDP 67-&gt;68 DHCP Nak" -f ${log.dir}/${log.file}</log-match>
			<no-error-check />
		</step>
	</stage>

<!--	<post-process>
		<include file="include/br_default_post_process.xml" />

		<stage>
			<step no="0">
				<desc>
					cancel new vlan
				</desc>
				<telnet host="${tb.l2sw}" prompt=".*[>|#]">
					-v "enable"
					-v "config"
					-v "vlan database"
					-v "no vlan ${br1.vlan4}"
					-v "end"
					-v "show vlan"
				</telnet>
			</step>
		</stage>
	</post-process>-->
</testcase>