<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify that the function of DHCP server option.</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:

		Test Procedure:
		1. Verify that all options except lease-time (24hours) and
		netmask(same with interface) are not included in the packet in
		default condition.
		2. Verify that can set any custom option and can set integer and ip and
		string. Can remove or change these value. And it be include in
		packet.
		3. Verify that can set/change/remove default-gateway option. And it
		can be include in packet.
		4. Verify that can set/change/remove dns1/dns2/dns3 option. And it
		can be include in the packet.
		5. Verify that can set/change/remove domain-name option. And it can
		be include in the packet.
		6. Verify that can set/change/remove hivemanager option. And it can
		be include in the packet.
		7. Verify that can set/change/remove lease-time option. And it can be
		include in the packet.
		8. Verify that can set/change/remove logsrv option. And it can be
		include in the packet
		9. Verify that can set/change/remove mtu option. And it can be include
		in the packet
		10. Verify that can set/change/remove netmask
		option. And it can be
		include in the packet.
		11. Verify that can set/change/remove ntp1/ntp2 option. And it can be
		include in the packet.
		12. Verify that can set/change/remove pop3 option. And it can be
		include in the packet.
		13. Verify that can set/change/remove smtp option. And it can be
		include in the packet.
		14. Verify that can set/change/remove wins1/wins2 option. And it can
		be include in the packet.
	</description>
	<numofbr>1</numofbr>
	<tbtype>linux</tbtype>

	<property name="sta1.ssid" value="${ssid.name}" />
	<property name="new_netmask" value="255.255.255.0" />
	<property name="new_mtu" value="1400" />
	<property name="change_mtu" value="1500" />
	<property name="new_domain_name" value="domain_1" />
	<property name="change_domain_name" value="domain_2" />
	<property name="new_lease-time" value="70" />
	<property name="change_lease-time" value="80" />
	<property name="new_custom_integer" value="10" />
	<property name="new_custom_ip" value="192.168.254.5" />
	<property name="new_custom_string" value="30" />
	<property name="change_custom_integer" value="20" />
	<property name="change_custom_ip" value="192.168.254.6" />
	<property name="change_custom_string" value="32" />
	<property name="br1.vlan4.dhcp_start" value="192.168.254.200" />
	<property name="br1.vlan4.dhcp_end" value="192.168.254.204" />
	<property name="ip_addr_1" value="192.168.254.30" />
	<property name="ip_addr_2" value="192.168.254.40" />
	<property name="ip_addr_3" value="192.168.254.50" />
	<property name="ip_addr_4" value="192.168.254.60" />
	<property name="ip_addr_5" value="192.168.254.70" />
	<property name="ip_addr_6" value="192.168.254.80" />
	<property name="ip_addr_7" value="192.168.254.90" />
	<property name="ip_addr_8" value="192.168.254.100" />
	<property name="ip_addr_9" value="192.168.254.110" />
	<property name="ip_addr_10" value="192.168.254.120" />
	<property name="ip_addr_11" value="192.168.254.130" />
	<property name="ip_addr_12" value="192.168.254.140" />
	<property name="ip_addr_13" value="192.168.254.150" />
	<property name="new_hm_id" value="test_1" />
	<property name="change_hm_id" value="test_2" />
	<property name="ssid.name" value="ssid005" />

	<stage>
		<step no="1">
			<desc>
				Config mgt0.1
			</desc>
			<log-file>step1_set_all_options.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 vlan ${br1.vlan4}"
				-v "interface mgt0.1 ip ${br1.vlan4.dhcp_start}/24"
				-v "interface mgt0.1 dhcp-server ip-pool ${br1.vlan4.dhcp_start} ${br1.vlan4.dhcp_end}"
				-v "interface mgt0.1 dhcp-server enable"
				-v "ssid ${ssid.name}"
				-v "security-object ${ssid.name}"
				-v "ssid ${ssid.name} security-object ${ssid.name}"
				-v "user-profile ${ssid.name}"
				-v "security-object ${ssid.name} default-user-profile-attr 1"
				-v "user-profile ${ssid.name} qos-policy def-user-qos vlan-id ${br1.vlan4} attribute 1"
				-v "interface ${ssid_bind_interface} ssid ${ssid.name}"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				Set all options
			</desc>
			<log-file>step1.1_set_all_options.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 dhcp-server options custom 2 integer ${new_custom_integer}"
				-v "interface mgt0.1 dhcp-server options custom 4 string ${new_custom_string}"
				-v "interface mgt0.1 dhcp-server options custom 5 ip ${new_custom_ip}"
				-v "interface mgt0.1 dhcp-server options default-gateway ${ip_addr_1}"
				-v "interface mgt0.1 dhcp-server options dns1 ${ip_addr_2}"
				-v "interface mgt0.1 dhcp-server options dns2 ${ip_addr_3}"
				-v "interface mgt0.1 dhcp-server options dns3 ${ip_addr_4}"
				-v "interface mgt0.1 dhcp-server options domain-name ${new_domain_name}"
				-v "interface mgt0.1 dhcp-server options hivemanager ${new_hm_id}"
			</telnet>
		</step>

		<step no="1.2">
			<desc>
				Set all options
			</desc>
			<log-file>step1.2_set_all_options.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 dhcp-server options lease-time ${new_lease-time}"
				-v "interface mgt0.1 dhcp-server options logsrv ${ip_addr_5}"
				-v "interface mgt0.1 dhcp-server options mtu ${new_mtu}"
				-v "interface mgt0.1 dhcp-server options netmask ${new_netmask}"
				-v "interface mgt0.1 dhcp-server options ntp1 ${ip_addr_6}"
				-v "interface mgt0.1 dhcp-server options ntp2 ${ip_addr_7}"
				-v "interface mgt0.1 dhcp-server options pop3 ${ip_addr_8}"
				-v "interface mgt0.1 dhcp-server options smtp ${ip_addr_9}"
				-v "interface mgt0.1 dhcp-server options wins1 ${ip_addr_10}"
				-v "interface mgt0.1 dhcp-server options wins2 ${ip_addr_11}"
			</telnet>
		</step>

		<include prefix="1.3" file="${case.dir}/subs/wpa_supplicant_start.xml" args="br1.sta1" />

		<step no="1.4">
			<desc>
				config the laptop to apply the ssid profile,then start to associate
			</desc>
			<ssh target="br1.sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<step no="1.5" type="loop-check" loop-max-times="20" loop-interval="5">
			<desc>
				check if the client was associated successfully
			</desc>
			<log-file>step1.8_wpa_stat_tmp_${loop_check.idx}.log</log-file>
			<ssh target="br1.sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "stat"
				-v "quit"
			</ssh>
			<log-match>-e "wpa_state=COMPLETED"</log-match>
		</step>

		<step no="2" delay="10">
			<desc>
				dhclient ${br1.sta1.tif.name}
				dhclient ${br1.sta1.tif.name} -r
			</desc>
			<ssh target="br1.sta1" timeout="80">
				-v "dhclient ${br1.sta1.tif.name}"
				-v "dhclient ${br1.sta1.tif.name} -r"
			</ssh>
		</step>

		<step no="2.1">
			<desc>
				Station tcpdump
			</desc>
			<ssh target="br1.sta1">
				-v "nohup tcpdump -i ${br1.sta1.tif.name} port 67 -w step2.1_pkt.pcap &amp;"
			</ssh>
		</step>

		<step no="2.2">
			<desc>
				ifconfig to show the ip add
			</desc>
			<log-file>step2.2_ifconfig_wlan0.log</log-file>
			<ssh target="br1.sta1" timeout="80">
				-v "dhclient ${br1.sta1.tif.name} -r"
				-v "dhclient ${br1.sta1.tif.name}"
				-v "ifconfig ${br1.sta1.tif.name}"
			</ssh>
			<log-match>-e "inet addr:" -e "inet"</log-match>
		</step>

		<step no="2.3">
			<desc>
				Get laptop1's ip
			</desc>
			<setvar name="br1.sta1.tif.ip">
				perl ${bin.dir}/getbyrexp.py -p "inet.*?(192.168.[\d.]+)" -f ${log.dir}/step2.2_ifconfig_wlan0.log -t str
			</setvar>
		</step>

		<step no="3">
			<desc>
				Station killall tcpdump
			</desc>
			<log-file>step3_sta_killall_tcpdump.log</log-file>
			<ssh target="br1.sta1">
				-v "killall tcpdump"
			</ssh>
		</step>

		<step no="3.1">
			<desc>
				Resolve packet,check all options
			</desc>
			<log-file>step3.1_Resolve_packet.log</log-file>
			<ssh target="br1.sta1">
				-v "tshark -r step2.1_pkt.pcap -V -R bootp";exit 0
			</ssh>
			<!--  <log-match bin="${bin.dir}/searchblocks.py">-b "Internet Protocol.*, Src: ${tb.vlan2.dhcp_start} \(${tb.vlan2.dhcp_start}\), Dst: ${sta1.tif.ip} \(${sta1.tif.ip}\)" -ps p "Subnet Mask.*${new_netmask}" p "Router.*${ip_addr_1}" p "Name Server.*${new_custom_ip}" p "Domain Name Server.*${ip_addr_2}" p "Domain Name Server.*${ip_addr_3}" p "Domain Name Server.*${ip_addr_4}" p "Log Server.*${ip_addr_5}" p "Domain Name.*${new_domain_name}" p "Interface MTU.*${new_mtu}" p "Network Time Protocol Server.*${ip_addr_6}" p "Network Time Protocol Server.*${ip_addr_7}" p "NetBIOS over TCP/IP Name Server.*${ip_addr_10}" p "NetBIOS over TCP/IP Name Server.*${ip_addr_11}" p "SMTP Server.*${ip_addr_9}" p "POP3 Server.*${ip_addr_8}" -e "(Option End|End Option)" -f ${log.dir}/${log.file}</log-match>-->
			<log-match bin="${bin.dir}/searchblocks.py">-b "Internet Protocol.*, Src: ${br1.vlan4.dhcp_start} \(${br1.vlan4.dhcp_start}\), Dst: ${br1.sta1.tif.ip} \(${br1.sta1.tif.ip}\)" -ps p "Subnet Mask.*${new_netmask}" p "Router.*${ip_addr_1}" p "Name Server.*${new_custom_ip}" p "Domain Name Server" p "IP Address: ${ip_addr_2}" p "IP Address: ${ip_addr_3}" p "IP Address: ${ip_addr_4}" p "Log Server.*${ip_addr_5}" p "Domain Name.*\"${new_domain_name}\"" p "Interface MTU.*${new_mtu}" p "Network Time Protocol Server" p "IP Address: ${ip_addr_6}" p "IP Address: ${ip_addr_7}" p "NetBIOS over TCP/IP Name Server" p "IP Address: ${ip_addr_10}" p "IP Address: ${ip_addr_11}" p "SMTP Server.*${ip_addr_9}" p "POP3 Server.*${ip_addr_8}" -e "(Option End|End Option)" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="3.2">
			<desc>
				Show interface mgt0.1 dhcp-server
			</desc>
			<log-file>step3.2_show_int_mgt0.1_dhcp_server.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show interface mgt0.1 dhcp-server"
			</telnet>
			<log-match>-c -i "Lease time:" -i "${new_lease-time}"</log-match>
			<log-match>-c -i "Netmask:" -i "${new_netmask}"</log-match>
			<log-match>-c -i "Default gateway:" -i "${ip_addr_1}"</log-match>
			<log-match>-c -i "DNS Server:" -i "${ip_addr_2}" -i "${ip_addr_3}" -i "${ip_addr_4}"</log-match>
			<log-match>-c -i "NTP Server:" -i "${ip_addr_6}" -i "${ip_addr_7}"</log-match>
			<log-match>-c -i "LOG Server:" -i "${ip_addr_5}"</log-match>
			<log-match>-c -i "POP3 Server:" -i "${ip_addr_8}"</log-match>
			<log-match>-c -i "SMTP Server:" -i "${ip_addr_9}"</log-match>
			<log-match>-c -i "WINS Server:" -i "${ip_addr_10}" -i "${ip_addr_11}"</log-match>
			<log-match>-c -i "MTU:" -i "${new_mtu}"</log-match>
			<log-match>-c -i "Domain name:" -i "${new_domain_name}"</log-match>
			<log-match>-c -i "HiveManager" -i "${new_hm_id}"</log-match>
			<log-match>-c -i "Option(2 \ ):" -i "${new_custom_integer}"</log-match>
			<log-match>-c -i "Option(4 \ ):" -i "${new_custom_string}"</log-match>
			<log-match>-c -i "Option(5 \ ):" -i "${new_custom_ip}"</log-match>
		</step>

		<step no="4">
			<desc>
				Change all options
			</desc>
			<log-file>step4_change_all_options.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 dhcp-server options lease-time ${change_lease-time}"
				-v "interface mgt0.1 dhcp-server options logsrv ${ip_addr_7}"
				-v "interface mgt0.1 dhcp-server options mtu ${change_mtu}"
				-v "interface mgt0.1 dhcp-server options ntp1 ${ip_addr_8}"
				-v "interface mgt0.1 dhcp-server options ntp2 ${ip_addr_9}"
				-v "interface mgt0.1 dhcp-server options pop3 ${ip_addr_10}"
				-v "interface mgt0.1 dhcp-server options smtp ${ip_addr_11}"
				-v "interface mgt0.1 dhcp-server options wins1 ${ip_addr_12}"
				-v "interface mgt0.1 dhcp-server options wins2 ${ip_addr_13}"
			</telnet>
		</step>

		<step no="4.1">
			<desc>
				Change all options
			</desc>
			<log-file>step4.1_change_all_options.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "interface mgt0.1 dhcp-server options custom 2 integer ${change_custom_integer}"
				-v "interface mgt0.1 dhcp-server options custom 4 string ${change_custom_string}"
				-v "interface mgt0.1 dhcp-server options custom 5 ip ${change_custom_ip}"
				-v "interface mgt0.1 dhcp-server options default-gateway ${ip_addr_3}"
				-v "interface mgt0.1 dhcp-server options dns1 ${ip_addr_4}"
				-v "interface mgt0.1 dhcp-server options dns2 ${ip_addr_5}"
				-v "interface mgt0.1 dhcp-server options dns3 ${ip_addr_6}"
				-v "interface mgt0.1 dhcp-server options domain-name ${change_domain_name}"
				-v "interface mgt0.1 dhcp-server options hivemanager ${change_hm_id}"
			</telnet>
		</step>

		<step no="4.2">
			<desc>
				Station tcpdump
			</desc>
			<ssh target="br1.sta1">
				-v "nohup tcpdump -i ${br1.sta1.tif.name} port 67 -w step4.2_pkt.pcap &amp;"
			</ssh>
		</step>

		<step no="4.3">
			<desc>
				dhclient ${sta1.tif.name} -r
				dhclient ${sta1.tif.name}
			</desc>
			<log-file>step4.3_get_ip_addr.log</log-file>
			<ssh target="br1.sta1" timeout="120">
				-v "dhclient ${br1.sta1.tif.name} -r"
				-v "dhclient ${br1.sta1.tif.name}"
			</ssh>
		</step>

		<step no="4.4">
			<desc>
				check ip addr
			</desc>
			<log-file>step4.4_check_ip_addr.log</log-file>
			<ssh target="br1.sta1">
				-v "ifconfig ${br1.sta1.tif.name}"
			</ssh>
			<log-match>-e "inet addr:192.168.254" -e "inet 192.168.254"</log-match>
		</step>

		<step no="4.5" delay="10">
			<desc>
				Station killall tcpdump
			</desc>
			<log-file>step4.5_sta_killall_tcpdump.log</log-file>
			<ssh target="br1.sta1">
				-v "killall tcpdump"
			</ssh>
		</step>

		<step no="4.6">
			<desc>
				Resolve packet,check all options
			</desc>
			<log-file>step4.6_Resolve_packet.log</log-file>
			<ssh target="br1.sta1">
				-v "tshark -r step4.2_pkt.pcap -V -R bootp";exit 0
			</ssh>
			<!--  <log-match bin="${bin.dir}/searchblocks.py">-b "Internet Protocol.*, Src: ${tb.vlan2.dhcp_start} \(${tb.vlan2.dhcp_start}\), Dst: ${sta1.tif.ip} \(${sta1.tif.ip}\)" -ps p "Router.*${ip_addr_3}" p "Name Server.*${change_custom_ip}" p "Domain Name Server.*${ip_addr_4}" p "Domain Name Server.*${ip_addr_5}" p "Domain Name Server.*${ip_addr_6}" p "Log Server.*${ip_addr_7}" p "Domain Name.*${change_domain_name}" p "Interface MTU.*${change_mtu}" p "Network Time Protocol Server.*${ip_addr_8}" p "Network Time Protocol Server.*${ip_addr_9}" p "NetBIOS over TCP/IP Name Server.*${ip_addr_12}" p "NetBIOS over TCP/IP Name Server.*${ip_addr_13}" p "SMTP Server.*${ip_addr_11}" p "POP3 Server.*${ip_addr_10}" -e "Option End" -f ${log.dir}/${log.file}</log-match>-->
			<log-match bin="${bin.dir}/searchblocks.py">-b "Internet Protocol.*, Src: ${br1.vlan4.dhcp_start} \(${br1.vlan4.dhcp_start}\), Dst: ${br1.sta1.tif.ip} \(${br1.sta1.tif.ip}\)" -ps p "Router.*${ip_addr_3}" p "Name Server.*${change_custom_ip}" p "Domain Name Server" p "IP Address: ${ip_addr_4}" p "IP Address: ${ip_addr_5}" p "IP Address: ${ip_addr_6}" p "Log Server.*${ip_addr_7}" p "Domain Name.*\"${change_domain_name}\"" p "Interface MTU.*${change_mtu}" p "Network Time Protocol Server" p "IP Address: ${ip_addr_8}" p "IP Address: ${ip_addr_9}" p "NetBIOS over TCP/IP Name Server" p "IP Address: ${ip_addr_12}" p "IP Address: ${ip_addr_13}" p "SMTP Server.*${ip_addr_11}" p "POP3 Server.*${ip_addr_10}" -e "(Option End|End Option)" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="4.7">
			<desc>
				Show interface mgt0.1 dhcp-server
			</desc>
			<log-file>step4.7_show_int_mgt0.1_dhcp_server.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show interface mgt0.1 dhcp-server"
			</telnet>
			<log-match>-c -i "Lease time:" -i "${change_lease-time}"</log-match>
			<log-match>-c -i "Default gateway:" -i "${ip_addr_3}"</log-match>
			<log-match>-c -i "DNS Server:" -i "${ip_addr_4}" -i "${ip_addr_5}" -i "${ip_addr_6}"</log-match>
			<log-match>-c -i "NTP Server:" -i "${ip_addr_8}" -i "${ip_addr_9}"</log-match>
			<log-match>-c -i "LOG Server:" -i "${ip_addr_7}"</log-match>
			<log-match>-c -i "POP3 Server:" -i "${ip_addr_10}"</log-match>
			<log-match>-c -i "SMTP Server:" -i "${ip_addr_11}"</log-match>
			<log-match>-c -i "WINS Server:" -i "${ip_addr_12}" -i "${ip_addr_13}"</log-match>
			<log-match>-c -i "MTU:" -i "${change_mtu}"</log-match>
			<log-match>-c -i "Domain name:" -i "${change_domain_name}"</log-match>
			<log-match>-c -i "HiveManager" -i "${change_hm_id}"</log-match>
			<log-match>-c -i "Option(2 \ ):" -i "${change_custom_integer}"</log-match>
			<log-match>-c -i "Option(4 \ ):" -i "${change_custom_string}"</log-match>
			<log-match>-c -i "Option(5 \ ):" -i "${change_custom_ip}"</log-match>
		</step>

		<step no="5">
			<desc>
				Remove all options
			</desc>
			<log-file>step5_change_all_options.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "no interface mgt0.1 dhcp-server options custom 2"
				-v "no interface mgt0.1 dhcp-server options custom 4"
				-v "no interface mgt0.1 dhcp-server options custom 5"
				-v "no interface mgt0.1 dhcp-server options default-gateway"
				-v "no interface mgt0.1 dhcp-server options dns1"
				-v "no interface mgt0.1 dhcp-server options dns2"
				-v "no interface mgt0.1 dhcp-server options dns3"
				-v "no interface mgt0.1 dhcp-server options domain-name"
				-v "no interface mgt0.1 dhcp-server options hivemanager ${change_hm_id}"
			</telnet>
		</step>

		<step no="5.1">
			<desc>
				Remove all options
			</desc>
			<log-file>step5.1_change_all_options.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "no interface mgt0.1 dhcp-server options lease-time"
				-v "no interface mgt0.1 dhcp-server options logsrv"
				-v "no interface mgt0.1 dhcp-server options mtu"
				-v "no interface mgt0.1 dhcp-server options netmask"
				-v "no interface mgt0.1 dhcp-server options ntp1"
				-v "no interface mgt0.1 dhcp-server options ntp2"
				-v "no interface mgt0.1 dhcp-server options pop3"
				-v "no interface mgt0.1 dhcp-server options smtp"
				-v "no interface mgt0.1 dhcp-server options wins1"
				-v "no interface mgt0.1 dhcp-server options wins2"
			</telnet>
		</step>

		<step no="5.2">
			<desc>
				Station tcpdump
			</desc>
			<ssh target="br1.sta1">
				-v "nohup tcpdump -i ${br1.sta1.tif.name} port 67 -w step5.2_pkt.pcap &amp;"
			</ssh>
		</step>

		<step no="5.3">
			<desc>
				dhclient ${sta1.tif.name} -r
				dhclient ${sta1.tif.name}
			</desc>
			<log-file>step5.3_get_ip_addr.log</log-file>
			<ssh target="br1.sta1" timeout="120">
				-v "dhclient ${br1.sta1.tif.name} -r"
				-v "dhclient ${br1.sta1.tif.name}"
			</ssh>
		</step>

		<step no="5.4">
			<desc>
				check ip addr
			</desc>
			<log-file>step5.4_check_ip_addr.log</log-file>
			<ssh target="br1.sta1">
				-v "ifconfig ${br1.sta1.tif.name}"
			</ssh>
			<log-match>-e "inet addr:192.168.254" -e "inet 192.168.254"</log-match>
		</step>

		<step no="5.5" delay="10">
			<desc>
				Station killall tcpdump
			</desc>
			<log-file>step5.5_sta_killall_tcpdump.log</log-file>
			<ssh target="br1.sta1">
				-v "killall tcpdump"
			</ssh>
		</step>

		<step no="5.6">
			<desc>
				Resolve packet,check all options
			</desc>
			<log-file>step5.6_Resolve_packet.log</log-file>
			<ssh target="br1.sta1">
				-v "tshark -r step5.2_pkt.pcap -V -R bootp"
			</ssh>
			<!--  <log-match>-n -c -i "Router = ${ip_addr_3}"</log-match>
			<log-match>-n -c -i "Name Server = ${change_custom_ip}"</log-match>
			<log-match>-n -c -i "IP Address: ${ip_addr_4}"</log-match>
			<log-match>-n -c -i "IP Address: ${ip_addr_5}"</log-match>
			<log-match>-n -c -i "IP Address: ${ip_addr_6}"</log-match>
			<log-match>-n -c -i "Log Server = ${ip_addr_7}"</log-match>
			<log-match>-n -c -i "Domain Name = \"${change_domain_name}\""</log-match>
			<log-match>-n -c -i "Interface MTU = ${change_mtu}"</log-match>
			<log-match>-n -c -i "IP Address: ${ip_addr_9}"</log-match>
			<log-match>-n -c -i "NetBIOS over TCP/IP Name Server"</log-match>
			<log-match>-n -c -i "IP Address: ${ip_addr_12}"</log-match>
			<log-match>-n -c -i "IP Address: ${ip_addr_13}"</log-match>
			<log-match>-n -c -i "SMTP Server = ${ip_addr_11}"</log-match>
			<log-match>-n -c -i "POP3 Server = ${ip_addr_10}"</log-match>
			-->
			<log-match bin="${bin.dir}/searchblocks.py">-b "Internet Protocol.*, Src: ${br1.vlan4.dhcp_start} \(${br1.vlan4.dhcp_start}\), Dst: ${br1.sta1.tif.ip} \(${br1.sta1.tif.ip}\)" -ps p0 "Router = ${ip_addr_3}" p0 "Name Server = ${change_custom_ip}" p0 "IP Address: ${ip_addr_4}" p0 "IP Address: ${ip_addr_5}" p0 "IP Address: ${ip_addr_6}" p0 "Log Server = ${ip_addr_7}" p0 "Domain Name = \"${change_domain_name}\"" p0 "Interface MTU = ${change_mtu}" p0 "IP Address: ${ip_addr_9}" p0 "NetBIOS over TCP/IP Name Server" p0 "IP Address: ${ip_addr_12}" p0 "IP Address: ${ip_addr_13}" p0 "SMTP Server = ${ip_addr_11}" p0 "POP3 Server = ${ip_addr_10}" -e "(Option End|End Option)" -f ${log.dir}/${log.file}</log-match>
		</step>

		<step no="5.7">
			<desc>
				Show interface mgt0.1 dhcp-server
			</desc>
			<log-file>step5.7_show_int_mgt0.1_dhcp_server.log</log-file>
			<telnet target="${br1.br.wan.ip}">
				-v "show interface mgt0.1 dhcp-server"
			</telnet>
			<log-match>-n -c -i "Lease time:" -i "${change_lease-time}"</log-match>
			<log-match>-n -c -i "Default gateway:" -i "${ip_addr_3}"</log-match>
			<log-match>-n -c -i "DNS Server:" -i "${ip_addr_4}" -i "${ip_addr_5}" -i "${ip_addr_6}"</log-match>
			<log-match>-n -c -i "NTP Server:" -i "${ip_addr_8}" -i "${ip_addr_9}"</log-match>
			<log-match>-n -c -i "LOG Server:" -i "${ip_addr_7}"</log-match>
			<log-match>-n -c -i "POP3 Server:" -i "${ip_addr_10}"</log-match>
			<log-match>-n -c -i "SMTP Server:" -i "${ip_addr_11}"</log-match>
			<log-match>-n -c -i "WINS Server:" -i "${ip_addr_12}" -i "${ip_addr_13}"</log-match>
			<log-match>-n -c -i "MTU:" -i "${change_mtu}"</log-match>
			<log-match>-n -c -i "Domain name:" -i "${change_domain_name}"</log-match>
			<log-match>-n -c -i "HiveManager" -i "${change_hm_id}"</log-match>
			<log-match>-n -c -i "Option(2 \ ):" -i "${change_custom_integer}"</log-match>
			<log-match>-n -c -i "Option(4 \ ):" -i "${change_custom_string}"</log-match>
			<log-match>-n -c -i "Option(5 \ ):" -i "${change_custom_ip}"</log-match>
		</step>
	</stage>

	<post-process>
		<include file="include/br_default_post_process.xml" />

		<stage>
			<step no="0">
				<desc>
					cancel file
				</desc>
				<ssh target="br1.sta1">
					-v "killall tcpdump"
					-v "rm -f step2.1_pkt.pcap"
					-v "rm -f step4.2_pkt.pcap"
					-v "rm -f step5.2_pkt.pcap"
				</ssh>
			</step>
		</stage>
	</post-process>
</testcase>