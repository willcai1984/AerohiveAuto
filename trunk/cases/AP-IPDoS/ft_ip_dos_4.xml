<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Detect address-sweep attack on ssid side</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-STA1 is an attacker with a linux OS, install nmap on it
		-STA2 is a normal user
		-config a ssid, bind it to wifi interface
		-STA1 and STA2 are all connected to ssid

		Test Procedure:
		-enable address-sweep detection on ssid,
		' ssid xxx security screening address-sweep action ban 60'
		-change the action to ban 60sec
		-check the address scan status,
		'sh ssid xxx security screening' to make sure
		-STA1 launchs address sweep attack
		-check the log info on AP
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<property name="netmask" value="192.168.${tb.vlan2}.0/24" />

	<stage>
		<step no="1">
			<desc>
				-Config a ssid ,and bind wifi0
			</desc>
			<console target="ap1">
				-v "security-object FWtest"
				-v "security-object FWtest default-user-profile-attr 1"
				-v "ssid ${ssid.name}"
				-v "ssid ${ssid.name} security-object FWtest"
				-v "interface wifi0 ssid ${ssid.name}"
				-v "user-profile ttt attribute 1"
			</console>
		</step>

		<include prefix="2.1" file="subs/wpa_supplicant_start.xml" args="sta1" />

		<step no="2.2">
			<desc>
				config the laptop to apply the ssid profile,then start to associate
			</desc>
			<ssh target="sta1" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<include prefix="2.3" file="subs/chk_conn_in_sta.xml" args="sta1" />

		<step no="2.4" delay="10">
			<desc>ifconfig to show the ip add</desc>
			<log-file>ifconfig.log</log-file>
			<ssh target="sta1" timeout="80">
				-v "ifconfig ${sta1.tif.name}"
			</ssh>
		</step>

		<step no="2.5">
			<desc>Get laptop1's ip</desc>
			<setvar name="sta1.tif.ip">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -nomask
			</setvar>
		</step>

		<step no="2.6">
			<desc>Get laptop1's mac</desc>
			<setvar name="sta1.tif.mac">
				perl ${bin.dir}/getrmtip.pl -f ${log.dir}/ifconfig.log -i ${sta1.tif.name} -m -width
			</setvar>
		</step>

		<step no="2.7">
			<desc>Get laptop1's mac</desc>
			<setvar name="sta1.tif.mac1">
				${bin.dir}/getbyrexp.py -p "HWaddr (\S{2}):(\S{2}):(\S{2}):(\S{2}):(\S{2}):(\S{2})" -f ${log.dir}/ifconfig.log -t str --script "':'.join(m.groups()).lower()"
			</setvar>
		</step>

		<include prefix="3.1" file="subs/wpa_supplicant_start.xml" args="sta2" />

		<step no="3.2">
			<desc>
				config the laptop to apply the ssid profile,then start to associate
			</desc>
			<ssh target="sta2" prompt=">|.*#">
				-v "wpa_cli"
				-v "reconfig"
				-v "add_network"
				-v "set_network 0 ssid \"${ssid.name}\""
				-v "set_network 0 key_mgmt NONE"
				-v "enable_network 0"
				-v "reas"
				-v "quit"
			</ssh>
		</step>

		<include prefix="3.3" file="subs/chk_conn_in_sta.xml" args="sta2" />

		<step no="4">
			<desc>
				-AP clear log
			</desc>
			<telnet target="ap1">
				-v "clear log buffered"
				-v "_kdebug screen info"
			</telnet>
		</step>

		<step no="4.1">
			<desc>
				-enable address-sweep detection on ssid,
				' ssid xxx security screening address-sweep action ban 60'
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name} security screening address-sweep"
			</telnet>
		</step>

		<step no="5">
			<desc>
				-change the action to ban 60sec
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name} security screening address-sweep action ban 60"
			</telnet>
		</step>

		<step no="6">
			<desc>
				-check the log info about address sweep
			</desc>
			<log-file>step6_show_logging_buffered.log</log-file>
			<telnet target="ap1" delay="10">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-e "wifi0.1 address sweep protection is enabled"</log-match>
		</step>

		<step no="6.1">
			<desc>
				-check the address scan status,
				'sh ssid xxx security screening' to make sure
			</desc>
			<log-file>show_ssid_security_screening.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} security screening detail"
			</telnet>
			<log-match>-e "Threshold:\ \ \ \ \ \ \ \ \ \ 100\ ms"</log-match>
			<log-match>-e "Action:\ \ \ \ \ \ \ \ \ \ \ \ \ ban"</log-match>
			<log-match>-e "Action\ time:\ \ \ \ \ \ \ \ 60\ s"</log-match>
		</step>

		<step no="7">
			<desc>
				-AP clear log and enable logging
			</desc>
			<telnet target="ap1">
				-v "clear log all"
				-v "_kdebug wifi-driver wifi0.1 assoc"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_kdebug screen basic"
			</telnet>
		</step>

		<step no="7.1">
			<desc>
				-STA1 launchs address sweep attack
			</desc>
			<ssh target="sta1">
				-v "nohup nmap -v --host-timeout 2000 -sP ${netmask} &amp;"
			</ssh>
		</step>

		<step no="8" delay="180">
			<desc>
				-Show log buffered
			</desc>
			<log-file>step8_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="300">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
		</step>

		<step no="8.1">
			<desc>
				get time of debug info we need
			</desc>
			<setvar name="time_1">
				perl ${case.dir}/bin/ipdos_get_time.pl ${log.dir}/step8_show_logging_buffered.log 1
			</setvar>
			<failed>next</failed>
		</step>
		
		</stage>

<stage>
<step no="8.2">
			<if>"${img.prodtype}" == "AP1130" || "${img.prodtype}" == "AP230"</if>
			<desc>
				-check the log info on AP
			</desc>			
			<log-file>step8_show_logging_buffered.log</log-file>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\[wifi\]: ACL: add mac ${sta1.tif.mac1}, action deny" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)wifi0.1 address sweep attack from ${sta1.tif.mac}\(${sta1.tif.ip}\) is detected" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\[wifi\]: ACL: remove mac ${sta1.tif.mac1} dynamic" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)\[${sta1.tif.mac1}\] auth: disallowed by ACL" -f ${log.dir}/${log.file}</log-match>
		</step>
</stage>	

<stage>
<step no="8.3">
			<if>"${img.prodtype}" != "AP1130" &amp;&amp; "${img.prodtype}" != "AP230"</if>
			<desc>
				-check the log info on AP
			</desc>			
			<log-file>step8_show_logging_buffered.log</log-file>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)wifi0.1: \[${sta1.tif.mac1}\]send station deauthenticate \(reason 1\)" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)wifi0.1: ACL: add mac ${sta1.tif.mac1}, action deny" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)wifi0.1 address sweep attack from ${sta1.tif.mac}\(${sta1.tif.ip}\) is detected" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)${time_1}:\d+\s+debug.*: wifi0.1: ACL: remove mac ${sta1.tif.mac1} dynamic" -f ${log.dir}/${log.file}</log-match>
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)wifi0.1: \[${sta1.tif.mac1}\] auth: disallowed by ACL" -f ${log.dir}/${log.file}</log-match>
		</step>
</stage>
		

</testcase>
