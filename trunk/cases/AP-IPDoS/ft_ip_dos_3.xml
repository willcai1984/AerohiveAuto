<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Detect SYN flood attack on ssid side</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-STA1 is an attacker with a linux OS, install hping3 on it
		-STA2 is a normal user
		-config a ssid, bind it to wifi interface
		-STA1 and STA2 are all connected to ssid

		Test Procedure:
		-enable syn flood detection on ssid,
		' ssid xxx security screening syn-flood'
		-change the action to disconnect
		-check the syn flood status,
		'sh ssid xxx security screening [detail]' to make sure
		-STA1 launchs synood attack
		-check the log info on AP
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<stage>
		<step no="1">
			<desc>Config a ssid, bind it to wifi interface</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn1, sta1, ap1" />

		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn2, sta2, ap1" />

		<step no="4">
			<desc>check show station</desc>
			<log-file>show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-p 11 -i "Yes" -i "${sta1.tif.mac}" -c</log-match>
			<log-match>-p 2 -i "${sta1.tif.ip}" -i "${sta1.tif.mac}" -c</log-match>
			<log-match>-p 11 -i "Yes" -i "${sta2.tif.mac}" -c</log-match>
			<log-match>-p 2 -i "${sta2.tif.ip}" -i "${sta2.tif.mac}" -c</log-match>
		</step>
		<step no="5">
			<desc>AP clear log</desc>
			<telnet target="ap1">
				-v "clear log buffered"
				-v "_kdebug screen info"
			</telnet>
		</step>
		<step no="5.1">
			<desc>
				-enable icmp flood detection on ssid,
				' ssid xxx security screening syn-flood'
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name} security screening syn-flood"
			</telnet>
		</step>
		<step no="6">
			<desc>change the action to disconnect</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name} security screening syn-flood action disconnect"
			</telnet>
		</step>
		<step no="7">
			<desc>
				-check the syn flood status,
				'sh ssid xxx security screening [detail]' to make sure
			</desc>
			<log-file>show_ssid_security_screening.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} security screening detail"
			</telnet>
			<log-match>-e "Threshold:\ \ \ \ \ \ \ \ \ \ 1000\ packets/s"</log-match>
			<log-match>-e "Action:\ \ \ \ \ \ \ \ \ \ \ \ \ disconnect"</log-match>
			<log-match>-e "Action\ time:\ \ \ \ \ \ \ \ 0\ s"</log-match>
		</step>
		<step no="7.1">
			<desc>check the log info about syn-flood</desc>
			<log-file>step6.1_show_logging_buffered.log</log-file>
			<telnet target="ap1" delay="10">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match>-e "wifi0.1 SYN flood protection is enabled"</log-match>
		</step>
		<step no="8.1">
			<desc>STA1 launchs SYN flood attack</desc>
			<ssh target="sta1">
				-v "nohup hping3 ${ap1.mgt0.ip} -I ${sta1.tif.name} --flood -p 80 -S &amp;"
			</ssh>
		</step>
		<step no="8.2" delay="45">
			<desc>ping from sta1 to AP</desc>
			<log-file>show_ping_after_attack.log</log-file>
			<ssh target="sta1">
				-v "killall hping3"
				-v "ping ${ap1.mgt0.ip} -c 5"
			</ssh>
			<log-match>-e "0% packet loss"</log-match>
		</step>
		<step no="9">
			<desc>Show log buffered</desc>
			<log-file>step9_show_logging_buffered.log</log-file>
			<telnet target="ap1" timeout="300">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)wifi0.1 SYN flood attack from ${sta1.tif.mac}\(${sta1.tif.ip}\) is detected" -f ${log.dir}/${log.file}</log-match>
			<log-match>-c -e "sta ${sta1.tif.mac} is disassociated from"</log-match>
			<log-match>-n -e "sta ${sta2.tif.mac} is disassociated from" -c</log-match>
		</step>
		<step no="10">
			<desc>ping from sta2 to AP</desc>
			<log-file>show_ping_outof_attack.log</log-file>
			<ssh target="sta2">
				-v "ping ${ap1.mgt0.ip} -c 5"
			</ssh>
			<log-match>-e "0% packet loss"</log-match>
		</step>
	</stage>
</testcase>
