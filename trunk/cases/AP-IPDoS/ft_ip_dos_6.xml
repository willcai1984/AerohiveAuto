<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Detect ip-spoof attack on ssid side</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		-STA1 is an attacker with a linux OS, install pkt on it
		-STA2 is a normal user
		-config a ssid, bind it to wifi interface
		-STA1 and STA2 are all connected to ssid

		Test Procedure:
		-enable ip-spoof detection on ssid,
		' ssid xxx security screening ip-spoof'
		-change the action to drop, duration is 60sec
		-check the ip-spoof status,
		'sh ssid xxx security screening' to make sure
		-STA1 launchs ip spoof attack
		-check the log info on AP
	</description>
	<numofap>1</numofap>
	<numofsta>2</numofsta>
	<tbtype>linux</tbtype>

	<stage>
		<step no="1">
			<desc>
				-Config a ssid, bind it to wifi interface
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "security-object autoap"
				-v "ssid ${ssid.name} security-object autoap"
				-v "interface wifi0 ssid ${ssid.name}"
			</telnet>
		</step>

		<include prefix="2" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn1, sta1, ap1" />

		<include prefix="3" file="subs/sta_wifi_connect_${tb.os}.xml" rargs="conn2, sta2, ap1" />
		<step no="4">
			<desc>check show station</desc>
			<log-file>show_station.log</log-file>
			<telnet target="ap1">
				-v "show ssid ${ssid.name} station"
			</telnet>
			<log-match>-p 11 -i "Yes" -i "${sta1.tif.mac}" -c</log-match>
			<log-match>-p 2 -i "${sta1.tif.ip}" -i "${sta1.tif.mac}" -c</log-match>
			<log-match>-p 11 -i "Yes" -i "${sta2.tif.mac}" -c</log-match>
			<log-match>-p 2 -i "${sta2.tif.ip}" -i "${sta2.tif.mac}" -c</log-match>
		</step>
		<step no="5">
			<desc>
				-enable ip-spoof detection on ssid,
				' ssid xxx security screening ip-spoof'
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name} security screening ip-spoof"
			</telnet>
		</step>
		<step no="6">
			<desc>
				-change the action to drop, duration is 60sec
			</desc>
			<telnet target="ap1">
				-v "ssid ${ssid.name} security screening ip-spoof action drop 60"
			</telnet>
		</step>
		<step no="7">
			<desc>
				-check the ip-spoof status,
				'sh ssid xxx security screening' to make sure
			</desc>
			<log-file>show_ssid_security_screening.log</log-file>
			<telnet target="ap1">
				-v "sh ssid ${ssid.name} security screening detail"
			</telnet>
			<log-match>-e "Threshold:\ \ \ \ \ \ \ \ \ \ 3\ IP"</log-match>
			<log-match>-e "Action:\ \ \ \ \ \ \ \ \ \ \ \ \ drop"</log-match>
			<log-match>-e "Action time:\ \ \ \ \ \ \ \ 60\ s"</log-match>
		</step>
		<step no="7.1">
			<desc>AP clear log</desc>
			<telnet target="ap1">
				-v "clear log buffered"
				-v "_kdebug fe basic"
				-v "_kdebug fe detail"
				-v "_kdebug screen basic"
			</telnet>
		</step>
		<step no="8">
			<desc>STA1 launchs an udp flood attack</desc>
			<ssh target="sta1">
				-v "pkt -i ${sta1.tif.name} -p udp -d ${ap1.mgt0.ip} -c 10 -s"
			</ssh>
		</step>

		<step no="9" delay="15">
			<desc>check the log info on AP</desc>
			<log-file>step9_show_logging_buffered.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "(?i)wifi0.1 IP spoof attack from ${sta1.tif.mac} is detected. The packets will be dropped for 60 seconds" -f ${log.dir}/${log.file}</log-match>
		</step>
		<step no="9.1">
			<desc>AP clear log and open switch of debug</desc>
			<telnet target="ap1">
				-v "clear log buffered"
				-v "_ff id 1 src-mac ${sta1.tif.mac} bidirectional"
			</telnet>
		</step>
		<step no="10">
			<desc>ping ap during drop</desc>
			<log-file>show_ping_during_ping.log</log-file>
			<ssh target="sta1">
				-v "ping ${ap1.mgt0.ip} -c 5"
			</ssh>
			<log-match>-e "100% packet loss"</log-match>
		</step>
		<step no="10.1">
			<desc>check the log info on AP</desc>
			<log-file>show_logging_buffered_ping.log</log-file>
			<telnet target="ap1">
				-v "show logging buffered" ; exit 0
			</telnet>
			<no-error-check />
			<log-match bin="${bin.dir}/searchbyrexp.py">-p "\(\!\) wifi0.1 ${sta1.tif.ip}-&gt;${ap1.mgt0.ip}.*?ttl.*?icmp-echo-req" -f ${log.dir}/${log.file}</log-match>
		</step>
		<step no="10.2" delay="60">
			<desc>ping ap after 60s</desc>
			<log-file>show_ping_after_60s.log</log-file>
			<ssh target="sta1">
				-v "ping ${ap1.mgt0.ip} -c 5"
			</ssh>
			<log-match>-e " 0% packet loss"</log-match>
		</step>
	</stage>
</testcase>
