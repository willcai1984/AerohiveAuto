<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Verify that the log message can be stored to one remote syslog server.</brief>
	<priority>Accept</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		Default setting

		Test Procedure:
		1． Config one syslog server to listen for remote device.
		2． Config logging host ip address and severity level to syslog server
		3． Let the log message run in device
		4. Use ethereal to check packets should send to syslog server via UDP 514 port, and check the log message file in syslog server.
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<property name="packets_send_result" value="packets_send_result" />
	<property name="log_file_dir" value="/tmp" />

	<stage>
		<step no="1">
			<desc>
				Config logging host ip address and severity level to syslog server
			</desc>
			<telnet target="ap1">
				-v "logging server ${tb.syslog_server} level emergency"
			</telnet>
		</step>

		<step no="1.1">
			<desc>
				delete tmp files
			</desc>
			<ssh host="${tb.syslog_server}">
				-v "rm -f ${log_file_dir}/${packets_send_result}"
			</ssh>
		</step>

		<step no="2">
			<desc>
				backup syslog and delete source syslog file ,then touch a new space file.
			</desc>
			<log-file>step2_modify_files.log</log-file>
			<ssh host="${tb.syslog_server}">
				-v "cp /var/log/aerohive /var/log/aerohive1"
				-v "rm -f /var/log/aerohive"
				-v "touch /var/log/aerohive"
			</ssh>
		</step>

		<step no="2.1">
			<desc>
				stop service syslog-ng,then start it.
			</desc>
			<log-file>step2.1_down-up_syslog-service.log</log-file>
			<ssh host="${tb.syslog_server}" timeout="180">
				-v "service syslog-ng stop"
				-v "service syslog-ng start"
			</ssh>
		</step>

		<step no="3">
			<desc>
				Use ethereal to check packets should send to syslog server via UDP 514 port
			</desc>
			<log-file>step3_start_tshark.log</log-file>
			<ssh host="${tb.syslog_server}" timeout="500">
				-v "nohup tshark -i eth1 udp port 514 &gt; ${log_file_dir}/${packets_send_result} 2>&amp;1 &amp;"
			</ssh>
		</step>

		<step no="3.1" type="loop-check" loop-max-times="5" loop-interval="5">
			<desc>
				check "tshark" run in backgroud.
			</desc>
			<log-file>step3.1_tshark_pid_chk_${loop_check.idx}.log</log-file>
			<ssh host="${tb.syslog_server}">
				-v "ps aux | grep tshark"
			</ssh>
			<log-match>-e "tshark" -i "udp"</log-match>
		</step>

		<step no="4">
			<desc>
				Let the log message run in device
			</desc>
			<telnet target="ap1">
				-v "_test log-case emergency"
				-v "_test log-case alert"
				-v "_test log-case critical"
				-v "_test log-case error"
				-v "_test log-case warning"
				-v "_test log-case notification"
				-v "_test log-case info"
				-v "_test log-case debug"
			</telnet>
		</step>

		<step no="4.1">
			<desc>
				get pid of "tshark" process.
			</desc>
			<setvar name="tshark.pid">
				${bin.dir}/getbyrexp.py -f ${log.dir}/step3_start_tshark.log -p "\[\d+\]\s+(\d+)" -t str
			</setvar>
		</step>

		<step no="4.2">
			<desc>
				kill the process which run in background.
			</desc>
			<ssh host="${tb.syslog_server}">
				-v "kill ${tshark.pid}"
			</ssh>
		</step>

		<step no="5">
			<desc>
				check the log message file in syslog server.
			</desc>
			<log-file>step5_check_file.log</log-file>
			<ssh host="${tb.syslog_server}" timeout="500">
				-v "cat /var/log/aerohive"
			</ssh>
			<log-match>-e "${ap1.mgt0.ip} .* log case test: emergency!!!"</log-match>
			<log-match>-n -e "${ap1.mgt0.ip} .* log case test: alert!!!"</log-match>
			<log-match>-n -e "${ap1.mgt0.ip} .* log case test: critical!!!"</log-match>
			<log-match>-n -e "${ap1.mgt0.ip} .* log case test: error!!!"</log-match>
			<log-match>-n -e "${ap1.mgt0.ip} .* log case test: warning!!!"</log-match>
			<log-match>-n -e "${ap1.mgt0.ip} .* log case test: notification!!!"</log-match>
			<log-match>-n -e "${ap1.mgt0.ip} .* log case test: info!!!"</log-match>
			<log-match>-n -e "${ap1.mgt0.ip} .* log case test: debug!!!"</log-match>
		</step>

		<step no="6">
			<desc>
				check packets should send to syslog server
			</desc>
			<log-file>step6_check_file.log</log-file>
			<ssh host="${tb.syslog_server}" timeout="500">
				-v "cat ${log_file_dir}/${packets_send_result}"
			</ssh>
			<log-match>-e "${ap1.mgt0.ip} -&gt; ${tb.syslog_server} Syslog LOCAL6.EMERG: .* log case test: emergency!!!"</log-match>
			<log-match>-n -e "${ap1.mgt0.ip} -&gt; ${tb.syslog_server} Syslog LOCAL6.ALERT:"</log-match>
			<log-match>-n -e "${ap1.mgt0.ip} -&gt; ${tb.syslog_server} Syslog LOCAL6.CRIT:"</log-match>
			<log-match>-n -e "${ap1.mgt0.ip} -&gt; ${tb.syslog_server} Syslog LOCAL6.ERR:"</log-match>
			<log-match>-n -e "${ap1.mgt0.ip} -&gt; ${tb.syslog_server} Syslog LOCAL6.WARNING:"</log-match>
			<log-match>-n -e "${ap1.mgt0.ip} -&gt; ${tb.syslog_server} Syslog LOCAL6.NOTICE:"</log-match>
			<log-match>-n -e "${ap1.mgt0.ip} -&gt; ${tb.syslog_server} Syslog LOCAL6:INFO:"</log-match>
			<log-match>-n -e "${ap1.mgt0.ip} -&gt; ${tb.syslog_server} Syslog LOCAL6:DEBUG:"</log-match>
		</step>
	</stage>

	<post-process>
		<stage>
			<step no="0">
				<desc>
					delete tmp files
					combine the two syslog files
				</desc>
				<ssh host="${tb.syslog_server}">
					-v "rm -f ${log_file_dir}/${packets_send_result}"
					-v "cat /var/log/aerohive /var/log/aerohive1 > /var/log/aerohive2"
					-v "rm -f /var/log/aerohive"
					-v "rm -f /var/log/aerohive1"
					-v "cp /var/log/aerohive2 /var/log/aerohive"
					-v "rm -f /var/log/aerohive2"
				</ssh>
			</step>
		</stage>

		<include file="include/default_post_process.xml" />
	</post-process>
</testcase>