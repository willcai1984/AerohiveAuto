<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<brief>Check which config file be encrypted</brief>
	<priority>High</priority>
	<automated>yes</automated>
	<description>
		Pre-Condition:
		All config file exist(include configure1, configure2, bootstrap)

		Test Procedure:
		1. Login AP enter shell , open directory /f/etc( or show
		system file flash-etc xxx)
		2. Check which config file be encrypted
		AH-000180:/home/admin# cd /f/etc/
		AH-000180:/f/etc# ls
		ah_rdf_config configure1 ssh_host_dsa_key.pub
		ahtbconfig configure2 ssh_host_rsa_key
		bootstrap err_messages ssh_host_rsa_key.pub
		configure-control ssh_host_dsa_key
		AH-000180:/f/etc# cat configure1
		AH-000180:/f/etc# cat configure2
		AH-000180:/f/etc# cat bootstrap
		Expectant result
		configure1, configure2, bootstrap file be encrypted
	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<property name="download_config" value="config.txt" />

	<stage>
		<step no="1">
			<desc>
				remove document
			</desc>
			<script>
				rm -f /tftpboot/${download_config}
			</script>
		</step>

		<step no="1.1">
			<desc>
				create a config file
			</desc>
			<script>
				echo "security-object cwp" > /tftpboot/${download_config}
			</script>
		</step>

		<step no="2">
			<desc>
				reset config
			</desc>
			<console target="ap1">
				-v "reset config bootstrap"
				-v "reset config"
			</console>
		</step>

		<step no="2.1" delay="60">
			<desc>
				Create Config and save config
			</desc>
			<console target="ap1">
				-v "ssid ${ssid.name}"
				-v "save config"
			</console>
		</step>

		<step no="2.2">
			<desc>
				reboot AP
			</desc>
			<console target="ap1">
				-v "reboot"
			</console>
		</step>

		<step no="2.3" delay="60">
			<desc>
				save config from tftp server to current
			</desc>
			<log-file>step2.3_show_config_current.log</log-file>
			<console target="ap1">
				-v "save config tftp://${mpc.tif.ip}:${download_config} current"
				-v "reboot"
			</console>
		</step>

		<step no="3" delay="60">
			<desc>
				show config current
				show config backup
			</desc>
			<log-file>step3_show_config.log</log-file>
			<console target="ap1">
				-v "show config current"
				-v "show config backup"
			</console>
			<log-match>-i "security-object cwp"</log-match>
			<log-match>-i "ssid ${ssid.name}"</log-match>
		</step>

		<step no="3.1">
			<desc>
				save config running bootstrap
			</desc>
			<console target="ap1" slow="yes">
				-v "save config running bootstrap"
				-v "show config bootstrap"
			</console>
			<log-match>-i "security-object cwp"</log-match>
		</step>

		<step no="4" delay="10">
			<desc>
				Login AP enter shell , open directory /f/etc
				( or show system file flash-etc xxx)
			</desc>
			<log-file>step4_enter_shell.log</log-file>
			<console target="ap1" prompt="AH.*$|#" timeout="600">
				-b -sp "${ap1.shellpwd}"
				-v "_shell"
				-v "ls /f/etc/"
				-v "exit 0"
				-v ""
			</console>
			<log-match>-i "bootstrap"</log-match>
			<log-match>-i "configure1"</log-match>
			<log-match>-i "configure2"</log-match>
		</step>

		<step no="4.1">
			<desc>
				Check which config file be encrypted
				AH-000180:/f/etc# cat bootstrap
			</desc>
			<log-file>step4.1_cat_bootstrap.log</log-file>
			<console target="ap1" prompt="AH.*$|#" timeout="600">
				-b -sp "${ap1.shellpwd}"
				-v "_shell"
				-v "cat /f/etc/bootstrap"
				-v "exit"
				-v ""
			</console>
			<log-match>-n -i "security-object cwp"</log-match>
			<no-error-check />
		</step>

		<step no="4.2">
			<desc>

				AH-000180:/f/etc# cat configure1
			</desc>
			<log-file>step4.2_cat_configure1.log</log-file>
			<console target="ap1" prompt="AH.*$|#" timeout="600">
				-b -sp "${ap1.shellpwd}"
				-v "_shell"
				-v "cat /f/etc/configure1"
				-v "exit"
				-v ""
			</console>
			<log-match>-n -i "security-object cwp"</log-match>
			<no-error-check />
		</step>

		<step no="4.3">
			<desc>
				AH-000180:/f/etc# cat configure2
			</desc>
			<log-file>step4.3_cat_configure2.log</log-file>
			<console target="ap1" prompt="AH.*$|#" timeout="600">
				-b -sp "${ap1.shellpwd}"
				-v "_shell"
				-v "cat /f/etc/configure2"
				-v "exit"
				-v ""
			</console>
			<log-match>-n -i "ssid ${ssid.name}"</log-match>
			<no-error-check />
		</step>

		<step no="5">
			<desc>
				remove document
			</desc>
			<script>
				rm -f /tftpboot/${download_config}
			</script>
		</step>

		<step no="5.1">
			<desc>
				reset config bootstrap
			</desc>
			<console target="ap1">
				-v "reset config bootstrap"
			</console>
		</step>
	</stage>

	<failed-process>
		<stage>
			<step no="0">
				<desc>
					remove document
				</desc>
				<script>
					rm -f /tftpboot/${download_config}
				</script>
			</step>

			<step no="0.1">
				<desc>
					reset config bootstrap
				</desc>
				<console target="ap1">
					-v "reset config bootstrap"
				</console>
			</step>
		</stage>

		<include file="include/default_failed_process.xml" />
	</failed-process>
</testcase>