<?xml version="1.0" encoding="UTF-8"?>
<testcase>
	<priority>High</priority>
	<brief>When current config file is fine, check config information</brief>
	<automated>yes</automated>
	<description>
		Description:
		When current config file is fine, check config information
		Pre-condition:
		AP with default setting
		Test procedure:
		1. Login AP
		2. Create some configurations and save config
		3. Check current config by cli
		4. Check current config information by cli, verify if include Magic number, Length of data, Checksum and File version,etc
		5. Check encrypted config file in shell

		Expect result:

	</description>
	<numofap>1</numofap>
	<numofsta>0</numofsta>
	<tbtype>winlin</tbtype>

	<stage>
		<step no="1">
			<desc>
				save running config to current
			</desc>
			<log-file>step1_save_config_current.log</log-file>
			<telnet target="ap1">
				-v "ssid ${ssid.name}"
				-v "save config running current"
			</telnet>
		</step>

		<step no="2">
			<desc>
				show config current
			</desc>
			<log-file>step2_show_config_current.log</log-file>
			<telnet target="ap1">
				-v "show config current"
			</telnet>
			<log-match>-c -i "ssid ${ssid.name}"</log-match>
		</step>

		<step no="3">
			<desc>
				3. Check which config file is current config by _show
				configuration control
			</desc>
			<log-file>_show_configuration_control.log</log-file>
			<telnet target="ap1">
				-v "_show configuration control"
			</telnet>
			<no-error-check />
		</step>

		<step no="4.1">
			<desc>Get file num</desc>
			<setvar name="filenum">
				${bin.dir}/getbyrexp.py -f ${log.dir}/_show_configuration_control.log -p "config after reboot: (\d+)" -t int
			</setvar>
		</step>

		<step no="4.2">
			<desc>Get file num</desc>
			<setvar name="filename">
				${bin.dir}/getbyrexp.py -f ${log.dir}/_show_configuration_control.log -p "num: ${filenum}, valid: \d+, name: (.*)" -t str
			</setvar>
		</step>

		<step no="4.3">
			<desc>
				check if config file be encrypted
			</desc>
			<log-file>check_config_file2.log</log-file>
			<console target="ap1" prompt="AH.*(#|$)">
				-b -sp "${ap1.shellpwd}"
				-v "_shell"
				-v "cat ${filename}"
				-v "exit"
			</console>
			<log-match>-n -c -i "ssid ${ssid.name}"</log-match>
			<no-error-check />
		</step>

		<step no="5">
			<desc>
				show running current
			</desc>
			<log-file>show_config_current.log</log-file>
			<console target="ap1">
				-v "show config current"
			</console>
			<log-match>-c -i "ssid ${ssid.name}"</log-match>
		</step>

		<step no="6">
			<desc>
				show running current
			</desc>
			<log-file>show_config_current_info.log</log-file>
			<console target="ap1">
				-v "show config current info"
			</console>
			<log-match>-c -i "Magic number:"</log-match>
			<log-match>-c -i "File size:"</log-match>
			<log-match>-c -i "Checksum:"</log-match>
			<log-match>-c -i "File version:"</log-match>
		</step>
	</stage>
</testcase>