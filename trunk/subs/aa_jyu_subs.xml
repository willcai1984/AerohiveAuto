<include obj-arg-names="__AP__">
	<step no="1">
		<desc>temporary solution to avoid previous console issue</desc>
		<console target="__AP__">
			-v ""
			-v "show version"
			-v ""
			-v "show hw-info"
			-v ""
		</console>
		<no-error-check />
		<failed>next</failed>
	</step>
	<step no="2">
		<desc>show run to ensure no any CLI</desc>
		<log-file>show_run___AP__result.log</log-file>
		<console target="__AP__">
			-v ""
			-v "show run"
			-v ""
		</console>
	</step>
	<step no="3a">
		<desc>judge if the show run result is clear</desc>
		<log-file>show_run___AP__result.log</log-file>
		<setvar name="env.is_clean_in_reset" scope="local">
			${bin.dir}/searchblocks.py -b "^AH.*#show run$" -e "^AH.*#$" -ps p0 "." -nb -ne -f ${log.dir}/${log.file}; exit 0
		</setvar>
	</step>
	<step no="3b">
		<desc>judge if the show run result is clear</desc>
		<log-file>show_run___AP__result.log</log-file>
		<setvar name="env.is_clean_in_auto" scope="local">
			${bin.dir}/searchblocks.py -b "^AH.*#show run$" -e "^AH.*#$" -ps p1 "interface wifi1 hive hive0 shutdown" -nb -ne -f ${log.dir}/${log.file}; exit 0
		</setvar>
	</step>

	<step no="debug">
		<script>
			echo "env.is_clean_in_reset=${env.is_clean_in_reset}"
			echo "env.is_clean_in_auto=${env.is_clean_in_auto}"
		</script>
	</step>

	<step no="clear.1">
		<if>"${env.is_clean_in_reset}" != "success" &amp;&amp; "${env.is_clean_in_auto}" != "success"</if>
		<desc>Reset AP to default </desc>
		<console target="__AP__" timeout="180">
			-v "boot-param region fcc"
			-v ""
			-v "reset config"
			-v ""
		</console>
	</step>
	<step no="clear.2">
		<if>"${env.is_clean_in_reset}" != "success" &amp;&amp; "${env.is_clean_in_auto}" != "success"</if>
		<desc>temporary solution to avoid previous console issue</desc>
		<console target="__AP__">
			-v ""
			-v "show version"
			-v ""
		</console>
		<failed>next</failed>
	</step>
	<step no="clear.3">
		<if>"${env.is_clean_in_auto}" != "success"</if>
		<desc>BR as AP initialization</desc>
		<console target="__AP__">
			-v "interface wifi1 hive hive0 shutdown"
			-v "save config"
		</console>
	</step>

	<step no="4">
		<desc>show run after reset config</desc>
		<log-file>show_run___AP__.log</log-file>
		<console target="__AP__">
			-v ""
			-v "show run"
			-v ""
		</console>
		<log-match bin="${bin.dir}/searchblocks.py">-b "^AH.*#show run$" -e "^AH.*#$" -ps p1 "interface wifi1 hive hive0 shutdown" -nb -ne -f ${log.dir}/${log.file}</log-match>
	</step>

	<step no="5" type="loop-check" loop-max-times="6" loop-interval="10">
		<desc>check ap1 eth0,eth1 if status is up</desc>
		<log-file>show_int___AP___${loop_check.idx}.log</log-file>
		<console target="__AP__">
			-v "show int"
		</console>
		<log-match>-e "Eth0" -i "backhaul\ \ \ U"</log-match>
		<log-match>-n -e "Eth1" -i "backhaul\ \ \ D"</log-match>
		<failed>next</failed>
	</step>

</include>