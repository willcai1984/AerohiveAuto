<include obj-arg-names="__AP__">
	<step no="0.1">
		<desc>get dut version</desc>
		<log-file>show____AP___ver.log</log-file>
		<console target="__AP__">
			-v "show version"
		</console>
	</step>
	<step no="0.2">
		<desc>get platform infomation </desc>
		<setvar name="dut.platform" scope="local">
			${bin.dir}/getstring.pl -k Platform -p 2 -f ${log.dir}/show____AP___ver.log
		</setvar>
	</step>
	<step no="0.3">
		<desc>set isBR100Flag to default value false</desc>
		<setvar name="isBR100Flag" scope="local">
			echo "false"
		</setvar>
	</step>
	<step no="0.4">
		<if>"${dut.platform}"=="BR100"</if>
		<desc>according platform to set isBR100Flag </desc>
		<setvar name="isBR100Flag" scope="local">
			echo "true"
		</setvar>
	</step>
	<step no="1.0">
		<if>"${isBR100Flag}" == "false"</if>
		<desc>
			Various AP initialization, such as clear logs and use eth0 manage telnet and so on if isBR100Flag false
		</desc>
		<console target="__AP__">
			-v "boot-param netdump enable"
			-v "boot-param server ${pub.tftp2.ip}"
			-v "clear log all"
			-v "ntp server ${pub.ntp}"
			-v "console page 0"
			-v "console timeout 0"
			-v "clock time-zone 8"
			-v "no capwap client enable"
			-v "interface eth0 manage all"
			-v "no bonjour-gateway enable"
			-v "save config"
		</console>
	</step>

	<step no="1.1">
		<if>"${isBR100Flag}" == "true"</if>
		<desc>
			Various AP initialization, such as clear logs and use eth0 manage telnet and so on if isBR100Flag true
		</desc>
		<console target="__AP__">
			-v "boot-param netdump enable"
			-v "boot-param server ${pub.tftp2.ip}"
			-v "clear log all"
			-v "ntp server ${pub.ntp}"
			-v "console page 0"
			-v "console timeout 0"
			-v "clock time-zone 8"
			-v "no capwap client enable"
			-v "interface eth0 manage all"
			-v "save config"
		</console>
	</step>

	<step no="1a">
		<desc>disable bonjour gateway</desc>
		<if>"${img.prodtype}" == "APTBBR200"</if>
		<console target="__AP__">
			-v "no bonjour enable"
			-v "save config"
		</console>
	</step>
	<step no="1b">
		<desc>telnet open</desc>
		<if>"${ap.is_aptbbr}" == "true"</if>
		<console target="__AP__">
			-v "exec bypass-wan-hardening"
			-v "save config"
		</console>
	</step>

	<step no="2.pureAP.special">
		<if>"${__AP__.wifi1.existed}" == "true"</if>
		<desc>AP special initialization</desc>
		<console target="__AP__">
			-v "no interface wifi1 hive hive0 shutdown"
			-v "save config"
		</console>
	</step>

<!-- 	<step no="3" type="loop-check" loop-max-times="3" loop-interval="10"> -->
<!-- 		<desc>show interface of mgt0 on AP1</desc> -->
<!-- 		<log-file>show___AP___int_mgt0_${loop_check.idx}.log</log-file> -->
<!-- 		<console target="__AP__"> -->
<!-- 			-v "show interface mgt0" -->
<!-- 		</console> -->
<!-- 		<log-match>-n -c -e 'IP addr=0.0.0.0;'</log-match> -->
<!-- 	</step> -->

	<step no="3renew1" type="loop-check" loop-max-times="10" loop-interval="5">
		<desc>
			-Check if device can get IP from DHCP server successfully
		</desc>
		<log-file>renewstep2___AP___${loop_check.idx}.log</log-file>
		<console target="__AP__">
			-v "show interface mgt0 dhcp client"
		</console>
		<log-match>-e "Get IP address 0.0.0.0" -n</log-match>
	</step>

	<step no="3.1">
		<desc>show interface mgt0 for parse IP</desc>
		<log-file>show___AP___int_mgt0.log</log-file>
		<console target="__AP__">
			-v "show interface mgt0"
		</console>
	</step>
	<step no="4">
		<desc>get mgt0 IP and set related var</desc>
		<setvar name="__AP__.mgt0.ip">
			python ${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -f ${log.dir}/show___AP___int_mgt0.log -t str
		</setvar>
	</step>
	
	<step no="4.aptbbr.1" type="loop-check" loop-max-times="3" loop-interval="10">
		<if>"${ap.is_aptbbr}" == "true"</if>
		<desc>show interface of eth0 on AP1</desc>
		<log-file>show___AP___int_eth0_${loop_check.idx}.log</log-file>
		<console target="__AP__">
			-v "show interface eth0"
		</console>
		<log-match>-n -c -e 'IP addr=0.0.0.0;'</log-match>
	</step>
	
	<step no="4.aptbbr.2">
		<if>"${ap.is_aptbbr}" == "true"</if>
		<desc>show interface of eth0 for parse IP</desc>
		<log-file>show___AP___int_eth0.log</log-file>
		<console target="__AP__">
			-v "show interface eth0"
		</console>
	</step>
	
	<step no="4.aptbbr.2">
		<if>"${ap.is_aptbbr}" == "true"</if>
		<desc>get mgt0 IP and set related var</desc>
		<setvar name="__AP__.eth0.ip">
			${bin.dir}/getrmtip.pl -f ${log.dir}/show___AP___int_eth0.log -i eth0 -o aero -nomask
		</setvar>
	</step>

	<step no="5.a" type="loop-check" loop-max-times="3" loop-interval="10">
		<if>"${ap.is_aptbbr}" != "true"</if>
		<desc>Ping to AP to check if AP is reachable</desc>
		<log-file>ping___AP___${loop_check.idx}.log</log-file>
		<script>
			ping ${__AP__.mgt0.ip} -c 4 > ${log.dir}/${log.file}
		</script>
		<log-match>-c -i " from ${__AP__.mgt0.ip}" -i " ttl="</log-match>
	</step>

	<step no="5.b" type="loop-check" loop-max-times="3" loop-interval="10">
		<if>"${ap.is_aptbbr}" == "true"</if>
		<desc>Ping to AP to check if AP is reachable</desc>
		<log-file>ping___AP___${loop_check.idx}.log</log-file>
		<script>
			ping ${__AP__.eth0.ip} -c 4 > ${log.dir}/${log.file}
		</script>
		<log-match>-c -i " from ${__AP__.eth0.ip}" -i " ttl="</log-match>
	</step>

	<step no="5.c">
		<desc>
			-Set forward interface
		</desc>
		<setvar name="__AP__.forwards.int">
			if [ `echo ${img.prodtype} | grep APTBBR` ];
			then
			echo eth0
			else
			echo mgt0
			fi
		</setvar>
	</step>
	<step no="5.c.1">
		<desc>
			-Set forward interface
		</desc>
		<setvar name="__AP__.forward.int">
			echo ${__AP__.forwards.int}
		</setvar>
	</step>
	<step no="5.d">
		<desc>
			-Set forward ip
		</desc>
		<setvar name="__AP__.forwards.ip">
			if [ `echo ${img.prodtype} | grep APTBBR` ];
			then
			echo ${__AP__.eth0.ip}
			else
			echo ${__AP__.mgt0.ip}
			fi
		</setvar>
	</step>

</include>
