<include obj-arg-names="__AP__">
	<step no="0.1">
		<desc>get dut version</desc>
		<log-file>show____AP___ver.log</log-file>
		<console target="__AP__">
			-v "show version"
		</console>
	</step>
	<step no="0.2">
		<desc>get platform infomation </desc>
		<setvar name="dut.platform" scope="local">
			${bin.dir}/getstring.pl -k Platform -p 2 -f ${log.dir}/show____AP___ver.log
		</setvar>
	</step>
	
	<step no="1.0">
		<desc>
			Various AP initialization, such as clear logs and use eth0 manage telnet and so on if isBR100Flag false
		</desc>
		<console target="__AP__">
			-v "boot-param netdump enable"
			-v "boot-param server ${pub.tftp2.ip}"
			-v "clear log all"
			-v "ntp server ${pub.ntp}"
			-v "console page 0"
			-v "console timeout 0"
			-v "clock time-zone 8"
			-v "no capwap client HTTP proxy name"
			-v "no capwap client enable"
			-v "interface eth0 manage all"
			-v "no bonjour-gateway enable"
			-v "save config"
		</console>
	</step>

	<step no="2.pureAP.special">
		<if>"${__AP__.wifi1.existed}" == "true"</if>
		<desc>AP special initialization</desc>
		<console target="__AP__">

			-v "no interface wifi1 hive hive0 shutdown"
			-v "save config"

		</console>
	</step>

	<step no="3">
		<desc>show interface of mgt0 on AP1</desc>
		<log-file>show___AP___int_mgt0.log</log-file>
		<console target="__AP__">
			-v "show interface mgt0"
		</console>
	</step>

	<step no="4">
		<desc>get mgt0 IP and set related var</desc>
		<setvar name="__AP__.mgt0.ip">
			python ${bin.dir}/getbyrexp.py -p "IP addr=(\d+\.\d+\.\d+\.\d+);" -f ${log.dir}/show___AP___int_mgt0.log -t str
		</setvar>
	</step>
	

	<step no="5" type="loop-check" loop-max-times="10" loop-interval="10">
		<desc>Ping to AP to check if AP is reachable</desc>
		<log-file>ping___AP___${loop_check.idx}.log</log-file>
		<script>
			ping ${__AP__.mgt0.ip} -c 4 > ${log.dir}/${log.file}
		</script>
		<log-match>-c -i " from ${__AP__.mgt0.ip}" -i " ttl="</log-match>
	</step>

	<step no="5.c">
		<desc>
			-Set forward interface
		</desc>
		<setvar name="__AP__.forwards.int">
			if [ `echo ${img.prodtype} | grep APTBBR` ];
			then
			echo eth0
			else
			echo mgt0
			fi
		</setvar>
	</step>
	<step no="5.c.1">
		<desc>
			-Set forward interface
		</desc>
		<setvar name="__AP__.forward.int">
			echo ${__AP__.forwards.int}
		</setvar>
	</step>
	<step no="5.d">
		<desc>
			-Set forward ip
		</desc>
		<setvar name="__AP__.forwards.ip">
			if [ `echo ${img.prodtype} | grep APTBBR` ];
			then
			echo ${__AP__.eth0.ip}
			else
			echo ${__AP__.mgt0.ip}
			fi
		</setvar>
	</step>

	<step no="6.a">
		<desc>
			gain ap1's wifi1's mac address
		</desc>
		<setvar name="__AP__.mgt0.mac">
			${bin.dir}/getbyrexp.py -p "MAC addr=([\da-fA-F:]+)" -f ${log.dir}/show___AP___int_mgt0.log -t str
		</setvar>
	</step>
	
    <step no="6.b">
    	<setvar name="__AP__.mgt0.mac">
    	    echo ${__AP__.mgt0.mac} |sed 's/://g' | tr a-z A-Z
    	</setvar>
    </step>
	<step no="7.0">
		<desc>show hw-info on AP1</desc>
		<log-file>show___AP___hw-info.log</log-file>
		<console target="__AP__">
			-v "show hw-info"
		</console>
	</step>
	<step no="7.1">
		<desc>
			gain ap1's  Serial number
		</desc>
		<setvar name="__AP__.sn">
			${bin.dir}/getbyrexp.py -p "Serial number:\s+(\d+)" -f ${log.dir}/show___AP___hw-info.log -t str
		</setvar>
	</step>
</include>
