<include obj-arg-names="__CVGID__">
	<step no="1">
		<desc>temporary solution to avoid previous telnet issue</desc>
		<telnet target="${__CVGID__.cons_ip}" port="${__CVGID__.cons_port}" timeout="2">
			-v ""
			-v "show version"
			-v ""
		</telnet>
		<no-error-check />
		<failed>next</failed>
	</step>
	<step no="2">
		<desc>show run to ensure no any CLI</desc>
		<log-file>show_run___CVGID__result.log</log-file>
		<telnet target="${__CVGID__.cons_ip}" port="${__CVGID__.cons_port}" timeout="2">
			-v ""
			-v "show run"
			-v ""
		</telnet>
	</step>
	<step no="3">
		<desc>judge if the show run result is clear</desc>
		<log-file>show_run___CVGID__result.log</log-file>
		<setvar name="env.is_clear" scope="local">
			${bin.dir}/searchblocks.py -b "^AH.*#show run$" -e "^AH.*#$" -ps p0 "." -nb -ne -f ${log.dir}/${log.file}; exit 0
		</setvar>
	</step>
	<step no="clear.1">
		<if>"${env.is_clear}" != "success"</if>
		<desc>Reset AP to default </desc>
		<telnet target="${__CVGID__.cons_ip}" port="${__CVGID__.cons_port}" timeout="30">
			-v ""
			-v "reset config"
		</telnet>
	</step>
	<step no="clear.2" delay="30">
		<if>"${env.is_clear}" != "success"</if>
		<desc>temporary solution to avoid previous telnet issue</desc>
		<telnet target="${__CVGID__.cons_ip}" port="${__CVGID__.cons_port}" timeout="120">
			-v ""
			-v "show version"
			-v ""
		</telnet>
		<failed>next</failed>
	</step>
	<step no="4">
		<desc>show run after reset config</desc>
		<log-file>show_run___CVGID__.log</log-file>
		<telnet target="${__CVGID__.cons_ip}" port="${__CVGID__.cons_port}" timeout="5">
			-v ""
			-v "show run"
			-v ""
		</telnet>
		<log-match bin="${bin.dir}/searchblocks.py">-b "^AH.*#show run$" -e "^AH.*#$" -ps p0 "." -nb -ne -f ${log.dir}/${log.file}</log-match>
	</step>
</include>