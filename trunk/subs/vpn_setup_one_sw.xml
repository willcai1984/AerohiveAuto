<!-- used for switch as br -->
<include obj-arg-names="__CVG__, __BR__">
	<step no="CVG.cvg.tunnel.name.gen">
		<setvar name="__CVG__.tunnel.name">
			echo "${job.sid}-s01"
		</setvar>
	</step>
	<step no="BR.tunnel.name.gen">
		<setvar name="__BR__.tunnel.name">
			echo "${job.sid}-c01"
		</setvar>
	</step>

	<step no="1.CVG">
		<desc>config CVG ${__CVG__.cvg.vmname} act as l3 VPN server</desc>
		<telnet target="${__CVG__.cvg.cons_ip}" port="${__CVG__.cvg.cons_port}" timeout="20">
			-v "save vpn ee-cert tftp://${pub.tftp1.tip}:certs/cert_vpn/server_cert.pem"
			-v "save vpn private-key tftp://${pub.tftp1.tip}:certs/cert_vpn/server_key.pem"
			-v "vpn xauth-client-list list_01 local"
			-v "vpn xauth-client-list list_01 client-name ${__BR__.br.name} password aerohive"
			-v "vpn server-ipsec-tunnel ${__CVG__.tunnel.name} vpn-mode layer-3"
			-v "vpn ipsec-tunnel ${__CVG__.tunnel.name} client-list list_01"
			-v "vpn tunnel-policy vpn_policy_01 server ipsec-tunnel ${__CVG__.tunnel.name}"
			-v "routing internal-sub-network ${__BR__.br.mgt0.ip}/${br.mgt0.supermask}"
			-v ""
			-v ""
			-v "routing internal-sub-network ${__BR__.br.mgt0.1.ip}/${br.mgt0.supermask}"
			-v ""
			-v ""
			-v "routing internal-sub-network ${__BR__.br.mgt0.2.ip}/${br.mgt0.supermask}"
			-v ""
			-v ""
			-v "routing internal-sub-network ${__BR__.br.mgt0.3.ip}/${br.mgt0.supermask}"
			-v ""
			-v ""
			-v "routing internal-sub-network ${__BR__.br.mgt0.4.ip}/${br.mgt0.supermask}"
		</telnet>
		<no-error-check />
	</step>

	<step no="1.CVG.routing">
		<desc>enable ospf on CVG eth1 if it has two arms</desc>
		<if>"two" == "${__CVG__.cvg.arm_type}"</if>
		<telnet target="${__CVG__.cvg.cons_ip}" port="${__CVG__.cvg.cons_port}" timeout="5">
			-v "routing protocol ospf advertise eth1"
			-v "routing protocol ospf router-id ${__CVG__.cvg.lan.ip}"
			-v "routing protocol type ospf"
			-v "routing protocol enable"
		</telnet>
	</step>

	<step no="1.CVG.routing">
		<desc>enable ospf on CVG eth0 if it has one arms</desc>
		<if>"one" == "${__CVG__.cvg.arm_type}"</if>
		<telnet target="${__CVG__.cvg.cons_ip}" port="${__CVG__.cvg.cons_port}" timeout="5">
			-v "routing protocol ospf advertise eth0"
			-v "routing protocol ospf router-id ${__CVG__.cvg.wan.ip}"
			-v "routing protocol type ospf"
			-v "routing protocol enable"
		</telnet>
	</step>

	<step no="1.br">
		<desc>config ${__BR__.br.name} as l3 VPN client connet to CVG</desc>
		<telnet target="${__BR__.br.wan.ip}">
			-v "hive ${hive.name}"
			-v "interface mgt0 hive ${hive.name}"
			-v "vlan ${__BR__.vpc1.vlan}"
			-v "interface vlan ${__BR__.vpc1.vlan}"
			-v "interface vlan${__BR__.vpc1.vlan} ip ${__BR__.br.mgt0.1.ip}/${br.lan.netmask}"
			-v "vlan ${__BR__.vpc2.vlan}"
			-v "interface vlan ${__BR__.vpc2.vlan}"
			-v "interface vlan${__BR__.vpc2.vlan} ip ${__BR__.br.mgt0.2.ip}/${br.lan.netmask}"
			-v "vlan ${__BR__.vpc3.vlan}"
			-v "interface vlan ${__BR__.vpc3.vlan}"
			-v "interface vlan${__BR__.vpc3.vlan} ip ${__BR__.br.mgt0.3.ip}/${br.lan.netmask}"
			-v "vlan ${__BR__.vpc4.vlan}"
			-v "interface vlan ${__BR__.vpc4.vlan}"
			-v "interface vlan${__BR__.vpc4.vlan} ip ${__BR__.br.mgt0.4.ip}/${br.lan.netmask}"
			-v "save vpn ca-cert tftp://${pub.tftp1.tip}:certs/cert_vpn/cacert.pem"
			-v "vpn client-ipsec-tunnel ${__BR__.tunnel.name} vpn-mode layer-3"
			-v "vpn ipsec-tunnel ${__BR__.tunnel.name} gateway ${__CVG__.cvg.tunnel.ip} client-name ${__BR__.br.name} password aerohive"
			-v "vpn tunnel-policy vpn_policy_01 client ipsec-tunnel ${__BR__.tunnel.name} primary"
			-v ""
			-v ""
			-v "routing route-request enable"
			-v ""
			-v ""
			-v "routing internal-sub-network ${__BR__.br.mgt0.ip}/${br.lan.netmask}"
			-v ""
			-v ""
			-v "routing internal-sub-network ${__BR__.br.mgt0.1.ip}/${br.lan.netmask}"
			-v ""
			-v ""
			-v "routing internal-sub-network ${__BR__.br.mgt0.2.ip}/${br.lan.netmask}"
			-v ""
			-v ""
			-v "routing internal-sub-network ${__BR__.br.mgt0.3.ip}/${br.lan.netmask}"
			-v ""
			-v ""
			-v "routing internal-sub-network ${__BR__.br.mgt0.4.ip}/${br.lan.netmask}"
		</telnet>
		<no-error-check />
	</step>

	<step no="2.chk.ike_BR" delay="10" type="loop-check" loop-max-times="5" loop-interval="10">
		<desc>
			check vpn ike sa on BR side
			destination to CVG public address
		</desc>
		<log-file>chk_ike_sa_br${loop_check.idx}.log</log-file>
		<telnet target="${__BR__.br.wan.ip}">
			-v "show vpn ike sa"
		</telnet>
		<log-match>-p 3 -i "9" -p 4 -i "I" -i "${__CVG__.cvg.tunnel.ip}\[4500\]"</log-match>
	</step>

	<step no="2.chk.ike_CVG" type="loop-check" loop-max-times="5" loop-interval="10">
		<desc>
			check vpn ike sa on CVG side
			destionation to BR public address
		</desc>
		<log-file>chk_ike_sa_CVG_${loop_check.idx}.log</log-file>
		<telnet target="${__CVG__.cvg.cons_ip}" port="${__CVG__.cvg.cons_port}" timeout="5">
			-v "show vpn ike sa"
		</telnet>
		<log-match>-re -i "${__BR__.br.nat.ip}\[\d+\] *\w+:\w+ *9 *R"</log-match>
	</step>

	<step no="2.chk.l3_BR">
		<desc>
			check gre tunnel on br side
			remote to CVG wan address, local mgt0 address ,gateway CVG public address
		</desc>
		<log-file>chk_gre_tunnel_br.log</log-file>
		<telnet target="${__BR__.br.wan.ip}">
			-v "show vpn layer-3-tunnel"
		</telnet>
		<log-match bin="${bin.dir}/searchbyrexp.py">-p "tunnel\d+[\t ]*gre/ipsec[\t ]*${__CVG__.cvg.wan.ip}[\t ]*${__BR__.br.mgt0.ip}[\t ]*\d+[\t ]*${__CVG__.cvg.tunnel.ip}" -f ${log.dir}/${log.file}</log-match>
	</step>

	<step no="2.get_tunnel.id_BR">
		<desc>get br primary tunnel id</desc>
		<setvar name="__BR__.tunnel.id">
			${bin.dir}/getbyrexp.py -p "(tunnel\d+)[\t ]*gre/ipsec[\t ]*${__CVG__.cvg.wan.ip}[\t ]*${__BR__.br.mgt0.ip}[\t ]*\d+[\t ]*${__CVG__.cvg.tunnel.ip}" -f ${log.dir}/chk_gre_tunnel_br.log -t str
		</setvar>
	</step>

	<step no="2.chk.l3_CVG">
		<desc>
			check gre tunnel on cvg side
			local to CVG wan address
		</desc>
		<log-file>chk_gre_tunnel_CVG.log</log-file>
		<telnet target="${__CVG__.cvg.cons_ip}" port="${__CVG__.cvg.cons_port}" timeout="5">
			-v "show vpn layer-3-tunnel"
		</telnet>
		<log-match bin="${bin.dir}/searchbyrexp.py">-p "tunnel\d+[\t ]*gre/ipsec[\t ]*any[\t ]*${__CVG__.cvg.wan.ip}[\t ]*\d+[\t ]*anonymous" -f ${log.dir}/${log.file}</log-match>
	</step>

	<step no="2.get_tunnel.id_CVG">
		<desc>get CVG tunnel ID</desc>
		<setvar name="__CVG__.tunnel.id">
			${bin.dir}/getbyrexp.py -p "(tunnel\d+)[\t ]*gre/ipsec[\t ]*any[\t ]*${__CVG__.cvg.wan.ip}[\t ]*\d+[\t ]*anonymous" -f ${log.dir}/chk_gre_tunnel_CVG.log -t str
		</setvar>
	</step>

	<step no="3.check_ip_route_br">
		<desc>
			check route on br1
		</desc>
		<telnet target="${__BR__.br.wan.ip}">
			-v "show ip route"
		</telnet>
	</step>

	<step no="3.check_ip_route_cvg">
		<desc>
			check route on cvg
		</desc>
		<telnet target="${__CVG__.cvg.cons_ip}" port="${__CVG__.cvg.cons_port}" timeout="5">
			-v "show ip route"
		</telnet>
	</step>
</include>