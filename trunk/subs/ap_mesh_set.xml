<include obj-arg-names="__AP1__, __AP2__" arg-names="hivename,meshint">
	<comment>
		this subs is useed to set ap's hive and bind it to ap's mesh point
		ap1 is portal,ap2 is mp
		then check the amrp-neighbour
	</comment>
	<step no="setmeshpoint">
		<if>"${meshint}" == ""</if>
		<desc>set default eap_type</desc>
		<setvar name="meshpoint">
			if [ `echo ${img.prodtype} | grep BR ` ]
			then
			echo wifi0
			else
			echo wifi1
			fi
		</setvar>
	</step>

	<step no="sethive">
		<desc>set default eap_type</desc>
		<if>"${hivename}" == ""</if>
		<setvar name="hivename">
			echo "${hive.name}"
		</setvar>
	</step>


	<step no="setap1">
		<desc>
			show ap1 hive
		</desc>
		<log-file>show___AP1___interface_info.log</log-file>
		<console target="__AP1__" timeout="50">
			-v "hive ${hivename}"
			-v "interface mgt0 hive ${hivename}"
		</console>
	</step>

	<step no="set_ap2_hive">
		<desc>
			show ap2 hive
		</desc>
		<log-file>show___AP2___interface_info.log</log-file>
		<console target="__AP2__" timeout="50">
			-v "hive ${hivename}"
			-v "interface mgt0 hive ${hivename}"
		</console>
	</step>
	<step no="set_ap1_interface_mode">
		<desc>
			set ap1 interface mode
		</desc>
		<if> "${meshpoint}" == "wifi0" </if>
		<console target="__AP1__" timeout="50">
			-v "interface ${meshpoint} mode dual"
			-v "interface ${meshpoint} radio channel 11"
		</console>
	</step>
	<step no="set_ap2_interface_mode">
		<desc>
			set ap2 interface mode
		</desc>
		<if> "${meshpoint}" == "wifi0" </if>
		<console target="__AP2__" timeout="50">
			-v "interface ${meshpoint} mode dual"
			-v "interface ${meshpoint} radio channel 11"
		</console>
	</step>
	<step no="set_ap1_int_ch">
		<desc>
			set ap1 channel
		</desc>
		<if> "${meshpoint}" == "wifi1" </if>
		<console target="__AP1__" timeout="50">
			-v "interface ${meshpoint} radio channel 165"
		</console>
	</step>
	<step no="set_ap2_int_ch">
		<desc>
			set ap2 channel
		</desc>
		<if> "${meshpoint}" == "wifi1" </if>
		<console target="__AP2__" timeout="50">
			-v "interface ${meshpoint} radio channel 165"
		</console>
	</step>
	<step no="get_mac_info_ap1">
		<desc>
			show ap1 interface
		</desc>
		<log-file>show___AP1___interface_info.log</log-file>
		<console target="__AP1__" timeout="50">
			-v "show interface ${meshpoint}"
			-v ""
		</console>
	</step>

	<step no="get_mac_ap1">
		<desc>
			gain ap2's wifi1's mac address
		</desc>
		<setvar name="ap1.meshpoint.mac">
			${bin.dir}/getrmtip.pl -f ${log.dir}/show___AP1___interface_info.log -i ${meshpoint} -o aero -m -width 2
		</setvar>
	</step>

	<step no="get_mac_info_ap2">
		<desc>
			show ap2 interface
		</desc>
		<log-file>show___AP2___interface_info.log</log-file>
		<console target="__AP2__" timeout="50">
			-v "show interface ${meshpoint}"
			-v ""
		</console>
	</step>

	<step no="get_mac_ap2">
		<desc>
			gain ap1's wifi1's mac address
		</desc>
		<setvar name="__AP2__.meshpoint.mac">
			${bin.dir}/getrmtip.pl -f ${log.dir}/show___AP2___interface_info.log -i ${meshpoint} -o aero -m -width 2
		</setvar>
	</step>

	<step no="ap_acsp_neighbor_check_4" type="loop-check" loop-max-times="5" loop-interval="5">
		<desc>
			show acsp neighbor to make sure ap2 is ap1's acsp neighbor when ap1's wifi1's acsp neighbor list less than 128
		</desc>
		<log-file>acsp_check_${loop_check.idx}.log</log-file>
		<console target="__AP1__" timeout="20">
			-v "show acsp neighbor | in ${hivename}"
		</console>
		<log-match bin="${bin.dir}/searchbyrexp.py">-p "${__AP2__.meshpoint.mac}\s+Backhaul\s+${hive.name}" -c 1 -f ${log.dir}/${log.file}</log-match>
	</step>


	<step no="amrp_check3" type="loop-check" loop-max-times="20" loop-interval="5">
		<desc>
			show amrp neighbor
		</desc>
		<log-file>amrp_check3_${loop_check.idx}.log</log-file>
		<console target="__AP1__" timeout="50">
			-v "show amrp neighbor"
		</console>
		<log-match>-i "${__AP2__.meshpoint.mac}" -i "TWO-WAY" </log-match>
	</step>

</include>