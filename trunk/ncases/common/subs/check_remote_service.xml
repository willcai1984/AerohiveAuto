<include arg-names="remote.ip, software_check_cmd, process.name, port_type, port">
	<step no="ping">
		<log-file>ping_${remote.ip}_for_${process.name}_result.log</log-file>
		<setvar name="ping.ret" scope="local">
			ping ${remote.ip} -c 4 >${log.dir}/${log.file} 2>&amp;1; echo $?
		</setvar>
		<failed>next</failed>
	</step>
	<step no="ping.result.error">
		<if>"${ping.ret}" != "0"</if>
		<script>
			exit ${ping.ret}
		</script>
		<failed>next</failed>
	</step>

	<step no="1">
		<if>"${ping.ret}" == "0"</if>
		<ssh target="${remote.ip}">
			-v "${software_check_cmd}"
		</ssh>
		<failed>next</failed>
	</step>
	<step no="2">
		<if>"${ping.ret}" == "0"</if>
		<log-file>process_in_${remote.ip}_${process.name}.log</log-file>
		<ssh target="${remote.ip}">
			-v "ps -ef|grep ${process.name}|grep -v [g]rep"
		</ssh>
		<log-match>-i " ? " -i "${process.name}"</log-match>
		<failed>next</failed>
	</step>
	<step no="3">
		<if>"${ping.ret}" == "0"</if>
		<desc>check udp,tcp port</desc>
		<log-file>udptcp_ports_in_${remote.ip}_${process.name}.log</log-file>
		<ssh target="${remote.ip}">
			-v "netstat -utlan"
		</ssh>
		<log-match>-i "^${port_type} " -i ":${port} "</log-match>
		<failed>next</failed>
	</step>
</include>