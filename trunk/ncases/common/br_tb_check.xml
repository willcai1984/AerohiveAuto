<testcase>
	<brief>check various job required resources on this TB</brief>
	<description>
		Check resources:
		1. Required APs
		2. Required stations
		3. Master PC
		4. L2 switch

		Check items:
		0. check if BR can be access via console.
		1. check if AP can be access via console.
		2. check if AP eth0/eth1 State is "U".
		3. check if AP connected L2 switch ports VLAN info is right.
		4. check if station management network is right.
		4.1 via check if station can be ping from master PC.
		4.2 via check if station can be access via SSH.
		4.3 via check if station STAF status is right (just for windows station).
		5. check if master PC test network is right.
		5.1 via check if it can ping to its gateway: 192.168.${tb.nvlan}.254
	</description>

	<stage>
		<step no="remove_ssh_hosts">
			<desc>rm .ssh/known_hosts file in mpc</desc>
			<script>
				rm -rf /root/.ssh/known_hosts
			</script>
		</step>
	</stage>

	<!-- BRTOPO1 check -->
	<stage type="child-process" no="br1.br_check.1">
		 <if> "${img.prodtype}" != "BRSR2000" </if>
		<include prefix="br1_br_check" file="subs/br_check.xml" obj-args="br1.br, br1" />
	</stage>
	<stage type="child-process" no="br1.br_check.2">
		 <if> "${img.prodtype}" == "BRSR2000" </if>
		<include prefix="br1_br_check" file="subs/sw_as_br_check.xml" obj-args="br1.br, br1" />
	</stage>

	<stage type="child-process" no="br1.ap1_check">
		<if>"${tb.hasfw}" != "no"</if>
		<include prefix="br1_ap1_check" file="subs/br_ap_check.xml" obj-args="br1.ap1, br1" />
	</stage>

	<!-- BRTOPO2 check -->
	<stage type="child-process" no="br2.br_check.1">
		<if>${job.numofbr} > 1  &amp;&amp; "${img.prodtype}" != "BRSR2000" </if>
		<include prefix="br2_br_check" file="subs/br_check.xml" obj-args="br2.br, br2" />
	</stage>
	<stage type="child-process" no="br2.br_check.1">
		<if>${job.numofbr} > 1  &amp;&amp; "${img.prodtype}" == "BRSR2000" </if>
		<include prefix="br2_br_check" file="subs/sw_as_br_check.xml" obj-args="br2.br, br2" />
	</stage>

	<stage type="child-process" no="br2.ap1_check">
		<if>${job.numofbr} > 1 &amp;&amp;  "${tb.hasfw}" != "no"</if>
		<include prefix="br2_ap1_check" file="subs/br_ap_check.xml" obj-args="br2.ap1, br2" />
	</stage>

	<stage type="child-process" no="handle_br2.vpc1">
		<if>${job.numofbr} > 1</if>		
	</stage>

	<stage type="child-process" no="cvg1.cvg_check">
		<if>${job.numofcvg} > 0</if>
		<include prefix="cvg1_cvg_check" file="subs/cvg_check.xml" obj-args="cvg1.cvg" />
	</stage>
	<stage type="child-process" no="cvg2.cvg_check">
		<if>${job.numofcvg} > 1</if>
		<include prefix="cvg2_cvg_check" file="subs/cvg_check.xml" obj-args="cvg2.cvg" />
	</stage>

	<stage type="child-process" no="cvg1.vpc1_reboot">
		<if>${job.numofcvg} > 0</if>
		<include prefix="cvg1_vpc1_reboot" file="subs/reboot_station.xml" obj-args="cvg1.vpc1" />
	</stage>
	<stage type="child-process" no="cvg2.vpc1_reboot">
		<if>${job.numofcvg} > 1</if>
		<include prefix="cvg2_vpc1_reboot" file="subs/reboot_station.xml" obj-args="cvg2.vpc1" />
	</stage>

	<stage type="check-point" />

	<!-- BR1 station/vpc check -->
	<stage type="child-process" no="br1_vpc1_check">
		<if>"${tb.hasfw}" != "no"</if>
		<include prefix="br1.vpc1.check" file="subs/br_vpc_check.xml" obj-args="br1.vpc1" />		
		<include prefix="br1.vpc1.rbt" file="subs/reboot_station.xml" obj-args="br1.vpc1" />
	</stage>
	<stage type="child-process" no="br1_vpc2_check">
		<if>"${tb.hasfw}" != "no"</if>
		<include prefix="br1.vpc2.check" file="subs/br_vpc_check.xml" obj-args="br1.vpc2" />		
		<include prefix="br1.vpc2.rbt" file="subs/reboot_station.xml" obj-args="br1.vpc2" />
	</stage>
	<stage type="child-process" no="br1_vpc3_check">
		<if>"${tb.hasfw}" != "no"</if>
		<include prefix="br1.vpc3.check" file="subs/br_vpc_check.xml" obj-args="br1.vpc3" />		
		<include prefix="br1.vpc3.rbt" file="subs/reboot_station.xml" obj-args="br1.vpc3" />
	</stage>

	<!-- BR2 station/vpc check -->
	<stage type="child-process" no="br2_vpc1_check">
		<if>${job.numofbr} > 1  &amp;&amp; "${tb.hasfw}" != "no"</if>
		<include prefix="br2.vpc1.check" file="subs/br_vpc_check.xml" obj-args="br2.vpc1" />
		<include prefix="br2.vpc1.rbt" file="subs/reboot_station.xml" obj-args="br2.vpc1" />
	</stage>
	<stage type="child-process" no="br2_vpc2_check">
		<if>${job.numofbr} > 1 &amp;&amp;  "${tb.hasfw}" != "no"</if>
		<include prefix="br2.vpc2.check" file="subs/br_vpc_check.xml" obj-args="br2.vpc2" />
		<include prefix="br2.vpc2.rbt" file="subs/reboot_station.xml" obj-args="br2.vpc2" />
	</stage>
	<stage type="child-process" no="br2_vpc3_check">
		<if>${job.numofbr} > 1 &amp;&amp;  "${tb.hasfw}" != "no"</if>
		<include prefix="br2.vpc3.check" file="subs/br_vpc_check.xml" obj-args="br2.vpc3" />
		<include prefix="br2.vpc3.rbt" file="subs/reboot_station.xml" obj-args="br2.vpc3" />
	</stage>

	<stage type="child-process" no="cvg1_vpc1_check">
		<if>${job.numofcvg} > 0</if>
		<include prefix="cvg1.vpc1.check" file="subs/sta_check_linux.xml" obj-args="cvg1.vpc1" />
	</stage>
	<stage type="child-process" no="cvg2_vpc1_check">
		<if>${job.numofcvg} > 1</if>
		<include prefix="cvg2.vpc1.check" file="subs/sta_check_linux.xml" obj-args="cvg2.vpc1" />
	</stage>

	<stage type="check-point" />

	<stage>
		<!-- Item 5: step 25, check master PC test network -->
		<step no="25">
			<desc>check mpc network to test network 1</desc>
			<script>
				ping 192.168.10.254 -c 4
			</script>
		</step>
		<step no="27">
			<if>"${tb.hasfw}" != "no"</if>
			<desc>check mpc network to test network 2</desc>
			<script>
				ping 10.0.10.254 -c 4
			</script>
		</step>

	</stage>
</testcase>
