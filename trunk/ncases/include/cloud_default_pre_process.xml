<include>
	<stage>
		<step no="remove_ssh_hosts">
			<desc>rm .ssh/known_hosts file in mpc</desc>
			<script>
				rm -rf /root/.ssh/known_hosts
			</script>
		</step>
	</stage>
	
	<!-- process ap -->
	<stage no="ap_check">
	<if>"${realdut.type}" == "ap"</if>
		<include prefix="cloud.ap.check" file="subs/cloud_ap_check.xml" obj-args="ap1" />
	</stage>
	
	<stage no="ap_init">
		<if>"${realdut.type}" == "ap"</if>
		<include prefix="cloud.ap.init" file="subs/cloud_ap_init.xml" obj-args="ap1" />
		<step no="8.1">
			<if>"${need_connect_capwap}" == "" || "${need_connect_capwap}" == "true"</if>
			<desc>
				HiveAPs and HM are in capwap communication.
			</desc>
			<console target="ap1">
				-v "capwap client enable"
				-v "capwap client server name ${tb.capwap.ip}"
				-v "show clock"
			</console>
		</step>
	
		<step no="8.2" type="loop-check" loop-max-times="20" loop-interval="10">
			<if>"${need_connect_capwap}" == "" || "${need_connect_capwap}" == "true"</if>
			<desc>
				1. Check the HiveAPs capwap state.
			</desc>
			<console target="ap1">
				-v "show clock"
				-v "show capwap client"
			</console>
			<log-match>-e "RUN state: Connected securely to the CAPWAP server"</log-match>
			<log-match if="${is_redirector}" >-n -i "CAPWAP server IP: *${tb.capwap.ip}"</log-match>
		</step>
	</stage>
		
	<!-- process br -->
	<stage no="br_check">
	<if>"${realdut.type}" == "br"</if>
		<include prefix="cloud.br.check" file="subs/cloud_br_check.xml" obj-args="br1" />
	</stage>
	
	<stage no="br_init">
	<if>"${realdut.type}" == "br"</if>
		<include prefix="cloud.br.init" file="subs/cloud_br_init.xml" obj-args="br1" />
		<step no="7.1">
			<desc>
				HiveAPs and HM are in capwap communication.
			</desc>
			<if>"${need_connect_capwap}" == "" || "${need_connect_capwap}" == "true"</if>
			<console target="br1">
				-v "capwap client enable"
				-v "capwap client server name ${tb.capwap.ip}"
			</console>
		</step>
	
		<step no="7.2" type="loop-check" loop-max-times="20" loop-interval="10">
			<if>"${need_connect_capwap}" == "" || "${need_connect_capwap}" == "true"</if>
			<desc>
				1. Check the Duttype capwap connect state.
			</desc>
			<console target="br1">
				-v "show capwap client"
			</console>
			<log-match>-e "RUN state: Connected securely to the CAPWAP server"</log-match>
			<log-match if="${is_redirector}" >-n -i "CAPWAP server IP: *${tb.capwap.ip}"</log-match>
		</step>
	</stage>
	
	<!-- process sw1 -->
	<stage no="sw_clear">
		<if>"${realdut.type}" == "sw"</if>
		<step no="sw1.reset.config">
			<console target="sw1" timeout="300">
				-v ""
				-v "reset config"
			</console>
		</step>
	</stage>
	<stage no="sw_init">
		<if>"${realdut.type}" == "sw"</if>
		<include prefix="sw1.init" file="subs/cloud_sw_init.xml" obj-args="sw1" />
		<step no="2.0.0.connect.capwap">
			<if>"${need_connect_capwap}" == "" || "${need_connect_capwap}" == "true"</if>
			<desc>
				HiveAPs and HM are in capwap communication.
			</desc>
			<console target="sw1">
				-v "capwap client enable"
				-v "capwap client server name ${tb.capwap.ip}"
			</console>
		</step>
	
		<step no="2.0.1.check.connect.capwap" type="loop-check" loop-max-times="20" loop-interval="10">
			<if>"${need_connect_capwap}" == "" || "${need_connect_capwap}" == "true"</if>
			<desc>
				1. Check the duttype capwap connect state.
			</desc>
			<console target="sw1">
				-v "show capwap client"
			</console>
			<log-match>-e "RUN state: Connected securely to the CAPWAP server"</log-match>
			<log-match if="${is_redirector}" >-n -i "CAPWAP server IP: *${tb.capwap.ip}"</log-match>
		</step>
		
	</stage>
	<stage no="pre_ini_val">
		<step no="pre.0">
		<if>"${cloud.wpc.ip}" != "" </if>
			<setvar name="wpc.mif.ip">
				echo "${cloud.wpc.ip}"
			</setvar>
		</step>
	</stage>
</include>
